{
	"id": "f63eff6343e8e8852b537f10bf32d343",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/modules/InfinityPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n    pragma solidity ^0.8.30;\r\n\r\n\r\n    import \"./Storage.sol\";\r\n\r\n    contract InfinityPool is Storage {\r\n   \r\n    \r\n    constructor() { \r\n       \r\n    }\r\n\r\n    function canBuyNextPool(uint userId) public view returns (bool eligible, string memory reason) {\r\n        User storage user = users[userId];\r\n        uint nextPool = user.poollevel;\r\n        if (nextPool >= poolPackages.length) {\r\n            return (false, \"You are already at the highest pool\");\r\n        }\r\n\r\n        uint requiredLevel = minLevelForPool[nextPool];\r\n\r\n        if (user.level < requiredLevel) {\r\n            return (false, \"You need to reach a higher level first\");\r\n        }\r\n\r\n        if (nextPool > 0 && user.poollevel < nextPool) {\r\n            return (false, \"Buy previous pool first\");\r\n        }\r\n\r\n        return (true, \"Eligible to buy next pool\");\r\n    }\r\n\r\n\r\n    function RetopPoolByEarning(uint _userId, uint _poolId) external {\r\n   \r\n        User storage user = users[_userId];\r\n        require(user.account == msg.sender, \"Not your account\");\r\n        require(user.poollevel < 7, \"At max pool\");\r\n        //require(_upgradeType == 1 || _upgradeType == 2, \"Invalid upgrade type\");\r\n\r\n        uint256 packagePrice;\r\n\r\n        packagePrice = poolPackages[_poolId];\r\n    \r\n        UserPoolTopup storage top = userPooltopup[_poolId][_userId];\r\n        require(top.reTopupAmt >= packagePrice, \"Not enough reTopup balance\");\r\n\r\n        // Deduct balance\r\n        top.reTopupAmt -= packagePrice;\r\n\r\n        // Record deposit\r\n        user.poolDeposit += packagePrice;\r\n\r\n        // Place new entry in same pool\r\n        _placeInPool(_poolId, _userId, packagePrice);\r\n\r\n        // Log\r\n        user.deposits.push(Deposit({\r\n            amount: packagePrice,\r\n            withdrawn: 0,\r\n            start: block.timestamp,\r\n            depositType: 10 // Retopup via earning\r\n        }));\r\n\r\n        emit Upgrade(msg.sender, _userId, _poolId, packagePrice, \"Pool ReTopup (Earning)\",  block.timestamp);\r\n    \r\n\r\n   \r\n    }\r\n    function upgradePoolByEarning(uint32 _userId, uint _poolId) external {\r\n        // _upgradeType = 1 → Retopup (same pool)\r\n        // _upgradeType = 2 → Upgrade to next pool\r\n\r\n        User storage user = users[_userId];\r\n        require(user.account == msg.sender, \"Not your account\");\r\n        require(user.poollevel < 7, \"At max pool\");\r\n    \r\n\r\n        uint256 packagePrice;\r\n        uint256 targetPool;\r\n\r\n    \r\n    \r\n        require(_poolId + 1 < poolPackages.length, \"No higher pool\");\r\n        packagePrice = poolPackages[_poolId + 1];\r\n        targetPool = _poolId + 1;\r\n\r\n        //uint requiredLevel = minLevelForPool[_poolId]; \r\n       // require(user.level >= requiredLevel, \"Upgrade your level first\");\r\n\r\n        // Check internal funds\r\n        UserPoolTopup storage top = userPooltopup[_poolId][_userId];\r\n        require(top.nextPoolAmt >= packagePrice, \"Not enough next pool balance\");\r\n        require(!userHasPool[_userId][targetPool], \"Already purchased next pool\");\r\n\r\n        // Deduct funds\r\n        top.nextPoolAmt -= packagePrice;\r\n\r\n        // Update user info\r\n        user.poollevel += 1;\r\n    \r\n        user.poolDeposit += packagePrice;\r\n        userHasPool[_userId][targetPool] = true;\r\n\r\n        // Place in next pool\r\n        _placeInPool(targetPool, _userId, packagePrice);\r\n\r\n        // Record deposit\r\n        // user.deposits.push(Deposit({\r\n        //     amount: packagePrice,\r\n        //     withdrawn: 0,\r\n        //     start: block.timestamp,\r\n        //     depositType: 11 // Upgrade via earning\r\n        // }));\r\n\r\n        emit Upgrade(msg.sender, _userId, targetPool + 1, packagePrice, \"Pool Upgrade (Earning)\", block.timestamp);\r\n    \r\n    }\r\n\r\n    function upgradePool(uint _userId) external {\r\n        User storage user = users[_userId];\r\n        require(user.account == msg.sender, \"Not your account\");\r\n        require(user.poollevel < 7, \"At max level\");\r\n        \r\n        uint nextLevel = user.poollevel;\r\n\r\n        uint nextPool = user.poollevel; // next pool to buy (0-based index)\r\n        uint requiredLevel = minLevelForPool[nextPool]; // required main level for this pool\r\n\r\n        //  Check 1: Ensure user has required main level\r\n        require(user.level >= requiredLevel, \"Upgrade your level first\");\r\n\r\n        //  Check 2: Must buy sequentially (can't skip pools)\r\n        if (nextPool > 0) {\r\n            require(user.poollevel == nextPool, \"Buy previous pool first\");\r\n        }\r\n        require(!userHasPool[_userId][nextPool], \"Pool already purchased\");\r\n \r\n       \r\n\r\n        uint packagePrice = poolPackages[nextPool];\r\n        \r\n        // Transfer USDT for the next package\r\n        usdt.transferFrom(msg.sender, address(this), packagePrice);\r\n        \r\n        uint nowTime = block.timestamp ;\r\n        if(nextPool == 0){\r\n            user.poolStartTime = nowTime;\r\n            User storage sponsor = users[user.sponsorId];\r\n           // uint _sponsorId = user.sponsorId;\r\n            if(sponsor.registrationTime + ROI_2X_TIME <= nowTime && sponsor.roiCap == 15){\r\n                 sponsor.directPoolQualified += 1;\r\n                if( sponsor.directPoolQualified > 1){\r\n                    sponsor.roiCap = 20;\r\n                   \r\n                }\r\n            }\r\n        }\r\n\r\n        if(user.directPoolQualified>1 &&  user.registrationTime + ROI_2X_TIME >= user.poolStartTime  && user.roiCap == 15){\r\n            user.roiCap = 20;  \r\n        }\r\n        user.poollevel += 1;\r\n        userHasPool[_userId][nextPool] = true;\r\n        user.poolDeposit += packagePrice;\r\n        _placeInPool(nextLevel, _userId, packagePrice);\r\n            // add in Deposit \r\n        // user.deposits.push(Deposit({\r\n        //     amount: packagePrice,\r\n        //     withdrawn: 0,\r\n        //     start: block.timestamp,\r\n        //     depositType:10\r\n        // }));\r\n\r\n        emit Upgrade(msg.sender, _userId, nextPool + 1, packagePrice, \"Pool\", nowTime);\r\n    }\r\n\r\n    \r\n    function _placeInPool(uint256 poolId, uint userMainId, uint packagePrice) private {\r\n        require(poolId < poolPackages.length, \"Invalid\");\r\n        require(msg.value == poolPackages[poolId], \"Incorrect amount\");\r\n\r\n        //uint [] memory usersLen = poolUsers[poolId];\r\n       \r\n        uint index = poolUsers[poolId].length;// usersLen.length;               // current index for new user\r\n        uint newUserId = defaultRefId + uint(index);\r\n        poolUsers[poolId].push(newUserId);\r\n        // parent by formula\r\n        uint256 parentIndex = (index - 1) / 3;\r\n        uint parentId = poolUsers[poolId][parentIndex]; //usersLen[parentIndex];\r\n\r\n         userPooldtl[poolId][newUserId] = UserPool({\r\n                id: newUserId,\r\n                mainid: userMainId,\r\n                poolId: poolId,\r\n                parentId: parentId,\r\n                bonusCount: 0\r\n            });\r\n           \r\n        userIdPerPool[poolId][userMainId].push(newUserId);\r\n        userChildren[poolId][parentId].push(newUserId);\r\n        _distributePoolIncome( parentId, poolId, userMainId, packagePrice);\r\n    }\r\n\r\n    function _distributePoolIncome( uint _parentId, uint _poolId, uint _userMainId, uint _amount) private {\r\n       \r\n        uint currentParent = _parentId;       \r\n        uint amountPerLevel = _amount / 3;  \r\n        uint totalDistributed = 0;\r\n\r\n        for(uint i=0; i<3; i++){\r\n           \r\n            if (currentParent == 0 || currentParent == defaultRefId) {\r\n            // Send *remaining* amount to creator, not just one share\r\n                uint remaining = _amount - totalDistributed;\r\n                if (remaining > 0) {\r\n                    _sendToCreator(remaining);\r\n                }\r\n                break;\r\n            }\r\n\r\n            UserPool storage userp = userPooldtl[_poolId][currentParent];\r\n            uint parentMainId = userp.mainid; //parent main id\r\n            if (userp.bonusCount < 39) {\r\n                userp.bonusCount += 1;\r\n\r\n                if (userp.bonusCount <= 24) {\r\n                    _payPoolIncome(parentMainId, _userMainId, amountPerLevel, 1, 10);\r\n                } else if (userp.bonusCount <= 36) {\r\n                    userPooltopup[_poolId][parentMainId].nextPoolAmt += amountPerLevel;\r\n                } else {\r\n                    userPooltopup[_poolId][parentMainId].reTopupAmt += amountPerLevel;\r\n                }\r\n\r\n            }         \r\n            totalDistributed += amountPerLevel; // Track amount given so far\r\n            currentParent = userp.parentId;\r\n        }     \r\n         // If we finished all 3 levels normally but still have rounding dust\r\n        uint _remaining = _amount - totalDistributed;\r\n        if (_remaining > 0) {\r\n            _sendToCreator(_remaining);\r\n        }  \r\n    }\r\n    function _payPoolIncome(uint receiverId, uint fromId, uint amount, uint packageLevel, uint _incomeType) private {\r\n       \r\n\r\n        UserIncome storage inc = userIncomes[receiverId];\r\n        //inc.totalIncome += amount;\r\n        IncomeType incomeType= IncomeType.Pool;\r\n        if(_incomeType == 10){\r\n             inc.poolIncome += amount;\r\n        }\r\n        if(_incomeType == 11){\r\n             inc.boosterIncome += amount;\r\n             incomeType = IncomeType.Booster;\r\n        }\r\n        \r\n       \r\n\r\n        // incomeHistory[receiverId].push(Income({\r\n        //     fromUserId: fromId,\r\n        //     amount: amount,\r\n        //     packageLevel: packageLevel,\r\n        //     timestamp: block.timestamp,\r\n        //     incomeType: _incomeType // infintiy pool income\r\n        // }));\r\n\r\n        // address to = users[receiverId].account;\r\n        uint netamount = (amount* 95 )/100;\r\n        _distributeIncome(receiverId, fromId, netamount, packageLevel, incomeType);\r\n        //usdt.transfer(to, netamount);\r\n        _sendToCreator((amount*5) / 100);\r\n\r\n        //emit IncomeDistributed(to, users[fromId].account, amount, packageLevel, _incomeType);\r\n    }\r\n   \r\n   \r\n    function upgradeBooster(uint _userId) external {\r\n        User storage user = users[_userId];\r\n        require(user.account == msg.sender, \"Not your account\");\r\n        require(user.boosterlevel < 8, \"At max level\");\r\n        \r\n        //uint nextLevel = user.boosterlevel;\r\n\r\n        uint nextPool = user.boosterlevel; // next pool to buy (0-based index)\r\n        uint requiredLevel = minLevelForGlbBooster[nextPool]; // required main level for this pool\r\n        uint requiredPool = minPoolForGlbBooster[nextPool]; // required main level for this pool\r\n        //  Check 1: Ensure user has required main level\r\n        require(user.level >= requiredLevel && user.poollevel >= requiredPool, \"Upgrade Slot and Pool\");\r\n\r\n        //  Check 2: Must buy sequentially (can't skip pools)\r\n        if (nextPool > 0) {\r\n            require(user.boosterlevel == nextPool, \"Buy previous pool first\");\r\n        }\r\n        require(!userHasbooster[_userId][nextPool], \"Pool already purchased\");\r\n\r\n        uint packagePrice = glbBoosterPackages[nextPool];\r\n        \r\n        // Transfer USDT for the next package\r\n        usdt.transferFrom(msg.sender, address(this), packagePrice);\r\n        \r\n        user.boosterlevel += 1;\r\n        userHasbooster[_userId][nextPool] = true;\r\n        user.boosterDeposit += packagePrice;\r\n        _placeInBooster(nextPool, _userId, packagePrice);\r\n            // add in Deposit \r\n        // user.deposits.push(Deposit({\r\n        //     amount: packagePrice,\r\n        //     withdrawn: 0,\r\n        //     start: block.timestamp,\r\n        //     depositType:11\r\n        // }));\r\n\r\n        emit Upgrade(msg.sender, _userId, nextPool + 1, packagePrice, \"Booster\", block.timestamp);\r\n    }\r\n\r\n    \r\n    function _placeInBooster(uint256 poolId, uint userMainId, uint packagePrice) private {\r\n        require(poolId < glbBoosterPackages.length, \"Invalid\");\r\n        require(msg.value == glbBoosterPackages[poolId], \"Incorrect amount\");\r\n\r\n        //uint [] memory usersLen = boosterUsers[poolId];\r\n       \r\n        uint index = boosterUsers[poolId].length; //usersLen.length;               // current index for new user\r\n        //uint newUserId = userMainId;//defaultRefId + uint(index);\r\n        boosterUsers[poolId].push(userMainId);\r\n        // parent by formula\r\n        uint256 parentIndex = (index - 1) / 3;\r\n        uint parentId = boosterUsers[poolId][parentIndex]; //usersLen[parentIndex];\r\n\r\n        userBoosterdtl[poolId][userMainId] = UserBooster({\r\n                id: userMainId,               \r\n                poolId: poolId,\r\n                parentId: parentId,\r\n                bonusCount: 0,\r\n                joinTime: block.timestamp\r\n            });\r\n        userBoosterChildren[poolId][parentId].push(userMainId);\r\n\r\n       \r\n        if(poolId == 1  ){\r\n            User memory userdtl = users[userMainId];\r\n            weeklyUserDirects[currentWeeklyRound][userdtl.sponsorId].push(userMainId);\r\n            uint directsCount = weeklyUserDirects[currentWeeklyRound][userdtl.sponsorId].length;\r\n\r\n            if(userdtl.registrationTime + TIME_STEP >= block.timestamp){\r\n                _tryWeeklyContestQualify(userMainId, currentWeeklyRound);\r\n            }\r\n            if( directsCount >= 5){\r\n                 _tryWeeklyContestQualify(userdtl.sponsorId, currentWeeklyRound);\r\n            }\r\n            \r\n        }\r\n\r\n\r\n        if (parentId == 0 || parentId == defaultRefId) {\r\n            _sendToCreator(packagePrice);\r\n            return;\r\n        }  \r\n        UserBooster storage userB = userBoosterdtl[poolId][parentId];\r\n        if( userB.bonusCount<3)\r\n        {\r\n            userB.bonusCount +=1; \r\n            _payPoolIncome(parentId, userMainId, packagePrice, 1, 11);  \r\n        }\r\n        else{\r\n            _sendToCreator(packagePrice);\r\n            return;\r\n        }\r\n       \r\n         \r\n    }\r\n    \r\n   \r\n}\r\n"
			},
			"contracts/modules/Storage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.30;\r\n\r\n//import \"../interfaces/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract Storage is ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n    IERC20 public usdt;\r\n    //address public owner;\r\n    address public creatorWallet;   \r\n    address public systemMaintance;\r\n    address public teamDevelopment;\r\n    uint public defaultRefId;\r\n    uint public totalUsers;\r\n    uint internal constant maxLayers = 15;\r\n\r\n    uint256 public constant PERCENTS_DIVIDER = 10000;\r\n    uint256 public constant TIME_STEP = 1 days;\r\n    uint256 public constant ROI_2X_TIME = 2 days;\r\n    uint256 public constant MONTHLY_ROYALTY_TIME = 100 days;\r\n    uint256 public constant TOP_ROYALTY_TIME = 450 days;\r\n    uint256 public constant ROI_CAP_MULTIPLIER = 15; // 1.5x\r\n    uint256 public constant ROI_CAP_DIVIDER = 10;\r\n    uint256 public constant MONTHLY_ROYALTY_LEVEL = 10;\r\n    uint256 public constant TOP_ROYALTY_LEVEL = 15;\r\n    uint256 public constant MONTHLY_ROYALTY_DIRECT = 5;\r\n    uint256 public constant TOP_ROYALTY_DIRECT = 2;\r\n\r\n\r\n\r\n \r\n    uint[] public registeredUserIds;\r\n    uint private nonce; // add this at the top of your contract\r\n  \r\n    // Package prices in USDT (with 18 decimals)\r\n\r\n        // --- Community bonus accrual (pull-based) ---\r\n    uint256 public constant ACC_PRECISION = 1e18;\r\n    \r\n    uint256 public communityAccPerUser;                 // global accumulator\r\n    //mapping(uint => uint256) internal communityDebt;      // user snapshot\r\n\r\n         // --- Community bonus accrual (pull-based) package wise---\r\n   \r\n\r\n    // Separate accumulator for each package level\r\n    mapping(uint256 => uint256) public communityAccPerPackage;\r\n\r\n    // Separate debt per user per package\r\n    mapping(uint256 => mapping(uint256 => uint256)) public communityDebt; \r\n    // communityDebt[userId][packageLevel]\r\n\r\n    // List of qualified users per package\r\n    mapping(uint256 => uint256) public packageQualifiedUsers; // packageLevel => userId[]\r\n\r\n    uint[] public packages = [\r\n        15 * 1e18,      // 15$\r\n        25 * 1e18,      // 25$\r\n        50 * 1e18,      // 50$\r\n        100 * 1e18,     // 100$\r\n        200 * 1e18,     // 200$\r\n        400 * 1e18,     // 400$\r\n        800 * 1e18,     // 800$\r\n        1600 * 1e18,    // 1600$\r\n        3200 * 1e18,    // 3200$\r\n        6400 * 1e18,    // 6400$\r\n        12800 * 1e18,   // 12800$\r\n        25600 * 1e18,   // 25600$\r\n        51200 * 1e18,   // 51200$\r\n        102400 * 1e18,  // 102400$\r\n        204800 * 1e18   // 204800$\r\n    ];\r\n\r\n        //  User struct into basic info and relationships\r\n\r\n        /*User main struct and mappings*/\r\n    struct Deposit {\r\n        uint256 amount;\r\n        uint256 withdrawn;\r\n        uint256 start; \r\n        uint8 depositType;  \r\n    }\r\n\r\n    struct User {\r\n        address account;\r\n        Deposit[] deposits;\r\n        uint256 checkpoint;\r\n        uint id;\r\n        uint sponsorId;  // Referrer\r\n        uint uplineId;   // Placement in matrix\r\n        uint level;      // Current package level (1-15)\r\n        uint directTeam; // Direct referrals count\r\n        uint directPoolQualified; // Direct referrals count in infinity pool\r\n        uint totalMatrixTeam; // Total users in matrix\r\n        uint totalDeposit;\r\n        uint roiCap;\r\n        uint poollevel;\r\n        uint poolDeposit;\r\n        uint poolStartTime;\r\n        uint boosterlevel;\r\n        uint boosterDeposit;\r\n        uint registrationTime;\r\n        uint level10Time;\r\n        uint level15Time;\r\n        uint monthlyUserDirectCount; // at 10 th level in 100 days\r\n        uint topRoyaltyDirectCount; // // at 15 th level in 450 days\r\n    }\r\n     // struct for bonus calc\r\n    struct UserIncome {\r\n        uint totalIncome;\r\n        uint sponsorIncome;\r\n        uint matrixIncome;\r\n        uint levelBoosterIncome;\r\n        //uint levelIncome;\r\n        uint royaltyIncome;\r\n        uint royaltyIncomeClaimed; // Track claimed royalty for capping\r\n        uint communityIncome;        // <-- NEW: total community bonus claimed\r\n        uint poolIncome;        // <-- Infinity Pool Income\r\n        uint boosterIncome;        // <-- booster Income\r\n        uint weeklyContestIncome;        // <-- weekly contest Income\r\n        uint monthlyRoyalty;        // <-- weekly contest Income\r\n        uint topRoyalty;        // <-- weekly contest Income\r\n    }\r\n\r\n    struct UserPackage{\r\n        uint packagePrice;\r\n        uint amount;\r\n        uint timestamp;\r\n    }\r\n\r\n    struct Income {\r\n        uint fromUserId;\r\n        uint amount;\r\n        uint packageLevel;\r\n        uint timestamp;\r\n        uint incomeType; // 1: Sponsor, 2: Matrix, 3: Level, 4: Level Booster, 5: Creator, 6: Royalty , 7 Lottery  , 8 Roi Income, 10 Infintiy Pool, 11 Booster Income,12 weekly contest\r\n    }\r\n    enum IncomeType {\r\n        Creator,            // 0\r\n        Sponsor,            // 1\r\n        Matrix,             // 2\r\n        LevelBooster,       // 3        \r\n        Community,          // 4\r\n        Pool,               // 5\r\n        Booster,            // 6\r\n        WeeklyContest,      // 7\r\n        MonthlyRoyalty,     // 8\r\n        TopRoyalty   // 9\r\n    }\r\n\r\n\r\n\r\n    mapping(address => uint) internal addressToId;\r\n    mapping(uint => User) internal users;\r\n    mapping(uint => UserIncome) internal userIncomes; // New mapping for income data\r\n    mapping(uint => Income[]) internal incomeHistory;\r\n    mapping(uint => mapping(uint => uint[])) internal teams; // Matrix team structure by level\r\n    mapping(uint => uint) internal matrixDirect; // Count of direct matrix referrals\r\n    mapping(uint => uint[]) internal directReferrals;\r\n\r\n    event UserJoined(uint8 indexed matrixId, uint32 indexed userId, address indexed user, uint32 parentId, address parentAddr, uint8 position);\r\n    event RewardSent(address indexed to, uint256 amount, string level);\r\n\r\n\r\n     // Events\r\n    event Registration(address indexed user, address indexed sponsor, uint indexed userId, uint uplineId);\r\n    event Upgrade(address indexed user, uint indexed userId, uint packageLevel, uint packagePrice, string depositType, uint upgradeTime);\r\n    event IncomeDistributed(address indexed to, address indexed from, uint amount, uint packageLevel, uint incomeType);\r\n    event LotteryReward(address indexed winner, uint indexed fromUserId, uint amount, uint timestamp);\r\n    event CommunityBonusDistributed(uint amount, uint usersCount, uint perUser);\r\n    event IncomeDistribution( address indexed to, uint indexed toId, uint indexed fromId,uint256 amount,uint256 packageLevel,IncomeType incomeType,uint256 timestamp);\r\n  \r\n    // Infinity Pool and booster bonus \r\n\r\n\r\n    uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18];\r\n    uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18];\r\n    uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15];\r\n    uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11];\r\n    uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1];\r\n\r\n\r\n    struct UserPool {\r\n        uint id;               \r\n        uint mainid;\r\n        uint poolId;\r\n        uint parentId;  \r\n        uint bonusCount;            \r\n    }\r\n    \r\n    struct UserPoolTopup{\r\n         uint nextPoolAmt;       \r\n        uint reTopupAmt;     \r\n    }\r\n\r\n      // Golbal Booster\r\n    struct UserBooster {\r\n        uint id; \r\n        uint poolId;\r\n        uint parentId;  \r\n        uint bonusCount;\r\n         uint joinTime;            \r\n    }\r\n\r\n    /* mapping for Infinity Pool*/\r\n    mapping(uint =>  mapping(uint => UserPoolTopup)) internal userPooltopup;\r\n\r\n    mapping(uint =>  mapping(uint => UserPool)) internal userPooldtl;\r\n    mapping(uint => mapping(uint => uint[])) internal userChildren;// in each pool id wise\r\n    mapping(uint => mapping(uint => uint[])) internal userIdPerPool;// will store user ids pool wise\r\n    mapping(uint => uint[]) internal poolUsers; // store all users  pool wise\r\n    mapping(uint => mapping(uint => bool)) internal userHasPool; \r\n\r\n    /* mapping for Global Booster */\r\n    mapping(uint =>  mapping(uint => UserBooster)) internal userBoosterdtl;\r\n    mapping(uint =>  mapping(uint => uint[])) internal userBoosterChildren;\r\n    mapping(uint => uint[]) internal boosterUsers;  // store all users booster wise\r\n    mapping(uint => mapping(uint => bool)) internal userHasbooster; \r\n\r\n   \r\n    // weekly contest\r\n\r\n    uint public constant WEEK_DURATION = 7 days;   \r\n    uint public constant WeeklyCapping = 1000e18;\r\n \r\n\r\n    uint public currentWeeklyRound = 0;\r\n    uint public currentWeeklyStartTime = 0;  \r\n    uint public WeeklyTotalReward = 0;\r\n   \r\n\r\n\r\n    struct WeeklyContest {\r\n        uint roundId;    \r\n        uint totalReward;\r\n        uint totalUsers;\r\n        uint perUserReward;\r\n        uint claimedCount;\r\n        uint startTime;\r\n        uint endTime;\r\n        uint carryForward;\r\n        bool closed;\r\n    }\r\n   \r\n    struct weeklyUser{\r\n      \r\n        uint joinTime;\r\n        uint roundId ;\r\n        uint claimTime;\r\n        bool isClaimed; \r\n        bool isQualified;\r\n    }\r\n    mapping (uint => WeeklyContest) internal weeklyContestdtl;// details of weekly contest\r\n    mapping(uint=> uint[]) weeklyQualifiedUsers; // qualifieduserweekly\r\n    mapping(uint => mapping(uint => weeklyUser)) internal weeklyUserdtl;// details of weekly user))\r\n    mapping(uint => mapping(uint => uint[])) internal weeklyUserDirects;//details users direct in current weekly round\r\n    event WeeklyClosed(uint roundId, uint totalUsers, uint perUserReward, uint totalReward, uint totalDistributed, uint leftoverReward, uint endTime);\r\n    event WeeklyRewardClaim(uint roundId, uint userId, uint perUserReward,  uint claimTime);\r\n    event WeeklyContestQualified(uint roundId, uint userId, uint joinTime);\r\n\r\n    //, monthly royalty and top royalty\r\n\r\n    \r\n    uint public constant MONTH_DURATION = 30 days;\r\n    uint public constant monthlyCapping = 10000e18;\r\n\r\n  \r\n    uint public currentMonthlyRound = 1;\r\n    uint public currentMonthlyStartTime = 0;\r\n    uint public monthlyTotalReward = 0;\r\n\r\n    struct monthlyRoyalty {\r\n        uint roundId;    \r\n        uint totalReward;\r\n        uint totalUsers;\r\n        uint perUserReward;\r\n        uint claimedCount;\r\n        uint startTime;\r\n        uint endTime;\r\n        uint carryForward;\r\n        bool closed;\r\n    }\r\n\r\n    struct monthlyRoyaltyUser{\r\n      \r\n        uint joinTime;\r\n        uint qualifiedRoundId ;\r\n        uint claimTime;\r\n        mapping(uint => bool) isClaimed; \r\n        bool isQualified;\r\n    }\r\n    mapping (uint => monthlyRoyalty) internal monthlyRoyaltydtl;// details of monthly royalty\r\n    uint[] monthlyQualifiedUsers; // qualified user monthly royalty\r\n    mapping(uint => monthlyRoyaltyUser) internal monthlyRoyaltyUserdtl;\r\n    mapping(uint => uint[]) internal monthlyUserDirects;//details users direct in monthly Royalty at 10th level\r\n\r\n    event MonthlyClosed(uint roundId, uint totalUsers, uint perUserReward, uint totalReward, uint totalDistributed, uint leftoverReward, uint endTime);\r\n    event MonthlyRewardClaim(uint roundId, uint userId, uint perUserReward,  uint claimTime);\r\n    event MonthlyRoyaltyQualified(uint roundId, uint userId, uint joinTime);\r\n\r\n      //, Top royalty\r\n  \r\n    uint public topRoyaltyRound = 1;\r\n    uint public topRoyaltyStartTime = 0;\r\n    uint public topRoyaltyReward = 0;\r\n\r\n    struct topRoyalty {\r\n        uint roundId;    \r\n        uint totalReward;\r\n        uint totalUsers;\r\n        uint perUserReward;\r\n        uint claimedCount;\r\n        uint startTime;\r\n        uint endTime;\r\n        uint carryForward;\r\n        bool closed;\r\n    }\r\n\r\n    struct topRoyaltyUser{\r\n      \r\n        uint joinTime;\r\n        uint qualifiedRoundId ;\r\n        uint claimTime;\r\n        mapping(uint => bool) isClaimed; \r\n        bool isQualified;\r\n    }\r\n    mapping (uint => topRoyalty) internal topRoyaltydtl;// details of top royalty contest\r\n    uint[] topRoyaltyQualifiedUsers; // qualified user top royalty\r\n    mapping(uint => topRoyaltyUser) internal topRoyaltyUserdtl;\r\n    mapping(uint => uint[]) internal topRoyaltyUserDirects;//details users direct in top Royalty at 15th level\r\n\r\n    event TopRoyaltyClosed(uint roundId, uint totalUsers, uint perUserReward, uint totalReward, uint totalDistributed, uint leftoverReward, uint endTime);\r\n    event TopRoyaltyRewardClaim(uint roundId, uint userId, uint perUserReward,  uint claimTime);\r\n    event TopRoyaltyQualified(uint roundId, uint userId, uint joinTime);\r\n\r\n\r\n\r\n   \r\n    constructor() {\r\n       \r\n    }\r\n      \r\n    \r\n\r\n    function _sendToCreator(uint _amount) internal {\r\n    require(creatorWallet != address(0),\"fee addrs not set\");\r\n    // 100% split to creator\r\n    \r\n    // Send dust to creator (you can pick any bucket)\r\n    usdt.safeTransfer(creatorWallet, _amount);\r\n  \r\n\r\n    // Bookkeeping for the full routed amount\r\n    UserIncome storage creatorIncome = userIncomes[defaultRefId];\r\n    creatorIncome.totalIncome += _amount;\r\n\r\n    // incomeHistory[defaultRefId].push(Income({\r\n    //     fromUserId: 0,\r\n    //     amount: _amount,\r\n    //     packageLevel: 0,\r\n    //     timestamp: block.timestamp,\r\n    //     incomeType: 5\r\n    // }));\r\n    emit IncomeDistribution(creatorWallet, defaultRefId, defaultRefId, _amount, 0, IncomeType.Creator, block.timestamp );\r\n}\r\n\r\n\r\n    function _distributeIncome(uint _userId,uint _fromUserId,uint _amount, uint _packageLevel, IncomeType _incomeType) internal {\r\n        User storage user = users[_userId];\r\n        address userAddress = user.account;\r\n        require(userAddress != address(0), \"Invalid user\");\r\n        require(_amount > 0, \"Zero amount\");\r\n\r\n\r\n        // Transfer tokens\r\n        //usdt.safeTransfer(userAddress, _amount);\r\n    //( userAddress, _amount);\r\n\r\n        UserIncome storage income = userIncomes[_userId];\r\n        if(_incomeType != IncomeType.Booster || _incomeType != IncomeType.Pool){\r\n              income.totalIncome += _amount;\r\n        }\r\n      \r\n            // --- Update specific income field based on type ---\r\n        if      (_incomeType == IncomeType.Sponsor) income.sponsorIncome += _amount;\r\n        else if (_incomeType == IncomeType.Matrix) income.matrixIncome += _amount;\r\n        else if (_incomeType == IncomeType.LevelBooster) income.levelBoosterIncome += _amount;  \r\n        else if (_incomeType == IncomeType.Community) income.communityIncome += _amount;   \r\n        else if (_incomeType == IncomeType.Pool) income.poolIncome += _amount;\r\n        else if (_incomeType == IncomeType.Booster) income.boosterIncome += _amount;\r\n        else if (_incomeType == IncomeType.WeeklyContest) income.weeklyContestIncome += _amount;\r\n        else if (_incomeType == IncomeType.MonthlyRoyalty) income.monthlyRoyalty += _amount;\r\n        else if (_incomeType == IncomeType.TopRoyalty) income.topRoyalty += _amount;\r\n\r\n        \r\n\r\n        else revert(\"Unknown income type\");\r\n    \r\n        usdt.safeTransfer(userAddress, _amount);\r\n        emit IncomeDistribution(userAddress, _userId, _fromUserId, _amount,_packageLevel, _incomeType, block.timestamp );\r\n        //emit IncomeDistributed(userAddress, users[_fromUserId].account, _amount, _packageLevel, _incomeType);\r\n    }\r\n\r\n    function _tryWeeklyContestQualify(uint _userId, uint _roundId)internal {\r\n            if (!weeklyUserdtl[_roundId][_userId].isQualified) {\r\n                    _weeklyContestQualifier(_userId, _roundId);\r\n            }\r\n    }\r\n\r\n    function _weeklyContestQualifier(uint _userId, uint _roundId)internal {\r\n       \r\n       // uint currentRound = currentWeeklyRound;        \r\n        require(_roundId == currentWeeklyRound, \"Invalid round\");\r\n        require(!weeklyContestdtl[_roundId].closed, \"Round closed\");\r\n        UserBooster memory userBoosterJoinDtl = userBoosterdtl[1][_userId];\r\n\r\n        bool hasEnoughDirects = weeklyUserDirects[_roundId][_userId].length >= 5;\r\n        bool boosterEarlyJoin = (\r\n            userBoosterJoinDtl.id == _userId && \r\n            userBoosterJoinDtl.joinTime <= users[_userId].registrationTime + TIME_STEP\r\n        );\r\n        require(hasEnoughDirects || boosterEarlyJoin, \"Not eligible for weekly contest\");\r\n        //require(weeklyUserDirects[currentRound][_userId].length >=5 ||  (userBoosterJoinDtl.id == _userId && userBoosterJoinDtl.joinTime <= users[_userId].registrationTime + TIME_STEP), \"not eligible\"); // (userBoosterJoinDtl.id = _userId && userBoosterJoinDtl.joinTime <= users[_userId].registrationTime)\r\n        \r\n        weeklyUser storage weeklyuserdtl = weeklyUserdtl[_roundId][_userId];\r\n        if (weeklyuserdtl.isQualified) return;\r\n        require(!weeklyuserdtl.isQualified, \"already Qualified\");\r\n\r\n        uint nowTime = block.timestamp;\r\n\r\n        weeklyuserdtl.joinTime = nowTime;\r\n        weeklyuserdtl.roundId = _roundId;\r\n        weeklyuserdtl.isQualified = true;\r\n   \r\n        emit WeeklyContestQualified(_roundId, _userId, nowTime);\r\n    }\r\n\r\n    function _tryMonthlyRoyaltyQualify(uint _userId, uint _roundId)internal {\r\n            if (!monthlyRoyaltyUserdtl[_userId].isQualified) {\r\n                    _monthlyRoyaltyQualifier(_userId, _roundId);\r\n            }\r\n    }\r\n\r\n    function _monthlyRoyaltyQualifier(uint _userId, uint _roundId)internal {      \r\n       \r\n        require(_roundId == currentMonthlyRound, \"Invalid round\");\r\n        require(!monthlyRoyaltydtl[_roundId].closed, \"Round closed\");\r\n       \r\n        User storage user = users[_userId];        \r\n\r\n        require(user.level10Time > 0, \"User not level 10\");\r\n        bool withinTime = user.level10Time <= user.registrationTime + MONTHLY_ROYALTY_TIME;\r\n        bool qualifiedByLevel = user.level >= MONTHLY_ROYALTY_LEVEL;\r\n        bool qualifiedByDirects = user.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT;\r\n        require(withinTime && qualifiedByLevel && qualifiedByDirects, \"Not eligible\");\r\n        \r\n        monthlyRoyaltyUser storage userRoyalty  = monthlyRoyaltyUserdtl[_userId];\r\n       \r\n        //if (userRoyalty.isQualified) return;\r\n        require(!userRoyalty.isQualified, \"already Qualified\");\r\n\r\n        uint nowTime = block.timestamp;\r\n        //userRoyalty.id = _userId;\r\n        userRoyalty.joinTime = nowTime;\r\n        userRoyalty.qualifiedRoundId = _roundId;\r\n        userRoyalty.isQualified = true;\r\n   \r\n        emit MonthlyRoyaltyQualified(_roundId, _userId, nowTime);\r\n    }\r\n\r\n    \r\n\r\n    function _tryTopRoyaltyQualify(uint _userId, uint _roundId)internal {\r\n            if (!topRoyaltyUserdtl[_userId].isQualified) {\r\n                    _topRoyaltyQualifier(_userId, _roundId);\r\n            }\r\n    }\r\n\r\n    function _topRoyaltyQualifier(uint _userId, uint _roundId)internal {      \r\n       \r\n        require(_roundId == topRoyaltyRound, \"Invalid round\");\r\n        require(!topRoyaltydtl[_roundId].closed, \"Round closed\");\r\n       \r\n        User storage user = users[_userId];        \r\n\r\n        require(user.level15Time > 0, \"User not level 15\");\r\n        bool withinTime = user.level15Time <= user.registrationTime + TOP_ROYALTY_TIME;\r\n        bool qualifiedByLevel = user.level >= TOP_ROYALTY_LEVEL;\r\n        bool qualifiedByDirects = user.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT;\r\n        require(withinTime && qualifiedByLevel && qualifiedByDirects, \"Not eligible\");\r\n        \r\n        topRoyaltyUser storage userRoyalty  = topRoyaltyUserdtl[_userId];\r\n       \r\n        //if (userRoyalty.isQualified) return;\r\n        require(!userRoyalty.isQualified, \"already Qualified\");\r\n\r\n        uint nowTime = block.timestamp;\r\n        //userRoyalty.id = _userId;\r\n        userRoyalty.joinTime = nowTime;\r\n        userRoyalty.qualifiedRoundId = _roundId;\r\n        userRoyalty.isQualified = true;\r\n   \r\n        emit MonthlyRoyaltyQualified(_roundId, _userId, nowTime);\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x1E 0x1F JUMPI REVERT PUSH27 0x408F714C9BCBFCFA134ECF359ACED058BF4DF923CAED95D0DDF564 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x1E 0x1F JUMPI REVERT PUSH27 0x408F714C9BCBFCFA134ECF359ACED058BF4DF923CAED95D0DDF564 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "698:9376:5:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "library_deploy_address"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/modules/InfinityPool.sol",
								"contracts/modules/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/InfinityPool.sol": {
				"InfinityPool": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usersCount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUser",
									"type": "uint256"
								}
							],
							"name": "CommunityBonusDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "incomeType",
									"type": "uint256"
								}
							],
							"name": "IncomeDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "toId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum Storage.IncomeType",
									"name": "incomeType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "IncomeDistribution",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromUserId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LotteryReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyRewardClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyRoyaltyQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sponsor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "uplineId",
									"type": "uint256"
								}
							],
							"name": "Registration",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "level",
									"type": "string"
								}
							],
							"name": "RewardSent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyRewardClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packagePrice",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "depositType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "upgradeTime",
									"type": "uint256"
								}
							],
							"name": "Upgrade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint8",
									"name": "matrixId",
									"type": "uint8"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "userId",
									"type": "uint32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "parentId",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "parentAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "position",
									"type": "uint8"
								}
							],
							"name": "UserJoined",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyContestQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyRewardClaim",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACC_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY_DIRECT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY_LEVEL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY_TIME",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTH_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERCENTS_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_2X_TIME",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								}
							],
							"name": "RetopPoolByEarning",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TIME_STEP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY_DIRECT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY_LEVEL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY_TIME",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WEEK_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								}
							],
							"name": "canBuyNextPool",
							"outputs": [
								{
									"internalType": "bool",
									"name": "eligible",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "communityAccPerPackage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "communityAccPerUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "communityDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creatorWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultRefId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "glbBoosterPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minPoolForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "packageQualifiedUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "packages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "registeredUserIds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "systemMaintance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamDevelopment",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								}
							],
							"name": "upgradeBooster",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								}
							],
							"name": "upgradePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_userId",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								}
							],
							"name": "upgradePoolByEarning",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_4, callvalue)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  sstore\n  mload(0x40)\n  0x01e0\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup3\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n    /* \"contracts/modules/Storage.sol\":2222:2231  15 * 1e18 */\n  0xd02ab486cedc0000\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":2254:2263  25 * 1e18 */\n  0x015af1d78b58c40000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2286:2295  50 * 1e18 */\n  0x02b5e3af16b1880000\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2318:2328  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x60\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2351:2361  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x80\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2384:2394  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xa0\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2417:2427  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xc0\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2450:2461  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xe0\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2484:2495  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0100\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2518:2529  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0120\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2552:2564  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0140\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2587:2599  25600 * 1e18 */\n  0x056bc75e2d6310000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0160\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2622:2634  51200 * 1e18 */\n  0x0ad78ebc5ac620000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0180\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2657:2670  102400 * 1e18 */\n  0x15af1d78b58c40000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x01a0\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2693:2706  204800 * 1e18 */\n  0x2b5e3af16b1880000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x01c0\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0d\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0f\n  0x0d\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0f\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  lt\n  tag_8\n  jumpi\ntag_9:\n  pop\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0d\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\ntag_10:\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0f\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  dup2\n  lt\n  tag_11\n  jumpi\n  tag_13\n  tag_1\n  jump\t// in\ntag_13:\n    /* \"contracts/modules/Storage.sol\":6877:6882  75e18 */\n  0x0410d586a20a4c0000\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":6884:6890  300e18 */\n  0x1043561a8829300000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6892:6899  1200e18 */\n  0x410d586a20a4c00000\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6901:6908  4800e18 */\n  0x01043561a88293000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6910:6918  19200e18 */\n  0x0410d586a20a4c000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6920:6928  76800e18 */\n  0x1043561a882930000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6930:6939  307200e18 */\n  0x410d586a20a4c0000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x15\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n  0x15\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  lt\n  tag_14\n  jumpi\ntag_15:\n  pop\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x15\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\ntag_16:\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  dup2\n  lt\n  tag_17\n  jumpi\n  tag_19\n  tag_2\n  jump\t// in\ntag_19:\n    /* \"contracts/modules/Storage.sol\":2318:2328  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":2351:2361  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2384:2394  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2417:2427  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2450:2461  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2484:2495  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2518:2529  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2552:2564  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x16\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n  0x16\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  lt\n  tag_20\n  jumpi\ntag_21:\n  pop\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x16\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\ntag_22:\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  dup2\n  lt\n  tag_23\n  jumpi\n  tag_25\n  tag_1\n  jump\t// in\ntag_25:\n    /* \"contracts/modules/Storage.sol\":7093:7094  3 */\n  0x03\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":7092:7116  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":7092:7116  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":7102:7103  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":7092:7116  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":7105:7107  11 */\n  0x0b\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":7092:7116  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0d\n  0xa0\n    /* \"contracts/modules/Storage.sol\":7092:7116  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0f\n  0xc0\n    /* \"contracts/modules/Storage.sol\":7092:7116  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\ntag_26:\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  dup2\n  lt\n  tag_27\n  jumpi\n  tag_29\n  tag_2\n  jump\t// in\ntag_29:\n    /* \"contracts/modules/Storage.sol\":7163:7164  4 */\n  0x04\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":7169:7170  6 */\n  0x06\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":7102:7103  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":7181:7183  10 */\n  0x0a\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":7105:7107  11 */\n  0x0b\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\ntag_30:\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  dup2\n  lt\n  tag_31\n  jumpi\n  tag_33\n  tag_2\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\ntag_34:\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  dup2\n  lt\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8785:8786  0 */\n  0x38\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8830:8831  0 */\n  0x39\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8872:8873  0 */\n  0x3a\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":10234:10235  1 */\n  0x3f\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  0x40\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":10321:10322  0 */\n  0x41\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":11540:11541  1 */\n  0x46\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":11582:11583  0 */\n  0x47\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":11621:11622  0 */\n  0x48\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_35:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  0x26\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  add\n  sstore\n  add\n  jump(tag_34)\ntag_31:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  0x1e\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  add\n  sstore\n  add\n  jump(tag_30)\ntag_27:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":7092:7116  [3, 5, 7, 9, 11, 13, 15] */\n  0x17\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  add\n  sstore\n  add\n  jump(tag_26)\ntag_23:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  add\n  jump(tag_22)\ntag_20:\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x16\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n  tag_37\n  swap1\n  0xd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124289\n  add\n  0xd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124291\n  tag_3\n  jump\t// in\ntag_37:\n  dup2\n  jump(tag_21)\ntag_17:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  add\n  jump(tag_16)\ntag_14:\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x15\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n  tag_38\n  swap1\n  0x55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475\n  add\n  0x55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47c\n  tag_3\n  jump\t// in\ntag_38:\n  dup2\n  jump(tag_15)\ntag_11:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  add\n  jump(tag_10)\ntag_8:\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0d\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n  tag_39\n  swap1\n  0xd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5\n  add\n  0xd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1ec4\n  tag_3\n  jump\t// in\ntag_39:\n  0x00\n  jump(tag_9)\ntag_6:\n  shl(0xe0, 0x4e487b71)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  mstore\n  mstore(0x04, 0x41)\n  0x24\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n  revert\ntag_4:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap1\n  0xe0\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  mload(0x40)\n  swap1\n  0x0100\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_3:\n  dup2\n  dup2\n  lt\n  tag_45\n  jumpi\n  pop\n  pop\n  jump\t// out\ntag_45:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_3)\nstop\n\nsub_0: assembly {\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_29, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_29:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01c234a8\n      eq\n      tag_31\n      jumpi\n      pop\n      dup1\n      0x0676d0d6\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x2132d204\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x2350268f\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x23fd338e\n      eq\n      tag_67\n      jumpi\n      dup1\n      0x2a891534\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x2ae0ee0d\n      eq\n      tag_55\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x3080b5bc\n      eq\n      tag_47\n      jumpi\n      dup1\n      0x31bb6a30\n      eq\n      tag_49\n      jumpi\n      dup1\n      0x32bc298c\n      eq\n      tag_51\n      jumpi\n      dup1\n      0x32fcd966\n      eq\n      tag_53\n      jumpi\n      dup1\n      0x375b43b4\n      eq\n      tag_55\n      jumpi\n      dup1\n      0x39ab3603\n      eq\n      tag_57\n      jumpi\n      dup1\n      0x3a5084b3\n      eq\n      tag_59\n      jumpi\n      dup1\n      0x4060160a\n      eq\n      tag_61\n      jumpi\n      dup1\n      0x45cb537c\n      eq\n      tag_63\n      jumpi\n      dup1\n      0x4b8cbf9b\n      eq\n      tag_65\n      jumpi\n      dup1\n      0x58c7d352\n      eq\n      tag_67\n      jumpi\n      dup1\n      0x5b62d1d5\n      eq\n      tag_69\n      jumpi\n      dup1\n      0x67d52d4d\n      eq\n      tag_71\n      jumpi\n      dup1\n      0x705fee2d\n      eq\n      tag_73\n      jumpi\n      dup1\n      0x76f5f700\n      eq\n      tag_75\n      jumpi\n      dup1\n      0x7848f0a3\n      eq\n      tag_77\n      jumpi\n      dup1\n      0x78f6ad6d\n      eq\n      tag_79\n      jumpi\n      dup1\n      0x7cdc65f2\n      eq\n      tag_81\n      jumpi\n      dup1\n      0x89043ece\n      eq\n      tag_83\n      jumpi\n      dup1\n      0x8e222e24\n      eq\n      tag_85\n      jumpi\n      dup1\n      0x956a3228\n      eq\n      tag_87\n      jumpi\n      dup1\n      0x9b40ab97\n      eq\n      tag_89\n      jumpi\n      dup1\n      0xa59d17d1\n      eq\n      tag_91\n      jumpi\n      dup1\n      0xa5e52b99\n      eq\n      tag_93\n      jumpi\n      dup1\n      0xae4708dc\n      eq\n      tag_95\n      jumpi\n      dup1\n      0xbc1fa7c0\n      eq\n      tag_97\n      jumpi\n      dup1\n      0xbff1f9e1\n      eq\n      tag_99\n      jumpi\n      dup1\n      0xc216212a\n      eq\n      tag_101\n      jumpi\n      dup1\n      0xc8df2908\n      eq\n      tag_103\n      jumpi\n      dup1\n      0xc9ed0708\n      eq\n      tag_105\n      jumpi\n      dup1\n      0xca8e9121\n      eq\n      tag_107\n      jumpi\n      dup1\n      0xd0a2fd79\n      eq\n      tag_109\n      jumpi\n      dup1\n      0xd2f0490d\n      eq\n      tag_111\n      jumpi\n      dup1\n      0xe898fc38\n      eq\n      tag_113\n      jumpi\n      dup1\n      0xe9e34a16\n      eq\n      tag_115\n      jumpi\n      dup1\n      0xebe0ff15\n      eq\n      tag_117\n      jumpi\n      dup1\n      0xec597e6f\n      eq\n      tag_119\n      jumpi\n      dup1\n      0xf5d74d93\n      eq\n      tag_121\n      jumpi\n      0xfddc806f\n      eq\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8793:8831  uint public currentWeeklyStartTime = 0 */\n      0x39\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_127:\n      0x00\n      dup1\n      revert\n    tag_121:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x04)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_119:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":534:558  uint public defaultRefId */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_117:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":8733:8740  1000e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_115:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":460:490  address public systemMaintance */\n      0x03\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_113:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      sload(0x40)\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_111:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1187:1188  5 */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_109:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":7123:7187  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      dup2\n      lt\n      iszero\n      tag_127\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":7123:7187  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      0x1e\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_107:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8752:8786  uint public currentWeeklyRound = 0 */\n      0x38\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_105:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":10200:10235  uint public currentMonthlyRound = 1 */\n      0x3f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_103:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":10179:10187  10000e18 */\n      0x021e19e0c9bab2400000\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_101:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":2186:2726  uint[] public packages = [... */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":2186:2726  uint[] public packages = [... */\n      dup2\n      lt\n      iszero\n      tag_127\n      jumpi\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/modules/Storage.sol\":2186:2726  uint[] public packages = [... */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x00\n      mstore\n      0xd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_177:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_99:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":565:587  uint public totalUsers */\n      0x06\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_97:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":10047:10052  users */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":10072:10127  require(user.account == msg.sender, \"Not your account\") */\n      tag_187\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      sload\n      and\n        /* \"contracts/modules/InfinityPool.sol\":10096:10106  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":10080:10106  user.account == msg.sender */\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":10072:10127  require(user.account == msg.sender, \"Not your account\") */\n      tag_7\n      jump\t// in\n    tag_187:\n        /* \"contracts/modules/InfinityPool.sol\":10047:10052  users */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":10146:10163  user.boosterlevel */\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      dup2\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":10146:10167  user.boosterlevel < 8 */\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":10166:10167  8 */\n      0x08\n        /* \"contracts/modules/InfinityPool.sol\":10146:10167  user.boosterlevel < 8 */\n      dup4\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":10138:10184  require(user.boosterlevel < 8, \"At max level\") */\n      tag_188\n      dup2\n      tag_8\n      jump\t// in\n    tag_188:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      iszero\n      tag_177\n      jumpi\n      dup3\n        /* \"contracts/modules/InfinityPool.sol\":10355:10376  minLevelForGlbBooster */\n      0x1e\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      add\n      sload\n      dup4\n        /* \"contracts/modules/InfinityPool.sol\":10454:10474  minPoolForGlbBooster */\n      0x26\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      add\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":10598:10608  user.level */\n      swap1\n      0x06\n      dup5\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":10598:10625  user.level >= requiredLevel */\n      lt\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":10598:10659  user.level >= requiredLevel && user.poollevel >= requiredPool */\n      swap1\n      dup2\n      tag_191\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_192:\n      pop\n      iszero\n      tag_193\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":10765:10777  nextPool > 0 */\n      dup3\n        /* \"contracts/modules/InfinityPool.sol\":10761:10871  if (nextPool > 0) {... */\n      tag_195\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_196:\n      dup4\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":10890:10904  userHasbooster */\n      0x37\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup4\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":10881:10950  require(!userHasbooster[_userId][nextPool], \"Pool already purchased\") */\n      tag_197\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"contracts/modules/InfinityPool.sol\":10889:10923  !userHasbooster[_userId][nextPool] */\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":10881:10950  require(!userHasbooster[_userId][nextPool], \"Pool already purchased\") */\n      tag_9\n      jump\t// in\n    tag_197:\n        /* \"contracts/modules/InfinityPool.sol\":10983:11011  glbBoosterPackages[nextPool] */\n      tag_198\n      dup4\n      tag_1\n      jump\t// in\n    tag_198:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      sload(0x01)\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/modules/InfinityPool.sol\":11079:11137  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      dup2\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":10096:10106  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x04\n        /* \"contracts/modules/InfinityPool.sol\":11079:11137  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11117:11121  this */\n      address\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x24\n      dup3\n      add\n      mstore\n      0x03\n      swap4\n      swap1\n      swap4\n      shl\n      swap2\n      swap1\n      swap2\n      shr\n      0x44\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap4\n      swap2\n      swap1\n      0x20\n      swap1\n      dup3\n      swap1\n      0x64\n      swap1\n      dup3\n      swap1\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/modules/InfinityPool.sol\":11079:11137  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      gas\n      call\n      dup1\n      iszero\n      tag_200\n      jumpi\n      tag_202\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_203:\n      pop\n      dup2\n      sload\n      0x01\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_208\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":11242:11261  user.boosterDeposit */\n      0x10\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap3\n      sstore\n      dup5\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":10890:10904  userHasbooster */\n      0x37\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup5\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":11242:11261  user.boosterDeposit */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":11242:11277  user.boosterDeposit += packagePrice */\n      tag_206\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":11242:11277  user.boosterDeposit += packagePrice */\n      tag_15\n      jump\t// in\n    tag_206:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":11323:11335  packagePrice */\n      tag_207\n      dup2\n      dup5\n      dup5\n      tag_24\n      jump\t// in\n    tag_207:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x01\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_208\n      jumpi\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      0x80\n      0x40\n      dup3\n      add\n      mstore\n      0x07\n      0x80\n      dup3\n      add\n      mstore\n      shl(0xc9, 0x2137b7b9ba32b9)\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11651:11666  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x60\n      dup3\n      add\n      mstore\n      mload(0x00)\n      codecopy(0x00, data_404df00f6e66bff52b1bbe26c09dc1dec3db2c9f5cc1962e398ceea85fe88b34, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":11583:11667  Upgrade(msg.sender, _userId, nextPool + 1, packagePrice, \"Booster\", block.timestamp) */\n      0xc0\n        /* \"contracts/modules/InfinityPool.sol\":10096:10106  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":11583:11667  Upgrade(msg.sender, _userId, nextPool + 1, packagePrice, \"Booster\", block.timestamp) */\n      swap3\n      log3\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      stop\n    tag_208:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"contracts/modules/InfinityPool.sol\":11079:11137  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n    tag_202:\n      tag_210\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":11079:11137  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      returndatasize\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":11079:11137  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      gt\n      tag_211\n      jumpi\n    tag_212:\n      tag_213\n      dup2\n      dup4\n      tag_12\n      jump\t// in\n    tag_213:\n      dup2\n      add\n      swap1\n      tag_13\n      jump\t// in\n    tag_210:\n      jump(tag_203)\n    tag_211:\n      pop\n      returndatasize\n      jump(tag_212)\n    tag_200:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/modules/InfinityPool.sol\":10761:10871  if (nextPool > 0) {... */\n    tag_195:\n      jump(tag_196)\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_193:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x5a, 0x155c19dc9859194814db1bdd08185b9908141bdbdb)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/modules/InfinityPool.sol\":10598:10659  user.level >= requiredLevel && user.poollevel >= requiredPool */\n    tag_191:\n        /* \"contracts/modules/InfinityPool.sol\":10629:10643  user.poollevel */\n      swap1\n      pop\n      0x0c\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":10629:10659  user.poollevel >= requiredPool */\n      lt\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":10598:10659  user.level >= requiredLevel && user.poollevel >= requiredPool */\n      dup6\n      jump(tag_192)\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_95:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":6847:6940  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x15\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":6847:6940  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      dup2\n      lt\n      iszero\n      tag_127\n      jumpi\n      tag_220\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/Storage.sol\":6847:6940  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      swap2\n      tag_2\n      jump\t// in\n    tag_220:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_93:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":842:850  100 days */\n      0x83d600\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_91:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":10288:10322  uint public monthlyTotalReward = 0 */\n      0x41\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_89:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":11548:11583  uint public topRoyaltyStartTime = 0 */\n      0x47\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_87:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":7194:7255  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      dup2\n      lt\n      iszero\n      tag_127\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":7194:7255  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      0x26\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_85:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      0xffffffff\n      dup2\n      and\n      dup1\n      swap2\n      sub\n      tag_127\n      jumpi\n      calldataload(0x24)\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":2252:2257  users */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":2277:2332  require(user.account == msg.sender, \"Not your account\") */\n      tag_245\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      sload\n      and\n        /* \"contracts/modules/InfinityPool.sol\":2301:2311  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":2285:2311  user.account == msg.sender */\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":2277:2332  require(user.account == msg.sender, \"Not your account\") */\n      tag_7\n      jump\t// in\n    tag_245:\n        /* \"contracts/modules/InfinityPool.sol\":2351:2365  user.poollevel */\n      0x0c\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":2343:2385  require(user.poollevel < 7, \"At max pool\") */\n      tag_246\n        /* \"contracts/modules/InfinityPool.sol\":2368:2369  7 */\n      0x07\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup4\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":2351:2369  user.poollevel < 7 */\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":2343:2385  require(user.poollevel < 7, \"At max pool\") */\n      tag_17\n      jump\t// in\n    tag_246:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x01\n      dup4\n      add\n      swap3\n      dup4\n      dup2\n      gt\n      tag_208\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":2500:2512  poolPackages */\n      0x15\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":2486:2519  _poolId + 1 < poolPackages.length */\n      dup5\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":2564:2589  poolPackages[_poolId + 1] */\n      tag_251\n      dup5\n      tag_2\n      jump\t// in\n    tag_251:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      swap3\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":2836:2849  userPooltopup */\n      0x2e\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup7\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":2886:2917  top.nextPoolAmt >= packagePrice */\n      dup6\n      dup2\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      tag_252\n      jumpi\n      dup8\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":2970:2981  userHasPool */\n      0x33\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup8\n      0x00\n      mstore\n      0x20\n      mstore\n      jumpi(tag_254, and(sload(keccak256(0x00, 0x40)), 0xff))\n        /* \"contracts/modules/InfinityPool.sol\":3072:3103  top.nextPoolAmt -= packagePrice */\n      dup6\n      tag_256\n      swap2\n      tag_18\n      jump\t// in\n    tag_256:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n      dup1\n      sload\n      swap3\n      0x01\n      dup5\n      add\n      dup1\n      swap5\n      gt\n      tag_208\n      jumpi\n      0x02\n      swap4\n        /* \"contracts/modules/InfinityPool.sol\":3181:3197  user.poolDeposit */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap3\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":3181:3197  user.poolDeposit */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":3181:3213  user.poolDeposit += packagePrice */\n      tag_259\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup5\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":3181:3213  user.poolDeposit += packagePrice */\n      tag_15\n      jump\t// in\n    tag_259:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n      dup5\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":2970:2981  userHasPool */\n      0x33\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup5\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":3307:3354  _placeInPool(targetPool, _userId, packagePrice) */\n      tag_260\n      dup4\n      dup7\n      dup7\n      tag_23\n      jump\t// in\n    tag_260:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      add\n      dup1\n      swap3\n      gt\n      tag_208\n      jumpi\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      0x80\n      0x40\n      dup3\n      add\n      mstore\n      0x16\n      0x80\n      dup3\n      add\n      mstore\n      shl(0x50, 0x506f6f6c205570677261646520284561726e696e6729)\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":3707:3722  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x60\n      dup3\n      add\n      mstore\n      mload(0x00)\n      codecopy(0x00, data_404df00f6e66bff52b1bbe26c09dc1dec3db2c9f5cc1962e398ceea85fe88b34, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":3622:3723  Upgrade(msg.sender, _userId, targetPool + 1, packagePrice, \"Pool Upgrade (Earning)\", block.timestamp) */\n      0xc0\n        /* \"contracts/modules/InfinityPool.sol\":2301:2311  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":3622:3723  Upgrade(msg.sender, _userId, targetPool + 1, packagePrice, \"Pool Upgrade (Earning)\", block.timestamp) */\n      swap3\n      log3\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      stop\n    tag_254:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x416c726561647920707572636861736564206e65787420706f6f6c0000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_252:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f7420656e6f756768206e65787420706f6f6c2062616c616e636500000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_249:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x92, 0x139bc81a1a59da195c881c1bdbdb)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_83:\n      jumpi(tag_127, callvalue)\n      tag_265\n      calldatasize\n      tag_6\n      jump\t// in\n    tag_265:\n      swap1\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":1927:1995  mapping(uint256 => mapping(uint256 => uint256)) public communityDebt */\n      0x0b\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      sload(keccak256(0x00, 0x40))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_81:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":422:450  address public creatorWallet */\n      0x02\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_79:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":1530:1564  uint256 public communityAccPerUser */\n      0x09\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_77:\n      jumpi(tag_127, callvalue)\n      tag_276\n      calldatasize\n      tag_6\n      jump\t// in\n    tag_276:\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":987:992  users */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":1012:1067  require(user.account == msg.sender, \"Not your account\") */\n      tag_277\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      sload\n      and\n        /* \"contracts/modules/InfinityPool.sol\":1036:1046  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":1020:1046  user.account == msg.sender */\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":1012:1067  require(user.account == msg.sender, \"Not your account\") */\n      tag_7\n      jump\t// in\n    tag_277:\n        /* \"contracts/modules/InfinityPool.sol\":1078:1120  require(user.poollevel < 7, \"At max pool\") */\n      tag_278\n        /* \"contracts/modules/InfinityPool.sol\":1103:1104  7 */\n      0x07\n        /* \"contracts/modules/InfinityPool.sol\":1086:1100  user.poollevel */\n      0x0c\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":1086:1104  user.poollevel < 7 */\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":1078:1120  require(user.poollevel < 7, \"At max pool\") */\n      tag_17\n      jump\t// in\n    tag_278:\n        /* \"contracts/modules/InfinityPool.sol\":1265:1286  poolPackages[_poolId] */\n      tag_279\n      dup3\n      tag_2\n      jump\t// in\n    tag_279:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      swap1\n      dup3\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":1331:1344  userPooltopup */\n      0x2e\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup5\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":1381:1395  top.reTopupAmt */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":1381:1395  top.reTopupAmt */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      dup2\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":1381:1411  top.reTopupAmt >= packagePrice */\n      swap2\n      dup4\n      dup4\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      tag_280\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":1482:1512  top.reTopupAmt -= packagePrice */\n      tag_282\n      dup5\n        /* \"contracts/modules/InfinityPool.sol\":1381:1395  top.reTopupAmt */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":1482:1512  top.reTopupAmt -= packagePrice */\n      swap5\n      tag_18\n      jump\t// in\n    tag_282:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":1552:1568  user.poolDeposit */\n      0x0d\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":1552:1584  user.poolDeposit += packagePrice */\n      tag_283\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup5\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":1552:1584  user.poolDeposit += packagePrice */\n      tag_15\n      jump\t// in\n    tag_283:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":1669:1681  packagePrice */\n      tag_284\n      dup4\n      dup7\n      dup7\n      tag_23\n      jump\t// in\n    tag_284:\n        /* \"contracts/modules/InfinityPool.sol\":1711:1724  user.deposits */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      mload(0x40)\n      swap1\n      tag_285\n      dup3\n      tag_10\n      jump\t// in\n    tag_285:\n      dup3\n      dup3\n      mstore\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":1730:1902  Deposit({... */\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      0x00\n      dup3\n      mstore\n      0x40\n        /* \"contracts/modules/InfinityPool.sol\":1730:1902  Deposit({... */\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":1822:1837  block.timestamp */\n      swap3\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup5\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":1730:1902  Deposit({... */\n      0x60\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap4\n        /* \"contracts/modules/InfinityPool.sol\":1865:1867  10 */\n      0x0a\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup6\n      mstore\n      dup3\n      sload\n      swap4\n      shl(0x40, 0x01)\n      dup6\n      lt\n      iszero\n      tag_286\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":1381:1395  top.reTopupAmt */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup6\n      add\n      dup1\n      dup6\n      sstore\n      dup6\n      lt\n      iszero\n      tag_177\n      jumpi\n      0xff\n      swap5\n      0x03\n      swap5\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      shl\n      add\n      swap3\n      mload\n      dup4\n      sstore\n      mload\n        /* \"contracts/modules/InfinityPool.sol\":1381:1395  top.reTopupAmt */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup4\n      add\n      sstore\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      add\n      swap2\n      mload\n      and\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      0x80\n      0x40\n      dup3\n      add\n      mstore\n      0x16\n      0x80\n      dup3\n      add\n      mstore\n      shl(0x50, 0x506f6f6c205265546f70757020284561726e696e6729)\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":1822:1837  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":1730:1902  Deposit({... */\n      0x60\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      add\n      mstore\n      mload(0x00)\n      codecopy(0x00, data_404df00f6e66bff52b1bbe26c09dc1dec3db2c9f5cc1962e398ceea85fe88b34, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":1921:2016  Upgrade(msg.sender, _userId, _poolId, packagePrice, \"Pool ReTopup (Earning)\",  block.timestamp) */\n      0xc0\n        /* \"contracts/modules/InfinityPool.sol\":1036:1046  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":1921:2016  Upgrade(msg.sender, _userId, _poolId, packagePrice, \"Pool ReTopup (Earning)\",  block.timestamp) */\n      swap3\n      log3\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      stop\n    tag_286:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_280:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f7420656e6f756768207265546f7075702062616c616e6365000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_75:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":8680:8686  7 days */\n      0x093a80\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_73:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":900:908  450 days */\n      0x02514300\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_71:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x20))\n      0x60\n      tag_302\n      calldataload(0x04)\n      tag_16\n      jump\t// in\n    tag_302:\n      swap2\n      swap1\n      0x20\n      mload(0x40)\n      swap4\n      dup5\n      swap3\n      iszero\n      iszero\n      dup4\n      mstore\n      0x40\n      dup3\n      dup5\n      add\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      dup3\n      0x40\n      dup7\n      add\n      mstore\n      add\n      dup5\n      dup5\n      add\n      mcopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      dup2\n      add\n      sub\n      add\n      swap1\n      return\n    tag_69:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":11590:11622  uint public topRoyaltyReward = 0 */\n      0x48\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_67:\n      tag_4\n      jump\t// in\n    tag_65:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":11510:11541  uint public topRoyaltyRound = 1 */\n      0x46\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_63:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n        /* \"contracts/modules/Storage.sol\":1818:1875  mapping(uint256 => uint256) public communityAccPerPackage */\n      0x0a\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      0x20\n      sload(keccak256(0x00, 0x40))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_61:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":3820:3825  users */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":3845:3900  require(user.account == msg.sender, \"Not your account\") */\n      tag_319\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      sload\n      and\n        /* \"contracts/modules/InfinityPool.sol\":3869:3879  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":3853:3879  user.account == msg.sender */\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":3845:3900  require(user.account == msg.sender, \"Not your account\") */\n      tag_7\n      jump\t// in\n    tag_319:\n        /* \"contracts/modules/InfinityPool.sol\":3919:3933  user.poollevel */\n      0x0c\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      dup2\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":3919:3937  user.poollevel < 7 */\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":3936:3937  7 */\n      0x07\n        /* \"contracts/modules/InfinityPool.sol\":3919:3937  user.poollevel < 7 */\n      dup4\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":3911:3954  require(user.poollevel < 7, \"At max level\") */\n      tag_320\n      dup2\n      tag_8\n      jump\t// in\n    tag_320:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      iszero\n      tag_177\n      jumpi\n      dup3\n        /* \"contracts/modules/InfinityPool.sol\":4117:4132  minLevelForPool */\n      0x17\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      add\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":4258:4268  user.level */\n      0x06\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":4258:4285  user.level >= requiredLevel */\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      tag_323\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":4394:4406  nextPool > 0 */\n      dup3\n      iszero\n      swap2\n      dup3\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":4390:4497  if (nextPool > 0) {... */\n      tag_325\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_326:\n      dup5\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":4516:4527  userHasPool */\n      0x33\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup5\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":4507:4573  require(!userHasPool[_userId][nextPool], \"Pool already purchased\") */\n      tag_327\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"contracts/modules/InfinityPool.sol\":4515:4546  !userHasPool[_userId][nextPool] */\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":4507:4573  require(!userHasPool[_userId][nextPool], \"Pool already purchased\") */\n      tag_9\n      jump\t// in\n    tag_327:\n        /* \"contracts/modules/InfinityPool.sol\":4618:4640  poolPackages[nextPool] */\n      tag_328\n      dup5\n      tag_2\n      jump\t// in\n    tag_328:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      sload(0x01)\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/modules/InfinityPool.sol\":4708:4766  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      dup2\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":3869:3879  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x04\n        /* \"contracts/modules/InfinityPool.sol\":4708:4766  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":4746:4750  this */\n      address\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x24\n      dup3\n      add\n      mstore\n      0x03\n      swap4\n      swap1\n      swap4\n      shl\n      swap2\n      swap1\n      swap2\n      shr\n      0x44\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap5\n      swap2\n      swap1\n      0x20\n      swap1\n      dup3\n      swap1\n      0x64\n      swap1\n      dup3\n      swap1\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/modules/InfinityPool.sol\":4708:4766  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      gas\n      call\n      dup1\n      iszero\n      tag_200\n      jumpi\n      tag_332\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_333:\n        /* \"contracts/modules/InfinityPool.sol\":4829:5305  if(nextPool == 0){... */\n      pop\n      tag_334\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_335:\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":5320:5344  user.directPoolQualified */\n      0x08\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":5320:5346  user.directPoolQualified>1 */\n      gt\n        /* \"contracts/modules/InfinityPool.sol\":5320:5408  user.directPoolQualified>1 &&  user.registrationTime + ROI_2X_TIME >= user.poolStartTime */\n      dup1\n      tag_336\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_337:\n        /* \"contracts/modules/InfinityPool.sol\":5320:5430  user.directPoolQualified>1 &&  user.registrationTime + ROI_2X_TIME >= user.poolStartTime  && user.roiCap == 15 */\n      dup1\n      tag_338\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_339:\n        /* \"contracts/modules/InfinityPool.sol\":5317:5476  if(user.directPoolQualified>1 &&  user.registrationTime + ROI_2X_TIME >= user.poolStartTime  && user.roiCap == 15){... */\n      tag_340\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_341:\n      dup2\n      sload\n      0x01\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_208\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":5564:5580  user.poolDeposit */\n      0x0d\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap3\n      sstore\n      dup5\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":4516:4527  userHasPool */\n      0x33\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup5\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":5564:5580  user.poolDeposit */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":5564:5596  user.poolDeposit += packagePrice */\n      tag_344\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":5564:5596  user.poolDeposit += packagePrice */\n      tag_15\n      jump\t// in\n    tag_344:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":5640:5652  packagePrice */\n      tag_345\n      dup2\n      dup5\n      dup5\n      tag_23\n      jump\t// in\n    tag_345:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x01\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_208\n      jumpi\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      0x80\n      0x40\n      dup3\n      add\n      mstore\n      0x04\n      0x80\n      dup3\n      add\n      mstore\n      shl(0xe2, 0x141bdbdb)\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":4802:4817  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x60\n      dup3\n      add\n      mstore\n      mload(0x00)\n      codecopy(0x00, data_404df00f6e66bff52b1bbe26c09dc1dec3db2c9f5cc1962e398ceea85fe88b34, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":5900:5973  Upgrade(msg.sender, _userId, nextPool + 1, packagePrice, \"Pool\", nowTime) */\n      0xc0\n        /* \"contracts/modules/InfinityPool.sol\":3869:3879  msg.sender */\n      caller\n        /* \"contracts/modules/InfinityPool.sol\":5900:5973  Upgrade(msg.sender, _userId, nextPool + 1, packagePrice, \"Pool\", nowTime) */\n      swap3\n      log3\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      stop\n        /* \"contracts/modules/InfinityPool.sol\":5317:5476  if(user.directPoolQualified>1 &&  user.registrationTime + ROI_2X_TIME >= user.poolStartTime  && user.roiCap == 15){... */\n    tag_340:\n        /* \"contracts/modules/InfinityPool.sol\":5460:5462  20 */\n      0x14\n        /* \"contracts/modules/InfinityPool.sol\":5446:5457  user.roiCap */\n      0x0b\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":5317:5476  if(user.directPoolQualified>1 &&  user.registrationTime + ROI_2X_TIME >= user.poolStartTime  && user.roiCap == 15){... */\n      jump(tag_341)\n        /* \"contracts/modules/InfinityPool.sol\":5320:5430  user.directPoolQualified>1 &&  user.registrationTime + ROI_2X_TIME >= user.poolStartTime  && user.roiCap == 15 */\n    tag_338:\n        /* \"contracts/modules/InfinityPool.sol\":5413:5424  user.roiCap */\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":3820:3825  users */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":5413:5424  user.roiCap */\n      0x0b\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":5413:5430  user.roiCap == 15 */\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":5320:5430  user.directPoolQualified>1 &&  user.registrationTime + ROI_2X_TIME >= user.poolStartTime  && user.roiCap == 15 */\n      jump(tag_339)\n        /* \"contracts/modules/InfinityPool.sol\":5320:5408  user.directPoolQualified>1 &&  user.registrationTime + ROI_2X_TIME >= user.poolStartTime */\n    tag_336:\n        /* \"contracts/modules/InfinityPool.sol\":5351:5372  user.registrationTime */\n      pop\n      0x11\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":782:788  2 days */\n      0x02a300\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_208\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":5390:5408  user.poolStartTime */\n      0x0e\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      gt\n        /* \"contracts/modules/InfinityPool.sol\":5351:5408  user.registrationTime + ROI_2X_TIME >= user.poolStartTime */\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":5320:5408  user.directPoolQualified>1 &&  user.registrationTime + ROI_2X_TIME >= user.poolStartTime */\n      jump(tag_337)\n        /* \"contracts/modules/InfinityPool.sol\":4829:5305  if(nextPool == 0){... */\n    tag_334:\n        /* \"contracts/modules/InfinityPool.sol\":4802:4817  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":4861:4879  user.poolStartTime */\n      0x0e\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sstore\n      0x04\n        /* \"contracts/modules/InfinityPool.sol\":4933:4947  user.sponsorId */\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":3820:3825  users */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":5015:5039  sponsor.registrationTime */\n      0x11\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":782:788  2 days */\n      0x02a300\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_208\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":4802:4817  block.timestamp */\n      timestamp\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":5015:5064  sponsor.registrationTime + ROI_2X_TIME <= nowTime */\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":5015:5088  sponsor.registrationTime + ROI_2X_TIME <= nowTime && sponsor.roiCap == 15 */\n      dup1\n      tag_352\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":4829:5305  if(nextPool == 0){... */\n    tag_353:\n        /* \"contracts/modules/InfinityPool.sol\":5012:5294  if(sponsor.registrationTime + ROI_2X_TIME <= nowTime && sponsor.roiCap == 15){... */\n      tag_354\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":4829:5305  if(nextPool == 0){... */\n    tag_355:\n      pop\n      jump(tag_335)\n        /* \"contracts/modules/InfinityPool.sol\":5012:5294  if(sponsor.registrationTime + ROI_2X_TIME <= nowTime && sponsor.roiCap == 15){... */\n    tag_354:\n        /* \"contracts/modules/InfinityPool.sol\":5109:5136  sponsor.directPoolQualified */\n      0x08\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_208\n      jumpi\n      dup1\n      0x01\n      swap3\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":5164:5195  sponsor.directPoolQualified > 1 */\n      gt\n        /* \"contracts/modules/InfinityPool.sol\":5160:5279  if( sponsor.directPoolQualified > 1){... */\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":5012:5294  if(sponsor.registrationTime + ROI_2X_TIME <= nowTime && sponsor.roiCap == 15){... */\n      tag_355\n        /* \"contracts/modules/InfinityPool.sol\":5160:5279  if( sponsor.directPoolQualified > 1){... */\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":5219:5233  sponsor.roiCap */\n      0x0b\n        /* \"contracts/modules/InfinityPool.sol\":5236:5238  20 */\n      0x14\n        /* \"contracts/modules/InfinityPool.sol\":5219:5233  sponsor.roiCap */\n      swap2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":5160:5279  if( sponsor.directPoolQualified > 1){... */\n      dup6\n        /* \"contracts/modules/InfinityPool.sol\":5012:5294  if(sponsor.registrationTime + ROI_2X_TIME <= nowTime && sponsor.roiCap == 15){... */\n      jump(tag_355)\n        /* \"contracts/modules/InfinityPool.sol\":5015:5088  sponsor.registrationTime + ROI_2X_TIME <= nowTime && sponsor.roiCap == 15 */\n    tag_352:\n        /* \"contracts/modules/InfinityPool.sol\":5068:5082  sponsor.roiCap */\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":3820:3825  users */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":5068:5082  sponsor.roiCap */\n      0x0b\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":5068:5088  sponsor.roiCap == 15 */\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":5015:5088  sponsor.registrationTime + ROI_2X_TIME <= nowTime && sponsor.roiCap == 15 */\n      jump(tag_353)\n        /* \"contracts/modules/InfinityPool.sol\":4708:4766  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n    tag_332:\n      tag_360\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":4708:4766  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      returndatasize\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":4708:4766  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      gt\n      tag_211\n      jumpi\n      tag_213\n      dup2\n      dup4\n      tag_12\n      jump\t// in\n    tag_360:\n      jump(tag_333)\n        /* \"contracts/modules/InfinityPool.sol\":4390:4497  if (nextPool > 0) {... */\n    tag_325:\n      jump(tag_326)\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_323:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x5570677261646520796f7572206c6576656c2066697273740000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_59:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":782:788  2 days */\n      0x02a300\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_57:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":1257:1288  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":1257:1288  uint[] public registeredUserIds */\n      dup2\n      lt\n      iszero\n      tag_127\n      jumpi\n      0x07\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/modules/Storage.sol\":1257:1288  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x00\n      mstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_55:\n      tag_5\n      jump\t// in\n    tag_53:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1513:1517  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_51:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":731:737  1 days */\n      0x015180\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_49:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1240:1241  2 */\n      0x02\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_47:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8840:8873  uint public WeeklyTotalReward = 0 */\n      0x3a\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_45:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x01)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_41:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":10127:10134  30 days */\n      0x278d00\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_37:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":6947:7052  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x16\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":6947:7052  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      dup2\n      lt\n      iszero\n      tag_127\n      jumpi\n      tag_220\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n        /* \"contracts/modules/Storage.sol\":6947:7052  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      swap2\n      tag_1\n      jump\t// in\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_35:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x07\n        /* \"contracts/modules/Storage.sol\":7059:7116  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      dup2\n      lt\n      iszero\n      tag_127\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":7059:7116  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      0x17\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_33:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n        /* \"contracts/modules/Storage.sol\":2093:2149  mapping(uint256 => uint256) public packageQualifiedUsers */\n      0x0c\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      0x20\n      sload(keccak256(0x00, 0x40))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_31:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      dup1\n        /* \"contracts/modules/Storage.sol\":683:688  10000 */\n      0x2710\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      swap3\n      mstore\n      return\n    tag_1:\n        /* \"contracts/modules/Storage.sol\":6947:7052  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x16\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/modules/Storage.sol\":6947:7052  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x16\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_2:\n        /* \"contracts/modules/InfinityPool.sol\":4618:4630  poolPackages */\n      0x15\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":4618:4630  poolPackages */\n      0x15\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_3:\n      dup1\n      sload\n      dup3\n      lt\n      iszero\n      tag_177\n      jumpi\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_4:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1076:1078  10 */\n      0x0a\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_5:\n      jumpi(tag_127, callvalue)\n      jumpi(tag_127, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1129:1131  15 */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      return\n    tag_6:\n      0x40\n      swap1\n      not(0x03)\n      add\n      slt\n      tag_127\n      jumpi\n      calldataload(0x04)\n      swap1\n      calldataload(0x24)\n      swap1\n      jump\t// out\n    tag_7:\n      iszero\n      tag_437\n      jumpi\n      jump\t// out\n    tag_437:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x139bdd081e5bdd5c881858d8dbdd5b9d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_8:\n      iszero\n      tag_439\n      jumpi\n      jump\t// out\n    tag_439:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa2, 0x105d081b585e081b195d995b)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_9:\n      iszero\n      tag_441\n      jumpi\n      jump\t// out\n    tag_441:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x52, 0x141bdbdb08185b1c9958591e481c1d5c98da185cd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_10:\n      0x80\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_286\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_11:\n      0xa0\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_286\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_12:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_286\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_13:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_127\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_127\n      jumpi\n      swap1\n      jump\t// out\n    tag_15:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_208\n      jumpi\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":193:876  function canBuyNextPool(uint userId) public view returns (bool eligible, string memory reason) {... */\n    tag_16:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x60\n      swap1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":319:324  users */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":359:373  user.poollevel */\n      0x0c\n      dup2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":400:412  poolPackages */\n      0x15\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":388:419  nextPool >= poolPackages.length */\n      dup4\n      lt\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":384:501  if (nextPool >= poolPackages.length) {... */\n      tag_455\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      pop\n      0x07\n      dup3\n      lt\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":576:586  user.level */\n      0x06\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n        /* \"contracts/modules/InfinityPool.sol\":534:549  minLevelForPool */\n      0x17\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      add\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":576:586  user.level */\n      swap2\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":576:602  user.level < requiredLevel */\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":572:687  if (user.level < requiredLevel) {... */\n      tag_459\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":703:715  nextPool > 0 */\n      iszero\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":703:744  nextPool > 0 && user.poollevel < nextPool */\n      dup1\n      tag_461\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":193:876  function canBuyNextPool(uint userId) public view returns (bool eligible, string memory reason) {... */\n    tag_462:\n        /* \"contracts/modules/InfinityPool.sol\":699:814  if (nextPool > 0 && user.poollevel < nextPool) {... */\n      tag_463\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":834:838  true */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      mload(0x40)\n      tag_465\n      0x40\n      dup3\n      tag_12\n      jump\t// in\n    tag_465:\n      0x19\n      dup2\n      mstore\n      0x456c696769626c6520746f20627579206e65787420706f6f6c00000000000000\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":193:876  function canBuyNextPool(uint userId) public view returns (bool eligible, string memory reason) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":699:814  if (nextPool > 0 && user.poollevel < nextPool) {... */\n    tag_463:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x00\n      swap1\n      mload(0x40)\n      tag_466\n      0x40\n      dup3\n      tag_12\n      jump\t// in\n    tag_466:\n        /* \"contracts/modules/InfinityPool.sol\":534:549  minLevelForPool */\n      0x17\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      mstore\n      0x4275792070726576696f757320706f6f6c206669727374000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":761:802  return (false, \"Buy previous pool first\") */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":703:744  nextPool > 0 && user.poollevel < nextPool */\n    tag_461:\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":703:744  nextPool > 0 && user.poollevel < nextPool */\n      jump(tag_462)\n        /* \"contracts/modules/InfinityPool.sol\":572:687  if (user.level < requiredLevel) {... */\n    tag_459:\n        /* \"contracts/modules/InfinityPool.sol\":619:675  return (false, \"You need to reach a higher level first\") */\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x00\n      swap1\n      mload(0x40)\n      tag_467\n      0x60\n      dup3\n      tag_12\n      jump\t// in\n    tag_467:\n      0x26\n      dup2\n      mstore\n      0x596f75206e65656420746f207265616368206120686967686572206c6576656c\n      0x20\n      dup3\n      add\n      mstore\n      shl(0xd2, 0x08199a5c9cdd)\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":619:675  return (false, \"You need to reach a higher level first\") */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":384:501  if (nextPool >= poolPackages.length) {... */\n    tag_455:\n        /* \"contracts/modules/InfinityPool.sol\":436:489  return (false, \"You are already at the highest pool\") */\n      swap3\n      swap2\n      pop\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x00\n      swap2\n      tag_468\n      mload(0x40)\n      swap2\n      dup3\n      tag_12\n      jump\t// in\n    tag_468:\n      0x23\n      dup2\n      mstore\n      0x596f752061726520616c72656164792061742074686520686967686573742070\n      0x20\n      dup3\n      add\n      mstore\n      shl(0xea, 0x1bdbdb)\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":436:489  return (false, \"You are already at the highest pool\") */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_17:\n      iszero\n      tag_469\n      jumpi\n      jump\t// out\n    tag_469:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0b\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xaa, 0x105d081b585e081c1bdbdb)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_18:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_208\n      jumpi\n      jump\t// out\n    tag_19:\n      iszero\n      tag_473\n      jumpi\n      jump\t// out\n    tag_473:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x07\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xca, 0x125b9d985b1a59)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_20:\n      iszero\n      tag_475\n      jumpi\n      jump\t// out\n    tag_475:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x125b98dbdc9c9958dd08185b5bdd5b9d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_21:\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      lt\n      iszero\n      tag_286\n      jumpi\n      tag_479\n      swap2\n      0x01\n      dup3\n      add\n      dup2\n      sstore\n      tag_3\n      jump\t// in\n    tag_479:\n      dup2\n      swap3\n      swap2\n      sload\n      swap1\n      0x03\n      shl\n      swap2\n      dup3\n      shl\n      swap2\n      not(0x00)\n      swap1\n      shl\n      not\n      and\n      or\n      swap1\n      sstore\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":5995:7103  function _placeInPool(uint256 poolId, uint userMainId, uint packagePrice) private {... */\n    tag_23:\n      swap1\n      swap3\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":6105:6117  poolPackages */\n      0x15\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":6096:6124  poolId < poolPackages.length */\n      swap4\n        /* \"contracts/modules/InfinityPool.sol\":6088:6136  require(poolId < poolPackages.length, \"Invalid\") */\n      tag_480\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":6096:6124  poolId < poolPackages.length */\n      swap6\n      dup5\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":6088:6136  require(poolId < poolPackages.length, \"Invalid\") */\n      tag_19\n      jump\t// in\n    tag_480:\n        /* \"contracts/modules/InfinityPool.sol\":6147:6209  require(msg.value == poolPackages[poolId], \"Incorrect amount\") */\n      tag_481\n        /* \"contracts/modules/InfinityPool.sol\":6168:6188  poolPackages[poolId] */\n      tag_482\n      dup5\n      tag_2\n      jump\t// in\n    tag_482:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n        /* \"contracts/modules/InfinityPool.sol\":6155:6164  msg.value */\n      callvalue\n        /* \"contracts/modules/InfinityPool.sol\":6155:6188  msg.value == poolPackages[poolId] */\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":6147:6209  require(msg.value == poolPackages[poolId], \"Incorrect amount\") */\n      tag_20\n      jump\t// in\n    tag_481:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6300:6309  poolUsers */\n      0x32\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/modules/InfinityPool.sol\":6415:6441  defaultRefId + uint(index) */\n      tag_483\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n        /* \"contracts/modules/InfinityPool.sol\":6415:6427  defaultRefId */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":6415:6441  defaultRefId + uint(index) */\n      tag_15\n      jump\t// in\n    tag_483:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      dup5\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6300:6309  poolUsers */\n      0x32\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6452:6485  poolUsers[poolId].push(newUserId) */\n      tag_484\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":6452:6485  poolUsers[poolId].push(newUserId) */\n      tag_21\n      jump\t// in\n    tag_484:\n      not(0x00)\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      add\n      swap1\n      dup2\n      gt\n      tag_208\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":6590:6620  poolUsers[poolId][parentIndex] */\n      tag_487\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x03\n        /* \"contracts/modules/InfinityPool.sol\":6972:7018  userChildren[poolId][parentId].push(newUserId) */\n      tag_488\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap3\n      dup8\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6300:6309  poolUsers */\n      0x32\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      div\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":6590:6620  poolUsers[poolId][parentIndex] */\n      tag_3\n      jump\t// in\n    tag_487:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      swap2\n      tag_489\n      mload(0x40)\n      tag_490\n      dup2\n      tag_11\n      jump\t// in\n    tag_490:\n      dup3\n      dup2\n      mstore\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":6692:6888  UserPool({... */\n      dup1\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup8\n      dup2\n      mstore\n      0x40\n        /* \"contracts/modules/InfinityPool.sol\":6692:6888  UserPool({... */\n      dup1\n      dup5\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup12\n      dup2\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6692:6888  UserPool({... */\n      0x60\n      dup6\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup10\n      dup2\n      mstore\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":6692:6888  UserPool({... */\n      0x80\n      dup8\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      dup2\n      mstore\n      dup15\n      dup3\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6659:6670  userPooldtl */\n      0x2f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup8\n      mstore\n      dup5\n      dup3\n      keccak256\n      dup11\n      dup4\n      mstore\n      swap1\n      swap7\n      mstore\n      swap3\n      swap1\n      swap3\n      keccak256\n      swap5\n      mload\n      dup6\n      sstore\n      swap2\n      mload\n      0x01\n      dup6\n      add\n      sstore\n      swap1\n      mload\n      0x02\n      dup5\n      add\n      sstore\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      sstore\n      jump\n    tag_489:\n      dup6\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6912:6925  userIdPerPool */\n      0x31\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup5\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6912:6961  userIdPerPool[poolId][userMainId].push(newUserId) */\n      tag_491\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":6912:6961  userIdPerPool[poolId][userMainId].push(newUserId) */\n      tag_21\n      jump\t// in\n    tag_491:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup6\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6972:6984  userChildren */\n      0x30\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup4\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":6972:7018  userChildren[poolId][parentId].push(newUserId) */\n      tag_21\n      jump\t// in\n    tag_488:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      0x03\n      dup4\n      div\n        /* \"contracts/modules/InfinityPool.sol\":7327:7352  uint totalDistributed = 0 */\n      swap6\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":7369:7377  uint i=0 */\n      swap5\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":7365:8546  for(uint i=0; i<3; i++){... */\n      swap4\n        /* \"contracts/modules/InfinityPool.sol\":7379:7382  i<3 */\n    tag_492:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x03\n        /* \"contracts/modules/InfinityPool.sol\":7379:7382  i<3 */\n      dup6\n      lt\n      tag_493\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":7365:8546  for(uint i=0; i<3; i++){... */\n    tag_494:\n        /* \"contracts/modules/InfinityPool.sol\":8658:8684  _amount - totalDistributed */\n      pop\n      pop\n      pop\n      pop\n      pop\n      tag_495\n      swap3\n      swap4\n      pop\n      tag_18\n      jump\t// in\n    tag_495:\n        /* \"contracts/modules/InfinityPool.sol\":8699:8713  _remaining > 0 */\n      dup1\n        /* \"contracts/modules/InfinityPool.sol\":8695:8768  if (_remaining > 0) {... */\n      tag_496\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":5995:7103  function _placeInPool(uint256 poolId, uint userMainId, uint packagePrice) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":8695:8768  if (_remaining > 0) {... */\n    tag_496:\n        /* \"contracts/modules/InfinityPool.sol\":8745:8755  _remaining */\n      tag_498\n      swap1\n      tag_26\n      jump\t// in\n    tag_498:\n        /* \"contracts/modules/InfinityPool.sol\":5995:7103  function _placeInPool(uint256 poolId, uint userMainId, uint packagePrice) private {... */\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":7384:7387  i++ */\n    tag_493:\n        /* \"contracts/modules/InfinityPool.sol\":7420:7438  currentParent == 0 */\n      dup1\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":7420:7471  currentParent == 0 || currentParent == defaultRefId */\n      dup1\n      iszero\n      tag_499\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":7384:7387  i++ */\n    tag_500:\n        /* \"contracts/modules/InfinityPool.sol\":7416:7751  if (currentParent == 0 || currentParent == defaultRefId) {... */\n      tag_501\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      dup4\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6659:6670  userPooldtl */\n      0x2f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      swap1\n      dup4\n      mstore\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/modules/InfinityPool.sol\":7862:7874  userp.mainid */\n      swap6\n      dup9\n        /* \"contracts/modules/InfinityPool.sol\":6557:6558  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":7862:7874  userp.mainid */\n      dup9\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":7910:7926  userp.bonusCount */\n      0x04\n      dup10\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup1\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":7910:7931  userp.bonusCount < 39 */\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":7929:7931  39 */\n      0x27\n        /* \"contracts/modules/InfinityPool.sol\":7910:7931  userp.bonusCount < 39 */\n      dup3\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":7906:8403  if (userp.bonusCount < 39) {... */\n      tag_503\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":7384:7387  i++ */\n    tag_504:\n        /* \"contracts/modules/InfinityPool.sol\":8426:8460  totalDistributed += amountPerLevel */\n      pop\n      pop\n      pop\n      tag_505\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x03\n        /* \"contracts/modules/InfinityPool.sol\":8426:8460  totalDistributed += amountPerLevel */\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":6557:6558  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":8426:8460  totalDistributed += amountPerLevel */\n      swap4\n      tag_15\n      jump\t// in\n    tag_505:\n        /* \"contracts/modules/InfinityPool.sol\":8520:8534  userp.parentId */\n      swap8\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":7384:7387  i++ */\n      swap5\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":7369:7377  uint i=0 */\n      swap4\n      jump(tag_492)\n        /* \"contracts/modules/InfinityPool.sol\":7906:8403  if (userp.bonusCount < 39) {... */\n    tag_503:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      swap2\n      swap3\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":6557:6558  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_511\n      jumpi\n      dup2\n      swap1\n      sstore\n      dup11\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":8018:8020  24 */\n      0x18\n        /* \"contracts/modules/InfinityPool.sol\":7998:8020  userp.bonusCount <= 24 */\n      dup2\n      gt\n        /* \"contracts/modules/InfinityPool.sol\":8018:8020  24 */\n      tag_508\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      pop\n      pop\n      dup1\n      dup5\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8942:8953  userIncomes */\n      0x10\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":9100:9114  inc.poolIncome */\n      0x07\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x40\n      dup6\n      keccak256\n        /* \"contracts/modules/InfinityPool.sol\":9100:9114  inc.poolIncome */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":9100:9124  inc.poolIncome += amount */\n      tag_510\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup12\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":9100:9124  inc.poolIncome += amount */\n      tag_15\n      jump\t// in\n    tag_510:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":9669:9671  95 */\n      0x5f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup11\n      mul\n      dup11\n      iszero\n      swap1\n      dup12\n      dup2\n      div\n        /* \"contracts/modules/InfinityPool.sol\":9669:9671  95 */\n      0x5f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      eq\n      dup3\n      or\n      iszero\n      tag_511\n      jumpi\n      dup3\n      dup7\n      mstore\n        /* \"contracts/modules/Storage.sol\":13745:13750  users */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      0x40\n      dup7\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap3\n        /* \"contracts/modules/InfinityPool.sol\":9674:9677  100 */\n      0x64\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      swap2\n      div\n      swap1\n        /* \"contracts/modules/Storage.sol\":13823:13848  userAddress != address(0) */\n      dup4\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      tag_513\n      jumpi\n        /* \"contracts/modules/Storage.sol\":13884:13895  _amount > 0 */\n      dup2\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      tag_515\n      jumpi\n      dup1\n      dup8\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8942:8953  userIncomes */\n      0x10\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      0x40\n      dup8\n      keccak256\n      swap7\n      dup1\n      tag_517\n      jumpi\n      pop\n        /* \"contracts/modules/Storage.sol\":14187:14216  income.totalIncome += _amount */\n      tag_519\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      dup9\n      sload\n        /* \"contracts/modules/Storage.sol\":14187:14216  income.totalIncome += _amount */\n      tag_15\n      jump\t// in\n    tag_519:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup8\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":9100:9114  inc.poolIncome */\n      0x07\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap8\n        /* \"contracts/modules/Storage.sol\":14715:14732  income.poolIncome */\n      add\n        /* \"contracts/modules/Storage.sol\":14715:14743  income.poolIncome += _amount */\n      tag_520\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup4\n      dup3\n      sload\n        /* \"contracts/modules/Storage.sol\":14715:14743  income.poolIncome += _amount */\n      tag_15\n      jump\t// in\n    tag_520:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n      sload(0x01)\n        /* \"contracts/modules/Storage.sol\":15214:15221  _amount */\n      tag_521\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup4\n      swap1\n      dup7\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/modules/Storage.sol\":15214:15221  _amount */\n      tag_28\n      jump\t// in\n    tag_521:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6557:6558  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      dup4\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":6415:6427  defaultRefId */\n      0x05\n      swap4\n        /* \"contracts/modules/Storage.sol\":15238:15345  IncomeDistribution(userAddress, _userId, _fromUserId, _amount,_packageLevel, _incomeType, block.timestamp ) */\n      0x4d634c31300b97dad99b3af799178230163d88ad306370d063be9cd992d0be7f\n        /* \"contracts/modules/InfinityPool.sol\":6692:6888  UserPool({... */\n      0x80\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup5\n      dup8\n      0x40\n      dup14\n      swap8\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":15328:15343  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":6692:6888  UserPool({... */\n      0x60\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":15238:15345  IncomeDistribution(userAddress, _userId, _fromUserId, _amount,_packageLevel, _incomeType, block.timestamp ) */\n      log4\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      dup12\n      mul\n      swap2\n      dup12\n      dup4\n      div\n      eq\n      or\n      iszero\n      tag_208\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":8426:8460  totalDistributed += amountPerLevel */\n      tag_505\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup11\n        /* \"contracts/modules/InfinityPool.sol\":6557:6558  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap4\n        /* \"contracts/modules/InfinityPool.sol\":9829:9845  (amount*5) / 100 */\n      tag_526\n        /* \"contracts/modules/InfinityPool.sol\":9674:9677  100 */\n      0x64\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x03\n      swap6\n      div\n        /* \"contracts/modules/InfinityPool.sol\":9829:9845  (amount*5) / 100 */\n      tag_26\n      jump\t// in\n    tag_526:\n        /* \"contracts/modules/InfinityPool.sol\":7906:8403  if (userp.bonusCount < 39) {... */\n      swap4\n      dup2\n      swap4\n      pop\n      jump(tag_504)\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_517:\n      shl(0xe0, 0x4e487b71)\n      dup2\n      mstore\n      0x21\n        /* \"contracts/modules/InfinityPool.sol\":7910:7926  userp.bonusCount */\n      0x04\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      mstore\n      0x24\n      swap1\n      revert\n    tag_515:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":7910:7926  userp.bonusCount */\n      0x04\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":9164:9166  11 */\n      0x0b\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xaa, 0x16995c9bc8185b5bdd5b9d)\n      0x44\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":9674:9677  100 */\n      0x64\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      revert\n    tag_513:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":7910:7926  userp.bonusCount */\n      0x04\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x24b73b30b634b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":9674:9677  100 */\n      0x64\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      revert\n    tag_511:\n      shl(0xe0, 0x4e487b71)\n      dup7\n      mstore\n      0x11\n        /* \"contracts/modules/InfinityPool.sol\":7910:7926  userp.bonusCount */\n      0x04\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      mstore\n      0x24\n      dup7\n      revert\n        /* \"contracts/modules/InfinityPool.sol\":7994:8386  if (userp.bonusCount <= 24) {... */\n    tag_508:\n        /* \"contracts/modules/InfinityPool.sol\":6557:6558  1 */\n      0x01\n      swap4\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x03\n      swap4\n        /* \"contracts/modules/InfinityPool.sol\":8426:8460  totalDistributed += amountPerLevel */\n      tag_505\n      swap4\n        /* \"contracts/modules/InfinityPool.sol\":8139:8161  userp.bonusCount <= 36 */\n      swap3\n        /* \"contracts/modules/InfinityPool.sol\":8159:8161  36 */\n      0x24\n      lt\n      tag_528\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup7\n      dup9\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8186:8199  userPooltopup */\n      0x2e\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      0x40\n      dup9\n      keccak256\n      swap1\n      dup9\n      mstore\n      0x20\n      mstore\n      0x40\n      dup8\n      keccak256\n        /* \"contracts/modules/InfinityPool.sol\":8186:8252  userPooltopup[_poolId][parentMainId].nextPoolAmt += amountPerLevel */\n      tag_530\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup4\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":8186:8252  userPooltopup[_poolId][parentMainId].nextPoolAmt += amountPerLevel */\n      tag_15\n      jump\t// in\n    tag_530:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":7994:8386  if (userp.bonusCount <= 24) {... */\n      jump(tag_526)\n        /* \"contracts/modules/InfinityPool.sol\":8135:8386  if (userp.bonusCount <= 36) {... */\n    tag_528:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup7\n      dup9\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8301:8314  userPooltopup */\n      0x2e\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      0x40\n      dup9\n      keccak256\n      swap1\n      dup9\n      mstore\n      0x20\n      mstore\n      dup5\n      0x40\n      dup9\n      keccak256\n        /* \"contracts/modules/InfinityPool.sol\":8301:8348  userPooltopup[_poolId][parentMainId].reTopupAmt */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":8301:8366  userPooltopup[_poolId][parentMainId].reTopupAmt += amountPerLevel */\n      tag_530\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup4\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":8301:8366  userPooltopup[_poolId][parentMainId].reTopupAmt += amountPerLevel */\n      tag_15\n      jump\t// in\n        /* \"contracts/modules/InfinityPool.sol\":7416:7751  if (currentParent == 0 || currentParent == defaultRefId) {... */\n    tag_501:\n        /* \"contracts/modules/InfinityPool.sol\":7580:7606  _amount - totalDistributed */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":8658:8684  _amount - totalDistributed */\n      tag_495\n        /* \"contracts/modules/InfinityPool.sol\":7580:7606  _amount - totalDistributed */\n      swap3\n      swap4\n      pop\n      tag_533\n      dup3\n      dup3\n      tag_18\n      jump\t// in\n    tag_533:\n        /* \"contracts/modules/InfinityPool.sol\":7629:7642  remaining > 0 */\n      dup1\n        /* \"contracts/modules/InfinityPool.sol\":7625:7712  if (remaining > 0) {... */\n      tag_534\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":7416:7751  if (currentParent == 0 || currentParent == defaultRefId) {... */\n    tag_535:\n        /* \"contracts/modules/InfinityPool.sol\":7730:7735  break */\n      dup5\n      swap4\n      dup2\n      dup1\n      dup1\n      jump(tag_494)\n        /* \"contracts/modules/InfinityPool.sol\":7625:7712  if (remaining > 0) {... */\n    tag_534:\n        /* \"contracts/modules/InfinityPool.sol\":7682:7691  remaining */\n      tag_536\n      swap1\n      tag_26\n      jump\t// in\n    tag_536:\n        /* \"contracts/modules/InfinityPool.sol\":7625:7712  if (remaining > 0) {... */\n      0x00\n      jump(tag_535)\n        /* \"contracts/modules/InfinityPool.sol\":7420:7471  currentParent == 0 || currentParent == defaultRefId */\n    tag_499:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":6415:6427  defaultRefId */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":7442:7471  currentParent == defaultRefId */\n      dup2\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":7420:7471  currentParent == 0 || currentParent == defaultRefId */\n      jump(tag_500)\n        /* \"contracts/modules/InfinityPool.sol\":11689:13817  function _placeInBooster(uint256 poolId, uint userMainId, uint packagePrice) private {... */\n    tag_24:\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":11785:11839  require(poolId < glbBoosterPackages.length, \"Invalid\") */\n      tag_537\n        /* \"contracts/modules/InfinityPool.sol\":11802:11820  glbBoosterPackages */\n      0x16\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":11793:11827  poolId < glbBoosterPackages.length */\n      dup4\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":11785:11839  require(poolId < glbBoosterPackages.length, \"Invalid\") */\n      tag_19\n      jump\t// in\n    tag_537:\n        /* \"contracts/modules/InfinityPool.sol\":11850:11918  require(msg.value == glbBoosterPackages[poolId], \"Incorrect amount\") */\n      tag_538\n        /* \"contracts/modules/InfinityPool.sol\":11871:11897  glbBoosterPackages[poolId] */\n      tag_482\n      dup4\n      tag_1\n      jump\t// in\n        /* \"contracts/modules/InfinityPool.sol\":11850:11918  require(msg.value == glbBoosterPackages[poolId], \"Incorrect amount\") */\n    tag_538:\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12012:12024  boosterUsers */\n      0x36\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":12182:12219  boosterUsers[poolId].push(userMainId) */\n      tag_540\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup4\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":12182:12219  boosterUsers[poolId].push(userMainId) */\n      tag_21\n      jump\t// in\n    tag_540:\n      not(0x00)\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      add\n      swap1\n      dup2\n      gt\n      tag_208\n      jumpi\n      0x03\n        /* \"contracts/modules/InfinityPool.sol\":12324:12357  boosterUsers[poolId][parentIndex] */\n      tag_543\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap2\n      dup5\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12012:12024  boosterUsers */\n      0x36\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      div\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":12324:12357  boosterUsers[poolId][parentIndex] */\n      tag_3\n      jump\t// in\n    tag_543:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      swap2\n      tag_544\n      mload(0x40)\n      tag_545\n      dup2\n      tag_11\n      jump\t// in\n    tag_545:\n      dup4\n      dup2\n      mstore\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":12432:12654  UserBooster({... */\n      dup1\n      dup3\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup5\n      dup2\n      mstore\n      0x40\n        /* \"contracts/modules/InfinityPool.sol\":12432:12654  UserBooster({... */\n      dup1\n      dup5\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup9\n      dup2\n      mstore\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":12432:12654  UserBooster({... */\n      0x60\n      dup7\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12623:12638  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":12432:12654  UserBooster({... */\n      0x80\n      dup9\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      dup2\n      mstore\n      dup10\n      dup4\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12395:12409  userBoosterdtl */\n      0x34\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup8\n      mstore\n      dup5\n      dup4\n      keccak256\n      dup12\n      dup5\n      mstore\n      swap1\n      swap7\n      mstore\n      swap3\n      swap1\n      keccak256\n      swap5\n      mload\n      dup6\n      sstore\n      swap2\n      mload\n      0x01\n      dup6\n      add\n      sstore\n      swap1\n      mload\n      0x02\n      dup5\n      add\n      sstore\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      sstore\n      jump\n    tag_544:\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12665:12684  userBoosterChildren */\n      0x35\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup4\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12665:12719  userBoosterChildren[poolId][parentId].push(userMainId) */\n      tag_546\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":12665:12719  userBoosterChildren[poolId][parentId].push(userMainId) */\n      tag_21\n      jump\t// in\n    tag_546:\n        /* \"contracts/modules/InfinityPool.sol\":12291:12292  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":12744:12755  poolId == 1 */\n      dup2\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":12741:13325  if(poolId == 1  ){... */\n      tag_547\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":11689:13817  function _placeInBooster(uint256 poolId, uint userMainId, uint packagePrice) private {... */\n    tag_548:\n        /* \"contracts/modules/InfinityPool.sol\":13343:13356  parentId == 0 */\n      dup3\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":13343:13384  parentId == 0 || parentId == defaultRefId */\n      dup1\n      iszero\n      tag_549\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":11689:13817  function _placeInBooster(uint256 poolId, uint userMainId, uint packagePrice) private {... */\n    tag_550:\n        /* \"contracts/modules/InfinityPool.sol\":13339:13462  if (parentId == 0 || parentId == defaultRefId) {... */\n      tag_553\n      jumpi\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12395:12409  userBoosterdtl */\n      0x34\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup3\n      0x00\n      mstore\n      0x20\n      mstore\n      0x03\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":13549:13565  userB.bonusCount */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x03\n      dup2\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":13549:13567  userB.bonusCount<3 */\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":13545:13790  if( userB.bonusCount<3)... */\n      0x00\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      eq\n      tag_553\n      jumpi\n      dup1\n      sload\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":12291:12292  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_208\n      jumpi\n      sstore\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8942:8953  userIncomes */\n      0x10\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":9183:9200  inc.boosterIncome */\n      0x08\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":9183:9200  inc.boosterIncome */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":9183:9210  inc.boosterIncome += amount */\n      tag_557\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup5\n      dup3\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":9183:9210  inc.boosterIncome += amount */\n      tag_15\n      jump\t// in\n    tag_557:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n        /* \"contracts/modules/InfinityPool.sol\":9669:9671  95 */\n      0x5f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup4\n      mul\n      swap2\n      dup4\n      iszero\n      swap3\n      dup5\n      dup2\n      div\n        /* \"contracts/modules/InfinityPool.sol\":9669:9671  95 */\n      0x5f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      eq\n      dup5\n      or\n      iszero\n      tag_208\n      jumpi\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/modules/Storage.sol\":13745:13750  users */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":9674:9677  100 */\n      0x64\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      div\n        /* \"contracts/modules/Storage.sol\":13823:13848  userAddress != address(0) */\n      dup2\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      tag_513\n      jumpi\n        /* \"contracts/modules/Storage.sol\":13884:13895  _amount > 0 */\n      dup1\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      tag_515\n      jumpi\n      dup3\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":8942:8953  userIncomes */\n      0x10\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":9183:9200  inc.boosterIncome */\n      0x08\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":14187:14216  income.totalIncome += _amount */\n      tag_564\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup4\n      dup3\n      sload\n        /* \"contracts/modules/Storage.sol\":14187:14216  income.totalIncome += _amount */\n      tag_15\n      jump\t// in\n    tag_564:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      sstore\n        /* \"contracts/modules/Storage.sol\":14798:14818  income.boosterIncome */\n      add\n        /* \"contracts/modules/Storage.sol\":14798:14829  income.boosterIncome += _amount */\n      tag_565\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      dup3\n      sload\n        /* \"contracts/modules/Storage.sol\":14798:14829  income.boosterIncome += _amount */\n      tag_15\n      jump\t// in\n    tag_565:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n      sload(0x01)\n        /* \"contracts/modules/Storage.sol\":15214:15221  _amount */\n      tag_566\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      swap1\n      dup5\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/modules/Storage.sol\":15214:15221  _amount */\n      tag_28\n      jump\t// in\n    tag_566:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12291:12292  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12432:12654  UserBooster({... */\n      0x80\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n        /* \"contracts/modules/InfinityPool.sol\":9239:9257  IncomeType.Booster */\n      0x06\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x40\n        /* \"contracts/modules/Storage.sol\":15238:15345  IncomeDistribution(userAddress, _userId, _fromUserId, _amount,_packageLevel, _incomeType, block.timestamp ) */\n      0x4d634c31300b97dad99b3af799178230163d88ad306370d063be9cd992d0be7f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap5\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12623:12638  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":12432:12654  UserBooster({... */\n      0x60\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":15238:15345  IncomeDistribution(userAddress, _userId, _fromUserId, _amount,_packageLevel, _incomeType, block.timestamp ) */\n      log4\n        /* \"contracts/modules/InfinityPool.sol\":9037:9052  IncomeType.Pool */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      mul\n      swap2\n      dup3\n      div\n        /* \"contracts/modules/InfinityPool.sol\":9037:9052  IncomeType.Pool */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      eq\n      or\n      iszero\n      tag_208\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":9674:9677  100 */\n      0x64\n        /* \"contracts/modules/InfinityPool.sol\":9829:9845  (amount*5) / 100 */\n      tag_498\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap2\n      div\n        /* \"contracts/modules/InfinityPool.sol\":9829:9845  (amount*5) / 100 */\n      tag_26\n      jump\t// in\n        /* \"contracts/modules/InfinityPool.sol\":13545:13790  if( userB.bonusCount<3)... */\n    tag_553:\n        /* \"contracts/modules/InfinityPool.sol\":13744:13756  packagePrice */\n      pop\n      pop\n      pop\n      tag_498\n      swap1\n      tag_26\n      jump\t// in\n        /* \"contracts/modules/InfinityPool.sol\":13343:13384  parentId == 0 || parentId == defaultRefId */\n    tag_549:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      pop\n        /* \"contracts/modules/InfinityPool.sol\":13372:13384  defaultRefId */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":13360:13384  parentId == defaultRefId */\n      dup4\n      eq\n        /* \"contracts/modules/InfinityPool.sol\":13343:13384  parentId == 0 || parentId == defaultRefId */\n      jump(tag_550)\n        /* \"contracts/modules/InfinityPool.sol\":12741:13325  if(poolId == 1  ){... */\n    tag_547:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12795:12800  users */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap1\n      0x02c0\n      dup3\n      add\n      dup3\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_286\n      jumpi\n      0x40\n      mstore\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup3\n      mstore\n      0x01\n      dup2\n      add\n      dup1\n      sload\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_286\n      jumpi\n      mload(0x40)\n      swap2\n      tag_578\n      0x20\n      dup4\n      0x05\n      shl\n      add\n      dup5\n      tag_12\n      jump\t// in\n    tag_578:\n      dup2\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      0x00\n      swap2\n    tag_579:\n      dup4\n      dup4\n      lt\n      tag_580\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      0x20\n      dup4\n      add\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      0x40\n      dup4\n      add\n      mstore\n      0x03\n      dup2\n      add\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":12432:12654  UserBooster({... */\n      0x60\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup4\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":12432:12654  UserBooster({... */\n      0x80\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      add\n      swap3\n      dup4\n      mstore\n      0x05\n      dup3\n      add\n      sload\n      0xa0\n      dup3\n      add\n      mstore\n      0x06\n      dup3\n      add\n      sload\n      0xc0\n      dup3\n      add\n      mstore\n      0x07\n      dup3\n      add\n      sload\n      0xe0\n      dup3\n      add\n      mstore\n      0x08\n      dup3\n      add\n      sload\n      0x0100\n      dup3\n      add\n      mstore\n      0x09\n      dup3\n      add\n      sload\n      0x0120\n      dup3\n      add\n      mstore\n      0x0a\n      dup3\n      add\n      sload\n      0x0140\n      dup3\n      add\n      mstore\n      0x0b\n      dup3\n      add\n      sload\n      0x0160\n      dup3\n      add\n      mstore\n      0x0c\n      dup3\n      add\n      sload\n      0x0180\n      dup3\n      add\n      mstore\n      0x0d\n      dup3\n      add\n      sload\n      0x01a0\n      dup3\n      add\n      mstore\n      0x0e\n      dup3\n      add\n      sload\n      0x01c0\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12795:12800  users */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      add\n      sload\n      0x01e0\n      dup3\n      add\n      mstore\n      0x10\n      dup3\n      add\n      sload\n      0x0200\n      dup3\n      add\n      mstore\n      0x02a0\n      0x15\n      0x11\n      dup5\n      add\n      sload\n      swap4\n      0x0220\n      dup5\n      add\n      swap5\n      dup6\n      mstore\n      0x12\n      dup2\n      add\n      sload\n      0x0240\n      dup6\n      add\n      mstore\n      0x13\n      dup2\n      add\n      sload\n      0x0260\n      dup6\n      add\n      mstore\n      0x14\n      dup2\n      add\n      sload\n      0x0280\n      dup6\n      add\n      mstore\n      add\n      sload\n      swap2\n      add\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12845:12863  currentWeeklyRound */\n      0x38\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12827:12844  weeklyUserDirects */\n      0x3e\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup3\n      mload\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12827:12900  weeklyUserDirects[currentWeeklyRound][userdtl.sponsorId].push(userMainId) */\n      tag_582\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup5\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/InfinityPool.sol\":12827:12900  weeklyUserDirects[currentWeeklyRound][userdtl.sponsorId].push(userMainId) */\n      tag_21\n      jump\t// in\n    tag_582:\n        /* \"contracts/modules/InfinityPool.sol\":12845:12863  currentWeeklyRound */\n      0x38\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      swap1\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/InfinityPool.sol\":12827:12844  weeklyUserDirects */\n      0x3e\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup4\n      mload\n      0x00\n      mstore\n      0x20\n      mstore\n      sload(keccak256(0x00, 0x40))\n      swap1\n      mload\n      swap2\n        /* \"contracts/modules/Storage.sol\":731:737  1 days */\n      0x015180\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup4\n      add\n      dup1\n      swap4\n      gt\n      tag_208\n      jumpi\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":12623:12638  block.timestamp */\n      swap3\n      timestamp\n      gt\n        /* \"contracts/modules/InfinityPool.sol\":13018:13073  userdtl.registrationTime + TIME_STEP >= block.timestamp */\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":13015:13165  if(userdtl.registrationTime + TIME_STEP >= block.timestamp){... */\n      tag_585\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_586:\n        /* \"contracts/modules/InfinityPool.sol\":13183:13200  directsCount >= 5 */\n      pop\n      lt\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":13179:13300  if( directsCount >= 5){... */\n      tag_587\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_588:\n        /* \"contracts/modules/InfinityPool.sol\":12741:13325  if(poolId == 1  ){... */\n      pop\n      jump(tag_548)\n        /* \"contracts/modules/InfinityPool.sol\":13179:13300  if( directsCount >= 5){... */\n    tag_587:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      mload\n        /* \"contracts/modules/InfinityPool.sol\":12845:12863  currentWeeklyRound */\n      0x38\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/InfinityPool.sol\":13265:13283  currentWeeklyRound */\n      tag_589\n      swap2\n      tag_25\n      jump\t// in\n    tag_589:\n        /* \"contracts/modules/InfinityPool.sol\":13179:13300  if( directsCount >= 5){... */\n      0x00\n      jump(tag_588)\n        /* \"contracts/modules/InfinityPool.sol\":13015:13165  if(userdtl.registrationTime + TIME_STEP >= block.timestamp){... */\n    tag_585:\n        /* \"contracts/modules/InfinityPool.sol\":13130:13148  currentWeeklyRound */\n      tag_590\n      swap1\n      dup7\n      tag_25\n      jump\t// in\n    tag_590:\n        /* \"contracts/modules/InfinityPool.sol\":13015:13165  if(userdtl.registrationTime + TIME_STEP >= block.timestamp){... */\n      0x00\n      jump(tag_586)\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_580:\n      0x04\n      0x20\n        /* \"contracts/modules/InfinityPool.sol\":12291:12292  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap3\n      mload(0x40)\n      tag_591\n      dup2\n      tag_10\n      jump\t// in\n    tag_591:\n      dup6\n      sload\n      dup2\n      mstore\n      dup5\n      dup7\n      add\n      sload\n      dup4\n      dup3\n      add\n      mstore\n      0x02\n      dup7\n      add\n      sload\n      0x40\n      dup3\n      add\n      mstore\n      0xff\n      0x03\n      dup8\n      add\n      sload\n      and\n        /* \"contracts/modules/InfinityPool.sol\":12432:12654  UserBooster({... */\n      0x60\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      add\n      swap3\n      add\n      swap3\n      add\n      swap2\n      swap1\n      jump(tag_579)\n        /* \"contracts/modules/Storage.sol\":15474:15699  function _tryWeeklyContestQualify(uint _userId, uint _roundId)internal {... */\n    tag_25:\n      swap1\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":15565:15578  weeklyUserdtl */\n      0x3d\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup3\n      0x00\n      mstore\n      0x20\n      mstore\n      0xff\n        /* \"contracts/modules/Storage.sol\":15565:15609  weeklyUserdtl[_roundId][_userId].isQualified */\n      0x03\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":15565:15609  weeklyUserdtl[_roundId][_userId].isQualified */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      0x08\n      shr\n      and\n        /* \"contracts/modules/Storage.sol\":15564:15609  !weeklyUserdtl[_roundId][_userId].isQualified */\n      iszero\n        /* \"contracts/modules/Storage.sol\":15560:15692  if (!weeklyUserdtl[_roundId][_userId].isQualified) {... */\n      tag_592\n      jumpi\n        /* \"contracts/modules/Storage.sol\":15474:15699  function _tryWeeklyContestQualify(uint _userId, uint _roundId)internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/modules/Storage.sol\":15560:15692  if (!weeklyUserdtl[_roundId][_userId].isQualified) {... */\n    tag_592:\n        /* \"contracts/modules/Storage.sol\":15667:15675  _roundId */\n      tag_498\n      swap2\n      tag_27\n      jump\t// in\n        /* \"contracts/modules/Storage.sol\":12825:13580  function _sendToCreator(uint _amount) internal {... */\n    tag_26:\n        /* \"contracts/modules/Storage.sol\":12887:12900  creatorWallet */\n      0x02\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/modules/Storage.sol\":12887:12914  creatorWallet != address(0) */\n      dup2\n      iszero\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      tag_595\n      jumpi\n      sload(0x01)\n      0x80\n      swap3\n        /* \"contracts/modules/Storage.sol\":13066:13073  _amount */\n      tag_597\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup4\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/modules/Storage.sol\":13066:13073  _amount */\n      tag_28\n      jump\t// in\n    tag_597:\n        /* \"contracts/modules/Storage.sol\":13181:13193  defaultRefId */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":13169:13180  userIncomes */\n      0x10\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":13201:13237  creatorIncome.totalIncome += _amount */\n      tag_598\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      dup3\n      sload\n        /* \"contracts/modules/Storage.sol\":13201:13237  creatorIncome.totalIncome += _amount */\n      tag_15\n      jump\t// in\n    tag_598:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      sstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"contracts/modules/Storage.sol\":12887:12900  creatorWallet */\n      0x02\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      and\n        /* \"contracts/modules/Storage.sol\":13465:13576  IncomeDistribution(creatorWallet, defaultRefId, defaultRefId, _amount, 0, IncomeType.Creator, block.timestamp ) */\n      0x4d634c31300b97dad99b3af799178230163d88ad306370d063be9cd992d0be7f\n        /* \"contracts/modules/Storage.sol\":13181:13193  defaultRefId */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      swap4\n      dup5\n      swap4\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n      0x00\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":13559:13574  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":13465:13576  IncomeDistribution(creatorWallet, defaultRefId, defaultRefId, _amount, 0, IncomeType.Creator, block.timestamp ) */\n      log4\n        /* \"contracts/modules/Storage.sol\":12825:13580  function _sendToCreator(uint _amount) internal {... */\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_595:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x199959481859191c9cc81b9bdd081cd95d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/modules/Storage.sol\":15707:17185  function _weeklyContestQualifier(uint _userId, uint _roundId)internal {... */\n    tag_27:\n        /* \"contracts/modules/Storage.sol\":15876:15894  currentWeeklyRound */\n      0x38\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":15864:15894  _roundId == currentWeeklyRound */\n      dup3\n      sub\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      tag_599\n      jumpi\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":15932:15948  weeklyContestdtl */\n      0x3b\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      0xff\n        /* \"contracts/modules/Storage.sol\":15932:15965  weeklyContestdtl[_roundId].closed */\n      0x08\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":15932:15965  weeklyContestdtl[_roundId].closed */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      and\n      tag_601\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      mstore(0x20, 0x7fb70d3b53b50f6798636307bc089a811f848f8c80c93eb14575305275478318)\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n      swap1\n      mload\n      swap1\n      0x04\n      swap1\n      tag_603\n      dup4\n      tag_11\n      jump\t// in\n    tag_603:\n      dup1\n      sload\n      dup4\n      mstore\n        /* \"contracts/modules/Storage.sol\":16048:16049  1 */\n      0x01\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      add\n      sload\n      0x20\n      dup5\n      add\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      0x40\n      dup5\n      add\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup5\n      add\n      mstore\n      add\n      sload\n      0x80\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      dup4\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":16096:16113  weeklyUserDirects */\n      0x3e\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup4\n      0x00\n      mstore\n      0x20\n      mstore\n      dup3\n        /* \"contracts/modules/Storage.sol\":16143:16144  5 */\n      0x05\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/modules/Storage.sol\":16096:16144  weeklyUserDirects[_roundId][_userId].length >= 5 */\n      lt\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap3\n      mload\n        /* \"contracts/modules/Storage.sol\":16194:16226  userBoosterJoinDtl.id == _userId */\n      eq\n        /* \"contracts/modules/Storage.sol\":16194:16318  userBoosterJoinDtl.id == _userId && ... */\n      swap1\n      dup2\n      tag_604\n      jumpi\n        /* \"contracts/modules/Storage.sol\":15707:17185  function _weeklyContestQualifier(uint _userId, uint _roundId)internal {... */\n    tag_605:\n        /* \"contracts/modules/Storage.sol\":16096:16144  weeklyUserDirects[_roundId][_userId].length >= 5 */\n      pop\n      dup2\n      iszero\n        /* \"contracts/modules/Storage.sol\":16348:16384  hasEnoughDirects || boosterEarlyJoin */\n      swap2\n      tag_606\n      jumpi\n        /* \"contracts/modules/Storage.sol\":15707:17185  function _weeklyContestQualifier(uint _userId, uint _roundId)internal {... */\n    tag_607:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      pop\n      iszero\n      tag_608\n      jumpi\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":16785:16798  weeklyUserdtl */\n      0x3d\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":16832:16857  weeklyuserdtl.isQualified */\n      swap2\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x03\n        /* \"contracts/modules/Storage.sol\":16832:16857  weeklyuserdtl.isQualified */\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap2\n      dup3\n      sload\n      swap3\n      0xff\n      dup5\n        /* \"contracts/modules/Storage.sol\":15932:15965  weeklyContestdtl[_roundId].closed */\n      0x08\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      shr\n      and\n        /* \"contracts/modules/Storage.sol\":16828:16866  if (weeklyuserdtl.isQualified) return; */\n      tag_610\n      jumpi\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x0100\n      0x60\n      swap5\n      dup5\n        /* \"contracts/modules/Storage.sol\":16048:16049  1 */\n      0x01\n        /* \"contracts/modules/Storage.sol\":17127:17177  WeeklyContestQualified(_roundId, _userId, nowTime) */\n      0x360cb96d3e85b4fc299ddfa9a572850fc70961c86f0f1703f033143b0e5a82cf\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap9\n        /* \"contracts/modules/Storage.sol\":16960:16975  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      sstore\n        /* \"contracts/modules/Storage.sol\":17031:17052  weeklyuserdtl.roundId */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sstore\n      not(0xff00)\n      and\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":16960:16975  block.timestamp */\n      timestamp\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":17127:17177  WeeklyContestQualified(_roundId, _userId, nowTime) */\n      log1\n        /* \"contracts/modules/Storage.sol\":15707:17185  function _weeklyContestQualifier(uint _userId, uint _roundId)internal {... */\n      jump\t// out\n        /* \"contracts/modules/Storage.sol\":16828:16866  if (weeklyuserdtl.isQualified) return; */\n    tag_610:\n        /* \"contracts/modules/Storage.sol\":16859:16866  return; */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_608:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f7420656c696769626c6520666f72207765656b6c7920636f6e7465737400\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/modules/Storage.sol\":16348:16384  hasEnoughDirects || boosterEarlyJoin */\n    tag_606:\n      swap1\n      pop\n      0x00\n      jump(tag_607)\n        /* \"contracts/modules/Storage.sol\":16194:16318  userBoosterJoinDtl.id == _userId && ... */\n    tag_604:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      pop\n      mload\n      dup3\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":16275:16280  users */\n      0x0f\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      0x20\n      mstore\n        /* \"contracts/modules/Storage.sol\":16275:16306  users[_userId].registrationTime */\n      0x11\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":16275:16306  users[_userId].registrationTime */\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      sload\n      swap1\n        /* \"contracts/modules/Storage.sol\":731:737  1 days */\n      0x015180\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_208\n      jumpi\n        /* \"contracts/modules/Storage.sol\":16244:16318  userBoosterJoinDtl.joinTime <= users[_userId].registrationTime + TIME_STEP */\n      gt\n      iszero\n        /* \"contracts/modules/Storage.sol\":16194:16318  userBoosterJoinDtl.id == _userId && ... */\n      0x00\n      jump(tag_605)\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n    tag_601:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa2, 0x149bdd5b990818db1bdcd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_599:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x9a, 0x125b9d985b1a59081c9bdd5b99)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_28:\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n      dup3\n      dup2\n      add\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap1\n      swap5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      swap4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      swap1\n      swap3\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_614\n      0x64\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_12\n      jump\t// in\n    tag_614:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      swap1\n      dup3\n      dup6\n      gas\n      call\n      iszero\n      tag_200\n      jumpi\n      mload(0x00)\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      tag_617\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_619:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_620\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_620:\n      shl(0xe0, 0x5274afe7)\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n        /* \"contracts/modules/InfinityPool.sol\":102:13831  contract InfinityPool is Storage {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_617:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_619)\n    stop\n    data_404df00f6e66bff52b1bbe26c09dc1dec3db2c9f5cc1962e398ceea85fe88b34 26adb22cec823ef144935e9fbef1b6b4a3a29dacbe5444d59292fa2620f3d377\n\n    auxdata: 0xa2646970667358221220994561b3ece918bc689eb0ccba086ce0f72c731d6270e8921782d5da605ba04f64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"allocate_memory": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_4536": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"clear_storage_range_uint256": {
									"entryPoint": 1390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523461052b5760015f556040516101e081016001600160401b038111828210176105175760405267d02ab486cedc0000815268015af1d78b58c4000060208201526802b5e3af16b1880000604082015268056bc75e2d631000006060820152680ad78ebc5ac620000060808201526815af1d78b58c40000060a0820152682b5e3af16b1880000060c08201526856bc75e2d63100000060e082015268ad78ebc5ac6200000061010082015269015af1d78b58c40000006101208201526902b5e3af16b18800000061014082015269056bc75e2d6310000000610160820152690ad78ebc5ac6200000006101808201526915af1d78b58c400000006101a0820152692b5e3af16b18800000006101c0820152600d54600f600d5580600f106104c1575b50600d5f5260205f20905f5b600f81106104a45761014161052f565b680410d586a20a4c00008152681043561a8829300000602082015268410d586a20a4c0000060408201526901043561a882930000006060820152690410d586a20a4c0000006080820152691043561a88293000000060a082015269410d586a20a4c000000060c082015260155460076015558060071061044e575b5060155f5260205f20905f5b60078110610431576101d861054e565b68056bc75e2d631000008152680ad78ebc5ac620000060208201526815af1d78b58c4000006040820152682b5e3af16b1880000060608201526856bc75e2d631000000608082015268ad78ebc5ac6200000060a082015269015af1d78b58c400000060c08201526902b5e3af16b18800000060e08201526016546008601655806008106103db575b5060165f5260205f20905f5b600881106103be5761027c61052f565b60038152600560208201526007604082015260096060820152600b6080820152600d60a0820152600f60c08201525f5b600781106103a6576102bc61054e565b6004815260056020820152600660408201526007606082015260086080820152600960a0820152600a60c0820152600b60e08201525f5b6008811061038e5761030361054e565b5f815260016020820152600160408201526001606082015260016080820152600160a0820152600160c0820152600160e08201525f5b60088110610376575f6038555f6039555f603a556001603f555f6040555f60415560016046555f6047555f60485560405161217690816105858239f35b600190602060ff845116930192816026015501610339565b600190602060ff84511693019281601e0155016102f3565b600190602060ff8451169301928160170155016102ac565b81516001600160501b03168184015560209091019060010161026c565b60165f5261042b907fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124289017fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512429161056e565b81610260565b81516001600160501b0316818401556020909101906001016101c8565b60155f5261049e907f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475017f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47c61056e565b816101bc565b81516001600160501b031681840155602090910190600101610131565b600d5f52610511907fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5017fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1ec461056e565b5f610125565b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b6040519060e082016001600160401b0381118382101761051757604052565b6040519061010082016001600160401b0381118382101761051757604052565b818110610579575050565b5f815560010161056e56fe6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a8146110ca575080630676d0d6146110a05780632132d204146110745780632350268f1461104b57806323fd338e14610c175780632a8915341461102e5780632ae0ee0d14610f8a5780632f48ab7d146110065780633080b5bc14610fe957806331bb6a3014610fce57806332bc298c14610fb157806332fcd96614610f8f578063375b43b414610f8a57806339ab360314610f305780633a5084b314610f135780634060160a14610c6357806345cb537c14610c395780634b8cbf9b14610c1c57806358c7d35214610c175780635b62d1d514610bfa57806367d52d4d14610ba3578063705fee2d14610b8557806376f5f70014610b685780637848f0a3146109aa57806378f6ad6d1461098d5780637cdc65f21461096557806389043ece146109365780638e222e2414610705578063956a3228146106d95780639b40ab97146106bc578063a59d17d11461069f578063a5e52b9914610682578063ae4708dc1461064a578063bc1fa7c01461041f578063bff1f9e114610402578063c216212a14610394578063c8df290814610370578063c9ed070814610353578063ca8e912114610336578063d0a2fd791461030a578063d2f0490d146102ef578063e898fc38146102d2578063e9e34a16146102aa578063ebe0ff1514610287578063ec597e6f1461026a578063f5d74d93146102425763fddc806f14610221575f80fd5b3461023e575f36600319011261023e576020603954604051908152f35b5f80fd5b3461023e575f36600319011261023e576004546040516001600160a01b039091168152602090f35b3461023e575f36600319011261023e576020600554604051908152f35b3461023e575f36600319011261023e576020604051683635c9adc5dea000008152f35b3461023e575f36600319011261023e576003546040516001600160a01b039091168152602090f35b3461023e575f36600319011261023e576020604054604051908152f35b3461023e575f36600319011261023e57602060405160058152f35b3461023e57602036600319011261023e57600435600881101561023e57602090601e0154604051908152f35b3461023e575f36600319011261023e576020603854604051908152f35b3461023e575f36600319011261023e576020603f54604051908152f35b3461023e575f36600319011261023e57602060405169021e19e0c9bab24000008152f35b3461023e57602036600319011261023e57600435600d5481101561023e57600d548110156103ee57600d5f527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b3461023e575f36600319011261023e576020600654604051908152f35b3461023e57602036600319011261023e57600435805f52600f60205260405f2061045360018060a01b038254163314611175565b600f81019081549160088310610468816111b4565b156103ee5782601e015483602601549060068401541015908161063b575b50156105fe57826105f9575b835f52603760205260405f20835f526020526104b560ff60405f205416156111ef565b6104be836110e4565b90546001546040516323b872dd60e01b815233600482015230602482015260039390931b9190911c60448301819052939190602090829060649082905f906001600160a01b03165af180156105ee576105c1575b508154600181018091116105ad5760109255845f52603760205260405f20845f5260205260405f20600160ff19825416179055016105518282546112a6565b905561055e818484611913565b600182018092116105ad5760405191825260208201526080604082015260076080820152662137b7b9ba32b960c91b60a08201524260608201525f5160206121215f395f51905f5260c03392a3005b634e487b7160e01b5f52601160045260245ffd5b6105e29060203d6020116105e7575b6105da818361126c565b81019061128e565b610512565b503d6105d0565b6040513d5f823e3d90fd5b610492565b60405162461bcd60e51b8152602060048201526015602482015274155c19dc9859194814db1bdd08185b9908141bdbdb605a1b6044820152606490fd5b9050600c830154101585610486565b3461023e57602036600319011261023e5760043560155481101561023e576106736020916110fc565b90549060031b1c604051908152f35b3461023e575f36600319011261023e5760206040516283d6008152f35b3461023e575f36600319011261023e576020604154604051908152f35b3461023e575f36600319011261023e576020604754604051908152f35b3461023e57602036600319011261023e57600435600881101561023e5760209060260154604051908152f35b3461023e57604036600319011261023e5760043563ffffffff811680910361023e57602435815f52600f60205260405f2061074a60018060a01b038254163314611175565b600c81019061075c6007835410611411565b60018301928381116105ad576015548410156109005761077b846110fc565b90549060031b1c92815f52602e60205260405f20865f5260205260405f2080548581106108bb57875f52603360205260405f20875f5260205260ff60405f20541661087657856107ca9161144b565b9055805492600184018094116105ad57600293600d9255016107ed8482546112a6565b9055845f52603360205260405f20845f5260205260405f20600160ff1982541617905561081b838686611501565b018092116105ad576040519182526020820152608060408201526016608082015275506f6f6c205570677261646520284561726e696e672960501b60a08201524260608201525f5160206121215f395f51905f5260c03392a3005b60405162461bcd60e51b815260206004820152601b60248201527f416c726561647920707572636861736564206e65787420706f6f6c00000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f756768206e65787420706f6f6c2062616c616e6365000000006044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d139bc81a1a59da195c881c1bdbdb60921b6044820152606490fd5b3461023e576109443661115f565b905f52600b60205260405f20905f52602052602060405f2054604051908152f35b3461023e575f36600319011261023e576002546040516001600160a01b039091168152602090f35b3461023e575f36600319011261023e576020600954604051908152f35b3461023e576109b83661115f565b815f52600f60205260405f206109d860018060a01b038254163314611175565b6109e86007600c83015410611411565b6109f1826110fc565b90549060031b1c90825f52602e60205260405f20845f52602052600160405f200190815491838310610b2357610a298460019461144b565b9055600d8101610a3a8482546112a6565b9055610a47838686611501565b0160405190610a5582611234565b82825260208201905f825260408301924284526060810193600a8552825493600160401b851015610b0f57600185018085558510156103ee5760ff946003945f5260205f209060021b01925183555160018301555160028201550191511660ff198254161790556040519182526020820152608060408201526016608082015275506f6f6c205265546f70757020284561726e696e672960501b60a08201524260608201525f5160206121215f395f51905f5260c03392a3005b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152601a60248201527f4e6f7420656e6f756768207265546f7075702062616c616e63650000000000006044820152606490fd5b3461023e575f36600319011261023e57602060405162093a808152f35b3461023e575f36600319011261023e57602060405163025143008152f35b3461023e57602036600319011261023e576060610bc16004356112b3565b91906020604051938492151583526040828401528051918291826040860152018484015e5f828201840152601f01601f19168101030190f35b3461023e575f36600319011261023e576020604854604051908152f35b611129565b3461023e575f36600319011261023e576020604654604051908152f35b3461023e57602036600319011261023e576004355f52600a602052602060405f2054604051908152f35b3461023e57602036600319011261023e57600435805f52600f60205260405f20610c9760018060a01b038254163314611175565b600c81019081549160078310610cac816111b4565b156103ee578260170154600683015410610ece578215918215610ec9575b845f52603360205260405f20845f52602052610ced60ff60405f205416156111ef565b610cf6846110fc565b90546001546040516323b872dd60e01b815233600482015230602482015260039390931b9190911c60448301819052949190602090829060649082905f906001600160a01b03165af180156105ee57610eac575b50610e39575b600160088201541180610e1a575b80610e0c575b610e00575b8154600181018091116105ad57600d9255845f52603360205260405f20845f5260205260405f20600160ff1982541617905501610da78282546112a6565b9055610db4818484611501565b600182018092116105ad576040519182526020820152608060408201526004608082015263141bdbdb60e21b60a08201524260608201525f5160206121215f395f51905f5260c03392a3005b6014600b820155610d69565b50600f600b82015414610d64565b5060118101546202a30081018091116105ad57600e8201541115610d5e565b42600e82015560048101545f52600f60205260405f2060118101546202a30081018091116105ad5742101580610e9e575b610e75575b50610d50565b600881018054600181018091116105ad5780600192551115610e6f57600b601491015585610e6f565b50600f600b82015414610e6a565b610ec49060203d6020116105e7576105da818361126c565b610d4a565b610cca565b60405162461bcd60e51b815260206004820152601860248201527f5570677261646520796f7572206c6576656c20666972737400000000000000006044820152606490fd5b3461023e575f36600319011261023e5760206040516202a3008152f35b3461023e57602036600319011261023e5760043560075481101561023e576007548110156103ee5760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b611144565b3461023e575f36600319011261023e576020604051670de0b6b3a76400008152f35b3461023e575f36600319011261023e576020604051620151808152f35b3461023e575f36600319011261023e57602060405160028152f35b3461023e575f36600319011261023e576020603a54604051908152f35b3461023e575f36600319011261023e576001546040516001600160a01b039091168152602090f35b3461023e575f36600319011261023e57602060405162278d008152f35b3461023e57602036600319011261023e5760043560165481101561023e576106736020916110e4565b3461023e57602036600319011261023e57600435600781101561023e5760209060170154604051908152f35b3461023e57602036600319011261023e576004355f52600c602052602060405f2054604051908152f35b3461023e575f36600319011261023e578061271060209252f35b6016548110156103ee5760165f5260205f2001905f90565b6015548110156103ee5760155f5260205f2001905f90565b80548210156103ee575f5260205f2001905f90565b3461023e575f36600319011261023e576020604051600a8152f35b3461023e575f36600319011261023e576020604051600f8152f35b604090600319011261023e576004359060243590565b1561117c57565b60405162461bcd60e51b815260206004820152601060248201526f139bdd081e5bdd5c881858d8dbdd5b9d60821b6044820152606490fd5b156111bb57565b60405162461bcd60e51b815260206004820152600c60248201526b105d081b585e081b195d995b60a21b6044820152606490fd5b156111f657565b60405162461bcd60e51b8152602060048201526016602482015275141bdbdb08185b1c9958591e481c1d5c98da185cd95960521b6044820152606490fd5b6080810190811067ffffffffffffffff821117610b0f57604052565b60a0810190811067ffffffffffffffff821117610b0f57604052565b90601f8019910116810190811067ffffffffffffffff821117610b0f57604052565b9081602091031261023e5751801515810361023e5790565b919082018092116105ad57565b6060905f52600f60205260405f20600c810154916015548310156113c5575060078210156103ee57600682601701549101541061137857151580611371575b6113345760019060405161130760408261126c565b601981527f456c696769626c6520746f20627579206e65787420706f6f6c00000000000000602082015290565b5f9060405161134460408261126c565b601781527f4275792070726576696f757320706f6f6c206669727374000000000000000000602082015290565b505f6112f2565b505f9060405161138960608261126c565b602681527f596f75206e65656420746f207265616368206120686967686572206c6576656c60208201526508199a5c9cdd60d21b604082015290565b929150505f916113d8604051918261126c565b602381527f596f752061726520616c726561647920617420746865206869676865737420706020820152621bdbdb60ea1b604082015290565b1561141857565b60405162461bcd60e51b815260206004820152600b60248201526a105d081b585e081c1bdbdb60aa1b6044820152606490fd5b919082039182116105ad57565b1561145f57565b60405162461bcd60e51b8152602060048201526007602482015266125b9d985b1a5960ca1b6044820152606490fd5b1561149557565b60405162461bcd60e51b815260206004820152601060248201526f125b98dbdc9c9958dd08185b5bdd5b9d60821b6044820152606490fd5b8054600160401b811015610b0f576114ea91600182018155611114565b819291549060031b91821b915f19901b1916179055565b909291601554936115145f958410611458565b61152e611520846110fc565b90549060031b1c341461148e565b825f52603260205260405f2054611547816005546112a6565b90845f52603260205261155d8260405f206114cd565b5f1981019081116105ad57611583600361162b92875f5260326020520460405f20611114565b90549060031b1c916115f160405161159a81611250565b828152602080820187815260408084018b8152606085018981525f608087018181528e8252602f87528482208a83529096529290922094518555915160018501559051600284015551600383015551600490910155565b855f52603160205260405f20845f526020526116108160405f206114cd565b855f52603060205260405f20835f5260205260405f206114cd565b9060038304955f945f935b60038510611662575b505050505061164f92935061144b565b806116575750565b61166090611dab565b565b80158015611908575b6118d457818352602f60205260408320908352602052604082209588600188015460048901805490602782106116b8575b5050506116ad6003916001936112a6565b970154940193611636565b9091925060018201809211611863578190558a90601881116118775750508084526010602052600760408520016116f08b82546112a6565b9055605f8a028a15908b8104605f1482171561186357828652600f60205260408620546001600160a01b031692606490910490831561182f5781156117fc5780875260106020526040872096806117e8575061174d8288546112a6565b875560075f970161175f8382546112a6565b905560015461177a90839086906001600160a01b0316612092565b604051918252600160208301526005937f4d634c31300b97dad99b3af799178230163d88ad306370d063be9cd992d0be7f6080848760408d970152426060820152a4818b02918b83041417156105ad576116ad8a6001936117df606460039504611dab565b9381935061169c565b634e487b7160e01b81526021600452602490fd5b60405162461bcd60e51b815260206004820152600b60248201526a16995c9bc8185b5bdd5b9d60aa1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103ab9b2b960a11b6044820152606490fd5b634e487b7160e01b86526011600452602486fd5b6001936003936116ad93926024106118b157868852602e60205260408820908852602052604087206118aa8382546112a6565b90556117df565b868852602e602052604088209088526020528460408820016118aa8382546112a6565b505050505061164f9293506118e9828261144b565b806118f9575b849381808061163f565b61190290611dab565b5f6118ef565b50600554811461166b565b906119216016548310611458565b61192d611520836110e4565b5f8281526036602052604090208054906119489083906114cd565b5f1981019081116105ad57600361196b91845f5260366020520460405f20611114565b90549060031b1c916119d960405161198281611250565b838152602080820184815260408084018881525f606086018181524260808801908152898352603487528483208b845290965292902094518555915160018501559051600284015551600383015551600490910155565b805f52603560205260405f20835f526020526119f88260405f206114cd565b60018114611b4d575b82158015611b42575b611b36575f52603460205260405f20825f52602052600360405f200160038154105f14611b3657805490600182018092116105ad5755815f526010602052600860405f2001611a5a8482546112a6565b9055605f830291831592848104605f148417156105ad575f828152600f60205260409020546001600160a01b03169060649004811561182f5780156117fc57825f526010602052600860405f20611ab28382546112a6565b815501611ac08282546112a6565b9055600154611adb90829084906001600160a01b0316612092565b60405190815260016020820152608081600660407f4d634c31300b97dad99b3af799178230163d88ad306370d063be9cd992d0be7f940152426060820152a46005820291820460051417156105ad5760646116609104611dab565b50505061166090611dab565b506005548314611a0a565b815f52600f60205260405f20604051906102c0820182811067ffffffffffffffff821117610b0f5760405280546001600160a01b0316825260018101805467ffffffffffffffff8111610b0f5760405191611bae60208360051b018461126c565b81835260208301905f5260205f205f915b838310611d3457505050506020830152600281015460408301526003810154606083015260048101549160808101928352600582015460a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154610140820152600b820154610160820152600c820154610180820152600d8201546101a0820152600e8201546101c0820152600f8201546101e082015260108201546102008201526102a06015601184015493610220840194855260128101546102408501526013810154610260850152601481015461028085015201549101526038545f52603e60205260405f2082515f52602052611ccc8460405f206114cd565b60385490815f52603e60205260405f2083515f5260205260405f20549051916201518083018093116105ad57600592421115611d24575b501015611d11575b50611a01565b51603854611d1e91611d78565b5f611d0b565b611d2e9086611d78565b5f611d03565b60046020600192604051611d4781611234565b8554815284860154838201526002860154604082015260ff6003870154166060820152815201920192019190611bbf565b90805f52603d60205260405f20825f5260205260ff600360405f20015460081c1615611da2575050565b61166091611e7a565b6002546001600160a01b0316908115611e4157600154608092611dd9918391906001600160a01b0316612092565b6005545f52601060205260405f20611df28282546112a6565b905560018060a01b03600254167f4d634c31300b97dad99b3af799178230163d88ad306370d063be9cd992d0be7f6005549384936040519081525f60208201525f6040820152426060820152a4565b60405162461bcd60e51b8152602060048201526011602482015270199959481859191c9cc81b9bdd081cd95d607a1b6044820152606490fd5b603854820361205d57815f52603b60205260ff600860405f20015416612029575f8181527f7fb70d3b53b50f6798636307bc089a811f848f8c80c93eb14575305275478318602052604090819020905190600490611ed783611250565b80548352600181015460208401526002810154604084015260038101546060840152015460808201908152835f52603e60205260405f20835f5260205282600560405f2054109251149081612000575b50811591611ff8575b5015611fb357815f52603d60205260405f20815f5260205260405f2091600383019182549260ff8460081c16611fac576101006060948460017f360cb96d3e85b4fc299ddfa9a572850fc70961c86f0f1703f033143b0e5a82cf98428155015561ff0019161790556040519182526020820152426040820152a1565b5050505050565b60405162461bcd60e51b815260206004820152601f60248201527f4e6f7420656c696769626c6520666f72207765656b6c7920636f6e74657374006044820152606490fd5b90505f611f30565b905051825f52600f602052601160405f200154906201518082018092116105ad5711155f611f27565b60405162461bcd60e51b815260206004820152600c60248201526b149bdd5b990818db1bdcd95960a21b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081c9bdd5b99609a1b6044820152606490fd5b60405163a9059cbb60e01b60208281019182526001600160a01b03909416602483015260448083019590955293815290925f916120d060648261126c565b519082855af1156105ee575f513d61211757506001600160a01b0381163b155b6120f75750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b600114156120f056fe26adb22cec823ef144935e9fbef1b6b4a3a29dacbe5444d59292fa2620f3d377a2646970667358221220994561b3ece918bc689eb0ccba086ce0f72c731d6270e8921782d5da605ba04f64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x52B JUMPI PUSH1 0x1 PUSH0 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x517 JUMPI PUSH1 0x40 MSTORE PUSH8 0xD02AB486CEDC0000 DUP2 MSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH2 0x100 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH2 0x120 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH2 0x140 DUP3 ADD MSTORE PUSH10 0x56BC75E2D6310000000 PUSH2 0x160 DUP3 ADD MSTORE PUSH10 0xAD78EBC5AC620000000 PUSH2 0x180 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C40000000 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B1880000000 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xD SLOAD PUSH1 0xF PUSH1 0xD SSTORE DUP1 PUSH1 0xF LT PUSH2 0x4C1 JUMPI JUMPDEST POP PUSH1 0xD PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0xF DUP2 LT PUSH2 0x4A4 JUMPI PUSH2 0x141 PUSH2 0x52F JUMP JUMPDEST PUSH9 0x410D586A20A4C0000 DUP2 MSTORE PUSH9 0x1043561A8829300000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x410D586A20A4C00000 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1043561A88293000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH10 0x1043561A882930000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C0000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x15 SLOAD PUSH1 0x7 PUSH1 0x15 SSTORE DUP1 PUSH1 0x7 LT PUSH2 0x44E JUMPI JUMPDEST POP PUSH1 0x15 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x431 JUMPI PUSH2 0x1D8 PUSH2 0x54E JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x16 SLOAD PUSH1 0x8 PUSH1 0x16 SSTORE DUP1 PUSH1 0x8 LT PUSH2 0x3DB JUMPI JUMPDEST POP PUSH1 0x16 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x3BE JUMPI PUSH2 0x27C PUSH2 0x52F JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0xC0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x3A6 JUMPI PUSH2 0x2BC PUSH2 0x54E JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x38E JUMPI PUSH2 0x303 PUSH2 0x54E JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x376 JUMPI PUSH0 PUSH1 0x38 SSTORE PUSH0 PUSH1 0x39 SSTORE PUSH0 PUSH1 0x3A SSTORE PUSH1 0x1 PUSH1 0x3F SSTORE PUSH0 PUSH1 0x40 SSTORE PUSH0 PUSH1 0x41 SSTORE PUSH1 0x1 PUSH1 0x46 SSTORE PUSH0 PUSH1 0x47 SSTORE PUSH0 PUSH1 0x48 SSTORE PUSH1 0x40 MLOAD PUSH2 0x2176 SWAP1 DUP2 PUSH2 0x585 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x26 ADD SSTORE ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x1E ADD SSTORE ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x17 ADD SSTORE ADD PUSH2 0x2AC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x26C JUMP JUMPDEST PUSH1 0x16 PUSH0 MSTORE PUSH2 0x42B SWAP1 PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289 ADD PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124291 PUSH2 0x56E JUMP JUMPDEST DUP2 PUSH2 0x260 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x15 PUSH0 MSTORE PUSH2 0x49E SWAP1 PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 ADD PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC47C PUSH2 0x56E JUMP JUMPDEST DUP2 PUSH2 0x1BC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x131 JUMP JUMPDEST PUSH1 0xD PUSH0 MSTORE PUSH2 0x511 SWAP1 PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 ADD PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EC4 PUSH2 0x56E JUMP JUMPDEST PUSH0 PUSH2 0x125 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x100 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x579 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x56E JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0x10CA JUMPI POP DUP1 PUSH4 0x676D0D6 EQ PUSH2 0x10A0 JUMPI DUP1 PUSH4 0x2132D204 EQ PUSH2 0x1074 JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0x104B JUMPI DUP1 PUSH4 0x23FD338E EQ PUSH2 0xC17 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0x102E JUMPI DUP1 PUSH4 0x2AE0EE0D EQ PUSH2 0xF8A JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x1006 JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0xFE9 JUMPI DUP1 PUSH4 0x31BB6A30 EQ PUSH2 0xFCE JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0xFB1 JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0xF8F JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0xF8A JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0xF30 JUMPI DUP1 PUSH4 0x3A5084B3 EQ PUSH2 0xF13 JUMPI DUP1 PUSH4 0x4060160A EQ PUSH2 0xC63 JUMPI DUP1 PUSH4 0x45CB537C EQ PUSH2 0xC39 JUMPI DUP1 PUSH4 0x4B8CBF9B EQ PUSH2 0xC1C JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0xC17 JUMPI DUP1 PUSH4 0x5B62D1D5 EQ PUSH2 0xBFA JUMPI DUP1 PUSH4 0x67D52D4D EQ PUSH2 0xBA3 JUMPI DUP1 PUSH4 0x705FEE2D EQ PUSH2 0xB85 JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0xB68 JUMPI DUP1 PUSH4 0x7848F0A3 EQ PUSH2 0x9AA JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x98D JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x965 JUMPI DUP1 PUSH4 0x89043ECE EQ PUSH2 0x936 JUMPI DUP1 PUSH4 0x8E222E24 EQ PUSH2 0x705 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0x9B40AB97 EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x69F JUMPI DUP1 PUSH4 0xA5E52B99 EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xBC1FA7C0 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xD2F0490D EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x242 JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x221 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x39 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1E ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xD SLOAD DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0xD SLOAD DUP2 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0xD PUSH0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x453 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0x1175 JUMP JUMPDEST PUSH1 0xF DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x8 DUP4 LT PUSH2 0x468 DUP2 PUSH2 0x11B4 JUMP JUMPDEST ISZERO PUSH2 0x3EE JUMPI DUP3 PUSH1 0x1E ADD SLOAD DUP4 PUSH1 0x26 ADD SLOAD SWAP1 PUSH1 0x6 DUP5 ADD SLOAD LT ISZERO SWAP1 DUP2 PUSH2 0x63B JUMPI JUMPDEST POP ISZERO PUSH2 0x5FE JUMPI DUP3 PUSH2 0x5F9 JUMPI JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x37 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x4B5 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x4BE DUP4 PUSH2 0x10E4 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 SWAP4 SWAP1 SWAP4 SHL SWAP2 SWAP1 SWAP2 SHR PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH2 0x5C1 JUMPI JUMPDEST POP DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5AD JUMPI PUSH1 0x10 SWAP3 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x37 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD PUSH2 0x551 DUP3 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x55E DUP2 DUP5 DUP5 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x80 DUP3 ADD MSTORE PUSH7 0x2137B7B9BA32B9 PUSH1 0xC9 SHL PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2121 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC0 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x5E2 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5E7 JUMPI JUMPDEST PUSH2 0x5DA DUP2 DUP4 PUSH2 0x126C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x512 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x155C19DC9859194814DB1BDD08185B9908141BDBDB PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0xC DUP4 ADD SLOAD LT ISZERO DUP6 PUSH2 0x486 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH2 0x673 PUSH1 0x20 SWAP2 PUSH2 0x10FC JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x83D600 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x41 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x47 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x20 SWAP1 PUSH1 0x26 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x23E JUMPI PUSH1 0x24 CALLDATALOAD DUP2 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x74A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0x1175 JUMP JUMPDEST PUSH1 0xC DUP2 ADD SWAP1 PUSH2 0x75C PUSH1 0x7 DUP4 SLOAD LT PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP3 DUP4 DUP2 GT PUSH2 0x5AD JUMPI PUSH1 0x15 SLOAD DUP5 LT ISZERO PUSH2 0x900 JUMPI PUSH2 0x77B DUP5 PUSH2 0x10FC JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP2 PUSH0 MSTORE PUSH1 0x2E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP7 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP6 DUP2 LT PUSH2 0x8BB JUMPI DUP8 PUSH0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP8 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0x876 JUMPI DUP6 PUSH2 0x7CA SWAP2 PUSH2 0x144B JUMP JUMPDEST SWAP1 SSTORE DUP1 SLOAD SWAP3 PUSH1 0x1 DUP5 ADD DUP1 SWAP5 GT PUSH2 0x5AD JUMPI PUSH1 0x2 SWAP4 PUSH1 0xD SWAP3 SSTORE ADD PUSH2 0x7ED DUP5 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x81B DUP4 DUP7 DUP7 PUSH2 0x1501 JUMP JUMPDEST ADD DUP1 SWAP3 GT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x80 DUP3 ADD MSTORE PUSH22 0x506F6F6C205570677261646520284561726E696E6729 PUSH1 0x50 SHL PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2121 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC0 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920707572636861736564206E65787420706F6F6C0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768206E65787420706F6F6C2062616C616E636500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC81A1A59DA195C881C1BDBDB PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH2 0x944 CALLDATASIZE PUSH2 0x115F JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH2 0x9B8 CALLDATASIZE PUSH2 0x115F JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x9D8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0x1175 JUMP JUMPDEST PUSH2 0x9E8 PUSH1 0x7 PUSH1 0xC DUP4 ADD SLOAD LT PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x9F1 DUP3 PUSH2 0x10FC JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x2E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SWAP1 DUP2 SLOAD SWAP2 DUP4 DUP4 LT PUSH2 0xB23 JUMPI PUSH2 0xA29 DUP5 PUSH1 0x1 SWAP5 PUSH2 0x144B JUMP JUMPDEST SWAP1 SSTORE PUSH1 0xD DUP2 ADD PUSH2 0xA3A DUP5 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xA47 DUP4 DUP7 DUP7 PUSH2 0x1501 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD SWAP1 PUSH2 0xA55 DUP3 PUSH2 0x1234 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH0 DUP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 TIMESTAMP DUP5 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 PUSH1 0xA DUP6 MSTORE DUP3 SLOAD SWAP4 PUSH1 0x1 PUSH1 0x40 SHL DUP6 LT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x1 DUP6 ADD DUP1 DUP6 SSTORE DUP6 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0xFF SWAP5 PUSH1 0x3 SWAP5 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP3 MLOAD DUP4 SSTORE MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD PUSH1 0x2 DUP3 ADD SSTORE ADD SWAP2 MLOAD AND PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x80 DUP3 ADD MSTORE PUSH22 0x506F6F6C205265546F70757020284561726E696E6729 PUSH1 0x50 SHL PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2121 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC0 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207265546F7075702062616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2514300 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x60 PUSH2 0xBC1 PUSH1 0x4 CALLDATALOAD PUSH2 0x12B3 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 DUP3 DUP5 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x40 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x48 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1129 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x46 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xC97 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0x1175 JUMP JUMPDEST PUSH1 0xC DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x7 DUP4 LT PUSH2 0xCAC DUP2 PUSH2 0x11B4 JUMP JUMPDEST ISZERO PUSH2 0x3EE JUMPI DUP3 PUSH1 0x17 ADD SLOAD PUSH1 0x6 DUP4 ADD SLOAD LT PUSH2 0xECE JUMPI DUP3 ISZERO SWAP2 DUP3 ISZERO PUSH2 0xEC9 JUMPI JUMPDEST DUP5 PUSH0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0xCED PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x11EF JUMP JUMPDEST PUSH2 0xCF6 DUP5 PUSH2 0x10FC JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 SWAP4 SWAP1 SWAP4 SHL SWAP2 SWAP1 SWAP2 SHR PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP5 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH2 0xEAC JUMPI JUMPDEST POP PUSH2 0xE39 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x8 DUP3 ADD SLOAD GT DUP1 PUSH2 0xE1A JUMPI JUMPDEST DUP1 PUSH2 0xE0C JUMPI JUMPDEST PUSH2 0xE00 JUMPI JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5AD JUMPI PUSH1 0xD SWAP3 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD PUSH2 0xDA7 DUP3 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xDB4 DUP2 DUP5 DUP5 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4 PUSH1 0x80 DUP3 ADD MSTORE PUSH4 0x141BDBDB PUSH1 0xE2 SHL PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2121 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC0 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x14 PUSH1 0xB DUP3 ADD SSTORE PUSH2 0xD69 JUMP JUMPDEST POP PUSH1 0xF PUSH1 0xB DUP3 ADD SLOAD EQ PUSH2 0xD64 JUMP JUMPDEST POP PUSH1 0x11 DUP2 ADD SLOAD PUSH3 0x2A300 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5AD JUMPI PUSH1 0xE DUP3 ADD SLOAD GT ISZERO PUSH2 0xD5E JUMP JUMPDEST TIMESTAMP PUSH1 0xE DUP3 ADD SSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x11 DUP2 ADD SLOAD PUSH3 0x2A300 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5AD JUMPI TIMESTAMP LT ISZERO DUP1 PUSH2 0xE9E JUMPI JUMPDEST PUSH2 0xE75 JUMPI JUMPDEST POP PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5AD JUMPI DUP1 PUSH1 0x1 SWAP3 SSTORE GT ISZERO PUSH2 0xE6F JUMPI PUSH1 0xB PUSH1 0x14 SWAP2 ADD SSTORE DUP6 PUSH2 0xE6F JUMP JUMPDEST POP PUSH1 0xF PUSH1 0xB DUP3 ADD SLOAD EQ PUSH2 0xE6A JUMP JUMPDEST PUSH2 0xEC4 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5E7 JUMPI PUSH2 0x5DA DUP2 DUP4 PUSH2 0x126C JUMP JUMPDEST PUSH2 0xD4A JUMP JUMPDEST PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646520796F7572206C6576656C2066697273740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x2A300 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x1144 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x3A SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x16 SLOAD DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH2 0x673 PUSH1 0x20 SWAP2 PUSH2 0x10E4 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x20 SWAP1 PUSH1 0x17 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x16 SLOAD DUP2 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x16 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x15 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x3EE JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x117C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081E5BDD5C881858D8DBDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x11BB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x105D081B585E081B195D995B PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x11F6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDBDB08185B1C9958591E481C1D5C98DA185CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB0F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB0F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB0F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x23E JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x23E JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5AD JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD SWAP2 PUSH1 0x15 SLOAD DUP4 LT ISZERO PUSH2 0x13C5 JUMPI POP PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x6 DUP3 PUSH1 0x17 ADD SLOAD SWAP2 ADD SLOAD LT PUSH2 0x1378 JUMPI ISZERO ISZERO DUP1 PUSH2 0x1371 JUMPI JUMPDEST PUSH2 0x1334 JUMPI PUSH1 0x1 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1307 PUSH1 0x40 DUP3 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x19 DUP2 MSTORE PUSH32 0x456C696769626C6520746F20627579206E65787420706F6F6C00000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1344 PUSH1 0x40 DUP3 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH32 0x4275792070726576696F757320706F6F6C206669727374000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH0 PUSH2 0x12F2 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1389 PUSH1 0x60 DUP3 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x26 DUP2 MSTORE PUSH32 0x596F75206E65656420746F207265616368206120686967686572206C6576656C PUSH1 0x20 DUP3 ADD MSTORE PUSH6 0x8199A5C9CDD PUSH1 0xD2 SHL PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP3 SWAP2 POP POP PUSH0 SWAP2 PUSH2 0x13D8 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x23 DUP2 MSTORE PUSH32 0x596F752061726520616C72656164792061742074686520686967686573742070 PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x1BDBDB PUSH1 0xEA SHL PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1418 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x105D081B585E081C1BDBDB PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x5AD JUMPI JUMP JUMPDEST ISZERO PUSH2 0x145F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x125B9D985B1A59 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1495 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B98DBDC9C9958DD08185B5BDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xB0F JUMPI PUSH2 0x14EA SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x1114 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x15 SLOAD SWAP4 PUSH2 0x1514 PUSH0 SWAP6 DUP5 LT PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x152E PUSH2 0x1520 DUP5 PUSH2 0x10FC JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR CALLVALUE EQ PUSH2 0x148E JUMP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x1547 DUP2 PUSH1 0x5 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 DUP5 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH2 0x155D DUP3 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x14CD JUMP JUMPDEST PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x5AD JUMPI PUSH2 0x1583 PUSH1 0x3 PUSH2 0x162B SWAP3 DUP8 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE DIV PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1114 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x15F1 PUSH1 0x40 MLOAD PUSH2 0x159A DUP2 PUSH2 0x1250 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP12 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP10 DUP2 MSTORE PUSH0 PUSH1 0x80 DUP8 ADD DUP2 DUP2 MSTORE DUP15 DUP3 MSTORE PUSH1 0x2F DUP8 MSTORE DUP5 DUP3 KECCAK256 DUP11 DUP4 MSTORE SWAP1 SWAP7 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP6 ADD SSTORE SWAP1 MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP6 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1610 DUP2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x14CD JUMP JUMPDEST DUP6 PUSH0 MSTORE PUSH1 0x30 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x14CD JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP4 DIV SWAP6 PUSH0 SWAP5 PUSH0 SWAP4 JUMPDEST PUSH1 0x3 DUP6 LT PUSH2 0x1662 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x164F SWAP3 SWAP4 POP PUSH2 0x144B JUMP JUMPDEST DUP1 PUSH2 0x1657 JUMPI POP JUMP JUMPDEST PUSH2 0x1660 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x1908 JUMPI JUMPDEST PUSH2 0x18D4 JUMPI DUP2 DUP4 MSTORE PUSH1 0x2F PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP1 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP6 DUP9 PUSH1 0x1 DUP9 ADD SLOAD PUSH1 0x4 DUP10 ADD DUP1 SLOAD SWAP1 PUSH1 0x27 DUP3 LT PUSH2 0x16B8 JUMPI JUMPDEST POP POP POP PUSH2 0x16AD PUSH1 0x3 SWAP2 PUSH1 0x1 SWAP4 PUSH2 0x12A6 JUMP JUMPDEST SWAP8 ADD SLOAD SWAP5 ADD SWAP4 PUSH2 0x1636 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1863 JUMPI DUP2 SWAP1 SSTORE DUP11 SWAP1 PUSH1 0x18 DUP2 GT PUSH2 0x1877 JUMPI POP POP DUP1 DUP5 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 DUP6 KECCAK256 ADD PUSH2 0x16F0 DUP12 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x5F DUP11 MUL DUP11 ISZERO SWAP1 DUP12 DUP2 DIV PUSH1 0x5F EQ DUP3 OR ISZERO PUSH2 0x1863 JUMPI DUP3 DUP7 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH1 0x64 SWAP1 SWAP2 DIV SWAP1 DUP4 ISZERO PUSH2 0x182F JUMPI DUP2 ISZERO PUSH2 0x17FC JUMPI DUP1 DUP8 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP7 DUP1 PUSH2 0x17E8 JUMPI POP PUSH2 0x174D DUP3 DUP9 SLOAD PUSH2 0x12A6 JUMP JUMPDEST DUP8 SSTORE PUSH1 0x7 PUSH0 SWAP8 ADD PUSH2 0x175F DUP4 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH2 0x177A SWAP1 DUP4 SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2092 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x5 SWAP4 PUSH32 0x4D634C31300B97DAD99B3AF799178230163D88AD306370D063BE9CD992D0BE7F PUSH1 0x80 DUP5 DUP8 PUSH1 0x40 DUP14 SWAP8 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE LOG4 DUP2 DUP12 MUL SWAP2 DUP12 DUP4 DIV EQ OR ISZERO PUSH2 0x5AD JUMPI PUSH2 0x16AD DUP11 PUSH1 0x1 SWAP4 PUSH2 0x17DF PUSH1 0x64 PUSH1 0x3 SWAP6 DIV PUSH2 0x1DAB JUMP JUMPDEST SWAP4 DUP2 SWAP4 POP PUSH2 0x169C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x16995C9BC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x1 SWAP4 PUSH1 0x3 SWAP4 PUSH2 0x16AD SWAP4 SWAP3 PUSH1 0x24 LT PUSH2 0x18B1 JUMPI DUP7 DUP9 MSTORE PUSH1 0x2E PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 SWAP1 DUP9 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 PUSH2 0x18AA DUP4 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x17DF JUMP JUMPDEST DUP7 DUP9 MSTORE PUSH1 0x2E PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 SWAP1 DUP9 MSTORE PUSH1 0x20 MSTORE DUP5 PUSH1 0x40 DUP9 KECCAK256 ADD PUSH2 0x18AA DUP4 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x164F SWAP3 SWAP4 POP PUSH2 0x18E9 DUP3 DUP3 PUSH2 0x144B JUMP JUMPDEST DUP1 PUSH2 0x18F9 JUMPI JUMPDEST DUP5 SWAP4 DUP2 DUP1 DUP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x1902 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH0 PUSH2 0x18EF JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP2 EQ PUSH2 0x166B JUMP JUMPDEST SWAP1 PUSH2 0x1921 PUSH1 0x16 SLOAD DUP4 LT PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x192D PUSH2 0x1520 DUP4 PUSH2 0x10E4 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x36 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x1948 SWAP1 DUP4 SWAP1 PUSH2 0x14CD JUMP JUMPDEST PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x5AD JUMPI PUSH1 0x3 PUSH2 0x196B SWAP2 DUP5 PUSH0 MSTORE PUSH1 0x36 PUSH1 0x20 MSTORE DIV PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1114 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x19D9 PUSH1 0x40 MLOAD PUSH2 0x1982 DUP2 PUSH2 0x1250 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP9 DUP2 MSTORE PUSH0 PUSH1 0x60 DUP7 ADD DUP2 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE DUP10 DUP4 MSTORE PUSH1 0x34 DUP8 MSTORE DUP5 DUP4 KECCAK256 DUP12 DUP5 MSTORE SWAP1 SWAP7 MSTORE SWAP3 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP6 ADD SSTORE SWAP1 MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x19F8 DUP3 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x1 DUP2 EQ PUSH2 0x1B4D JUMPI JUMPDEST DUP3 ISZERO DUP1 ISZERO PUSH2 0x1B42 JUMPI JUMPDEST PUSH2 0x1B36 JUMPI PUSH0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH1 0x3 DUP2 SLOAD LT PUSH0 EQ PUSH2 0x1B36 JUMPI DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5AD JUMPI SSTORE DUP2 PUSH0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH2 0x1A5A DUP5 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x5F DUP4 MUL SWAP2 DUP4 ISZERO SWAP3 DUP5 DUP2 DIV PUSH1 0x5F EQ DUP5 OR ISZERO PUSH2 0x5AD JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x64 SWAP1 DIV DUP2 ISZERO PUSH2 0x182F JUMPI DUP1 ISZERO PUSH2 0x17FC JUMPI DUP3 PUSH0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1AB2 DUP4 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x1AC0 DUP3 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH2 0x1ADB SWAP1 DUP3 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2092 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP2 PUSH1 0x6 PUSH1 0x40 PUSH32 0x4D634C31300B97DAD99B3AF799178230163D88AD306370D063BE9CD992D0BE7F SWAP5 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE LOG4 PUSH1 0x5 DUP3 MUL SWAP2 DUP3 DIV PUSH1 0x5 EQ OR ISZERO PUSH2 0x5AD JUMPI PUSH1 0x64 PUSH2 0x1660 SWAP2 DIV PUSH2 0x1DAB JUMP JUMPDEST POP POP POP PUSH2 0x1660 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP4 EQ PUSH2 0x1A0A JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2C0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB0F JUMPI PUSH1 0x40 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1BAE PUSH1 0x20 DUP4 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x126C JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1D34 JUMPI POP POP POP POP PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP2 PUSH1 0x80 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0xC DUP3 ADD SLOAD PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0xD DUP3 ADD SLOAD PUSH2 0x1A0 DUP3 ADD MSTORE PUSH1 0xE DUP3 ADD SLOAD PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xF DUP3 ADD SLOAD PUSH2 0x1E0 DUP3 ADD MSTORE PUSH1 0x10 DUP3 ADD SLOAD PUSH2 0x200 DUP3 ADD MSTORE PUSH2 0x2A0 PUSH1 0x15 PUSH1 0x11 DUP5 ADD SLOAD SWAP4 PUSH2 0x220 DUP5 ADD SWAP5 DUP6 MSTORE PUSH1 0x12 DUP2 ADD SLOAD PUSH2 0x240 DUP6 ADD MSTORE PUSH1 0x13 DUP2 ADD SLOAD PUSH2 0x260 DUP6 ADD MSTORE PUSH1 0x14 DUP2 ADD SLOAD PUSH2 0x280 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE PUSH1 0x38 SLOAD PUSH0 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 MLOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1CCC DUP5 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x38 SLOAD SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 MLOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP2 PUSH3 0x15180 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x5AD JUMPI PUSH1 0x5 SWAP3 TIMESTAMP GT ISZERO PUSH2 0x1D24 JUMPI JUMPDEST POP LT ISZERO PUSH2 0x1D11 JUMPI JUMPDEST POP PUSH2 0x1A01 JUMP JUMPDEST MLOAD PUSH1 0x38 SLOAD PUSH2 0x1D1E SWAP2 PUSH2 0x1D78 JUMP JUMPDEST PUSH0 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x1D2E SWAP1 DUP7 PUSH2 0x1D78 JUMP JUMPDEST PUSH0 PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x1D47 DUP2 PUSH2 0x1234 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x3 DUP8 ADD SLOAD AND PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x1BBF JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0x1DA2 JUMPI POP POP JUMP JUMPDEST PUSH2 0x1660 SWAP2 PUSH2 0x1E7A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1E41 JUMPI PUSH1 0x1 SLOAD PUSH1 0x80 SWAP3 PUSH2 0x1DD9 SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2092 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1DF2 DUP3 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH32 0x4D634C31300B97DAD99B3AF799178230163D88AD306370D063BE9CD992D0BE7F PUSH1 0x5 SLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE LOG4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x199959481859191C9CC81B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x38 SLOAD DUP3 SUB PUSH2 0x205D JUMPI DUP2 PUSH0 MSTORE PUSH1 0x3B PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND PUSH2 0x2029 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH32 0x7FB70D3B53B50F6798636307BC089A811F848F8C80C93EB14575305275478318 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD SWAP1 PUSH1 0x4 SWAP1 PUSH2 0x1ED7 DUP4 PUSH2 0x1250 JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE ADD SLOAD PUSH1 0x80 DUP3 ADD SWAP1 DUP2 MSTORE DUP4 PUSH0 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP3 PUSH1 0x5 PUSH1 0x40 PUSH0 KECCAK256 SLOAD LT SWAP3 MLOAD EQ SWAP1 DUP2 PUSH2 0x2000 JUMPI JUMPDEST POP DUP2 ISZERO SWAP2 PUSH2 0x1FF8 JUMPI JUMPDEST POP ISZERO PUSH2 0x1FB3 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x3 DUP4 ADD SWAP2 DUP3 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND PUSH2 0x1FAC JUMPI PUSH2 0x100 PUSH1 0x60 SWAP5 DUP5 PUSH1 0x1 PUSH32 0x360CB96D3E85B4FC299DDFA9A572850FC70961C86F0F1703F033143B0E5A82CF SWAP9 TIMESTAMP DUP2 SSTORE ADD SSTORE PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE LOG1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656C696769626C6520666F72207765656B6C7920636F6E7465737400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1F30 JUMP JUMPDEST SWAP1 POP MLOAD DUP3 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x11 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 PUSH3 0x15180 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5AD JUMPI GT ISZERO PUSH0 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x149BDD5B990818DB1BDCD959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081C9BDD5B99 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP2 MSTORE SWAP1 SWAP3 PUSH0 SWAP2 PUSH2 0x20D0 PUSH1 0x64 DUP3 PUSH2 0x126C JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x5EE JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x2117 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x20F7 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x20F0 JUMP INVALID 0x26 0xAD 0xB2 0x2C EOFCREATE 0x82 RETURNDATACOPY CALL PREVRANDAO SWAP4 MCOPY SWAP16 0xBE CALL 0xB6 0xB4 LOG3 LOG2 SWAP14 0xAC 0xBE SLOAD PREVRANDAO 0xD5 SWAP3 SWAP3 STATICCALL 0x26 KECCAK256 RETURN 0xD3 PUSH24 0xA2646970667358221220994561B3ECE918BC689EB0CCBA08 PUSH13 0xE0F72C731D6270E8921782D5DA PUSH1 0x5B LOG0 0x4F PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "102:13729:7:-:0;;;;;;1716:1:3;1821:22;102:13729:7;;;;;;-1:-1:-1;;;;;102:13729:7;;;;;;;;;;2222:9:8;102:13729:7;;2254:9:8;2211:515;;;102:13729:7;2286:9:8;102:13729:7;2211:515:8;;102:13729:7;2318:10:8;2211:515;;;102:13729:7;2351:10:8;2211:515;;;102:13729:7;2384:10:8;2211:515;;;102:13729:7;2417:10:8;2211:515;;;102:13729:7;2450:11:8;2211:515;;;102:13729:7;2484:11:8;2211:515;;;102:13729:7;2518:11:8;2211:515;;;102:13729:7;2552:12:8;2211:515;;;102:13729:7;2587:12:8;2211:515;;;102:13729:7;2622:12:8;2211:515;;;102:13729:7;2657:13:8;2211:515;;;102:13729:7;2693:13:8;2211:515;;;102:13729:7;2211:515:8;102:13729:7;2211:515:8;;102:13729:7;;2211:515:8;102:13729:7;;;-1:-1:-1;102:13729:7;2211:515:8;1821:22:3;102:13729:7;2211:515:8;1821:22:3;102:13729:7;;1821:22:3;102:13729:7;2211:515:8;102:13729:7;;;;;;:::i;:::-;6877:5:8;102:13729:7;;6884:6:8;2211:515;6876:64;;102:13729:7;6892:7:8;102:13729:7;6876:64:8;;102:13729:7;6901:7:8;2211:515;6876:64;;102:13729:7;6910:8:8;2211:515;6876:64;;102:13729:7;6920:8:8;2211:515;6876:64;;102:13729:7;6930:9:8;2211:515;6876:64;;102:13729:7;6876:64:8;102:13729:7;6876:64:8;;102:13729:7;;6876:64:8;102:13729:7;;;;;6876:64:8;1821:22:3;102:13729:7;2211:515:8;1821:22:3;102:13729:7;;1821:22:3;102:13729:7;6876:64:8;102:13729:7;;;;;;:::i;:::-;2318:10:8;102:13729:7;;2351:10:8;2211:515;6982:70;;102:13729:7;2384:10:8;102:13729:7;6982:70:8;;102:13729:7;2417:10:8;2211:515;6982:70;;102:13729:7;2450:11:8;2211:515;6982:70;;102:13729:7;2484:11:8;2211:515;6982:70;;102:13729:7;2518:11:8;2211:515;6982:70;;102:13729:7;2552:12:8;2211:515;6982:70;;102:13729:7;6982:70:8;102:13729:7;6982:70:8;;102:13729:7;;6982:70:8;102:13729:7;;;;;6982:70:8;1821:22:3;102:13729:7;2211:515:8;1821:22:3;102:13729:7;;1821:22:3;102:13729:7;6982:70:8;102:13729:7;;;;;;:::i;:::-;7093:1:8;102:13729:7;;;2211:515:8;7092:24;;102:13729:7;6876:64:8;102:13729:7;7092:24:8;;102:13729:7;7102:1:8;2211:515;7092:24;;102:13729:7;7105:2:8;2211:515;7092:24;;102:13729:7;2211:515:8;;7092:24;;102:13729:7;2211:515:8;;7092:24;;102:13729:7;1821:22:3;102:13729:7;6876:64:8;102:13729:7;;;;;;:::i;:::-;7163:1:8;102:13729:7;;;2211:515:8;7162:25;;102:13729:7;7169:1:8;102:13729:7;7162:25:8;;102:13729:7;6876:64:8;2211:515;7162:25;;102:13729:7;6982:70:8;2211:515;7162:25;;102:13729:7;7102:1:8;2211:515;7162:25;;102:13729:7;7181:2:8;2211:515;7162:25;;102:13729:7;7105:2:8;2211:515;7162:25;;102:13729:7;1821:22:3;102:13729:7;6982:70:8;102:13729:7;;;;;;:::i;:::-;1821:22:3;102:13729:7;;1716:1:3;2211:515:8;7232:23;;102:13729:7;1716:1:3;102:13729:7;7232:23:8;;102:13729:7;1716:1:3;2211:515:8;7232:23;;102:13729:7;1716:1:3;2211:515:8;7232:23;;102:13729:7;1716:1:3;2211:515:8;7232:23;;102:13729:7;1716:1:3;2211:515:8;7232:23;;102:13729:7;1716:1:3;2211:515:8;7232:23;;102:13729:7;1821:22:3;102:13729:7;6982:70:8;102:13729:7;;;;1821:22:3;8785:1:8;102:13729:7;1821:22:3;8830:1:8;102:13729:7;1821:22:3;8872:1:8;102:13729:7;1716:1:3;10234::8;102:13729:7;1821:22:3;102:13729:7;;1821:22:3;10321:1:8;102:13729:7;1716:1:3;11540::8;102:13729:7;1821:22:3;11582:1:8;102:13729:7;1821:22:3;11621:1:8;102:13729:7;;;;;;;;;;;1716:1:3;102:13729:7;2211:515:8;102:13729:7;;;;;;;;7232:23:8;102:13729:7;;;;;;1716:1:3;102:13729:7;2211:515:8;102:13729:7;;;;;;;;7162:25:8;102:13729:7;;;;;;1716:1:3;102:13729:7;2211:515:8;102:13729:7;;;;;;;;7092:24:8;102:13729:7;;;;;;;;-1:-1:-1;;;;;102:13729:7;;;;;2211:515:8;102:13729:7;;;;1716:1:3;102:13729:7;;;;6982:70:8;1821:22:3;102:13729:7;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;102:13729:7;;;;;2211:515:8;102:13729:7;;;;1716:1:3;102:13729:7;;;;6876:64:8;1821:22:3;102:13729:7;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;102:13729:7;;;;;2211:515:8;102:13729:7;;;;1716:1:3;102:13729:7;;;;2211:515:8;1821:22:3;102:13729:7;;;;;;;:::i;:::-;;;;;;;;1821:22:3;102:13729:7;;;;;1821:22:3;102:13729:7;;;;;;;;;;;;-1:-1:-1;;;;;102:13729:7;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;102:13729:7;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_bool_fromMemory": {
									"entryPoint": 4750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint256t_uint256": {
									"entryPoint": 4447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_encode_address_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"array_push_from_uint256_to_array_uint256_dyn_storage_ptr": {
									"entryPoint": 5325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"checked_add_uint256": {
									"entryPoint": 4774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 5195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_struct_to_storage_from_struct_UserPool_to_struct_UserPool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"external_fun_MONTHLY_ROYALTY_LEVEL": {
									"entryPoint": 4393,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_TOP_ROYALTY_LEVEL": {
									"entryPoint": 4420,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 4716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_21810": {
									"entryPoint": 4660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_21850": {
									"entryPoint": 4688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_canBuyNextPool": {
									"entryPoint": 4787,
									"id": 783,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"fun_placeInBooster": {
									"entryPoint": 6419,
									"id": 1899,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_placeInPool": {
									"entryPoint": 5377,
									"id": 1338,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_safeTransfer": {
									"entryPoint": 8338,
									"id": 277,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_sendToCreator": {
									"entryPoint": 7595,
									"id": 2771,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_tryWeeklyContestQualify": {
									"entryPoint": 7544,
									"id": 2982,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_weeklyContestQualifier": {
									"entryPoint": 7802,
									"id": 3100,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"require_helper_stringliteral_4f6d": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_909f": {
									"entryPoint": 4591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_c84d": {
									"entryPoint": 5208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_d2be": {
									"entryPoint": 4469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_f230": {
									"entryPoint": 5137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_f313": {
									"entryPoint": 5262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"storage_array_index_access_array_uint256_dyn": {
									"entryPoint": 4324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"storage_array_index_access_uint256_dyn": {
									"entryPoint": 4372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"storage_array_index_access_uint256_dyn_": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a8146110ca575080630676d0d6146110a05780632132d204146110745780632350268f1461104b57806323fd338e14610c175780632a8915341461102e5780632ae0ee0d14610f8a5780632f48ab7d146110065780633080b5bc14610fe957806331bb6a3014610fce57806332bc298c14610fb157806332fcd96614610f8f578063375b43b414610f8a57806339ab360314610f305780633a5084b314610f135780634060160a14610c6357806345cb537c14610c395780634b8cbf9b14610c1c57806358c7d35214610c175780635b62d1d514610bfa57806367d52d4d14610ba3578063705fee2d14610b8557806376f5f70014610b685780637848f0a3146109aa57806378f6ad6d1461098d5780637cdc65f21461096557806389043ece146109365780638e222e2414610705578063956a3228146106d95780639b40ab97146106bc578063a59d17d11461069f578063a5e52b9914610682578063ae4708dc1461064a578063bc1fa7c01461041f578063bff1f9e114610402578063c216212a14610394578063c8df290814610370578063c9ed070814610353578063ca8e912114610336578063d0a2fd791461030a578063d2f0490d146102ef578063e898fc38146102d2578063e9e34a16146102aa578063ebe0ff1514610287578063ec597e6f1461026a578063f5d74d93146102425763fddc806f14610221575f80fd5b3461023e575f36600319011261023e576020603954604051908152f35b5f80fd5b3461023e575f36600319011261023e576004546040516001600160a01b039091168152602090f35b3461023e575f36600319011261023e576020600554604051908152f35b3461023e575f36600319011261023e576020604051683635c9adc5dea000008152f35b3461023e575f36600319011261023e576003546040516001600160a01b039091168152602090f35b3461023e575f36600319011261023e576020604054604051908152f35b3461023e575f36600319011261023e57602060405160058152f35b3461023e57602036600319011261023e57600435600881101561023e57602090601e0154604051908152f35b3461023e575f36600319011261023e576020603854604051908152f35b3461023e575f36600319011261023e576020603f54604051908152f35b3461023e575f36600319011261023e57602060405169021e19e0c9bab24000008152f35b3461023e57602036600319011261023e57600435600d5481101561023e57600d548110156103ee57600d5f527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b3461023e575f36600319011261023e576020600654604051908152f35b3461023e57602036600319011261023e57600435805f52600f60205260405f2061045360018060a01b038254163314611175565b600f81019081549160088310610468816111b4565b156103ee5782601e015483602601549060068401541015908161063b575b50156105fe57826105f9575b835f52603760205260405f20835f526020526104b560ff60405f205416156111ef565b6104be836110e4565b90546001546040516323b872dd60e01b815233600482015230602482015260039390931b9190911c60448301819052939190602090829060649082905f906001600160a01b03165af180156105ee576105c1575b508154600181018091116105ad5760109255845f52603760205260405f20845f5260205260405f20600160ff19825416179055016105518282546112a6565b905561055e818484611913565b600182018092116105ad5760405191825260208201526080604082015260076080820152662137b7b9ba32b960c91b60a08201524260608201525f5160206121215f395f51905f5260c03392a3005b634e487b7160e01b5f52601160045260245ffd5b6105e29060203d6020116105e7575b6105da818361126c565b81019061128e565b610512565b503d6105d0565b6040513d5f823e3d90fd5b610492565b60405162461bcd60e51b8152602060048201526015602482015274155c19dc9859194814db1bdd08185b9908141bdbdb605a1b6044820152606490fd5b9050600c830154101585610486565b3461023e57602036600319011261023e5760043560155481101561023e576106736020916110fc565b90549060031b1c604051908152f35b3461023e575f36600319011261023e5760206040516283d6008152f35b3461023e575f36600319011261023e576020604154604051908152f35b3461023e575f36600319011261023e576020604754604051908152f35b3461023e57602036600319011261023e57600435600881101561023e5760209060260154604051908152f35b3461023e57604036600319011261023e5760043563ffffffff811680910361023e57602435815f52600f60205260405f2061074a60018060a01b038254163314611175565b600c81019061075c6007835410611411565b60018301928381116105ad576015548410156109005761077b846110fc565b90549060031b1c92815f52602e60205260405f20865f5260205260405f2080548581106108bb57875f52603360205260405f20875f5260205260ff60405f20541661087657856107ca9161144b565b9055805492600184018094116105ad57600293600d9255016107ed8482546112a6565b9055845f52603360205260405f20845f5260205260405f20600160ff1982541617905561081b838686611501565b018092116105ad576040519182526020820152608060408201526016608082015275506f6f6c205570677261646520284561726e696e672960501b60a08201524260608201525f5160206121215f395f51905f5260c03392a3005b60405162461bcd60e51b815260206004820152601b60248201527f416c726561647920707572636861736564206e65787420706f6f6c00000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f756768206e65787420706f6f6c2062616c616e6365000000006044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d139bc81a1a59da195c881c1bdbdb60921b6044820152606490fd5b3461023e576109443661115f565b905f52600b60205260405f20905f52602052602060405f2054604051908152f35b3461023e575f36600319011261023e576002546040516001600160a01b039091168152602090f35b3461023e575f36600319011261023e576020600954604051908152f35b3461023e576109b83661115f565b815f52600f60205260405f206109d860018060a01b038254163314611175565b6109e86007600c83015410611411565b6109f1826110fc565b90549060031b1c90825f52602e60205260405f20845f52602052600160405f200190815491838310610b2357610a298460019461144b565b9055600d8101610a3a8482546112a6565b9055610a47838686611501565b0160405190610a5582611234565b82825260208201905f825260408301924284526060810193600a8552825493600160401b851015610b0f57600185018085558510156103ee5760ff946003945f5260205f209060021b01925183555160018301555160028201550191511660ff198254161790556040519182526020820152608060408201526016608082015275506f6f6c205265546f70757020284561726e696e672960501b60a08201524260608201525f5160206121215f395f51905f5260c03392a3005b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152601a60248201527f4e6f7420656e6f756768207265546f7075702062616c616e63650000000000006044820152606490fd5b3461023e575f36600319011261023e57602060405162093a808152f35b3461023e575f36600319011261023e57602060405163025143008152f35b3461023e57602036600319011261023e576060610bc16004356112b3565b91906020604051938492151583526040828401528051918291826040860152018484015e5f828201840152601f01601f19168101030190f35b3461023e575f36600319011261023e576020604854604051908152f35b611129565b3461023e575f36600319011261023e576020604654604051908152f35b3461023e57602036600319011261023e576004355f52600a602052602060405f2054604051908152f35b3461023e57602036600319011261023e57600435805f52600f60205260405f20610c9760018060a01b038254163314611175565b600c81019081549160078310610cac816111b4565b156103ee578260170154600683015410610ece578215918215610ec9575b845f52603360205260405f20845f52602052610ced60ff60405f205416156111ef565b610cf6846110fc565b90546001546040516323b872dd60e01b815233600482015230602482015260039390931b9190911c60448301819052949190602090829060649082905f906001600160a01b03165af180156105ee57610eac575b50610e39575b600160088201541180610e1a575b80610e0c575b610e00575b8154600181018091116105ad57600d9255845f52603360205260405f20845f5260205260405f20600160ff1982541617905501610da78282546112a6565b9055610db4818484611501565b600182018092116105ad576040519182526020820152608060408201526004608082015263141bdbdb60e21b60a08201524260608201525f5160206121215f395f51905f5260c03392a3005b6014600b820155610d69565b50600f600b82015414610d64565b5060118101546202a30081018091116105ad57600e8201541115610d5e565b42600e82015560048101545f52600f60205260405f2060118101546202a30081018091116105ad5742101580610e9e575b610e75575b50610d50565b600881018054600181018091116105ad5780600192551115610e6f57600b601491015585610e6f565b50600f600b82015414610e6a565b610ec49060203d6020116105e7576105da818361126c565b610d4a565b610cca565b60405162461bcd60e51b815260206004820152601860248201527f5570677261646520796f7572206c6576656c20666972737400000000000000006044820152606490fd5b3461023e575f36600319011261023e5760206040516202a3008152f35b3461023e57602036600319011261023e5760043560075481101561023e576007548110156103ee5760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b611144565b3461023e575f36600319011261023e576020604051670de0b6b3a76400008152f35b3461023e575f36600319011261023e576020604051620151808152f35b3461023e575f36600319011261023e57602060405160028152f35b3461023e575f36600319011261023e576020603a54604051908152f35b3461023e575f36600319011261023e576001546040516001600160a01b039091168152602090f35b3461023e575f36600319011261023e57602060405162278d008152f35b3461023e57602036600319011261023e5760043560165481101561023e576106736020916110e4565b3461023e57602036600319011261023e57600435600781101561023e5760209060170154604051908152f35b3461023e57602036600319011261023e576004355f52600c602052602060405f2054604051908152f35b3461023e575f36600319011261023e578061271060209252f35b6016548110156103ee5760165f5260205f2001905f90565b6015548110156103ee5760155f5260205f2001905f90565b80548210156103ee575f5260205f2001905f90565b3461023e575f36600319011261023e576020604051600a8152f35b3461023e575f36600319011261023e576020604051600f8152f35b604090600319011261023e576004359060243590565b1561117c57565b60405162461bcd60e51b815260206004820152601060248201526f139bdd081e5bdd5c881858d8dbdd5b9d60821b6044820152606490fd5b156111bb57565b60405162461bcd60e51b815260206004820152600c60248201526b105d081b585e081b195d995b60a21b6044820152606490fd5b156111f657565b60405162461bcd60e51b8152602060048201526016602482015275141bdbdb08185b1c9958591e481c1d5c98da185cd95960521b6044820152606490fd5b6080810190811067ffffffffffffffff821117610b0f57604052565b60a0810190811067ffffffffffffffff821117610b0f57604052565b90601f8019910116810190811067ffffffffffffffff821117610b0f57604052565b9081602091031261023e5751801515810361023e5790565b919082018092116105ad57565b6060905f52600f60205260405f20600c810154916015548310156113c5575060078210156103ee57600682601701549101541061137857151580611371575b6113345760019060405161130760408261126c565b601981527f456c696769626c6520746f20627579206e65787420706f6f6c00000000000000602082015290565b5f9060405161134460408261126c565b601781527f4275792070726576696f757320706f6f6c206669727374000000000000000000602082015290565b505f6112f2565b505f9060405161138960608261126c565b602681527f596f75206e65656420746f207265616368206120686967686572206c6576656c60208201526508199a5c9cdd60d21b604082015290565b929150505f916113d8604051918261126c565b602381527f596f752061726520616c726561647920617420746865206869676865737420706020820152621bdbdb60ea1b604082015290565b1561141857565b60405162461bcd60e51b815260206004820152600b60248201526a105d081b585e081c1bdbdb60aa1b6044820152606490fd5b919082039182116105ad57565b1561145f57565b60405162461bcd60e51b8152602060048201526007602482015266125b9d985b1a5960ca1b6044820152606490fd5b1561149557565b60405162461bcd60e51b815260206004820152601060248201526f125b98dbdc9c9958dd08185b5bdd5b9d60821b6044820152606490fd5b8054600160401b811015610b0f576114ea91600182018155611114565b819291549060031b91821b915f19901b1916179055565b909291601554936115145f958410611458565b61152e611520846110fc565b90549060031b1c341461148e565b825f52603260205260405f2054611547816005546112a6565b90845f52603260205261155d8260405f206114cd565b5f1981019081116105ad57611583600361162b92875f5260326020520460405f20611114565b90549060031b1c916115f160405161159a81611250565b828152602080820187815260408084018b8152606085018981525f608087018181528e8252602f87528482208a83529096529290922094518555915160018501559051600284015551600383015551600490910155565b855f52603160205260405f20845f526020526116108160405f206114cd565b855f52603060205260405f20835f5260205260405f206114cd565b9060038304955f945f935b60038510611662575b505050505061164f92935061144b565b806116575750565b61166090611dab565b565b80158015611908575b6118d457818352602f60205260408320908352602052604082209588600188015460048901805490602782106116b8575b5050506116ad6003916001936112a6565b970154940193611636565b9091925060018201809211611863578190558a90601881116118775750508084526010602052600760408520016116f08b82546112a6565b9055605f8a028a15908b8104605f1482171561186357828652600f60205260408620546001600160a01b031692606490910490831561182f5781156117fc5780875260106020526040872096806117e8575061174d8288546112a6565b875560075f970161175f8382546112a6565b905560015461177a90839086906001600160a01b0316612092565b604051918252600160208301526005937f4d634c31300b97dad99b3af799178230163d88ad306370d063be9cd992d0be7f6080848760408d970152426060820152a4818b02918b83041417156105ad576116ad8a6001936117df606460039504611dab565b9381935061169c565b634e487b7160e01b81526021600452602490fd5b60405162461bcd60e51b815260206004820152600b60248201526a16995c9bc8185b5bdd5b9d60aa1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103ab9b2b960a11b6044820152606490fd5b634e487b7160e01b86526011600452602486fd5b6001936003936116ad93926024106118b157868852602e60205260408820908852602052604087206118aa8382546112a6565b90556117df565b868852602e602052604088209088526020528460408820016118aa8382546112a6565b505050505061164f9293506118e9828261144b565b806118f9575b849381808061163f565b61190290611dab565b5f6118ef565b50600554811461166b565b906119216016548310611458565b61192d611520836110e4565b5f8281526036602052604090208054906119489083906114cd565b5f1981019081116105ad57600361196b91845f5260366020520460405f20611114565b90549060031b1c916119d960405161198281611250565b838152602080820184815260408084018881525f606086018181524260808801908152898352603487528483208b845290965292902094518555915160018501559051600284015551600383015551600490910155565b805f52603560205260405f20835f526020526119f88260405f206114cd565b60018114611b4d575b82158015611b42575b611b36575f52603460205260405f20825f52602052600360405f200160038154105f14611b3657805490600182018092116105ad5755815f526010602052600860405f2001611a5a8482546112a6565b9055605f830291831592848104605f148417156105ad575f828152600f60205260409020546001600160a01b03169060649004811561182f5780156117fc57825f526010602052600860405f20611ab28382546112a6565b815501611ac08282546112a6565b9055600154611adb90829084906001600160a01b0316612092565b60405190815260016020820152608081600660407f4d634c31300b97dad99b3af799178230163d88ad306370d063be9cd992d0be7f940152426060820152a46005820291820460051417156105ad5760646116609104611dab565b50505061166090611dab565b506005548314611a0a565b815f52600f60205260405f20604051906102c0820182811067ffffffffffffffff821117610b0f5760405280546001600160a01b0316825260018101805467ffffffffffffffff8111610b0f5760405191611bae60208360051b018461126c565b81835260208301905f5260205f205f915b838310611d3457505050506020830152600281015460408301526003810154606083015260048101549160808101928352600582015460a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a820154610140820152600b820154610160820152600c820154610180820152600d8201546101a0820152600e8201546101c0820152600f8201546101e082015260108201546102008201526102a06015601184015493610220840194855260128101546102408501526013810154610260850152601481015461028085015201549101526038545f52603e60205260405f2082515f52602052611ccc8460405f206114cd565b60385490815f52603e60205260405f2083515f5260205260405f20549051916201518083018093116105ad57600592421115611d24575b501015611d11575b50611a01565b51603854611d1e91611d78565b5f611d0b565b611d2e9086611d78565b5f611d03565b60046020600192604051611d4781611234565b8554815284860154838201526002860154604082015260ff6003870154166060820152815201920192019190611bbf565b90805f52603d60205260405f20825f5260205260ff600360405f20015460081c1615611da2575050565b61166091611e7a565b6002546001600160a01b0316908115611e4157600154608092611dd9918391906001600160a01b0316612092565b6005545f52601060205260405f20611df28282546112a6565b905560018060a01b03600254167f4d634c31300b97dad99b3af799178230163d88ad306370d063be9cd992d0be7f6005549384936040519081525f60208201525f6040820152426060820152a4565b60405162461bcd60e51b8152602060048201526011602482015270199959481859191c9cc81b9bdd081cd95d607a1b6044820152606490fd5b603854820361205d57815f52603b60205260ff600860405f20015416612029575f8181527f7fb70d3b53b50f6798636307bc089a811f848f8c80c93eb14575305275478318602052604090819020905190600490611ed783611250565b80548352600181015460208401526002810154604084015260038101546060840152015460808201908152835f52603e60205260405f20835f5260205282600560405f2054109251149081612000575b50811591611ff8575b5015611fb357815f52603d60205260405f20815f5260205260405f2091600383019182549260ff8460081c16611fac576101006060948460017f360cb96d3e85b4fc299ddfa9a572850fc70961c86f0f1703f033143b0e5a82cf98428155015561ff0019161790556040519182526020820152426040820152a1565b5050505050565b60405162461bcd60e51b815260206004820152601f60248201527f4e6f7420656c696769626c6520666f72207765656b6c7920636f6e74657374006044820152606490fd5b90505f611f30565b905051825f52600f602052601160405f200154906201518082018092116105ad5711155f611f27565b60405162461bcd60e51b815260206004820152600c60248201526b149bdd5b990818db1bdcd95960a21b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081c9bdd5b99609a1b6044820152606490fd5b60405163a9059cbb60e01b60208281019182526001600160a01b03909416602483015260448083019590955293815290925f916120d060648261126c565b519082855af1156105ee575f513d61211757506001600160a01b0381163b155b6120f75750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b600114156120f056fe26adb22cec823ef144935e9fbef1b6b4a3a29dacbe5444d59292fa2620f3d377a2646970667358221220994561b3ece918bc689eb0ccba086ce0f72c731d6270e8921782d5da605ba04f64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0x10CA JUMPI POP DUP1 PUSH4 0x676D0D6 EQ PUSH2 0x10A0 JUMPI DUP1 PUSH4 0x2132D204 EQ PUSH2 0x1074 JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0x104B JUMPI DUP1 PUSH4 0x23FD338E EQ PUSH2 0xC17 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0x102E JUMPI DUP1 PUSH4 0x2AE0EE0D EQ PUSH2 0xF8A JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x1006 JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0xFE9 JUMPI DUP1 PUSH4 0x31BB6A30 EQ PUSH2 0xFCE JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0xFB1 JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0xF8F JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0xF8A JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0xF30 JUMPI DUP1 PUSH4 0x3A5084B3 EQ PUSH2 0xF13 JUMPI DUP1 PUSH4 0x4060160A EQ PUSH2 0xC63 JUMPI DUP1 PUSH4 0x45CB537C EQ PUSH2 0xC39 JUMPI DUP1 PUSH4 0x4B8CBF9B EQ PUSH2 0xC1C JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0xC17 JUMPI DUP1 PUSH4 0x5B62D1D5 EQ PUSH2 0xBFA JUMPI DUP1 PUSH4 0x67D52D4D EQ PUSH2 0xBA3 JUMPI DUP1 PUSH4 0x705FEE2D EQ PUSH2 0xB85 JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0xB68 JUMPI DUP1 PUSH4 0x7848F0A3 EQ PUSH2 0x9AA JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x98D JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x965 JUMPI DUP1 PUSH4 0x89043ECE EQ PUSH2 0x936 JUMPI DUP1 PUSH4 0x8E222E24 EQ PUSH2 0x705 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0x9B40AB97 EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x69F JUMPI DUP1 PUSH4 0xA5E52B99 EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xBC1FA7C0 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xD2F0490D EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x242 JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x221 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x39 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1E ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xD SLOAD DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0xD SLOAD DUP2 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0xD PUSH0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x453 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0x1175 JUMP JUMPDEST PUSH1 0xF DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x8 DUP4 LT PUSH2 0x468 DUP2 PUSH2 0x11B4 JUMP JUMPDEST ISZERO PUSH2 0x3EE JUMPI DUP3 PUSH1 0x1E ADD SLOAD DUP4 PUSH1 0x26 ADD SLOAD SWAP1 PUSH1 0x6 DUP5 ADD SLOAD LT ISZERO SWAP1 DUP2 PUSH2 0x63B JUMPI JUMPDEST POP ISZERO PUSH2 0x5FE JUMPI DUP3 PUSH2 0x5F9 JUMPI JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x37 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x4B5 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x4BE DUP4 PUSH2 0x10E4 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 SWAP4 SWAP1 SWAP4 SHL SWAP2 SWAP1 SWAP2 SHR PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH2 0x5C1 JUMPI JUMPDEST POP DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5AD JUMPI PUSH1 0x10 SWAP3 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x37 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD PUSH2 0x551 DUP3 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x55E DUP2 DUP5 DUP5 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x80 DUP3 ADD MSTORE PUSH7 0x2137B7B9BA32B9 PUSH1 0xC9 SHL PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2121 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC0 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x5E2 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5E7 JUMPI JUMPDEST PUSH2 0x5DA DUP2 DUP4 PUSH2 0x126C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH2 0x512 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x155C19DC9859194814DB1BDD08185B9908141BDBDB PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0xC DUP4 ADD SLOAD LT ISZERO DUP6 PUSH2 0x486 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH2 0x673 PUSH1 0x20 SWAP2 PUSH2 0x10FC JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x83D600 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x41 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x47 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x20 SWAP1 PUSH1 0x26 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x23E JUMPI PUSH1 0x24 CALLDATALOAD DUP2 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x74A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0x1175 JUMP JUMPDEST PUSH1 0xC DUP2 ADD SWAP1 PUSH2 0x75C PUSH1 0x7 DUP4 SLOAD LT PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP3 DUP4 DUP2 GT PUSH2 0x5AD JUMPI PUSH1 0x15 SLOAD DUP5 LT ISZERO PUSH2 0x900 JUMPI PUSH2 0x77B DUP5 PUSH2 0x10FC JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP2 PUSH0 MSTORE PUSH1 0x2E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP7 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP6 DUP2 LT PUSH2 0x8BB JUMPI DUP8 PUSH0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP8 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0x876 JUMPI DUP6 PUSH2 0x7CA SWAP2 PUSH2 0x144B JUMP JUMPDEST SWAP1 SSTORE DUP1 SLOAD SWAP3 PUSH1 0x1 DUP5 ADD DUP1 SWAP5 GT PUSH2 0x5AD JUMPI PUSH1 0x2 SWAP4 PUSH1 0xD SWAP3 SSTORE ADD PUSH2 0x7ED DUP5 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x81B DUP4 DUP7 DUP7 PUSH2 0x1501 JUMP JUMPDEST ADD DUP1 SWAP3 GT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x80 DUP3 ADD MSTORE PUSH22 0x506F6F6C205570677261646520284561726E696E6729 PUSH1 0x50 SHL PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2121 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC0 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920707572636861736564206E65787420706F6F6C0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768206E65787420706F6F6C2062616C616E636500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC81A1A59DA195C881C1BDBDB PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH2 0x944 CALLDATASIZE PUSH2 0x115F JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH2 0x9B8 CALLDATASIZE PUSH2 0x115F JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x9D8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0x1175 JUMP JUMPDEST PUSH2 0x9E8 PUSH1 0x7 PUSH1 0xC DUP4 ADD SLOAD LT PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x9F1 DUP3 PUSH2 0x10FC JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x2E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SWAP1 DUP2 SLOAD SWAP2 DUP4 DUP4 LT PUSH2 0xB23 JUMPI PUSH2 0xA29 DUP5 PUSH1 0x1 SWAP5 PUSH2 0x144B JUMP JUMPDEST SWAP1 SSTORE PUSH1 0xD DUP2 ADD PUSH2 0xA3A DUP5 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xA47 DUP4 DUP7 DUP7 PUSH2 0x1501 JUMP JUMPDEST ADD PUSH1 0x40 MLOAD SWAP1 PUSH2 0xA55 DUP3 PUSH2 0x1234 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH0 DUP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 TIMESTAMP DUP5 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 PUSH1 0xA DUP6 MSTORE DUP3 SLOAD SWAP4 PUSH1 0x1 PUSH1 0x40 SHL DUP6 LT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x1 DUP6 ADD DUP1 DUP6 SSTORE DUP6 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0xFF SWAP5 PUSH1 0x3 SWAP5 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP3 MLOAD DUP4 SSTORE MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD PUSH1 0x2 DUP3 ADD SSTORE ADD SWAP2 MLOAD AND PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x80 DUP3 ADD MSTORE PUSH22 0x506F6F6C205265546F70757020284561726E696E6729 PUSH1 0x50 SHL PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2121 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC0 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207265546F7075702062616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2514300 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x60 PUSH2 0xBC1 PUSH1 0x4 CALLDATALOAD PUSH2 0x12B3 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 DUP3 DUP5 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x40 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x48 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1129 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x46 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xC97 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0x1175 JUMP JUMPDEST PUSH1 0xC DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x7 DUP4 LT PUSH2 0xCAC DUP2 PUSH2 0x11B4 JUMP JUMPDEST ISZERO PUSH2 0x3EE JUMPI DUP3 PUSH1 0x17 ADD SLOAD PUSH1 0x6 DUP4 ADD SLOAD LT PUSH2 0xECE JUMPI DUP3 ISZERO SWAP2 DUP3 ISZERO PUSH2 0xEC9 JUMPI JUMPDEST DUP5 PUSH0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0xCED PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x11EF JUMP JUMPDEST PUSH2 0xCF6 DUP5 PUSH2 0x10FC JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 SWAP4 SWAP1 SWAP4 SHL SWAP2 SWAP1 SWAP2 SHR PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP5 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH2 0xEAC JUMPI JUMPDEST POP PUSH2 0xE39 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x8 DUP3 ADD SLOAD GT DUP1 PUSH2 0xE1A JUMPI JUMPDEST DUP1 PUSH2 0xE0C JUMPI JUMPDEST PUSH2 0xE00 JUMPI JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5AD JUMPI PUSH1 0xD SWAP3 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD PUSH2 0xDA7 DUP3 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xDB4 DUP2 DUP5 DUP5 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4 PUSH1 0x80 DUP3 ADD MSTORE PUSH4 0x141BDBDB PUSH1 0xE2 SHL PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x2121 PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xC0 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x14 PUSH1 0xB DUP3 ADD SSTORE PUSH2 0xD69 JUMP JUMPDEST POP PUSH1 0xF PUSH1 0xB DUP3 ADD SLOAD EQ PUSH2 0xD64 JUMP JUMPDEST POP PUSH1 0x11 DUP2 ADD SLOAD PUSH3 0x2A300 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5AD JUMPI PUSH1 0xE DUP3 ADD SLOAD GT ISZERO PUSH2 0xD5E JUMP JUMPDEST TIMESTAMP PUSH1 0xE DUP3 ADD SSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x11 DUP2 ADD SLOAD PUSH3 0x2A300 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5AD JUMPI TIMESTAMP LT ISZERO DUP1 PUSH2 0xE9E JUMPI JUMPDEST PUSH2 0xE75 JUMPI JUMPDEST POP PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5AD JUMPI DUP1 PUSH1 0x1 SWAP3 SSTORE GT ISZERO PUSH2 0xE6F JUMPI PUSH1 0xB PUSH1 0x14 SWAP2 ADD SSTORE DUP6 PUSH2 0xE6F JUMP JUMPDEST POP PUSH1 0xF PUSH1 0xB DUP3 ADD SLOAD EQ PUSH2 0xE6A JUMP JUMPDEST PUSH2 0xEC4 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5E7 JUMPI PUSH2 0x5DA DUP2 DUP4 PUSH2 0x126C JUMP JUMPDEST PUSH2 0xD4A JUMP JUMPDEST PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646520796F7572206C6576656C2066697273740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x2A300 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x1144 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x3A SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x16 SLOAD DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH2 0x673 PUSH1 0x20 SWAP2 PUSH2 0x10E4 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x23E JUMPI PUSH1 0x20 SWAP1 PUSH1 0x17 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x16 SLOAD DUP2 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x16 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x15 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x3EE JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23E JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x23E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x117C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081E5BDD5C881858D8DBDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x11BB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x105D081B585E081B195D995B PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x11F6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDBDB08185B1C9958591E481C1D5C98DA185CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB0F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB0F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB0F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x23E JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x23E JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5AD JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xC DUP2 ADD SLOAD SWAP2 PUSH1 0x15 SLOAD DUP4 LT ISZERO PUSH2 0x13C5 JUMPI POP PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x6 DUP3 PUSH1 0x17 ADD SLOAD SWAP2 ADD SLOAD LT PUSH2 0x1378 JUMPI ISZERO ISZERO DUP1 PUSH2 0x1371 JUMPI JUMPDEST PUSH2 0x1334 JUMPI PUSH1 0x1 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1307 PUSH1 0x40 DUP3 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x19 DUP2 MSTORE PUSH32 0x456C696769626C6520746F20627579206E65787420706F6F6C00000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1344 PUSH1 0x40 DUP3 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH32 0x4275792070726576696F757320706F6F6C206669727374000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP PUSH0 PUSH2 0x12F2 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1389 PUSH1 0x60 DUP3 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x26 DUP2 MSTORE PUSH32 0x596F75206E65656420746F207265616368206120686967686572206C6576656C PUSH1 0x20 DUP3 ADD MSTORE PUSH6 0x8199A5C9CDD PUSH1 0xD2 SHL PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP3 SWAP2 POP POP PUSH0 SWAP2 PUSH2 0x13D8 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x23 DUP2 MSTORE PUSH32 0x596F752061726520616C72656164792061742074686520686967686573742070 PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x1BDBDB PUSH1 0xEA SHL PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1418 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x105D081B585E081C1BDBDB PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x5AD JUMPI JUMP JUMPDEST ISZERO PUSH2 0x145F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x125B9D985B1A59 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1495 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B98DBDC9C9958DD08185B5BDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xB0F JUMPI PUSH2 0x14EA SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x1114 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x15 SLOAD SWAP4 PUSH2 0x1514 PUSH0 SWAP6 DUP5 LT PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x152E PUSH2 0x1520 DUP5 PUSH2 0x10FC JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR CALLVALUE EQ PUSH2 0x148E JUMP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x1547 DUP2 PUSH1 0x5 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 DUP5 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH2 0x155D DUP3 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x14CD JUMP JUMPDEST PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x5AD JUMPI PUSH2 0x1583 PUSH1 0x3 PUSH2 0x162B SWAP3 DUP8 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE DIV PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1114 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x15F1 PUSH1 0x40 MLOAD PUSH2 0x159A DUP2 PUSH2 0x1250 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP8 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP12 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP10 DUP2 MSTORE PUSH0 PUSH1 0x80 DUP8 ADD DUP2 DUP2 MSTORE DUP15 DUP3 MSTORE PUSH1 0x2F DUP8 MSTORE DUP5 DUP3 KECCAK256 DUP11 DUP4 MSTORE SWAP1 SWAP7 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP6 ADD SSTORE SWAP1 MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP6 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1610 DUP2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x14CD JUMP JUMPDEST DUP6 PUSH0 MSTORE PUSH1 0x30 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x14CD JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP4 DIV SWAP6 PUSH0 SWAP5 PUSH0 SWAP4 JUMPDEST PUSH1 0x3 DUP6 LT PUSH2 0x1662 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x164F SWAP3 SWAP4 POP PUSH2 0x144B JUMP JUMPDEST DUP1 PUSH2 0x1657 JUMPI POP JUMP JUMPDEST PUSH2 0x1660 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x1908 JUMPI JUMPDEST PUSH2 0x18D4 JUMPI DUP2 DUP4 MSTORE PUSH1 0x2F PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP1 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP6 DUP9 PUSH1 0x1 DUP9 ADD SLOAD PUSH1 0x4 DUP10 ADD DUP1 SLOAD SWAP1 PUSH1 0x27 DUP3 LT PUSH2 0x16B8 JUMPI JUMPDEST POP POP POP PUSH2 0x16AD PUSH1 0x3 SWAP2 PUSH1 0x1 SWAP4 PUSH2 0x12A6 JUMP JUMPDEST SWAP8 ADD SLOAD SWAP5 ADD SWAP4 PUSH2 0x1636 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1863 JUMPI DUP2 SWAP1 SSTORE DUP11 SWAP1 PUSH1 0x18 DUP2 GT PUSH2 0x1877 JUMPI POP POP DUP1 DUP5 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 DUP6 KECCAK256 ADD PUSH2 0x16F0 DUP12 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x5F DUP11 MUL DUP11 ISZERO SWAP1 DUP12 DUP2 DIV PUSH1 0x5F EQ DUP3 OR ISZERO PUSH2 0x1863 JUMPI DUP3 DUP7 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH1 0x64 SWAP1 SWAP2 DIV SWAP1 DUP4 ISZERO PUSH2 0x182F JUMPI DUP2 ISZERO PUSH2 0x17FC JUMPI DUP1 DUP8 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP7 DUP1 PUSH2 0x17E8 JUMPI POP PUSH2 0x174D DUP3 DUP9 SLOAD PUSH2 0x12A6 JUMP JUMPDEST DUP8 SSTORE PUSH1 0x7 PUSH0 SWAP8 ADD PUSH2 0x175F DUP4 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH2 0x177A SWAP1 DUP4 SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2092 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x5 SWAP4 PUSH32 0x4D634C31300B97DAD99B3AF799178230163D88AD306370D063BE9CD992D0BE7F PUSH1 0x80 DUP5 DUP8 PUSH1 0x40 DUP14 SWAP8 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE LOG4 DUP2 DUP12 MUL SWAP2 DUP12 DUP4 DIV EQ OR ISZERO PUSH2 0x5AD JUMPI PUSH2 0x16AD DUP11 PUSH1 0x1 SWAP4 PUSH2 0x17DF PUSH1 0x64 PUSH1 0x3 SWAP6 DIV PUSH2 0x1DAB JUMP JUMPDEST SWAP4 DUP2 SWAP4 POP PUSH2 0x169C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x16995C9BC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x1 SWAP4 PUSH1 0x3 SWAP4 PUSH2 0x16AD SWAP4 SWAP3 PUSH1 0x24 LT PUSH2 0x18B1 JUMPI DUP7 DUP9 MSTORE PUSH1 0x2E PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 SWAP1 DUP9 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 PUSH2 0x18AA DUP4 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x17DF JUMP JUMPDEST DUP7 DUP9 MSTORE PUSH1 0x2E PUSH1 0x20 MSTORE PUSH1 0x40 DUP9 KECCAK256 SWAP1 DUP9 MSTORE PUSH1 0x20 MSTORE DUP5 PUSH1 0x40 DUP9 KECCAK256 ADD PUSH2 0x18AA DUP4 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x164F SWAP3 SWAP4 POP PUSH2 0x18E9 DUP3 DUP3 PUSH2 0x144B JUMP JUMPDEST DUP1 PUSH2 0x18F9 JUMPI JUMPDEST DUP5 SWAP4 DUP2 DUP1 DUP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x1902 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH0 PUSH2 0x18EF JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP2 EQ PUSH2 0x166B JUMP JUMPDEST SWAP1 PUSH2 0x1921 PUSH1 0x16 SLOAD DUP4 LT PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x192D PUSH2 0x1520 DUP4 PUSH2 0x10E4 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x36 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x1948 SWAP1 DUP4 SWAP1 PUSH2 0x14CD JUMP JUMPDEST PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x5AD JUMPI PUSH1 0x3 PUSH2 0x196B SWAP2 DUP5 PUSH0 MSTORE PUSH1 0x36 PUSH1 0x20 MSTORE DIV PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1114 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP2 PUSH2 0x19D9 PUSH1 0x40 MLOAD PUSH2 0x1982 DUP2 PUSH2 0x1250 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP9 DUP2 MSTORE PUSH0 PUSH1 0x60 DUP7 ADD DUP2 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE DUP10 DUP4 MSTORE PUSH1 0x34 DUP8 MSTORE DUP5 DUP4 KECCAK256 DUP12 DUP5 MSTORE SWAP1 SWAP7 MSTORE SWAP3 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP6 ADD SSTORE SWAP1 MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x19F8 DUP3 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x1 DUP2 EQ PUSH2 0x1B4D JUMPI JUMPDEST DUP3 ISZERO DUP1 ISZERO PUSH2 0x1B42 JUMPI JUMPDEST PUSH2 0x1B36 JUMPI PUSH0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH1 0x3 DUP2 SLOAD LT PUSH0 EQ PUSH2 0x1B36 JUMPI DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5AD JUMPI SSTORE DUP2 PUSH0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH2 0x1A5A DUP5 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x5F DUP4 MUL SWAP2 DUP4 ISZERO SWAP3 DUP5 DUP2 DIV PUSH1 0x5F EQ DUP5 OR ISZERO PUSH2 0x5AD JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x64 SWAP1 DIV DUP2 ISZERO PUSH2 0x182F JUMPI DUP1 ISZERO PUSH2 0x17FC JUMPI DUP3 PUSH0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1AB2 DUP4 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x1AC0 DUP3 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH2 0x1ADB SWAP1 DUP3 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2092 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP2 PUSH1 0x6 PUSH1 0x40 PUSH32 0x4D634C31300B97DAD99B3AF799178230163D88AD306370D063BE9CD992D0BE7F SWAP5 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE LOG4 PUSH1 0x5 DUP3 MUL SWAP2 DUP3 DIV PUSH1 0x5 EQ OR ISZERO PUSH2 0x5AD JUMPI PUSH1 0x64 PUSH2 0x1660 SWAP2 DIV PUSH2 0x1DAB JUMP JUMPDEST POP POP POP PUSH2 0x1660 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP4 EQ PUSH2 0x1A0A JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2C0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB0F JUMPI PUSH1 0x40 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1BAE PUSH1 0x20 DUP4 PUSH1 0x5 SHL ADD DUP5 PUSH2 0x126C JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1D34 JUMPI POP POP POP POP PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP2 PUSH1 0x80 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP3 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0xB DUP3 ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0xC DUP3 ADD SLOAD PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0xD DUP3 ADD SLOAD PUSH2 0x1A0 DUP3 ADD MSTORE PUSH1 0xE DUP3 ADD SLOAD PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xF DUP3 ADD SLOAD PUSH2 0x1E0 DUP3 ADD MSTORE PUSH1 0x10 DUP3 ADD SLOAD PUSH2 0x200 DUP3 ADD MSTORE PUSH2 0x2A0 PUSH1 0x15 PUSH1 0x11 DUP5 ADD SLOAD SWAP4 PUSH2 0x220 DUP5 ADD SWAP5 DUP6 MSTORE PUSH1 0x12 DUP2 ADD SLOAD PUSH2 0x240 DUP6 ADD MSTORE PUSH1 0x13 DUP2 ADD SLOAD PUSH2 0x260 DUP6 ADD MSTORE PUSH1 0x14 DUP2 ADD SLOAD PUSH2 0x280 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE PUSH1 0x38 SLOAD PUSH0 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 MLOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1CCC DUP5 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x38 SLOAD SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 MLOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP2 PUSH3 0x15180 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x5AD JUMPI PUSH1 0x5 SWAP3 TIMESTAMP GT ISZERO PUSH2 0x1D24 JUMPI JUMPDEST POP LT ISZERO PUSH2 0x1D11 JUMPI JUMPDEST POP PUSH2 0x1A01 JUMP JUMPDEST MLOAD PUSH1 0x38 SLOAD PUSH2 0x1D1E SWAP2 PUSH2 0x1D78 JUMP JUMPDEST PUSH0 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x1D2E SWAP1 DUP7 PUSH2 0x1D78 JUMP JUMPDEST PUSH0 PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x1D47 DUP2 PUSH2 0x1234 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP7 ADD SLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x3 DUP8 ADD SLOAD AND PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x1BBF JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND ISZERO PUSH2 0x1DA2 JUMPI POP POP JUMP JUMPDEST PUSH2 0x1660 SWAP2 PUSH2 0x1E7A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1E41 JUMPI PUSH1 0x1 SLOAD PUSH1 0x80 SWAP3 PUSH2 0x1DD9 SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2092 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1DF2 DUP3 DUP3 SLOAD PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH32 0x4D634C31300B97DAD99B3AF799178230163D88AD306370D063BE9CD992D0BE7F PUSH1 0x5 SLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE LOG4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x199959481859191C9CC81B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x38 SLOAD DUP3 SUB PUSH2 0x205D JUMPI DUP2 PUSH0 MSTORE PUSH1 0x3B PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND PUSH2 0x2029 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH32 0x7FB70D3B53B50F6798636307BC089A811F848F8C80C93EB14575305275478318 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD SWAP1 PUSH1 0x4 SWAP1 PUSH2 0x1ED7 DUP4 PUSH2 0x1250 JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE ADD SLOAD PUSH1 0x80 DUP3 ADD SWAP1 DUP2 MSTORE DUP4 PUSH0 MSTORE PUSH1 0x3E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE DUP3 PUSH1 0x5 PUSH1 0x40 PUSH0 KECCAK256 SLOAD LT SWAP3 MLOAD EQ SWAP1 DUP2 PUSH2 0x2000 JUMPI JUMPDEST POP DUP2 ISZERO SWAP2 PUSH2 0x1FF8 JUMPI JUMPDEST POP ISZERO PUSH2 0x1FB3 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x3D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x3 DUP4 ADD SWAP2 DUP3 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND PUSH2 0x1FAC JUMPI PUSH2 0x100 PUSH1 0x60 SWAP5 DUP5 PUSH1 0x1 PUSH32 0x360CB96D3E85B4FC299DDFA9A572850FC70961C86F0F1703F033143B0E5A82CF SWAP9 TIMESTAMP DUP2 SSTORE ADD SSTORE PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE LOG1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656C696769626C6520666F72207765656B6C7920636F6E7465737400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1F30 JUMP JUMPDEST SWAP1 POP MLOAD DUP3 PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x11 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 PUSH3 0x15180 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5AD JUMPI GT ISZERO PUSH0 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x149BDD5B990818DB1BDCD959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081C9BDD5B99 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP2 MSTORE SWAP1 SWAP3 PUSH0 SWAP2 PUSH2 0x20D0 PUSH1 0x64 DUP3 PUSH2 0x126C JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x5EE JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x2117 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x20F7 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x20F0 JUMP INVALID 0x26 0xAD 0xB2 0x2C EOFCREATE 0x82 RETURNDATACOPY CALL PREVRANDAO SWAP4 MCOPY SWAP16 0xBE CALL 0xB6 0xB4 LOG3 LOG2 SWAP14 0xAC 0xBE SLOAD PREVRANDAO 0xD5 SWAP3 SWAP3 STATICCALL 0x26 KECCAK256 RETURN 0xD3 PUSH24 0xA2646970667358221220994561B3ECE918BC689EB0CCBA08 PUSH13 0xE0F72C731D6270E8921782D5DA PUSH1 0x5B LOG0 0x4F PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "102:13729:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;8793:38:8;102:13729:7;;;;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;;-1:-1:-1;;;;;102:13729:7;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;534:24:8;102:13729:7;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;8733:7:8;102:13729:7;;;;;;;;;-1:-1:-1;;102:13729:7;;;;460:30:8;102:13729:7;;;-1:-1:-1;;;;;102:13729:7;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;1187:1:8;102:13729:7;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;7123:64:8;;;;;102:13729:7;;7123:64:8;102:13729:7;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;8752:34:8;102:13729:7;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;10200:35:8;102:13729:7;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;10179:8:8;102:13729:7;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;2186:540:8;102:13729:7;2186:540:8;;;;;;102:13729:7;;;;;;2186:540:8;102:13729:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;565:22:8;102:13729:7;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;;;10047:5;102:13729;;;;;10072:55;102:13729;;;;;;;;10096:10;10080:26;10072:55;:::i;:::-;10047:5;10146:17;;102:13729;;;10146:21;10166:1;10146:21;;10138:46;;;:::i;:::-;102:13729;;;;10355:21;102:13729;;;10454:20;102:13729;;10598:10;;;;102:13729;10598:27;;:61;;;;102:13729;;;;;10765:12;10761:110;;102:13729;;;;10890:14;102:13729;;;;;;;;;;10881:69;102:13729;;;;;;10889:34;10881:69;:::i;:::-;10983:28;;;:::i;:::-;102:13729;;;;;;-1:-1:-1;;;11079:58:7;;10096:10;102:13729;11079:58;;102:13729;11117:4;102:13729;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;102:13729:7;11079:58;;;;;;;;102:13729;;;;;;;;;;;;11242:19;102:13729;;;;;10890:14;102:13729;;;;;;;;;;;;;;;;;;;;;;11242:19;:35;102:13729;;;11242:35;:::i;:::-;102:13729;;11323:12;;;;;:::i;:::-;102:13729;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;11651:15;102:13729;;;;-1:-1:-1;;;;;;;;;;;11583:84:7;10096:10;11583:84;;102:13729;;;;;;;;;;;;;11079:58;;;102:13729;11079:58;102:13729;11079:58;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;102:13729;;;;;;;;;10761:110;;;102:13729;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;10598:61;10629:14;;;;;102:13729;10629:30;;10598:61;;;102:13729;;;;;;-1:-1:-1;;102:13729:7;;;;;;6847:93:8;102:13729:7;6847:93:8;;;;;;102:13729:7;6847:93:8;;:::i;:::-;102:13729:7;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;842:8:8;102:13729:7;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;10288:34:8;102:13729:7;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;11548:35:8;102:13729:7;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;7194:61:8;;;;;102:13729:7;;7194:61:8;102:13729:7;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;;;;;;;;;;;;;2252:5;102:13729;;;;;2277:55;102:13729;;;;;;;;2301:10;2285:26;2277:55;:::i;:::-;2351:14;;;102:13729;2343:42;2368:1;102:13729;;2351:18;2343:42;:::i;:::-;102:13729;;;;;;;;;2500:12;102:13729;2486:33;;102:13729;;;2564:25;;;:::i;:::-;102:13729;;;;;;;;;;2836:13;102:13729;;;;;;;;;;;;;;;2886:31;;;102:13729;;;;;2970:11;102:13729;;;;;;;;;;;;;;;;;;3072:31;;;;:::i;:::-;102:13729;;;;;;;;;;;;;;;3181:16;102:13729;;3181:16;:32;102:13729;;;3181:32;:::i;:::-;102:13729;;;;;2970:11;102:13729;;;;;;;;;;;;;;;;;;;;;;3307:47;;;;;:::i;:::-;102:13729;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;3707:15;102:13729;;;;-1:-1:-1;;;;;;;;;;;3622:101:7;2301:10;3622:101;;102:13729;;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;;;:::i;:::-;;;;1927:68:8;102:13729:7;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;422:28:8;102:13729:7;;;-1:-1:-1;;;;;102:13729:7;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;1530:34:8;102:13729:7;;;;;;;;;;;;;;:::i;:::-;;;;987:5;102:13729;;;;;1012:55;102:13729;;;;;;;;1036:10;1020:26;1012:55;:::i;:::-;1078:42;1103:1;1086:14;;;102:13729;1086:18;1078:42;:::i;:::-;1265:21;;;:::i;:::-;102:13729;;;;;;;;;;1331:13;102:13729;;;;;;;;;;1381:14;102:13729;;;1381:14;102:13729;;;1381:30;;;;102:13729;;1482:30;;1381:14;1482:30;;:::i;:::-;102:13729;;1552:16;;;:32;102:13729;;;1552:32;:::i;:::-;102:13729;;1669:12;;;;;:::i;:::-;1711:13;102:13729;;;;;;:::i;:::-;;;;;1730:172;;102:13729;;;;;1730:172;;1822:15;;102:13729;;1730:172;;;102:13729;1865:2;102:13729;;;;;-1:-1:-1;;;102:13729:7;;;;;1381:14;102:13729;;;;;;;;;;;;;;;;;;;;;;;;;;;;1381:14;102:13729;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;1822:15;1730:172;102:13729;;;-1:-1:-1;;;;;;;;;;;1921:95:7;1036:10;1921:95;;102:13729;;;;;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;8680:6:8;102:13729:7;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;900:8:8;102:13729:7;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;11590:32:8;102:13729:7;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;102:13729:7;;;;;11510:31:8;102:13729:7;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;;1818:57:8;102:13729:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;;;3820:5;102:13729;;;;;3845:55;102:13729;;;;;;;;3869:10;3853:26;3845:55;:::i;:::-;3919:14;;;102:13729;;;3919:18;3936:1;3919:18;;3911:43;;;:::i;:::-;102:13729;;;;4117:15;102:13729;;4258:10;;;102:13729;4258:27;102:13729;;4394:12;;;;;4390:107;;102:13729;;;;4516:11;102:13729;;;;;;;;;;4507:66;102:13729;;;;;;4515:31;4507:66;:::i;:::-;4618:22;;;:::i;:::-;102:13729;;;;;;-1:-1:-1;;;4708:58:7;;3869:10;102:13729;4708:58;;102:13729;4746:4;102:13729;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;102:13729:7;4708:58;;;;;;;;102:13729;4829:476;;;102:13729;;5320:24;;;102:13729;5320:26;:88;;;102:13729;5320:110;;;102:13729;5317:159;;102:13729;;;;;;;;;;;5564:16;102:13729;;;;;4516:11;102:13729;;;;;;;;;;;;;;;;;;;;;;5564:16;:32;102:13729;;;5564:32;:::i;:::-;102:13729;;5640:12;;;;;:::i;:::-;102:13729;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;4802:15;102:13729;;;;-1:-1:-1;;;;;;;;;;;5900:73:7;3869:10;5900:73;;102:13729;5317:159;5460:2;5446:11;;;102:13729;5317:159;;5320:110;5413:11;3820:5;5413:11;;;102:13729;5413:17;5320:110;;:88;5351:21;;;;102:13729;782:6:8;102:13729:7;;;;;;;5390:18;;;102:13729;-1:-1:-1;5351:57:7;5320:88;;4829:476;4802:15;4861:18;;;102:13729;;4933:14;;102:13729;;;3820:5;102:13729;;;;;5015:24;;;102:13729;782:6:8;102:13729:7;;;;;;;4802:15;-1:-1:-1;5015:49:7;:73;;;4829:476;5012:282;;4829:476;;;;5012:282;5109:27;;;102:13729;;;;;;;;;;;;;;5164:31;5160:119;5012:282;5160:119;5219:14;5236:2;5219:14;;102:13729;5160:119;5012:282;;5015:73;5068:14;3820:5;5068:14;;;102:13729;5068:20;5015:73;;4708:58;;;102:13729;4708:58;102:13729;4708:58;;;;;;;:::i;:::-;;;4390:107;;;102:13729;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;782:6:8;102:13729:7;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;1257:31:8;102:13729:7;1257:31:8;;;;;;102:13729:7;;;;;;1257:31:8;102:13729:7;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;102:13729:7;;;;;;;1513:4:8;102:13729:7;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;731:6:8;102:13729:7;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;1240:1:8;102:13729:7;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;8840:33:8;102:13729:7;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;;-1:-1:-1;;;;;102:13729:7;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;10127:7:8;102:13729:7;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;6947:105:8;102:13729:7;6947:105:8;;;;;;102:13729:7;6947:105:8;;:::i;102:13729:7:-;;;;;;-1:-1:-1;;102:13729:7;;;;;;;7059:57:8;;;;;102:13729:7;;7059:57:8;102:13729:7;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;;2093:56:8;102:13729:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;683:5:8;102:13729:7;;;;;6947:105:8;102:13729:7;;;;;;6947:105:8;-1:-1:-1;102:13729:7;;-1:-1:-1;102:13729:7;;;-1:-1:-1;102:13729:7;:::o;:::-;4618:12;102:13729;;;;;;4618:12;-1:-1:-1;102:13729:7;;-1:-1:-1;102:13729:7;;;-1:-1:-1;102:13729:7;:::o;:::-;;;;;;;;-1:-1:-1;102:13729:7;;-1:-1:-1;102:13729:7;;;-1:-1:-1;102:13729:7;:::o;:::-;;;;;;-1:-1:-1;;102:13729:7;;;;;;;1076:2:8;102:13729:7;;;;;;;;;-1:-1:-1;;102:13729:7;;;;;;;1129:2:8;102:13729:7;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;193:683::-;102:13729;;;;319:5;102:13729;;;;;359:14;;;102:13729;;400:12;102:13729;388:31;;;384:117;;102:13729;;;;;;;576:10;102:13729;534:15;102:13729;;576:10;;102:13729;576:26;572:115;;703:12;;:41;;;193:683;699:115;;834:4;102:13729;;;;;;;:::i;:::-;;;;;;;;;193:683;:::o;699:115::-;102:13729;;;;;;;;:::i;:::-;534:15;102:13729;;;;;;;761:41;:::o;703:::-;;102:13729;703:41;;572:115;619:56;102:13729;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;619:56;:::o;384:117::-;436:53;;;;102:13729;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;436:53;:::o;102:13729::-;;;;:::o;:::-;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;5995:1108::-;;;;6105:12;102:13729;6096:28;6088:48;-1:-1:-1;6096:28:7;;;6088:48;:::i;:::-;6147:62;6168:20;;;:::i;:::-;102:13729;;;;;;6155:9;:33;6147:62;:::i;:::-;102:13729;-1:-1:-1;102:13729:7;6300:9;102:13729;;;-1:-1:-1;102:13729:7;;6415:26;102:13729;6415:12;102:13729;6415:26;:::i;:::-;102:13729;;-1:-1:-1;102:13729:7;6300:9;102:13729;;6452:33;102:13729;;-1:-1:-1;102:13729:7;6452:33;:::i;:::-;-1:-1:-1;;102:13729:7;;;;;;;6590:30;102:13729;6972:46;102:13729;;-1:-1:-1;102:13729:7;6300:9;102:13729;;;;-1:-1:-1;102:13729:7;6590:30;:::i;:::-;102:13729;;;;;;;;;;;;;:::i;:::-;;;;;6692:196;;;102:13729;;;;6692:196;;;102:13729;;;6692:196;;;102:13729;;;-1:-1:-1;6692:196:7;;;102:13729;;;;;;6659:11;102:13729;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;102:13729:7;6912:13;102:13729;;;-1:-1:-1;102:13729:7;;-1:-1:-1;102:13729:7;;;6912:49;102:13729;;-1:-1:-1;102:13729:7;6912:49;:::i;:::-;102:13729;-1:-1:-1;102:13729:7;6972:12;102:13729;;;-1:-1:-1;102:13729:7;;-1:-1:-1;102:13729:7;;;;-1:-1:-1;102:13729:7;6972:46;:::i;:::-;102:13729;;;;7327:25;-1:-1:-1;7369:8:7;-1:-1:-1;7365:1181:7;7379:3;102:13729;7379:3;;;;7365:1181;8658:26;;;;;;;;;;:::i;:::-;8699:14;8695:73;;5995:1108;:::o;8695:73::-;8745:10;;;:::i;:::-;5995:1108::o;7384:3::-;7420:18;;:51;;;;7384:3;7416:335;;102:13729;;;6659:11;102:13729;;;;;;;;;;;;;7862:12;;6557:1;7862:12;;102:13729;7910:16;;;102:13729;;7910:21;7929:2;7910:21;;7906:497;;7384:3;8426:34;;;;102:13729;8426:34;6557:1;8426:34;;:::i;:::-;8520:14;;102:13729;7384:3;102:13729;7369:8;;;7906:497;102:13729;;;;6557:1;102:13729;;;;;;;;;;;;8018:2;7998:22;;8018:2;;102:13729;;;;;8942:11;102:13729;;9100:14;102:13729;;;9100:14;:24;102:13729;;;9100:24;:::i;:::-;102:13729;;9669:2;102:13729;;;;;;;;9669:2;102:13729;;;;;;;;;13745:5:8;102:13729:7;;;;;;-1:-1:-1;;;;;102:13729:7;;9674:3;102:13729;;;;13823:25:8;;102:13729:7;;13884:11:8;;102:13729:7;;;;;8942:11;102:13729;;;;;;;;;;14187:29:8;102:13729:7;;;14187:29:8;:::i;:::-;102:13729:7;;9100:14;-1:-1:-1;102:13729:7;14715:17:8;:28;102:13729:7;;;14715:28:8;:::i;:::-;102:13729:7;;;;15214:7:8;;102:13729:7;;;;-1:-1:-1;;;;;102:13729:7;15214:7:8;:::i;:::-;102:13729:7;;;;;6557:1;102:13729;;;;6415:12;;15238:107:8;6692:196:7;102:13729;;;;;;;15328:15:8;6692:196:7;102:13729;;;15238:107:8;102:13729:7;;;;;;;;;;;;8426:34;102:13729;6557:1;102:13729;9829:16;9674:3;102:13729;;;9829:16;:::i;:::-;7906:497;;;;;;102:13729;-1:-1:-1;;;102:13729:7;;;7910:16;102:13729;;;;;;;-1:-1:-1;;;102:13729:7;;;7910:16;102:13729;;;9164:2;102:13729;;;;-1:-1:-1;;;102:13729:7;;;;9674:3;;102:13729;;;;-1:-1:-1;;;102:13729:7;;;7910:16;102:13729;;;;;;;;-1:-1:-1;;;102:13729:7;;;;9674:3;;102:13729;;-1:-1:-1;;;102:13729:7;;;7910:16;102:13729;;;;7994:392;6557:1;;102:13729;;8426:34;;8139:22;8159:2;-1:-1:-1;8159:2:7;;102:13729;;;8186:13;102:13729;;;;;;;;;;;;;8186:66;102:13729;;;8186:66;:::i;:::-;102:13729;;7994:392;;8135:251;102:13729;;;8301:13;102:13729;;;;;;;;;;;;;;8301:47;:65;102:13729;;;8301:65;:::i;7416:335::-;7580:26;;;;;8658;7580;;;;;;;:::i;:::-;7629:13;7625:87;;7416:335;7730:5;;;;;;;7625:87;7682:9;;;:::i;:::-;7625:87;;;7420:51;102:13729;6415:12;102:13729;7442:29;;7420:51;;11689:2128;;11785:54;11802:18;102:13729;11793:34;;11785:54;:::i;:::-;11850:68;11871:26;;;:::i;11850:68::-;-1:-1:-1;102:13729:7;;;12012:12;102:13729;;;;;;;;12182:37;;102:13729;;12182:37;:::i;:::-;-1:-1:-1;;102:13729:7;;;;;;;;12324:33;102:13729;;-1:-1:-1;102:13729:7;12012:12;102:13729;;;;-1:-1:-1;102:13729:7;12324:33;:::i;:::-;102:13729;;;;;;;;;;;;;:::i;:::-;;;;;12432:222;;;102:13729;;;;12432:222;;;102:13729;;;-1:-1:-1;12432:222:7;;;102:13729;;;12623:15;12432:222;;;102:13729;;;;;;12395:14;102:13729;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;102:13729:7;12665:19;102:13729;;;-1:-1:-1;102:13729:7;;-1:-1:-1;102:13729:7;;;12665:54;102:13729;;-1:-1:-1;102:13729:7;12665:54;:::i;:::-;12291:1;12744:11;;12741:584;;11689:2128;13343:13;;:41;;;;11689:2128;13339:123;;-1:-1:-1;102:13729:7;12395:14;102:13729;;;-1:-1:-1;102:13729:7;;-1:-1:-1;102:13729:7;;;;;-1:-1:-1;102:13729:7;13549:16;102:13729;;;13549:18;13545:245;102:13729;;;;;;12291:1;102:13729;;;;;;;;;-1:-1:-1;102:13729:7;8942:11;102:13729;;9183:17;102:13729;-1:-1:-1;102:13729:7;9183:17;:27;102:13729;;;9183:27;:::i;:::-;102:13729;;9669:2;102:13729;;;;;;;;;9669:2;102:13729;;;;;;-1:-1:-1;102:13729:7;;;13745:5:8;102:13729:7;;;;;;-1:-1:-1;;;;;102:13729:7;;9674:3;102:13729;;13823:25:8;;102:13729:7;;13884:11:8;;102:13729:7;;;-1:-1:-1;102:13729:7;8942:11;102:13729;;9183:17;102:13729;-1:-1:-1;102:13729:7;14187:29:8;102:13729:7;;;14187:29:8;:::i;:::-;102:13729:7;;14798:20:8;:31;102:13729:7;;;14798:31:8;:::i;:::-;102:13729:7;;;;15214:7:8;;102:13729:7;;;;-1:-1:-1;;;;;102:13729:7;15214:7:8;:::i;:::-;102:13729:7;;;;;12291:1;102:13729;;;;12432:222;102:13729;9239:18;102:13729;15238:107:8;102:13729:7;;;12623:15;12432:222;102:13729;;;15238:107:8;9037:15:7;102:13729;;;;;9037:15;102:13729;;;;;9674:3;9829:16;102:13729;;9829:16;:::i;13545:245::-;13744:12;;;;;;:::i;13343:41::-;102:13729;13372:12;102:13729;13360:24;;13343:41;;12741:584;102:13729;-1:-1:-1;102:13729:7;12795:5;102:13729;;;-1:-1:-1;102:13729:7;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;102:13729:7;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;102:13729:7;;-1:-1:-1;102:13729:7;-1:-1:-1;102:13729:7;;;;;;;;;;;;;;;;;;;;;;;;;;;12432:222;102:13729;;;;;;;;12432:222;102:13729;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12795:5;102:13729;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12845:18;102:13729;-1:-1:-1;102:13729:7;12827:17;102:13729;;;-1:-1:-1;102:13729:7;;;-1:-1:-1;102:13729:7;;;12827:73;102:13729;;-1:-1:-1;102:13729:7;12827:73;:::i;:::-;12845:18;102:13729;;;-1:-1:-1;102:13729:7;12827:17;102:13729;;;-1:-1:-1;102:13729:7;;;-1:-1:-1;102:13729:7;;;;-1:-1:-1;102:13729:7;;;;;731:6:8;102:13729:7;;;;;;;;12623:15;;-1:-1:-1;13018:55:7;13015:150;;102:13729;13183:17;;;13179:121;;102:13729;12741:584;;;13179:121;102:13729;12845:18;102:13729;13265:18;;;:::i;:::-;13179:121;;;13015:150;13130:18;;;;:::i;:::-;13015:150;;;102:13729;;;12291:1;102:13729;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;12432:222;102:13729;;;;;;;;;;;;;;15474:225:8;;102:13729:7;-1:-1:-1;102:13729:7;15565:13:8;102:13729:7;;;-1:-1:-1;102:13729:7;;-1:-1:-1;102:13729:7;;;;15565:44:8;102:13729:7;-1:-1:-1;102:13729:7;15565:44:8;102:13729:7;;;;15564:45:8;15560:132;;15474:225;;:::o;15560:132::-;15667:8;;;:::i;12825:755::-;12887:13;102:13729:7;-1:-1:-1;;;;;102:13729:7;;12887:27:8;;102:13729:7;;;;;;13066:7:8;;102:13729:7;;;-1:-1:-1;;;;;102:13729:7;13066:7:8;:::i;:::-;13181:12;102:13729:7;-1:-1:-1;102:13729:7;13169:11:8;102:13729:7;;;-1:-1:-1;102:13729:7;13201:36:8;102:13729:7;;;13201:36:8;:::i;:::-;102:13729:7;;;;;;;12887:13:8;102:13729:7;;13465:111:8;13181:12;102:13729:7;;;;;;;;;-1:-1:-1;102:13729:7;;;;-1:-1:-1;102:13729:7;;;;13559:15:8;102:13729:7;;;;13465:111:8;12825:755::o;102:13729:7:-;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;15707:1478:8;15876:18;102:13729:7;15864:30:8;;102:13729:7;;;-1:-1:-1;102:13729:7;15932:16:8;102:13729:7;;;15932:33:8;102:13729:7;-1:-1:-1;102:13729:7;15932:33:8;102:13729:7;;;;-1:-1:-1;102:13729:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;16048:1:8;102:13729:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;102:13729:7;16096:17:8;102:13729:7;;;-1:-1:-1;102:13729:7;;-1:-1:-1;102:13729:7;;;;16143:1:8;102:13729:7;-1:-1:-1;102:13729:7;;16096:48:8;102:13729:7;;16194:32:8;:124;;;;15707:1478;16096:48;;;16348:36;;;15707:1478;102:13729:7;;;;;-1:-1:-1;102:13729:7;16785:13:8;102:13729:7;;;-1:-1:-1;102:13729:7;;-1:-1:-1;102:13729:7;;;;-1:-1:-1;102:13729:7;16832:25:8;102:13729:7;16832:25:8;;102:13729:7;;;;;;15932:33:8;102:13729:7;;16828:38:8;;102:13729:7;;;;16048:1:8;17127:50;102:13729:7;16960:15:8;102:13729:7;;17031:21:8;102:13729:7;;;;;;;;;;;;;;;;16960:15:8;102:13729:7;;;;17127:50:8;15707:1478::o;16828:38::-;16859:7;;;;;:::o;102:13729:7:-;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;;;;;;;;;16348:36:8;;;;;;16194:124;102:13729:7;;;;-1:-1:-1;102:13729:7;16275:5:8;102:13729:7;;16275:31:8;102:13729:7;-1:-1:-1;102:13729:7;16275:31:8;102:13729:7;;731:6:8;102:13729:7;;;;;;;16244:74:8;;16194:124;;;102:13729:7;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;;;;;;-1:-1:-1;;;102:13729:7;;;;;;;1219:160:5;102:13729:7;;-1:-1:-1;;;1328:43:5;;;;;;;-1:-1:-1;;;;;102:13729:7;;;1328:43:5;;;102:13729:7;;;;;;;;;1328:43:5;;;1219:160;;-1:-1:-1;;1328:43:5;;102:13729:7;1328:43:5;:::i;:::-;8507:421;;;;;;;;;-1:-1:-1;8507:421:5;;8942:15;;-1:-1:-1;;;;;;102:13729:7;;8960:26:5;:31;8942:68;8938:146;;1219:160;:::o;8938:146::-;-1:-1:-1;;;;9033:40:5;;;-1:-1:-1;;;;;102:13729:7;;;;9033:40:5;102:13729:7;1328:43:5;;9033:40;8942:68;9009:1;8994:16;;8942:68;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1713200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACC_PRECISION()": "395",
								"MONTHLY_ROYALTY_DIRECT()": "1033",
								"MONTHLY_ROYALTY_LEVEL()": "253",
								"MONTHLY_ROYALTY_TIME()": "835",
								"MONTH_DURATION()": "263",
								"PERCENTS_DIVIDER()": "148",
								"ROI_2X_TIME()": "461",
								"ROI_CAP_DIVIDER()": "561",
								"ROI_CAP_MULTIPLIER()": "429",
								"RetopPoolByEarning(uint256,uint256)": "infinite",
								"TIME_STEP()": "373",
								"TOP_ROYALTY_DIRECT()": "351",
								"TOP_ROYALTY_LEVEL()": "297",
								"TOP_ROYALTY_TIME()": "615",
								"WEEK_DURATION()": "637",
								"WeeklyCapping()": "1099",
								"WeeklyTotalReward()": "2432",
								"canBuyNextPool(uint256)": "9529",
								"communityAccPerPackage(uint256)": "2673",
								"communityAccPerUser()": "2784",
								"communityDebt(uint256,uint256)": "2996",
								"creatorWallet()": "2830",
								"currentMonthlyRound()": "3070",
								"currentMonthlyStartTime()": "3158",
								"currentWeeklyRound()": "3092",
								"currentWeeklyStartTime()": "3265",
								"defaultRefId()": "3224",
								"glbBoosterPackages(uint256)": "6678",
								"minLevelForGlbBooster(uint256)": "3152",
								"minLevelForPool(uint256)": "2338",
								"minPoolForGlbBooster(uint256)": "2910",
								"monthlyCapping()": "945",
								"monthlyTotalReward()": "2916",
								"packageQualifiedUsers(uint256)": "2343",
								"packages(uint256)": "7297",
								"poolPackages(uint256)": "7316",
								"registeredUserIds(uint256)": "6813",
								"systemMaintance()": "3204",
								"teamDevelopment()": "3270",
								"topRoyaltyReward()": "2674",
								"topRoyaltyRound()": "2630",
								"topRoyaltyStartTime()": "2894",
								"totalUsers()": "3004",
								"upgradeBooster(uint256)": "infinite",
								"upgradePool(uint256)": "infinite",
								"upgradePoolByEarning(uint32,uint256)": "infinite",
								"usdt()": "2434"
							},
							"internal": {
								"_distributePoolIncome(uint256,uint256,uint256,uint256)": "infinite",
								"_payPoolIncome(uint256,uint256,uint256,uint256,uint256)": "infinite",
								"_placeInBooster(uint256,uint256,uint256)": "infinite",
								"_placeInPool(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "1E0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2222,
									"end": 2231,
									"name": "PUSH",
									"source": 8,
									"value": "D02AB486CEDC0000"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2254,
									"end": 2263,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2286,
									"end": 2295,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2328,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2351,
									"end": 2361,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2384,
									"end": 2394,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2417,
									"end": 2427,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2450,
									"end": 2461,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2484,
									"end": 2495,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2518,
									"end": 2529,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2552,
									"end": 2564,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2587,
									"end": 2599,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D6310000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2622,
									"end": 2634,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC620000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2657,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "1A0"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2693,
									"end": 2706,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "1C0"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6877,
									"end": 6882,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6884,
									"end": 6890,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A8829300000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6892,
									"end": 6899,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C00000"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6901,
									"end": 6908,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A88293000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6910,
									"end": 6918,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6920,
									"end": 6928,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A882930000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6930,
									"end": 6939,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 102,
									"end": 13831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2328,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2351,
									"end": 2361,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2384,
									"end": 2394,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2417,
									"end": 2427,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2450,
									"end": 2461,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2484,
									"end": 2495,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2518,
									"end": 2529,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2552,
									"end": 2564,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7093,
									"end": 7094,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7102,
									"end": 7103,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7105,
									"end": 7107,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 102,
									"end": 13831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7163,
									"end": 7164,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7169,
									"end": 7170,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7102,
									"end": 7103,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7181,
									"end": 7183,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7105,
									"end": 7107,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 102,
									"end": 13831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8785,
									"end": 8786,
									"name": "PUSH",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8830,
									"end": 8831,
									"name": "PUSH",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8872,
									"end": 8873,
									"name": "PUSH",
									"source": 8,
									"value": "3A"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 10234,
									"end": 10235,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 10321,
									"end": 10322,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 11540,
									"end": 11541,
									"name": "PUSH",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 11582,
									"end": 11583,
									"name": "PUSH",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 11621,
									"end": 11622,
									"name": "PUSH",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "RETURN",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "PUSH",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "PUSH",
									"source": 8,
									"value": "1E"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "PUSH",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "D833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "D833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124291"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 102,
									"end": 13831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC47C"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 102,
									"end": 13831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "D7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "D7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EC4"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 102,
									"end": 13831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 102,
									"end": 13831,
									"name": "JUMP",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220994561b3ece918bc689eb0ccba086ce0f72c731d6270e8921782d5da605ba04f64736f6c634300081e0033",
									".code": [
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1C234A8"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "676D0D6"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "2132D204"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "2350268F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "23FD338E"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "2A891534"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "2AE0EE0D"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "2F48AB7D"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3080B5BC"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "31BB6A30"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "32BC298C"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "32FCD966"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "375B43B4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "39AB3603"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3A5084B3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4060160A"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "45CB537C"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4B8CBF9B"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "58C7D352"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "5B62D1D5"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "67D52D4D"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "705FEE2D"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "76F5F700"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "7848F0A3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "78F6AD6D"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "7CDC65F2"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "89043ECE"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "8E222E24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "956A3228"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "9B40AB97"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "A59D17D1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "A5E52B99"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "AE4708DC"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "BC1FA7C0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "BFF1F9E1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "C216212A"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "C8DF2908"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "C9ED0708"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "CA8E9121"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "D0A2FD79"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "D2F0490D"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "E898FC38"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "E9E34A16"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "EBE0FF15"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "EC597E6F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "F5D74D93"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FDDC806F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8793,
											"end": 8831,
											"name": "PUSH",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 534,
											"end": 558,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8733,
											"end": 8740,
											"name": "PUSH",
											"source": 8,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 460,
											"end": 490,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1188,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 7123,
											"end": 7187,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7123,
											"end": 7187,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7123,
											"end": 7187,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7123,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 7123,
											"end": 7187,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7123,
											"end": 7187,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8752,
											"end": 8786,
											"name": "PUSH",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10200,
											"end": 10235,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10179,
											"end": 10187,
											"name": "PUSH",
											"source": 8,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "D7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10047,
											"end": 10052,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10072,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10096,
											"end": 10106,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10106,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10072,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 10072,
											"end": 10127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10072,
											"end": 10127,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 10072,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10047,
											"end": 10052,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 10146,
											"end": 10163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10146,
											"end": 10163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10146,
											"end": 10167,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10166,
											"end": 10167,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 10146,
											"end": 10167,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10146,
											"end": 10167,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 10138,
											"end": 10184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 10138,
											"end": 10184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10184,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 10138,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10355,
											"end": 10376,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10454,
											"end": 10474,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10598,
											"end": 10608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10598,
											"end": 10608,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 10598,
											"end": 10608,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10598,
											"end": 10608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10598,
											"end": 10625,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10598,
											"end": 10625,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10598,
											"end": 10659,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10598,
											"end": 10659,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10598,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 10598,
											"end": 10659,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10765,
											"end": 10777,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10761,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 10761,
											"end": 10871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10890,
											"end": 10904,
											"name": "PUSH",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10881,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10889,
											"end": 10923,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10881,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 10881,
											"end": 10950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10881,
											"end": 10950,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 10881,
											"end": 10950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10983,
											"end": 11011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 10983,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10096,
											"end": 10106,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11117,
											"end": 11121,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11242,
											"end": 11261,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10890,
											"end": 10904,
											"name": "PUSH",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11242,
											"end": 11261,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11242,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11242,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 11242,
											"end": 11277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11242,
											"end": 11277,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 11242,
											"end": 11277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11323,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 11323,
											"end": 11335,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11323,
											"end": 11335,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11323,
											"end": 11335,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11323,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11323,
											"end": 11335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11323,
											"end": 11335,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 11323,
											"end": 11335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2137B7B9BA32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11651,
											"end": 11666,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "404DF00F6E66BFF52B1BBE26C09DC1DEC3DB2C9F5CC1962E398CEEA85FE88B34"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11583,
											"end": 11667,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 10096,
											"end": 10106,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 11583,
											"end": 11667,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11583,
											"end": 11667,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 11079,
											"end": 11137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 11079,
											"end": 11137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 11079,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10761,
											"end": 10871,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 10761,
											"end": 10871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10761,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 10761,
											"end": 10871,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "155C19DC9859194814DB1BDD08185B9908141BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10598,
											"end": 10659,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 10598,
											"end": 10659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10629,
											"end": 10643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10629,
											"end": 10643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10629,
											"end": 10643,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 10629,
											"end": 10643,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10629,
											"end": 10643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10629,
											"end": 10659,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10629,
											"end": 10659,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10598,
											"end": 10659,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10598,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 10598,
											"end": 10659,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6847,
											"end": 6940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 842,
											"end": 850,
											"name": "PUSH",
											"source": 8,
											"value": "83D600"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10288,
											"end": 10322,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11548,
											"end": 11583,
											"name": "PUSH",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 7194,
											"end": 7255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7255,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 7194,
											"end": 7255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7255,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2257,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2311,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2311,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2277,
											"end": 2332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2332,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2277,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2351,
											"end": 2365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2343,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2368,
											"end": 2369,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2351,
											"end": 2369,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2343,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2343,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2343,
											"end": 2385,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2343,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2512,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2519,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2519,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2564,
											"end": 2589,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2564,
											"end": 2589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2589,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2564,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2849,
											"name": "PUSH",
											"source": 7,
											"value": "2E"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2917,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2917,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 2981,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3072,
											"end": 3103,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3072,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3072,
											"end": 3103,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3072,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 3072,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3072,
											"end": 3103,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3072,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3197,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 3181,
											"end": 3213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3213,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3181,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 2981,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3307,
											"end": 3354,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3354,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3354,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3307,
											"end": 3354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3354,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3307,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "506F6F6C205570677261646520284561726E696E6729"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3707,
											"end": 3722,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "404DF00F6E66BFF52B1BBE26C09DC1DEC3DB2C9F5CC1962E398CEEA85FE88B34"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3622,
											"end": 3723,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 2301,
											"end": 2311,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3723,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3723,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "416C726561647920707572636861736564206E65787420706F6F6C0000000000"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F756768206E65787420706F6F6C2062616C616E636500000000"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81A1A59DA195C881C1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1927,
											"end": 1995,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 422,
											"end": 450,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1530,
											"end": 1564,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 987,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1012,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1046,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1012,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1012,
											"end": 1067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1012,
											"end": 1067,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1012,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1103,
											"end": 1104,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1086,
											"end": 1100,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 1086,
											"end": 1100,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1100,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1104,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1078,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1078,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1265,
											"end": 1286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1265,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1286,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1265,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1344,
											"name": "PUSH",
											"source": 7,
											"value": "2E"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1411,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1411,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1411,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1482,
											"end": 1512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1568,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 1552,
											"end": 1568,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1568,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1552,
											"end": 1584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1669,
											"end": 1681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 1669,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1711,
											"end": 1724,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1837,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1837,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1867,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "506F6F6C205265546F70757020284561726E696E6729"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1837,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 1902,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "404DF00F6E66BFF52B1BBE26C09DC1DEC3DB2C9F5CC1962E398CEEA85FE88B34"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1921,
											"end": 2016,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 2016,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 2016,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F756768207265546F7075702062616C616E6365000000000000"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8680,
											"end": 8686,
											"name": "PUSH",
											"source": 8,
											"value": "93A80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 900,
											"end": 908,
											"name": "PUSH",
											"source": 8,
											"value": "2514300"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11590,
											"end": 11622,
											"name": "PUSH",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11510,
											"end": 11541,
											"name": "PUSH",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1875,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3825,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3845,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3869,
											"end": 3879,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3853,
											"end": 3879,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3845,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3845,
											"end": 3900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3845,
											"end": 3900,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 3845,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3919,
											"end": 3933,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 3919,
											"end": 3933,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3919,
											"end": 3933,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3937,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3911,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 3911,
											"end": 3954,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3911,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3911,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3911,
											"end": 3954,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 3911,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4117,
											"end": 4132,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4268,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4258,
											"end": 4268,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4268,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4285,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4406,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4406,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4406,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4406,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4406,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4390,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 4390,
											"end": 4497,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4527,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4546,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4507,
											"end": 4573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4573,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 4507,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 4618,
											"end": 4640,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4618,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4640,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 4618,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3869,
											"end": 3879,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4750,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 5305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 4829,
											"end": 5305,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5320,
											"end": 5344,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5320,
											"end": 5344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5346,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5408,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 5320,
											"end": 5408,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 5320,
											"end": 5430,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 5317,
											"end": 5476,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5580,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4527,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5580,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 5564,
											"end": 5596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5596,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 5564,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 5640,
											"end": 5652,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5652,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5652,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5640,
											"end": 5652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5652,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 5640,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4802,
											"end": 4817,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "404DF00F6E66BFF52B1BBE26C09DC1DEC3DB2C9F5CC1962E398CEEA85FE88B34"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5973,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 3869,
											"end": 3879,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5973,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5973,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5476,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 5317,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5462,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 5446,
											"end": 5457,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 5446,
											"end": 5457,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5446,
											"end": 5457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 5317,
											"end": 5476,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5430,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 5320,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3825,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 5413,
											"end": 5424,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 5413,
											"end": 5424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5430,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 5320,
											"end": 5430,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5408,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 5320,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5372,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5351,
											"end": 5372,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5351,
											"end": 5372,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 782,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "2A300"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 5351,
											"end": 5408,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 5320,
											"end": 5408,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 5305,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 4829,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4802,
											"end": 4817,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3825,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5039,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5015,
											"end": 5039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 782,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "2A300"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4802,
											"end": 4817,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 5015,
											"end": 5064,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5088,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 5015,
											"end": 5088,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 5305,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4829,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5012,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5012,
											"end": 5294,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 5305,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 4829,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 5305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 4829,
											"end": 5305,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5012,
											"end": 5294,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5012,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5109,
											"end": 5136,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5109,
											"end": 5136,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5109,
											"end": 5136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5195,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5279,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5012,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5160,
											"end": 5279,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 5236,
											"end": 5238,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5279,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5012,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5012,
											"end": 5294,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5088,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 5015,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3825,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5088,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 5015,
											"end": 5088,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4708,
											"end": 4766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 4708,
											"end": 4766,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4390,
											"end": 4497,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 4390,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4390,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 4390,
											"end": 4497,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "5570677261646520796F7572206C6576656C2066697273740000000000000000"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 782,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "2A300"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1513,
											"end": 1517,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8840,
											"end": 8873,
											"name": "PUSH",
											"source": 8,
											"value": "3A"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10127,
											"end": 10134,
											"name": "PUSH",
											"source": 8,
											"value": "278D00"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6947,
											"end": 7052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7059,
											"end": 7116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7116,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7116,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 7059,
											"end": 7116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7116,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2093,
											"end": 2149,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 683,
											"end": 688,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4630,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4630,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1078,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD081E5BDD5C881858D8DBDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105D081B585E081B195D995B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141BDBDB08185B1C9958591E481C1D5C98DA185CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 193,
											"end": 876,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 193,
											"end": 876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 319,
											"end": 324,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 359,
											"end": 373,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 359,
											"end": 373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 359,
											"end": 373,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 400,
											"end": 412,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 419,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 388,
											"end": 419,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 388,
											"end": 419,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 384,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 384,
											"end": 501,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 576,
											"end": 586,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 534,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 576,
											"end": 586,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 576,
											"end": 586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 576,
											"end": 602,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 572,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 572,
											"end": 687,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 703,
											"end": 715,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 703,
											"end": 715,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 703,
											"end": 744,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 703,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 703,
											"end": 744,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 193,
											"end": 876,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 193,
											"end": 876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 699,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 699,
											"end": 814,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 834,
											"end": 838,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "456C696769626C6520746F20627579206E65787420706F6F6C00000000000000"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 193,
											"end": 876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 193,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 699,
											"end": 814,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 699,
											"end": 814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 534,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4275792070726576696F757320706F6F6C206669727374000000000000000000"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 761,
											"end": 802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 761,
											"end": 802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 703,
											"end": 744,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 703,
											"end": 744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 703,
											"end": 744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 703,
											"end": 744,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 572,
											"end": 687,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 572,
											"end": 687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 619,
											"end": 675,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "596F75206E65656420746F207265616368206120686967686572206C6576656C"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8199A5C9CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 619,
											"end": 675,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 619,
											"end": 675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 384,
											"end": 501,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 384,
											"end": 501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 436,
											"end": 489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 436,
											"end": 489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "596F752061726520616C72656164792061742074686520686967686573742070"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 436,
											"end": 489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 436,
											"end": 489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105D081B585E081C1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B98DBDC9C9958DD08185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 7103,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5995,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 7103,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 7103,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 7103,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6117,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6124,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6096,
											"end": 6124,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6124,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6124,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 6088,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6136,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 6088,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 6168,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 6168,
											"end": 6188,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6168,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6168,
											"end": 6188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6168,
											"end": 6188,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 6168,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6164,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6155,
											"end": 6188,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6147,
											"end": 6209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6209,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 6147,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6309,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 6415,
											"end": 6441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6441,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 6415,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6309,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 6452,
											"end": 6485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6485,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 6452,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6590,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6972,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6309,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6590,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6590,
											"end": 6620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6590,
											"end": 6620,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 6590,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6692,
											"end": 6888,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6888,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6692,
											"end": 6888,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6888,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6888,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6692,
											"end": 6888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6888,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6692,
											"end": 6888,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP15",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 6670,
											"name": "PUSH",
											"source": 7,
											"value": "2F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6912,
											"end": 6925,
											"name": "PUSH",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6912,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6912,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 6912,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6912,
											"end": 6961,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 6912,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6972,
											"end": 6984,
											"name": "PUSH",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6972,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 6972,
											"end": 7018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6972,
											"end": 7018,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 6972,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7352,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7369,
											"end": 7377,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 8546,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7379,
											"end": 7382,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 7379,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7379,
											"end": 7382,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7379,
											"end": 7382,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7379,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 7379,
											"end": 7382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 8546,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 7365,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 8658,
											"end": 8684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8699,
											"end": 8713,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8695,
											"end": 8768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 8695,
											"end": 8768,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 7103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 7103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8695,
											"end": 8768,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 8695,
											"end": 8768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8745,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 8745,
											"end": 8755,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8745,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 8745,
											"end": 8755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8745,
											"end": 8755,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 8745,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 7103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7384,
											"end": 7387,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 7384,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7420,
											"end": 7438,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7420,
											"end": 7438,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7420,
											"end": 7471,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7420,
											"end": 7471,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7420,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 7420,
											"end": 7471,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7384,
											"end": 7387,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 7384,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 7416,
											"end": 7751,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 6670,
											"name": "PUSH",
											"source": 7,
											"value": "2F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7862,
											"end": 7874,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 7862,
											"end": 7874,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6558,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7862,
											"end": 7874,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7862,
											"end": 7874,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7926,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7910,
											"end": 7926,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7926,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7929,
											"end": 7931,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 7910,
											"end": 7931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7931,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 7906,
											"end": 8403,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7384,
											"end": 7387,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 7384,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8426,
											"end": 8460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8426,
											"end": 8460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8426,
											"end": 8460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8426,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 8426,
											"end": 8460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6558,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8426,
											"end": 8460,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8426,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 8426,
											"end": 8460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8426,
											"end": 8460,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 8426,
											"end": 8460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8520,
											"end": 8534,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 8520,
											"end": 8534,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7384,
											"end": 7387,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7369,
											"end": 7377,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7369,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 7369,
											"end": 7377,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 8403,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 7906,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6558,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8018,
											"end": 8020,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 7998,
											"end": 8020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7998,
											"end": 8020,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8018,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 8018,
											"end": 8020,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8953,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9100,
											"end": 9114,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9100,
											"end": 9114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9100,
											"end": 9124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9100,
											"end": 9124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 9100,
											"end": 9124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9100,
											"end": 9124,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 9100,
											"end": 9124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9671,
											"name": "PUSH",
											"source": 7,
											"value": "5F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9671,
											"name": "PUSH",
											"source": 7,
											"value": "5F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13745,
											"end": 13750,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9674,
											"end": 9677,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13823,
											"end": 13848,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13823,
											"end": 13848,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13884,
											"end": 13895,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13884,
											"end": 13895,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8953,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14187,
											"end": 14216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14187,
											"end": 14216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 14187,
											"end": 14216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14187,
											"end": 14216,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 14187,
											"end": 14216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9100,
											"end": 9114,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 14715,
											"end": 14732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14715,
											"end": 14743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14715,
											"end": 14743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 14715,
											"end": 14743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14715,
											"end": 14743,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 14715,
											"end": 14743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15214,
											"end": 15221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 15214,
											"end": 15221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15214,
											"end": 15221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 15214,
											"end": 15221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15214,
											"end": 15221,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 15214,
											"end": 15221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6558,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6415,
											"end": 6427,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 15238,
											"end": 15345,
											"name": "PUSH",
											"source": 8,
											"value": "4D634C31300B97DAD99B3AF799178230163D88AD306370D063BE9CD992D0BE7F"
										},
										{
											"begin": 6692,
											"end": 6888,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15328,
											"end": 15343,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 6692,
											"end": 6888,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15238,
											"end": 15345,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8426,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6558,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9829,
											"end": 9845,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 9674,
											"end": 9677,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9829,
											"end": 9845,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9829,
											"end": 9845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9829,
											"end": 9845,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 9829,
											"end": 9845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 8403,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 8403,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 8403,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 8403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 7906,
											"end": 8403,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 7910,
											"end": 7926,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7910,
											"end": 7926,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9164,
											"end": 9166,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "16995C9BC8185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9674,
											"end": 9677,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9674,
											"end": 9677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7910,
											"end": 7926,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9674,
											"end": 9677,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9674,
											"end": 9677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7910,
											"end": 7926,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7994,
											"end": 8386,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 7994,
											"end": 8386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6558,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6557,
											"end": 6558,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8426,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 8426,
											"end": 8460,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8139,
											"end": 8161,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8159,
											"end": 8161,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8159,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 8159,
											"end": 8161,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8186,
											"end": 8199,
											"name": "PUSH",
											"source": 7,
											"value": "2E"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8186,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8186,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 8186,
											"end": 8252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8186,
											"end": 8252,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 8186,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7994,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 7994,
											"end": 8386,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8135,
											"end": 8386,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 8135,
											"end": 8386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8301,
											"end": 8314,
											"name": "PUSH",
											"source": 7,
											"value": "2E"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8301,
											"end": 8348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8301,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8301,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 8301,
											"end": 8366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7751,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 7416,
											"end": 7751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 7580,
											"end": 7606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7629,
											"end": 7642,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7625,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 7625,
											"end": 7712,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7751,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 7416,
											"end": 7751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 7735,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 7735,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 7735,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 7735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 7735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 7730,
											"end": 7735,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7625,
											"end": 7712,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 7625,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 7682,
											"end": 7691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 7682,
											"end": 7691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 7691,
											"name": "tag",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 7682,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7625,
											"end": 7712,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 7625,
											"end": 7712,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7420,
											"end": 7471,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 7420,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6427,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7442,
											"end": 7471,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7442,
											"end": 7471,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7420,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 7420,
											"end": 7471,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11689,
											"end": 13817,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11689,
											"end": 13817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11689,
											"end": 13817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11785,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 11802,
											"end": 11820,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11793,
											"end": 11827,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11793,
											"end": 11827,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11785,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 11785,
											"end": 11839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11785,
											"end": 11839,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 11785,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11850,
											"end": 11918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 11871,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 11871,
											"end": 11897,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11871,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11871,
											"end": 11897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11850,
											"end": 11918,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 11850,
											"end": 11918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12182,
											"end": 12219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 12182,
											"end": 12219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12182,
											"end": 12219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 12182,
											"end": 12219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12182,
											"end": 12219,
											"name": "tag",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 12182,
											"end": 12219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 12324,
											"end": 12357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12024,
											"name": "PUSH",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12324,
											"end": 12357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 12324,
											"end": 12357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12324,
											"end": 12357,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 12324,
											"end": 12357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12623,
											"end": 12638,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12409,
											"name": "PUSH",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12665,
											"end": 12684,
											"name": "PUSH",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12665,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12665,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 12665,
											"end": 12719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12665,
											"end": 12719,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 12665,
											"end": 12719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12291,
											"end": 12292,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12744,
											"end": 12755,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12744,
											"end": 12755,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12741,
											"end": 13325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 12741,
											"end": 13325,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11689,
											"end": 13817,
											"name": "tag",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 11689,
											"end": 13817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13343,
											"end": 13356,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13343,
											"end": 13356,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13343,
											"end": 13384,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13343,
											"end": 13384,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13343,
											"end": 13384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 13343,
											"end": 13384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11689,
											"end": 13817,
											"name": "tag",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 11689,
											"end": 13817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 13339,
											"end": 13462,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12409,
											"name": "PUSH",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 13549,
											"end": 13565,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13549,
											"end": 13567,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 13545,
											"end": 13790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12291,
											"end": 12292,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8953,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9200,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 9183,
											"end": 9210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9210,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 9183,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9671,
											"name": "PUSH",
											"source": 7,
											"value": "5F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9671,
											"name": "PUSH",
											"source": 7,
											"value": "5F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13745,
											"end": 13750,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9674,
											"end": 9677,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 13823,
											"end": 13848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13823,
											"end": 13848,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13884,
											"end": 13895,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13884,
											"end": 13895,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8953,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9200,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 14187,
											"end": 14216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14187,
											"end": 14216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 14187,
											"end": 14216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14187,
											"end": 14216,
											"name": "tag",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 14187,
											"end": 14216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14798,
											"end": 14818,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14798,
											"end": 14829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14798,
											"end": 14829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 14798,
											"end": 14829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14798,
											"end": 14829,
											"name": "tag",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 14798,
											"end": 14829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15214,
											"end": 15221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 15214,
											"end": 15221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15214,
											"end": 15221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 15214,
											"end": 15221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15214,
											"end": 15221,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 15214,
											"end": 15221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12291,
											"end": 12292,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9239,
											"end": 9257,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15238,
											"end": 15345,
											"name": "PUSH",
											"source": 8,
											"value": "4D634C31300B97DAD99B3AF799178230163D88AD306370D063BE9CD992D0BE7F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12623,
											"end": 12638,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15238,
											"end": 15345,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9052,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9037,
											"end": 9052,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9674,
											"end": 9677,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9829,
											"end": 9845,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9829,
											"end": 9845,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9829,
											"end": 9845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13545,
											"end": 13790,
											"name": "tag",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 13545,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13744,
											"end": 13756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13744,
											"end": 13756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13744,
											"end": 13756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13744,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 13744,
											"end": 13756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13744,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 13744,
											"end": 13756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13343,
											"end": 13384,
											"name": "tag",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 13343,
											"end": 13384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13372,
											"end": 13384,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13360,
											"end": 13384,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13360,
											"end": 13384,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13343,
											"end": 13384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 13343,
											"end": 13384,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12741,
											"end": 13325,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 12741,
											"end": 13325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12795,
											"end": 12800,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "2C0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1A0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1C0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12795,
											"end": 12800,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1E0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "2A0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "PUSH",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 12844,
											"name": "PUSH",
											"source": 7,
											"value": "3E"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 12900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 12900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 12827,
											"end": 12900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 12900,
											"name": "tag",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 12827,
											"end": 12900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "PUSH",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 12844,
											"name": "PUSH",
											"source": 7,
											"value": "3E"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 12623,
											"end": 12638,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12623,
											"end": 12638,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 13018,
											"end": 13073,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13015,
											"end": 13165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 13015,
											"end": 13165,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13183,
											"end": 13200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13183,
											"end": 13200,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 13183,
											"end": 13200,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13179,
											"end": 13300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 13179,
											"end": 13300,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12741,
											"end": 13325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12741,
											"end": 13325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 12741,
											"end": 13325,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13179,
											"end": 13300,
											"name": "tag",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 13179,
											"end": 13300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12845,
											"end": 12863,
											"name": "PUSH",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13265,
											"end": 13283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 13265,
											"end": 13283,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13265,
											"end": 13283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 13265,
											"end": 13283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13265,
											"end": 13283,
											"name": "tag",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 13265,
											"end": 13283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13179,
											"end": 13300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13179,
											"end": 13300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 13179,
											"end": 13300,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13015,
											"end": 13165,
											"name": "tag",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 13015,
											"end": 13165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 13130,
											"end": 13148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "tag",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13015,
											"end": 13165,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13015,
											"end": 13165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 13015,
											"end": 13165,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12291,
											"end": 12292,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12432,
											"end": 12654,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15474,
											"end": 15699,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 15474,
											"end": 15699,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15474,
											"end": 15699,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15565,
											"end": 15578,
											"name": "PUSH",
											"source": 8,
											"value": "3D"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 15565,
											"end": 15609,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 15565,
											"end": 15609,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15564,
											"end": 15609,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15560,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 15560,
											"end": 15692,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15474,
											"end": 15699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15474,
											"end": 15699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15474,
											"end": 15699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15560,
											"end": 15692,
											"name": "tag",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 15560,
											"end": 15692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15667,
											"end": 15675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 15667,
											"end": 15675,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15667,
											"end": 15675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 15667,
											"end": 15675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12825,
											"end": 13580,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 12825,
											"end": 13580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12887,
											"end": 12900,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12887,
											"end": 12914,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12887,
											"end": 12914,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13066,
											"end": 13073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 13066,
											"end": 13073,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13066,
											"end": 13073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 13066,
											"end": 13073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13066,
											"end": 13073,
											"name": "tag",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 13066,
											"end": 13073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13181,
											"end": 13193,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13169,
											"end": 13180,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 13201,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13201,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 13201,
											"end": 13237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13201,
											"end": 13237,
											"name": "tag",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 13201,
											"end": 13237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12887,
											"end": 12900,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13465,
											"end": 13576,
											"name": "PUSH",
											"source": 8,
											"value": "4D634C31300B97DAD99B3AF799178230163D88AD306370D063BE9CD992D0BE7F"
										},
										{
											"begin": 13181,
											"end": 13193,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13559,
											"end": 13574,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13465,
											"end": 13576,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 12825,
											"end": 13580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "199959481859191C9CC81B9BDD081CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15707,
											"end": 17185,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 15707,
											"end": 17185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15876,
											"end": 15894,
											"name": "PUSH",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15864,
											"end": 15894,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15864,
											"end": 15894,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15932,
											"end": 15948,
											"name": "PUSH",
											"source": 8,
											"value": "3B"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 15932,
											"end": 15965,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 15932,
											"end": 15965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "601"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "7FB70D3B53B50F6798636307BC089A811F848F8C80C93EB14575305275478318"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "603"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 102,
											"end": 13831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "603"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16048,
											"end": 16049,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16096,
											"end": 16113,
											"name": "PUSH",
											"source": 8,
											"value": "3E"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16143,
											"end": 16144,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16096,
											"end": 16144,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 16194,
											"end": 16226,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 16194,
											"end": 16318,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16194,
											"end": 16318,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16194,
											"end": 16318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 16194,
											"end": 16318,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15707,
											"end": 17185,
											"name": "tag",
											"source": 8,
											"value": "605"
										},
										{
											"begin": 15707,
											"end": 17185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16096,
											"end": 16144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16096,
											"end": 16144,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16096,
											"end": 16144,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16348,
											"end": 16384,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16348,
											"end": 16384,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 16348,
											"end": 16384,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15707,
											"end": 17185,
											"name": "tag",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 15707,
											"end": 17185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "608"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16785,
											"end": 16798,
											"name": "PUSH",
											"source": 8,
											"value": "3D"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 16832,
											"end": 16857,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 16832,
											"end": 16857,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16832,
											"end": 16857,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15932,
											"end": 15965,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16828,
											"end": 16866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 16828,
											"end": 16866,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16048,
											"end": 16049,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17127,
											"end": 17177,
											"name": "PUSH",
											"source": 8,
											"value": "360CB96D3E85B4FC299DDFA9A572850FC70961C86F0F1703F033143B0E5A82CF"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 16960,
											"end": 16975,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 17031,
											"end": 17052,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "FF00"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16960,
											"end": 16975,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17127,
											"end": 17177,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 15707,
											"end": 17185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16828,
											"end": 16866,
											"name": "tag",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 16828,
											"end": 16866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16859,
											"end": 16866,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16859,
											"end": 16866,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16859,
											"end": 16866,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16859,
											"end": 16866,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16859,
											"end": 16866,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16859,
											"end": 16866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "608"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656C696769626C6520666F72207765656B6C7920636F6E7465737400"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 16348,
											"end": 16384,
											"name": "tag",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 16348,
											"end": 16384,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16348,
											"end": 16384,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16348,
											"end": 16384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16348,
											"end": 16384,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16348,
											"end": 16384,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 16348,
											"end": 16384,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16194,
											"end": 16318,
											"name": "tag",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 16194,
											"end": 16318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16275,
											"end": 16280,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16275,
											"end": 16306,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 16275,
											"end": 16306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16244,
											"end": 16318,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16244,
											"end": 16318,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16194,
											"end": 16318,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16194,
											"end": 16318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "605"
										},
										{
											"begin": 16194,
											"end": 16318,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "601"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "149BDD5B990818DB1BDCD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "tag",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C9BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "614"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "614"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "617"
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "619"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "620"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 5,
											"value": "620"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 13831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "617"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "619"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										}
									],
									".data": {
										"404DF00F6E66BFF52B1BBE26C09DC1DEC3DB2C9F5CC1962E398CEEA85FE88B34": "26adb22cec823ef144935e9fbef1b6b4a3a29dacbe5444d59292fa2620f3d377"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/modules/InfinityPool.sol",
								"contracts/modules/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ACC_PRECISION()": "32fcd966",
							"MONTHLY_ROYALTY_DIRECT()": "d2f0490d",
							"MONTHLY_ROYALTY_LEVEL()": "23fd338e",
							"MONTHLY_ROYALTY_TIME()": "a5e52b99",
							"MONTH_DURATION()": "2a891534",
							"PERCENTS_DIVIDER()": "01c234a8",
							"ROI_2X_TIME()": "3a5084b3",
							"ROI_CAP_DIVIDER()": "58c7d352",
							"ROI_CAP_MULTIPLIER()": "375b43b4",
							"RetopPoolByEarning(uint256,uint256)": "7848f0a3",
							"TIME_STEP()": "32bc298c",
							"TOP_ROYALTY_DIRECT()": "31bb6a30",
							"TOP_ROYALTY_LEVEL()": "2ae0ee0d",
							"TOP_ROYALTY_TIME()": "705fee2d",
							"WEEK_DURATION()": "76f5f700",
							"WeeklyCapping()": "ebe0ff15",
							"WeeklyTotalReward()": "3080b5bc",
							"canBuyNextPool(uint256)": "67d52d4d",
							"communityAccPerPackage(uint256)": "45cb537c",
							"communityAccPerUser()": "78f6ad6d",
							"communityDebt(uint256,uint256)": "89043ece",
							"creatorWallet()": "7cdc65f2",
							"currentMonthlyRound()": "c9ed0708",
							"currentMonthlyStartTime()": "e898fc38",
							"currentWeeklyRound()": "ca8e9121",
							"currentWeeklyStartTime()": "fddc806f",
							"defaultRefId()": "ec597e6f",
							"glbBoosterPackages(uint256)": "2350268f",
							"minLevelForGlbBooster(uint256)": "d0a2fd79",
							"minLevelForPool(uint256)": "2132d204",
							"minPoolForGlbBooster(uint256)": "956a3228",
							"monthlyCapping()": "c8df2908",
							"monthlyTotalReward()": "a59d17d1",
							"packageQualifiedUsers(uint256)": "0676d0d6",
							"packages(uint256)": "c216212a",
							"poolPackages(uint256)": "ae4708dc",
							"registeredUserIds(uint256)": "39ab3603",
							"systemMaintance()": "e9e34a16",
							"teamDevelopment()": "f5d74d93",
							"topRoyaltyReward()": "5b62d1d5",
							"topRoyaltyRound()": "4b8cbf9b",
							"topRoyaltyStartTime()": "9b40ab97",
							"totalUsers()": "bff1f9e1",
							"upgradeBooster(uint256)": "bc1fa7c0",
							"upgradePool(uint256)": "4060160a",
							"upgradePoolByEarning(uint32,uint256)": "8e222e24",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUser\",\"type\":\"uint256\"}],\"name\":\"CommunityBonusDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"incomeType\",\"type\":\"uint256\"}],\"name\":\"IncomeDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Storage.IncomeType\",\"name\":\"incomeType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"IncomeDistribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromUserId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LotteryReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyRewardClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyRoyaltyQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uplineId\",\"type\":\"uint256\"}],\"name\":\"Registration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"level\",\"type\":\"string\"}],\"name\":\"RewardSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyRewardClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packagePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"depositType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upgradeTime\",\"type\":\"uint256\"}],\"name\":\"Upgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"matrixId\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"userId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"parentId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"}],\"name\":\"UserJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyContestQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyRewardClaim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACC_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY_DIRECT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTH_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_2X_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"RetopPoolByEarning\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY_DIRECT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEEK_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"}],\"name\":\"canBuyNextPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"eligible\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"communityAccPerPackage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityAccPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"communityDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultRefId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"glbBoosterPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minPoolForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"packageQualifiedUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"packages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredUserIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemMaintance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamDevelopment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"upgradeBooster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"upgradePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_userId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"upgradePoolByEarning\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/InfinityPool.sol\":\"InfinityPool\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/modules/InfinityPool.sol\":{\"keccak256\":\"0x15615011ea1ded93e9e367ffa7b1e9c93811f2d71b6ebfc2b912f7c11691f4d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78544d4b9d88273159cc85f0fdac893d2833e0faa9a94e91ae0dff07b0a750a8\",\"dweb:/ipfs/QmPDqrf9HzsyGw3ZZbvp1LqzkVDV9cVw7a7yiogmxyz9Kd\"]},\"contracts/modules/Storage.sol\":{\"keccak256\":\"0x8ba0247fd5f1fedd5fd9c585ac97006b1ca5515122ea23c330b16647319f247c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2260b66545d937f13740dfaf768955911da5ef92da8d84b97a863eb7e9db2d8\",\"dweb:/ipfs/QmbKAp8BGrgy4BF3RmjhjkvVrE7jN8tFhfYuhGiPCD31dD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1914,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "usdt",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)232"
							},
							{
								"astId": 1916,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "creatorWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1918,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "systemMaintance",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1920,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "teamDevelopment",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1922,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "defaultRefId",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1924,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "totalUsers",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1963,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "registeredUserIds",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1965,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "nonce",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1970,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "communityAccPerUser",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1974,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "communityAccPerPackage",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1980,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "communityDebt",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1984,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "packageQualifiedUsers",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2033,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "packages",
								"offset": 0,
								"slot": "13",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2147,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "addressToId",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2152,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "users",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_struct(User)2089_storage)"
							},
							{
								"astId": 2157,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userIncomes",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_struct(UserIncome)2114_storage)"
							},
							{
								"astId": 2163,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "incomeHistory",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_uint256,t_array(t_struct(Income)2132_storage)dyn_storage)"
							},
							{
								"astId": 2170,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "teams",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2174,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "matrixDirect",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2179,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "directReferrals",
								"offset": 0,
								"slot": "20",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2283,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "poolPackages",
								"offset": 0,
								"slot": "21",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2295,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "glbBoosterPackages",
								"offset": 0,
								"slot": "22",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2307,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "minLevelForPool",
								"offset": 0,
								"slot": "23",
								"type": "t_array(t_uint256)7_storage"
							},
							{
								"astId": 2320,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "minLevelForGlbBooster",
								"offset": 0,
								"slot": "30",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 2333,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "minPoolForGlbBooster",
								"offset": 0,
								"slot": "38",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 2367,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userPooltopup",
								"offset": 0,
								"slot": "46",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)2349_storage))"
							},
							{
								"astId": 2374,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userPooldtl",
								"offset": 0,
								"slot": "47",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)2344_storage))"
							},
							{
								"astId": 2381,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userChildren",
								"offset": 0,
								"slot": "48",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2388,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userIdPerPool",
								"offset": 0,
								"slot": "49",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2393,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "poolUsers",
								"offset": 0,
								"slot": "50",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2399,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userHasPool",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2406,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userBoosterdtl",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)2360_storage))"
							},
							{
								"astId": 2413,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userBoosterChildren",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2418,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "boosterUsers",
								"offset": 0,
								"slot": "54",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2424,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "userHasbooster",
								"offset": 0,
								"slot": "55",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2433,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "currentWeeklyRound",
								"offset": 0,
								"slot": "56",
								"type": "t_uint256"
							},
							{
								"astId": 2436,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "currentWeeklyStartTime",
								"offset": 0,
								"slot": "57",
								"type": "t_uint256"
							},
							{
								"astId": 2439,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "WeeklyTotalReward",
								"offset": 0,
								"slot": "58",
								"type": "t_uint256"
							},
							{
								"astId": 2474,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "weeklyContestdtl",
								"offset": 0,
								"slot": "59",
								"type": "t_mapping(t_uint256,t_struct(WeeklyContest)2458_storage)"
							},
							{
								"astId": 2479,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "weeklyQualifiedUsers",
								"offset": 0,
								"slot": "60",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2486,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "weeklyUserdtl",
								"offset": 0,
								"slot": "61",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2469_storage))"
							},
							{
								"astId": 2493,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "weeklyUserDirects",
								"offset": 0,
								"slot": "62",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2536,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "currentMonthlyRound",
								"offset": 0,
								"slot": "63",
								"type": "t_uint256"
							},
							{
								"astId": 2539,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "currentMonthlyStartTime",
								"offset": 0,
								"slot": "64",
								"type": "t_uint256"
							},
							{
								"astId": 2542,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "monthlyTotalReward",
								"offset": 0,
								"slot": "65",
								"type": "t_uint256"
							},
							{
								"astId": 2579,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "monthlyRoyaltydtl",
								"offset": 0,
								"slot": "66",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyalty)2561_storage)"
							},
							{
								"astId": 2582,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "monthlyQualifiedUsers",
								"offset": 0,
								"slot": "67",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2587,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "monthlyRoyaltyUserdtl",
								"offset": 0,
								"slot": "68",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2574_storage)"
							},
							{
								"astId": 2592,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "monthlyUserDirects",
								"offset": 0,
								"slot": "69",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2629,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "topRoyaltyRound",
								"offset": 0,
								"slot": "70",
								"type": "t_uint256"
							},
							{
								"astId": 2632,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "topRoyaltyStartTime",
								"offset": 0,
								"slot": "71",
								"type": "t_uint256"
							},
							{
								"astId": 2635,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "topRoyaltyReward",
								"offset": 0,
								"slot": "72",
								"type": "t_uint256"
							},
							{
								"astId": 2672,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "topRoyaltydtl",
								"offset": 0,
								"slot": "73",
								"type": "t_mapping(t_uint256,t_struct(topRoyalty)2654_storage)"
							},
							{
								"astId": 2675,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "topRoyaltyQualifiedUsers",
								"offset": 0,
								"slot": "74",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2680,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "topRoyaltyUserdtl",
								"offset": 0,
								"slot": "75",
								"type": "t_mapping(t_uint256,t_struct(topRoyaltyUser)2667_storage)"
							},
							{
								"astId": 2685,
								"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
								"label": "topRoyaltyUserDirects",
								"offset": 0,
								"slot": "76",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Deposit)2042_storage)dyn_storage": {
								"base": "t_struct(Deposit)2042_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Deposit[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Income)2132_storage)dyn_storage": {
								"base": "t_struct(Income)2132_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Income[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)7_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[7]",
								"numberOfBytes": "224"
							},
							"t_array(t_uint256)8_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[8]",
								"numberOfBytes": "256"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)232": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_array(t_struct(Income)2132_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.Income[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Income)2132_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)2360_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserBooster)2360_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)2344_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPool)2344_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)2349_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPoolTopup)2349_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2469_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(weeklyUser)2469_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_uint256,t_struct(User)2089_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)2089_storage"
							},
							"t_mapping(t_uint256,t_struct(UserBooster)2360_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserBooster)",
								"numberOfBytes": "32",
								"value": "t_struct(UserBooster)2360_storage"
							},
							"t_mapping(t_uint256,t_struct(UserIncome)2114_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserIncome)",
								"numberOfBytes": "32",
								"value": "t_struct(UserIncome)2114_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPool)2344_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPool)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPool)2344_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPoolTopup)2349_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPoolTopup)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPoolTopup)2349_storage"
							},
							"t_mapping(t_uint256,t_struct(WeeklyContest)2458_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.WeeklyContest)",
								"numberOfBytes": "32",
								"value": "t_struct(WeeklyContest)2458_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyalty)2561_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyalty)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyalty)2561_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2574_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyaltyUser)2574_storage"
							},
							"t_mapping(t_uint256,t_struct(topRoyalty)2654_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.topRoyalty)",
								"numberOfBytes": "32",
								"value": "t_struct(topRoyalty)2654_storage"
							},
							"t_mapping(t_uint256,t_struct(topRoyaltyUser)2667_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.topRoyaltyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(topRoyaltyUser)2667_storage"
							},
							"t_mapping(t_uint256,t_struct(weeklyUser)2469_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.weeklyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(weeklyUser)2469_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Deposit)2042_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Deposit",
								"members": [
									{
										"astId": 2035,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2037,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "withdrawn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2039,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "start",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2041,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "depositType",
										"offset": 0,
										"slot": "3",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Income)2132_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Income",
								"members": [
									{
										"astId": 2123,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "fromUserId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2125,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2127,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "packageLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2129,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2131,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "incomeType",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(User)2089_storage": {
								"encoding": "inplace",
								"label": "struct Storage.User",
								"members": [
									{
										"astId": 2044,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "account",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2048,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "deposits",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Deposit)2042_storage)dyn_storage"
									},
									{
										"astId": 2050,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "checkpoint",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2052,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "id",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2054,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "sponsorId",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2056,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "uplineId",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2058,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "level",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2060,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "directTeam",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2062,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "directPoolQualified",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2064,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "totalMatrixTeam",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2066,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "totalDeposit",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2068,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "roiCap",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 2070,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "poollevel",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 2072,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "poolDeposit",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 2074,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "poolStartTime",
										"offset": 0,
										"slot": "14",
										"type": "t_uint256"
									},
									{
										"astId": 2076,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "boosterlevel",
										"offset": 0,
										"slot": "15",
										"type": "t_uint256"
									},
									{
										"astId": 2078,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "boosterDeposit",
										"offset": 0,
										"slot": "16",
										"type": "t_uint256"
									},
									{
										"astId": 2080,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "registrationTime",
										"offset": 0,
										"slot": "17",
										"type": "t_uint256"
									},
									{
										"astId": 2082,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "level10Time",
										"offset": 0,
										"slot": "18",
										"type": "t_uint256"
									},
									{
										"astId": 2084,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "level15Time",
										"offset": 0,
										"slot": "19",
										"type": "t_uint256"
									},
									{
										"astId": 2086,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "monthlyUserDirectCount",
										"offset": 0,
										"slot": "20",
										"type": "t_uint256"
									},
									{
										"astId": 2088,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "topRoyaltyDirectCount",
										"offset": 0,
										"slot": "21",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "704"
							},
							"t_struct(UserBooster)2360_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserBooster",
								"members": [
									{
										"astId": 2351,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2353,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "poolId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2355,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "parentId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2357,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "bonusCount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2359,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "joinTime",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserIncome)2114_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserIncome",
								"members": [
									{
										"astId": 2091,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "totalIncome",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2093,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "sponsorIncome",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2095,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "matrixIncome",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2097,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "levelBoosterIncome",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2099,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "royaltyIncome",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2101,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "royaltyIncomeClaimed",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2103,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "communityIncome",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2105,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "poolIncome",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2107,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "boosterIncome",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2109,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "weeklyContestIncome",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2111,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "monthlyRoyalty",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2113,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "topRoyalty",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "384"
							},
							"t_struct(UserPool)2344_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPool",
								"members": [
									{
										"astId": 2335,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2337,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "mainid",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2339,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "poolId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2341,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "parentId",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2343,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "bonusCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserPoolTopup)2349_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPoolTopup",
								"members": [
									{
										"astId": 2346,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "nextPoolAmt",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2348,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "reTopupAmt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(WeeklyContest)2458_storage": {
								"encoding": "inplace",
								"label": "struct Storage.WeeklyContest",
								"members": [
									{
										"astId": 2441,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2443,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2445,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2447,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2449,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2451,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2453,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2455,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2457,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyalty)2561_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyalty",
								"members": [
									{
										"astId": 2544,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2546,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2548,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2550,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2552,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2554,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2556,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2558,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2560,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyaltyUser)2574_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyaltyUser",
								"members": [
									{
										"astId": 2563,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2565,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "qualifiedRoundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2567,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2571,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_uint256,t_bool)"
									},
									{
										"astId": 2573,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "isQualified",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(topRoyalty)2654_storage": {
								"encoding": "inplace",
								"label": "struct Storage.topRoyalty",
								"members": [
									{
										"astId": 2637,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2639,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2641,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2643,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2645,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2647,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2649,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2651,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2653,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(topRoyaltyUser)2667_storage": {
								"encoding": "inplace",
								"label": "struct Storage.topRoyaltyUser",
								"members": [
									{
										"astId": 2656,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2658,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "qualifiedRoundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2660,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2664,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_uint256,t_bool)"
									},
									{
										"astId": 2666,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "isQualified",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(weeklyUser)2469_storage": {
								"encoding": "inplace",
								"label": "struct Storage.weeklyUser",
								"members": [
									{
										"astId": 2460,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2462,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "roundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2464,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2466,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 2468,
										"contract": "contracts/modules/InfinityPool.sol:InfinityPool",
										"label": "isQualified",
										"offset": 1,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/Storage.sol": {
				"Storage": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usersCount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUser",
									"type": "uint256"
								}
							],
							"name": "CommunityBonusDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "incomeType",
									"type": "uint256"
								}
							],
							"name": "IncomeDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "toId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum Storage.IncomeType",
									"name": "incomeType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "IncomeDistribution",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromUserId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LotteryReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyRewardClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyRoyaltyQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sponsor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "uplineId",
									"type": "uint256"
								}
							],
							"name": "Registration",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "level",
									"type": "string"
								}
							],
							"name": "RewardSent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyRewardClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packagePrice",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "depositType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "upgradeTime",
									"type": "uint256"
								}
							],
							"name": "Upgrade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint8",
									"name": "matrixId",
									"type": "uint8"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "userId",
									"type": "uint32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "parentId",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "parentAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "position",
									"type": "uint8"
								}
							],
							"name": "UserJoined",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyContestQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyRewardClaim",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACC_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY_DIRECT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY_LEVEL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY_TIME",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTH_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERCENTS_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_2X_TIME",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TIME_STEP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY_DIRECT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY_LEVEL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY_TIME",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WEEK_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "communityAccPerPackage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "communityAccPerUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "communityDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creatorWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultRefId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "glbBoosterPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minPoolForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "packageQualifiedUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "packages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "registeredUserIds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "systemMaintance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamDevelopment",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_4, callvalue)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  sstore\n  mload(0x40)\n  0x01e0\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup3\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n    /* \"contracts/modules/Storage.sol\":2222:2231  15 * 1e18 */\n  0xd02ab486cedc0000\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":2254:2263  25 * 1e18 */\n  0x015af1d78b58c40000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2286:2295  50 * 1e18 */\n  0x02b5e3af16b1880000\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2318:2328  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x60\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2351:2361  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x80\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2384:2394  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xa0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2417:2427  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xc0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2450:2461  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xe0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2484:2495  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0100\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2518:2529  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0120\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2552:2564  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0140\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2587:2599  25600 * 1e18 */\n  0x056bc75e2d6310000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0160\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2622:2634  51200 * 1e18 */\n  0x0ad78ebc5ac620000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0180\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2657:2670  102400 * 1e18 */\n  0x15af1d78b58c40000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x01a0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2693:2706  204800 * 1e18 */\n  0x2b5e3af16b1880000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x01c0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0d\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0f\n  0x0d\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0f\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  lt\n  tag_8\n  jumpi\ntag_9:\n  pop\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0d\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\ntag_10:\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0f\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_11\n  jumpi\n  tag_13\n  tag_1\n  jump\t// in\ntag_13:\n    /* \"contracts/modules/Storage.sol\":6877:6882  75e18 */\n  0x0410d586a20a4c0000\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":6884:6890  300e18 */\n  0x1043561a8829300000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6892:6899  1200e18 */\n  0x410d586a20a4c00000\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6901:6908  4800e18 */\n  0x01043561a88293000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6910:6918  19200e18 */\n  0x0410d586a20a4c000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6920:6928  76800e18 */\n  0x1043561a882930000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6930:6939  307200e18 */\n  0x410d586a20a4c0000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x15\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n  0x15\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  lt\n  tag_14\n  jumpi\ntag_15:\n  pop\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x15\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\ntag_16:\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_17\n  jumpi\n  tag_19\n  tag_2\n  jump\t// in\ntag_19:\n    /* \"contracts/modules/Storage.sol\":2318:2328  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":2351:2361  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2384:2394  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2417:2427  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2450:2461  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2484:2495  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2518:2529  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2552:2564  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x16\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n  0x16\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  lt\n  tag_20\n  jumpi\ntag_21:\n  pop\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x16\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\ntag_22:\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_23\n  jumpi\n  tag_25\n  tag_1\n  jump\t// in\ntag_25:\n    /* \"contracts/modules/Storage.sol\":7093:7094  3 */\n  0x03\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":7092:7116  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":7092:7116  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":7102:7103  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":7092:7116  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":7105:7107  11 */\n  0x0b\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":7092:7116  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0d\n  0xa0\n    /* \"contracts/modules/Storage.sol\":7092:7116  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0f\n  0xc0\n    /* \"contracts/modules/Storage.sol\":7092:7116  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\ntag_26:\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_27\n  jumpi\n  tag_29\n  tag_2\n  jump\t// in\ntag_29:\n    /* \"contracts/modules/Storage.sol\":7163:7164  4 */\n  0x04\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":7169:7170  6 */\n  0x06\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":7102:7103  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":7181:7183  10 */\n  0x0a\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":7105:7107  11 */\n  0x0b\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\ntag_30:\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_31\n  jumpi\n  tag_33\n  tag_2\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\ntag_34:\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8785:8786  0 */\n  0x38\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8830:8831  0 */\n  0x39\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8872:8873  0 */\n  0x3a\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":10234:10235  1 */\n  0x3f\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  0x40\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":10321:10322  0 */\n  0x41\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":11540:11541  1 */\n  0x46\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":11582:11583  0 */\n  0x47\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":11621:11622  0 */\n  0x48\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_35:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":7232:7255  [0, 1, 1, 1, 1, 1, 1,1] */\n  0x26\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  add\n  sstore\n  add\n  jump(tag_34)\ntag_31:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":7162:7187  [4, 5, 6, 7, 8, 9, 10,11] */\n  0x1e\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  add\n  sstore\n  add\n  jump(tag_30)\ntag_27:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":7092:7116  [3, 5, 7, 9, 11, 13, 15] */\n  0x17\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  add\n  sstore\n  add\n  jump(tag_26)\ntag_23:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  add\n  jump(tag_22)\ntag_20:\n    /* \"contracts/modules/Storage.sol\":6982:7052  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x16\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n  tag_37\n  swap1\n  0xd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124289\n  add\n  0xd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124291\n  tag_3\n  jump\t// in\ntag_37:\n  dup2\n  jump(tag_21)\ntag_17:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  add\n  jump(tag_16)\ntag_14:\n    /* \"contracts/modules/Storage.sol\":6876:6940  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x15\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n  tag_38\n  swap1\n  0x55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475\n  add\n  0x55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47c\n  tag_3\n  jump\t// in\ntag_38:\n  dup2\n  jump(tag_15)\ntag_11:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  add\n  jump(tag_10)\ntag_8:\n    /* \"contracts/modules/Storage.sol\":2211:2726  [... */\n  0x0d\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n  tag_39\n  swap1\n  0xd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5\n  add\n  0xd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1ec4\n  tag_3\n  jump\t// in\ntag_39:\n  0x00\n  jump(tag_9)\ntag_6:\n  shl(0xe0, 0x4e487b71)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  mstore\n  mstore(0x04, 0x41)\n  0x24\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n  revert\ntag_4:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap1\n  0xe0\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  mload(0x40)\n  swap1\n  0x0100\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_3:\n  dup2\n  dup2\n  lt\n  tag_45\n  jumpi\n  pop\n  pop\n  jump\t// out\ntag_45:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_3)\nstop\n\nsub_0: assembly {\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_3, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_3:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01c234a8\n      eq\n      tag_5\n      jumpi\n      pop\n      dup1\n      0x0676d0d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2132d204\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2350268f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x23fd338e\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x2a891534\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x2ae0ee0d\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x3080b5bc\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x31bb6a30\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x32bc298c\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x32fcd966\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x375b43b4\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x39ab3603\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x3a5084b3\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x45cb537c\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x4b8cbf9b\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x58c7d352\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x5b62d1d5\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x705fee2d\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x76f5f700\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x78f6ad6d\n      eq\n      tag_47\n      jumpi\n      dup1\n      0x7cdc65f2\n      eq\n      tag_49\n      jumpi\n      dup1\n      0x89043ece\n      eq\n      tag_51\n      jumpi\n      dup1\n      0x956a3228\n      eq\n      tag_53\n      jumpi\n      dup1\n      0x9b40ab97\n      eq\n      tag_55\n      jumpi\n      dup1\n      0xa59d17d1\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xa5e52b99\n      eq\n      tag_59\n      jumpi\n      dup1\n      0xae4708dc\n      eq\n      tag_61\n      jumpi\n      dup1\n      0xbff1f9e1\n      eq\n      tag_63\n      jumpi\n      dup1\n      0xc216212a\n      eq\n      tag_65\n      jumpi\n      dup1\n      0xc8df2908\n      eq\n      tag_67\n      jumpi\n      dup1\n      0xc9ed0708\n      eq\n      tag_69\n      jumpi\n      dup1\n      0xca8e9121\n      eq\n      tag_71\n      jumpi\n      dup1\n      0xd0a2fd79\n      eq\n      tag_73\n      jumpi\n      dup1\n      0xd2f0490d\n      eq\n      tag_75\n      jumpi\n      dup1\n      0xe898fc38\n      eq\n      tag_77\n      jumpi\n      dup1\n      0xe9e34a16\n      eq\n      tag_79\n      jumpi\n      dup1\n      0xebe0ff15\n      eq\n      tag_81\n      jumpi\n      dup1\n      0xec597e6f\n      eq\n      tag_83\n      jumpi\n      dup1\n      0xf5d74d93\n      eq\n      tag_85\n      jumpi\n      0xfddc806f\n      eq\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8793:8831  uint public currentWeeklyStartTime = 0 */\n      0x39\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_91:\n      0x00\n      dup1\n      revert\n    tag_85:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x04)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_83:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":534:558  uint public defaultRefId */\n      0x05\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_81:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":8733:8740  1000e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_79:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":460:490  address public systemMaintance */\n      0x03\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_77:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      sload(0x40)\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_75:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1187:1188  5 */\n      0x05\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_73:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":7123:7187  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":7123:7187  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      0x1e\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_71:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8752:8786  uint public currentWeeklyRound = 0 */\n      0x38\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_69:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":10200:10235  uint public currentMonthlyRound = 1 */\n      0x3f\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_67:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":10179:10187  10000e18 */\n      0x021e19e0c9bab2400000\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_65:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":2186:2726  uint[] public packages = [... */\n      0x0d\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":2186:2726  uint[] public packages = [... */\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x0d\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_141\n      jumpi\n        /* \"contracts/modules/Storage.sol\":2186:2726  uint[] public packages = [... */\n      0x0d\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0xd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_141:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_63:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":565:587  uint public totalUsers */\n      0x06\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_61:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":6847:6940  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x15\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":6847:6940  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x15\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_141\n      jumpi\n        /* \"contracts/modules/Storage.sol\":6847:6940  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x15\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0x55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_59:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":842:850  100 days */\n      0x83d600\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_57:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":10288:10322  uint public monthlyTotalReward = 0 */\n      0x41\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_55:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":11548:11583  uint public topRoyaltyStartTime = 0 */\n      0x47\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_53:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":7194:7255  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":7194:7255  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      0x26\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_51:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x40))\n      mstore(0x00, calldataload(0x04))\n        /* \"contracts/modules/Storage.sol\":1927:1995  mapping(uint256 => mapping(uint256 => uint256)) public communityDebt */\n      0x0b\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mstore(0x00, calldataload(0x24))\n      0x20\n      mstore\n      0x20\n      sload(keccak256(0x00, 0x40))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_49:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":422:450  address public creatorWallet */\n      0x02\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_47:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":1530:1564  uint256 public communityAccPerUser */\n      0x09\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_45:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":8680:8686  7 days */\n      0x093a80\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_43:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":900:908  450 days */\n      0x02514300\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_41:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":11590:11622  uint public topRoyaltyReward = 0 */\n      0x48\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_39:\n      tag_1\n      jump\t// in\n    tag_37:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":11510:11541  uint public topRoyaltyRound = 1 */\n      0x46\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_35:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n        /* \"contracts/modules/Storage.sol\":1818:1875  mapping(uint256 => uint256) public communityAccPerPackage */\n      0x0a\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      0x20\n      mstore\n      0x20\n      sload(keccak256(0x00, 0x40))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_33:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":782:788  2 days */\n      0x02a300\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_31:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":1257:1288  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":1257:1288  uint[] public registeredUserIds */\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x07\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_141\n      jumpi\n        /* \"contracts/modules/Storage.sol\":1257:1288  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_29:\n      tag_2\n      jump\t// in\n    tag_27:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1513:1517  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_25:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":731:737  1 days */\n      0x015180\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_23:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1240:1241  2 */\n      0x02\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_21:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8840:8873  uint public WeeklyTotalReward = 0 */\n      0x3a\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_19:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x01)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_15:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":10127:10134  30 days */\n      0x278d00\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_11:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":6947:7052  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x16\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":6947:7052  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x16\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_141\n      jumpi\n        /* \"contracts/modules/Storage.sol\":6947:7052  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x16\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0xd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124289\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_9:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x07\n        /* \"contracts/modules/Storage.sol\":7059:7116  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":7059:7116  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      0x17\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_7:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n        /* \"contracts/modules/Storage.sol\":2093:2149  mapping(uint256 => uint256) public packageQualifiedUsers */\n      0x0c\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      0x20\n      mstore\n      0x20\n      sload(keccak256(0x00, 0x40))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_5:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      dup1\n        /* \"contracts/modules/Storage.sol\":683:688  10000 */\n      0x2710\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap3\n      mstore\n      return\n    tag_1:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1076:1078  10 */\n      0x0a\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_2:\n      jumpi(tag_91, callvalue)\n      jumpi(tag_91, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1129:1131  15 */\n      0x0f\n        /* \"contracts/modules/Storage.sol\":292:20031  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n\n    auxdata: 0xa26469706673582212200b6071485ca75dc111274c8dbb61068a0b223d4f0ad2449f0acb8e8581516da364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"allocate_memory": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_3495": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"clear_storage_range_uint256": {
									"entryPoint": 1390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523461052b5760015f556040516101e081016001600160401b038111828210176105175760405267d02ab486cedc0000815268015af1d78b58c4000060208201526802b5e3af16b1880000604082015268056bc75e2d631000006060820152680ad78ebc5ac620000060808201526815af1d78b58c40000060a0820152682b5e3af16b1880000060c08201526856bc75e2d63100000060e082015268ad78ebc5ac6200000061010082015269015af1d78b58c40000006101208201526902b5e3af16b18800000061014082015269056bc75e2d6310000000610160820152690ad78ebc5ac6200000006101808201526915af1d78b58c400000006101a0820152692b5e3af16b18800000006101c0820152600d54600f600d5580600f106104c1575b50600d5f5260205f20905f5b600f81106104a45761014161052f565b680410d586a20a4c00008152681043561a8829300000602082015268410d586a20a4c0000060408201526901043561a882930000006060820152690410d586a20a4c0000006080820152691043561a88293000000060a082015269410d586a20a4c000000060c082015260155460076015558060071061044e575b5060155f5260205f20905f5b60078110610431576101d861054e565b68056bc75e2d631000008152680ad78ebc5ac620000060208201526815af1d78b58c4000006040820152682b5e3af16b1880000060608201526856bc75e2d631000000608082015268ad78ebc5ac6200000060a082015269015af1d78b58c400000060c08201526902b5e3af16b18800000060e08201526016546008601655806008106103db575b5060165f5260205f20905f5b600881106103be5761027c61052f565b60038152600560208201526007604082015260096060820152600b6080820152600d60a0820152600f60c08201525f5b600781106103a6576102bc61054e565b6004815260056020820152600660408201526007606082015260086080820152600960a0820152600a60c0820152600b60e08201525f5b6008811061038e5761030361054e565b5f815260016020820152600160408201526001606082015260016080820152600160a0820152600160c0820152600160e08201525f5b60088110610376575f6038555f6039555f603a556001603f555f6040555f60415560016046555f6047555f60485560405161085290816105858239f35b600190602060ff845116930192816026015501610339565b600190602060ff84511693019281601e0155016102f3565b600190602060ff8451169301928160170155016102ac565b81516001600160501b03168184015560209091019060010161026c565b60165f5261042b907fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124289017fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512429161056e565b81610260565b81516001600160501b0316818401556020909101906001016101c8565b60155f5261049e907f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475017f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec47c61056e565b816101bc565b81516001600160501b031681840155602090910190600101610131565b600d5f52610511907fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5017fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1ec461056e565b5f610125565b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b6040519060e082016001600160401b0381118382101761051757604052565b6040519061010082016001600160401b0381118382101761051757604052565b818110610579575050565b5f815560010161056e56fe6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a8146107cc575080630676d0d6146107a25780632132d204146107765780632350268f1461071c57806323fd338e146105985780632a891534146106ff5780632ae0ee0d1461065b5780632f48ab7d146106d75780633080b5bc146106ba57806331bb6a301461069f57806332bc298c1461068257806332fcd96614610660578063375b43b41461065b57806339ab3603146106015780633a5084b3146105e457806345cb537c146105ba5780634b8cbf9b1461059d57806358c7d352146105985780635b62d1d51461057b578063705fee2d1461055d57806376f5f7001461054057806378f6ad6d146105235780637cdc65f2146104fb57806389043ece146104c5578063956a3228146104995780639b40ab971461047c578063a59d17d11461045f578063a5e52b9914610442578063ae4708dc146103e8578063bff1f9e1146103cb578063c216212a1461035d578063c8df290814610339578063c9ed07081461031c578063ca8e9121146102ff578063d0a2fd79146102d3578063d2f0490d146102b8578063e898fc381461029b578063e9e34a1614610273578063ebe0ff1514610250578063ec597e6f14610233578063f5d74d931461020b5763fddc806f146101ea575f80fd5b34610207575f366003190112610207576020603954604051908152f35b5f80fd5b34610207575f366003190112610207576004546040516001600160a01b039091168152602090f35b34610207575f366003190112610207576020600554604051908152f35b34610207575f366003190112610207576020604051683635c9adc5dea000008152f35b34610207575f366003190112610207576003546040516001600160a01b039091168152602090f35b34610207575f366003190112610207576020604054604051908152f35b34610207575f36600319011261020757602060405160058152f35b3461020757602036600319011261020757600435600881101561020757602090601e0154604051908152f35b34610207575f366003190112610207576020603854604051908152f35b34610207575f366003190112610207576020603f54604051908152f35b34610207575f36600319011261020757602060405169021e19e0c9bab24000008152f35b3461020757602036600319011261020757600435600d5481101561020757600d548110156103b757600d5f527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b34610207575f366003190112610207576020600654604051908152f35b3461020757602036600319011261020757600435601554811015610207576015548110156103b75760155f527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec4750154604051908152602090f35b34610207575f3660031901126102075760206040516283d6008152f35b34610207575f366003190112610207576020604154604051908152f35b34610207575f366003190112610207576020604754604051908152f35b346102075760203660031901126102075760043560088110156102075760209060260154604051908152f35b34610207576040366003190112610207576004355f52600b60205260405f206024355f52602052602060405f2054604051908152f35b34610207575f366003190112610207576002546040516001600160a01b039091168152602090f35b34610207575f366003190112610207576020600954604051908152f35b34610207575f36600319011261020757602060405162093a808152f35b34610207575f36600319011261020757602060405163025143008152f35b34610207575f366003190112610207576020604854604051908152f35b6107e6565b34610207575f366003190112610207576020604654604051908152f35b34610207576020366003190112610207576004355f52600a602052602060405f2054604051908152f35b34610207575f3660031901126102075760206040516202a3008152f35b3461020757602036600319011261020757600435600754811015610207576007548110156103b75760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b610801565b34610207575f366003190112610207576020604051670de0b6b3a76400008152f35b34610207575f366003190112610207576020604051620151808152f35b34610207575f36600319011261020757602060405160028152f35b34610207575f366003190112610207576020603a54604051908152f35b34610207575f366003190112610207576001546040516001600160a01b039091168152602090f35b34610207575f36600319011261020757602060405162278d008152f35b3461020757602036600319011261020757600435601654811015610207576016548110156103b75760165f527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890154604051908152602090f35b346102075760203660031901126102075760043560078110156102075760209060170154604051908152f35b34610207576020366003190112610207576004355f52600c602052602060405f2054604051908152f35b34610207575f366003190112610207578061271060209252f35b34610207575f366003190112610207576020604051600a8152f35b34610207575f366003190112610207576020604051600f8152f3fea26469706673582212200b6071485ca75dc111274c8dbb61068a0b223d4f0ad2449f0acb8e8581516da364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x52B JUMPI PUSH1 0x1 PUSH0 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x517 JUMPI PUSH1 0x40 MSTORE PUSH8 0xD02AB486CEDC0000 DUP2 MSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH2 0x100 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH2 0x120 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH2 0x140 DUP3 ADD MSTORE PUSH10 0x56BC75E2D6310000000 PUSH2 0x160 DUP3 ADD MSTORE PUSH10 0xAD78EBC5AC620000000 PUSH2 0x180 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C40000000 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B1880000000 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xD SLOAD PUSH1 0xF PUSH1 0xD SSTORE DUP1 PUSH1 0xF LT PUSH2 0x4C1 JUMPI JUMPDEST POP PUSH1 0xD PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0xF DUP2 LT PUSH2 0x4A4 JUMPI PUSH2 0x141 PUSH2 0x52F JUMP JUMPDEST PUSH9 0x410D586A20A4C0000 DUP2 MSTORE PUSH9 0x1043561A8829300000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x410D586A20A4C00000 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1043561A88293000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH10 0x1043561A882930000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C0000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x15 SLOAD PUSH1 0x7 PUSH1 0x15 SSTORE DUP1 PUSH1 0x7 LT PUSH2 0x44E JUMPI JUMPDEST POP PUSH1 0x15 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x431 JUMPI PUSH2 0x1D8 PUSH2 0x54E JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x16 SLOAD PUSH1 0x8 PUSH1 0x16 SSTORE DUP1 PUSH1 0x8 LT PUSH2 0x3DB JUMPI JUMPDEST POP PUSH1 0x16 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x3BE JUMPI PUSH2 0x27C PUSH2 0x52F JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0xC0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x3A6 JUMPI PUSH2 0x2BC PUSH2 0x54E JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x38E JUMPI PUSH2 0x303 PUSH2 0x54E JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x376 JUMPI PUSH0 PUSH1 0x38 SSTORE PUSH0 PUSH1 0x39 SSTORE PUSH0 PUSH1 0x3A SSTORE PUSH1 0x1 PUSH1 0x3F SSTORE PUSH0 PUSH1 0x40 SSTORE PUSH0 PUSH1 0x41 SSTORE PUSH1 0x1 PUSH1 0x46 SSTORE PUSH0 PUSH1 0x47 SSTORE PUSH0 PUSH1 0x48 SSTORE PUSH1 0x40 MLOAD PUSH2 0x852 SWAP1 DUP2 PUSH2 0x585 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x26 ADD SSTORE ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x1E ADD SSTORE ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x17 ADD SSTORE ADD PUSH2 0x2AC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x26C JUMP JUMPDEST PUSH1 0x16 PUSH0 MSTORE PUSH2 0x42B SWAP1 PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289 ADD PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124291 PUSH2 0x56E JUMP JUMPDEST DUP2 PUSH2 0x260 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x15 PUSH0 MSTORE PUSH2 0x49E SWAP1 PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 ADD PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC47C PUSH2 0x56E JUMP JUMPDEST DUP2 PUSH2 0x1BC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x131 JUMP JUMPDEST PUSH1 0xD PUSH0 MSTORE PUSH2 0x511 SWAP1 PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 ADD PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EC4 PUSH2 0x56E JUMP JUMPDEST PUSH0 PUSH2 0x125 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x100 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x579 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x56E JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0x7CC JUMPI POP DUP1 PUSH4 0x676D0D6 EQ PUSH2 0x7A2 JUMPI DUP1 PUSH4 0x2132D204 EQ PUSH2 0x776 JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0x71C JUMPI DUP1 PUSH4 0x23FD338E EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0x6FF JUMPI DUP1 PUSH4 0x2AE0EE0D EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x6D7 JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0x6BA JUMPI DUP1 PUSH4 0x31BB6A30 EQ PUSH2 0x69F JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0x3A5084B3 EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x45CB537C EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0x4B8CBF9B EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0x5B62D1D5 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x705FEE2D EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x523 JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x89043ECE EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x9B40AB97 EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0xA5E52B99 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xD2F0490D EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x20B JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x1EA JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x39 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1E ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xD SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0xD SLOAD DUP2 LT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0xD PUSH0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x15 PUSH0 MSTORE PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x83D600 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x41 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x47 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x26 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2514300 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x48 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x46 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x2A300 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x801 JUMP JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x3A SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x16 SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x16 SLOAD DUP2 LT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x16 PUSH0 MSTORE PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x17 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND PUSH1 0x71 BASEFEE TLOAD 0xA7 TSTORE 0xC1 GT 0x27 0x4C DUP14 0xBB PUSH2 0x68A SIGNEXTEND 0x22 RETURNDATASIZE 0x4F EXP 0xD2 PREVRANDAO SWAP16 EXP 0xCB DUP15 DUP6 DUP2 MLOAD PUSH14 0xA364736F6C634300081E00330000 ",
							"sourceMap": "292:19739:8:-:0;;;;;;1716:1:3;1821:22;292:19739:8;;;;;;-1:-1:-1;;;;;292:19739:8;;;;;;;;;;2222:9;292:19739;;2254:9;2211:515;;;292:19739;2286:9;292:19739;2211:515;;292:19739;2318:10;2211:515;;;292:19739;2351:10;2211:515;;;292:19739;2384:10;2211:515;;;292:19739;2417:10;2211:515;;;292:19739;2450:11;2211:515;;;292:19739;2484:11;2211:515;;;292:19739;2518:11;2211:515;;;292:19739;2552:12;2211:515;;;292:19739;2587:12;2211:515;;;292:19739;2622:12;2211:515;;;292:19739;2657:13;2211:515;;;292:19739;2693:13;2211:515;;;292:19739;2211:515;292:19739;2211:515;;292:19739;;2211:515;292:19739;;;-1:-1:-1;292:19739:8;2211:515;1821:22:3;292:19739:8;2211:515;1821:22:3;292:19739:8;;1821:22:3;292:19739:8;2211:515;292:19739;;;;;;:::i;:::-;6877:5;292:19739;;6884:6;2211:515;6876:64;;292:19739;6892:7;292:19739;6876:64;;292:19739;6901:7;2211:515;6876:64;;292:19739;6910:8;2211:515;6876:64;;292:19739;6920:8;2211:515;6876:64;;292:19739;6930:9;2211:515;6876:64;;292:19739;6876:64;292:19739;6876:64;;292:19739;;6876:64;292:19739;;;;;6876:64;1821:22:3;292:19739:8;2211:515;1821:22:3;292:19739:8;;1821:22:3;292:19739:8;6876:64;292:19739;;;;;;:::i;:::-;2318:10;292:19739;;2351:10;2211:515;6982:70;;292:19739;2384:10;292:19739;6982:70;;292:19739;2417:10;2211:515;6982:70;;292:19739;2450:11;2211:515;6982:70;;292:19739;2484:11;2211:515;6982:70;;292:19739;2518:11;2211:515;6982:70;;292:19739;2552:12;2211:515;6982:70;;292:19739;6982:70;292:19739;6982:70;;292:19739;;6982:70;292:19739;;;;;6982:70;1821:22:3;292:19739:8;2211:515;1821:22:3;292:19739:8;;1821:22:3;292:19739:8;6982:70;292:19739;;;;;;:::i;:::-;7093:1;292:19739;;;2211:515;7092:24;;292:19739;6876:64;292:19739;7092:24;;292:19739;7102:1;2211:515;7092:24;;292:19739;7105:2;2211:515;7092:24;;292:19739;2211:515;;7092:24;;292:19739;2211:515;;7092:24;;292:19739;1821:22:3;292:19739:8;6876:64;292:19739;;;;;;:::i;:::-;7163:1;292:19739;;;2211:515;7162:25;;292:19739;7169:1;292:19739;7162:25;;292:19739;6876:64;2211:515;7162:25;;292:19739;6982:70;2211:515;7162:25;;292:19739;7102:1;2211:515;7162:25;;292:19739;7181:2;2211:515;7162:25;;292:19739;7105:2;2211:515;7162:25;;292:19739;1821:22:3;292:19739:8;6982:70;292:19739;;;;;;:::i;:::-;1821:22:3;292:19739:8;;1716:1:3;2211:515:8;7232:23;;292:19739;1716:1:3;292:19739:8;7232:23;;292:19739;1716:1:3;2211:515:8;7232:23;;292:19739;1716:1:3;2211:515:8;7232:23;;292:19739;1716:1:3;2211:515:8;7232:23;;292:19739;1716:1:3;2211:515:8;7232:23;;292:19739;1716:1:3;2211:515:8;7232:23;;292:19739;1821:22:3;292:19739:8;6982:70;292:19739;;;;1821:22:3;8785:1:8;292:19739;1821:22:3;8830:1:8;292:19739;1821:22:3;8872:1:8;292:19739;1716:1:3;10234::8;292:19739;1821:22:3;292:19739:8;;1821:22:3;10321:1:8;292:19739;1716:1:3;11540::8;292:19739;1821:22:3;11582:1:8;292:19739;1821:22:3;11621:1:8;292:19739;;;;;;;;;;;1716:1:3;292:19739:8;2211:515;292:19739;;;;;;;;7232:23;292:19739;;;;;;1716:1:3;292:19739:8;2211:515;292:19739;;;;;;;;7162:25;292:19739;;;;;;1716:1:3;292:19739:8;2211:515;292:19739;;;;;;;;7092:24;292:19739;;;;;;;;-1:-1:-1;;;;;292:19739:8;;;;;2211:515;292:19739;;;;1716:1:3;292:19739:8;;;;6982:70;1821:22:3;292:19739:8;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;292:19739:8;;;;;2211:515;292:19739;;;;1716:1:3;292:19739:8;;;;6876:64;1821:22:3;292:19739:8;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;292:19739:8;;;;;2211:515;292:19739;;;;1716:1:3;292:19739:8;;;;2211:515;1821:22:3;292:19739:8;;;;;;;:::i;:::-;;;;;;;;1821:22:3;292:19739:8;;;;;1821:22:3;292:19739:8;;;;;;;;;;;;-1:-1:-1;;;;;292:19739:8;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;292:19739:8;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"external_fun_MONTHLY_ROYALTY_LEVEL": {
									"entryPoint": 2022,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_TOP_ROYALTY_LEVEL": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a8146107cc575080630676d0d6146107a25780632132d204146107765780632350268f1461071c57806323fd338e146105985780632a891534146106ff5780632ae0ee0d1461065b5780632f48ab7d146106d75780633080b5bc146106ba57806331bb6a301461069f57806332bc298c1461068257806332fcd96614610660578063375b43b41461065b57806339ab3603146106015780633a5084b3146105e457806345cb537c146105ba5780634b8cbf9b1461059d57806358c7d352146105985780635b62d1d51461057b578063705fee2d1461055d57806376f5f7001461054057806378f6ad6d146105235780637cdc65f2146104fb57806389043ece146104c5578063956a3228146104995780639b40ab971461047c578063a59d17d11461045f578063a5e52b9914610442578063ae4708dc146103e8578063bff1f9e1146103cb578063c216212a1461035d578063c8df290814610339578063c9ed07081461031c578063ca8e9121146102ff578063d0a2fd79146102d3578063d2f0490d146102b8578063e898fc381461029b578063e9e34a1614610273578063ebe0ff1514610250578063ec597e6f14610233578063f5d74d931461020b5763fddc806f146101ea575f80fd5b34610207575f366003190112610207576020603954604051908152f35b5f80fd5b34610207575f366003190112610207576004546040516001600160a01b039091168152602090f35b34610207575f366003190112610207576020600554604051908152f35b34610207575f366003190112610207576020604051683635c9adc5dea000008152f35b34610207575f366003190112610207576003546040516001600160a01b039091168152602090f35b34610207575f366003190112610207576020604054604051908152f35b34610207575f36600319011261020757602060405160058152f35b3461020757602036600319011261020757600435600881101561020757602090601e0154604051908152f35b34610207575f366003190112610207576020603854604051908152f35b34610207575f366003190112610207576020603f54604051908152f35b34610207575f36600319011261020757602060405169021e19e0c9bab24000008152f35b3461020757602036600319011261020757600435600d5481101561020757600d548110156103b757600d5f527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b34610207575f366003190112610207576020600654604051908152f35b3461020757602036600319011261020757600435601554811015610207576015548110156103b75760155f527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec4750154604051908152602090f35b34610207575f3660031901126102075760206040516283d6008152f35b34610207575f366003190112610207576020604154604051908152f35b34610207575f366003190112610207576020604754604051908152f35b346102075760203660031901126102075760043560088110156102075760209060260154604051908152f35b34610207576040366003190112610207576004355f52600b60205260405f206024355f52602052602060405f2054604051908152f35b34610207575f366003190112610207576002546040516001600160a01b039091168152602090f35b34610207575f366003190112610207576020600954604051908152f35b34610207575f36600319011261020757602060405162093a808152f35b34610207575f36600319011261020757602060405163025143008152f35b34610207575f366003190112610207576020604854604051908152f35b6107e6565b34610207575f366003190112610207576020604654604051908152f35b34610207576020366003190112610207576004355f52600a602052602060405f2054604051908152f35b34610207575f3660031901126102075760206040516202a3008152f35b3461020757602036600319011261020757600435600754811015610207576007548110156103b75760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b610801565b34610207575f366003190112610207576020604051670de0b6b3a76400008152f35b34610207575f366003190112610207576020604051620151808152f35b34610207575f36600319011261020757602060405160028152f35b34610207575f366003190112610207576020603a54604051908152f35b34610207575f366003190112610207576001546040516001600160a01b039091168152602090f35b34610207575f36600319011261020757602060405162278d008152f35b3461020757602036600319011261020757600435601654811015610207576016548110156103b75760165f527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890154604051908152602090f35b346102075760203660031901126102075760043560078110156102075760209060170154604051908152f35b34610207576020366003190112610207576004355f52600c602052602060405f2054604051908152f35b34610207575f366003190112610207578061271060209252f35b34610207575f366003190112610207576020604051600a8152f35b34610207575f366003190112610207576020604051600f8152f3fea26469706673582212200b6071485ca75dc111274c8dbb61068a0b223d4f0ad2449f0acb8e8581516da364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0x7CC JUMPI POP DUP1 PUSH4 0x676D0D6 EQ PUSH2 0x7A2 JUMPI DUP1 PUSH4 0x2132D204 EQ PUSH2 0x776 JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0x71C JUMPI DUP1 PUSH4 0x23FD338E EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0x6FF JUMPI DUP1 PUSH4 0x2AE0EE0D EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x6D7 JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0x6BA JUMPI DUP1 PUSH4 0x31BB6A30 EQ PUSH2 0x69F JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0x3A5084B3 EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x45CB537C EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0x4B8CBF9B EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0x5B62D1D5 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x705FEE2D EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x523 JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x89043ECE EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x9B40AB97 EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0xA5E52B99 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xD2F0490D EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x20B JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x1EA JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x39 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1E ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xD SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0xD SLOAD DUP2 LT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0xD PUSH0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x15 PUSH0 MSTORE PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x83D600 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x41 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x47 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x26 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2514300 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x48 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x46 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x2A300 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x801 JUMP JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x3A SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x16 SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x16 SLOAD DUP2 LT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x16 PUSH0 MSTORE PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x17 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND PUSH1 0x71 BASEFEE TLOAD 0xA7 TSTORE 0xC1 GT 0x27 0x4C DUP14 0xBB PUSH2 0x68A SIGNEXTEND 0x22 RETURNDATASIZE 0x4F EXP 0xD2 PREVRANDAO SWAP16 EXP 0xCB DUP15 DUP6 DUP2 MLOAD PUSH14 0xA364736F6C634300081E00330000 ",
							"sourceMap": "292:19739:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;8793:38;292:19739;;;;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;;-1:-1:-1;;;;;292:19739:8;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;534:24;292:19739;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;8733:7;292:19739;;;;;;;;;-1:-1:-1;;292:19739:8;;;;460:30;292:19739;;;-1:-1:-1;;;;;292:19739:8;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;1187:1;292:19739;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;7123:64;;;;;292:19739;;7123:64;292:19739;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;8752:34;292:19739;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;10200:35;292:19739;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;10179:8;292:19739;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;2186:540;292:19739;2186:540;;;;;;292:19739;;;;;;2186:540;292:19739;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;565:22;292:19739;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;6847:93;292:19739;6847:93;;;;;;292:19739;;;;;;6847:93;292:19739;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;842:8;292:19739;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;10288:34;292:19739;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;11548:35;292:19739;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;7194:61;;;;;292:19739;;7194:61;292:19739;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;;1927:68;292:19739;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;422:28;292:19739;;;-1:-1:-1;;;;;292:19739:8;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;1530:34;292:19739;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;8680:6;292:19739;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;900:8;292:19739;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;11590:32;292:19739;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;292:19739:8;;;;;11510:31;292:19739;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;;1818:57;292:19739;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;782:6;292:19739;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;1257:31;292:19739;1257:31;;;;;;292:19739;;;;;;1257:31;292:19739;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;292:19739:8;;;;;;;1513:4;292:19739;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;731:6;292:19739;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;1240:1;292:19739;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;8840:33;292:19739;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;;-1:-1:-1;;;;;292:19739:8;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;10127:7;292:19739;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;6947:105;292:19739;6947:105;;;;;;292:19739;;;;;;6947:105;292:19739;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;7059:57;;;;;292:19739;;7059:57;292:19739;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;;2093:56;292:19739;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;683:5;292:19739;;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;1076:2;292:19739;;;;;;;;;-1:-1:-1;;292:19739:8;;;;;;;1129:2;292:19739;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "426000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACC_PRECISION()": "395",
								"MONTHLY_ROYALTY_DIRECT()": "923",
								"MONTHLY_ROYALTY_LEVEL()": "253",
								"MONTHLY_ROYALTY_TIME()": "747",
								"MONTH_DURATION()": "263",
								"PERCENTS_DIVIDER()": "148",
								"ROI_2X_TIME()": "461",
								"ROI_CAP_DIVIDER()": "539",
								"ROI_CAP_MULTIPLIER()": "429",
								"TIME_STEP()": "373",
								"TOP_ROYALTY_DIRECT()": "351",
								"TOP_ROYALTY_LEVEL()": "297",
								"TOP_ROYALTY_TIME()": "571",
								"WEEK_DURATION()": "593",
								"WeeklyCapping()": "989",
								"WeeklyTotalReward()": "2432",
								"communityAccPerPackage(uint256)": "2651",
								"communityAccPerUser()": "2718",
								"communityDebt(uint256,uint256)": "2891",
								"creatorWallet()": "2764",
								"currentMonthlyRound()": "2960",
								"currentMonthlyStartTime()": "3048",
								"currentWeeklyRound()": "2982",
								"currentWeeklyStartTime()": "3155",
								"defaultRefId()": "3114",
								"glbBoosterPackages(uint256)": "6593",
								"minLevelForGlbBooster(uint256)": "3042",
								"minLevelForPool(uint256)": "2338",
								"minPoolForGlbBooster(uint256)": "2822",
								"monthlyCapping()": "835",
								"monthlyTotalReward()": "2828",
								"packageQualifiedUsers(uint256)": "2343",
								"packages(uint256)": "7187",
								"poolPackages(uint256)": "7143",
								"registeredUserIds(uint256)": "6813",
								"systemMaintance()": "3094",
								"teamDevelopment()": "3160",
								"topRoyaltyReward()": "2652",
								"topRoyaltyRound()": "2608",
								"topRoyaltyStartTime()": "2806",
								"totalUsers()": "2894",
								"usdt()": "2434"
							},
							"internal": {
								"_distributeIncome(uint256,uint256,uint256,uint256,enum Storage.IncomeType)": "infinite",
								"_monthlyRoyaltyQualifier(uint256,uint256)": "infinite",
								"_sendToCreator(uint256)": "infinite",
								"_topRoyaltyQualifier(uint256,uint256)": "infinite",
								"_tryMonthlyRoyaltyQualify(uint256,uint256)": "infinite",
								"_tryTopRoyaltyQualify(uint256,uint256)": "infinite",
								"_tryWeeklyContestQualify(uint256,uint256)": "infinite",
								"_weeklyContestQualifier(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "1E0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2222,
									"end": 2231,
									"name": "PUSH",
									"source": 8,
									"value": "D02AB486CEDC0000"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2254,
									"end": 2263,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2286,
									"end": 2295,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2318,
									"end": 2328,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2361,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2384,
									"end": 2394,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2417,
									"end": 2427,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2450,
									"end": 2461,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2484,
									"end": 2495,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2518,
									"end": 2529,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2552,
									"end": 2564,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2587,
									"end": 2599,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D6310000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2622,
									"end": 2634,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC620000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2657,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "1A0"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2693,
									"end": 2706,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "1C0"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 20031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6877,
									"end": 6882,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6884,
									"end": 6890,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A8829300000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6892,
									"end": 6899,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C00000"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6901,
									"end": 6908,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A88293000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6910,
									"end": 6918,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6920,
									"end": 6928,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A882930000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6930,
									"end": 6939,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 20031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2318,
									"end": 2328,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2351,
									"end": 2361,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2384,
									"end": 2394,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2417,
									"end": 2427,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2450,
									"end": 2461,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2484,
									"end": 2495,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2518,
									"end": 2529,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2552,
									"end": 2564,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 20031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7093,
									"end": 7094,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7102,
									"end": 7103,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7105,
									"end": 7107,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 20031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7163,
									"end": 7164,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7169,
									"end": 7170,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7102,
									"end": 7103,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7181,
									"end": 7183,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7105,
									"end": 7107,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 20031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8785,
									"end": 8786,
									"name": "PUSH",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8830,
									"end": 8831,
									"name": "PUSH",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8872,
									"end": 8873,
									"name": "PUSH",
									"source": 8,
									"value": "3A"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 10234,
									"end": 10235,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 10321,
									"end": 10322,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 11540,
									"end": 11541,
									"name": "PUSH",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 11582,
									"end": 11583,
									"name": "PUSH",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 11621,
									"end": 11622,
									"name": "PUSH",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "RETURN",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7232,
									"end": 7255,
									"name": "PUSH",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7187,
									"name": "PUSH",
									"source": 8,
									"value": "1E"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7116,
									"name": "PUSH",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6982,
									"end": 7052,
									"name": "PUSH",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "D833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "D833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124291"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 20031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6876,
									"end": 6940,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC47C"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 20031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2726,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "D7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "D7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EC4"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 20031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 20031,
									"name": "JUMP",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b6071485ca75dc111274c8dbb61068a0b223d4f0ad2449f0acb8e8581516da364736f6c634300081e0033",
									".code": [
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "1C234A8"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "676D0D6"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "2132D204"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "2350268F"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "23FD338E"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "2A891534"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "2AE0EE0D"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "2F48AB7D"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "3080B5BC"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "31BB6A30"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "32BC298C"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "32FCD966"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "375B43B4"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "39AB3603"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "3A5084B3"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "45CB537C"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "4B8CBF9B"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "58C7D352"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "5B62D1D5"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "705FEE2D"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "76F5F700"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "78F6AD6D"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "7CDC65F2"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "89043ECE"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "956A3228"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "9B40AB97"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "A59D17D1"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "A5E52B99"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "AE4708DC"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "BFF1F9E1"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "C216212A"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "C8DF2908"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "C9ED0708"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "CA8E9121"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "D0A2FD79"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "D2F0490D"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "E898FC38"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "E9E34A16"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "EBE0FF15"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "EC597E6F"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "F5D74D93"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "FDDC806F"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8793,
											"end": 8831,
											"name": "PUSH",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 534,
											"end": 558,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8733,
											"end": 8740,
											"name": "PUSH",
											"source": 8,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 490,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1188,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 7123,
											"end": 7187,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7123,
											"end": 7187,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7123,
											"end": 7187,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7123,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 7123,
											"end": 7187,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7123,
											"end": 7187,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8752,
											"end": 8786,
											"name": "PUSH",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10200,
											"end": 10235,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10179,
											"end": 10187,
											"name": "PUSH",
											"source": 8,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2726,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "D7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 842,
											"end": 850,
											"name": "PUSH",
											"source": 8,
											"value": "83D600"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10288,
											"end": 10322,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11548,
											"end": 11583,
											"name": "PUSH",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 7194,
											"end": 7255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7255,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 7194,
											"end": 7255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7255,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1995,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 422,
											"end": 450,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1530,
											"end": 1564,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8680,
											"end": 8686,
											"name": "PUSH",
											"source": 8,
											"value": "93A80"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 900,
											"end": 908,
											"name": "PUSH",
											"source": 8,
											"value": "2514300"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11590,
											"end": 11622,
											"name": "PUSH",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 20031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11510,
											"end": 11541,
											"name": "PUSH",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1875,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 782,
											"end": 788,
											"name": "PUSH",
											"source": 8,
											"value": "2A300"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1288,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 20031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1513,
											"end": 1517,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8840,
											"end": 8873,
											"name": "PUSH",
											"source": 8,
											"value": "3A"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10127,
											"end": 10134,
											"name": "PUSH",
											"source": 8,
											"value": "278D00"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7052,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "D833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 7059,
											"end": 7116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7116,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7116,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 7059,
											"end": 7116,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7059,
											"end": 7116,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2149,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 683,
											"end": 688,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1076,
											"end": 1078,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 20031,
											"name": "RETURN",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/modules/InfinityPool.sol",
								"contracts/modules/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ACC_PRECISION()": "32fcd966",
							"MONTHLY_ROYALTY_DIRECT()": "d2f0490d",
							"MONTHLY_ROYALTY_LEVEL()": "23fd338e",
							"MONTHLY_ROYALTY_TIME()": "a5e52b99",
							"MONTH_DURATION()": "2a891534",
							"PERCENTS_DIVIDER()": "01c234a8",
							"ROI_2X_TIME()": "3a5084b3",
							"ROI_CAP_DIVIDER()": "58c7d352",
							"ROI_CAP_MULTIPLIER()": "375b43b4",
							"TIME_STEP()": "32bc298c",
							"TOP_ROYALTY_DIRECT()": "31bb6a30",
							"TOP_ROYALTY_LEVEL()": "2ae0ee0d",
							"TOP_ROYALTY_TIME()": "705fee2d",
							"WEEK_DURATION()": "76f5f700",
							"WeeklyCapping()": "ebe0ff15",
							"WeeklyTotalReward()": "3080b5bc",
							"communityAccPerPackage(uint256)": "45cb537c",
							"communityAccPerUser()": "78f6ad6d",
							"communityDebt(uint256,uint256)": "89043ece",
							"creatorWallet()": "7cdc65f2",
							"currentMonthlyRound()": "c9ed0708",
							"currentMonthlyStartTime()": "e898fc38",
							"currentWeeklyRound()": "ca8e9121",
							"currentWeeklyStartTime()": "fddc806f",
							"defaultRefId()": "ec597e6f",
							"glbBoosterPackages(uint256)": "2350268f",
							"minLevelForGlbBooster(uint256)": "d0a2fd79",
							"minLevelForPool(uint256)": "2132d204",
							"minPoolForGlbBooster(uint256)": "956a3228",
							"monthlyCapping()": "c8df2908",
							"monthlyTotalReward()": "a59d17d1",
							"packageQualifiedUsers(uint256)": "0676d0d6",
							"packages(uint256)": "c216212a",
							"poolPackages(uint256)": "ae4708dc",
							"registeredUserIds(uint256)": "39ab3603",
							"systemMaintance()": "e9e34a16",
							"teamDevelopment()": "f5d74d93",
							"topRoyaltyReward()": "5b62d1d5",
							"topRoyaltyRound()": "4b8cbf9b",
							"topRoyaltyStartTime()": "9b40ab97",
							"totalUsers()": "bff1f9e1",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUser\",\"type\":\"uint256\"}],\"name\":\"CommunityBonusDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"incomeType\",\"type\":\"uint256\"}],\"name\":\"IncomeDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Storage.IncomeType\",\"name\":\"incomeType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"IncomeDistribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromUserId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LotteryReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyRewardClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyRoyaltyQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uplineId\",\"type\":\"uint256\"}],\"name\":\"Registration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"level\",\"type\":\"string\"}],\"name\":\"RewardSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyRewardClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packagePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"depositType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upgradeTime\",\"type\":\"uint256\"}],\"name\":\"Upgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"matrixId\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"userId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"parentId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"}],\"name\":\"UserJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyContestQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyRewardClaim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACC_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY_DIRECT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTH_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_2X_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY_DIRECT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEEK_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"communityAccPerPackage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityAccPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"communityDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultRefId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"glbBoosterPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minPoolForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"packageQualifiedUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"packages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredUserIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemMaintance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamDevelopment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/Storage.sol\":\"Storage\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/modules/Storage.sol\":{\"keccak256\":\"0x8ba0247fd5f1fedd5fd9c585ac97006b1ca5515122ea23c330b16647319f247c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2260b66545d937f13740dfaf768955911da5ef92da8d84b97a863eb7e9db2d8\",\"dweb:/ipfs/QmbKAp8BGrgy4BF3RmjhjkvVrE7jN8tFhfYuhGiPCD31dD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1914,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "usdt",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)232"
							},
							{
								"astId": 1916,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "creatorWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1918,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "systemMaintance",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1920,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "teamDevelopment",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1922,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "defaultRefId",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1924,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "totalUsers",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1963,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "registeredUserIds",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1965,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "nonce",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1970,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "communityAccPerUser",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1974,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "communityAccPerPackage",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1980,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "communityDebt",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1984,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "packageQualifiedUsers",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2033,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "packages",
								"offset": 0,
								"slot": "13",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2147,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "addressToId",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2152,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "users",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_struct(User)2089_storage)"
							},
							{
								"astId": 2157,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userIncomes",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_struct(UserIncome)2114_storage)"
							},
							{
								"astId": 2163,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "incomeHistory",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_uint256,t_array(t_struct(Income)2132_storage)dyn_storage)"
							},
							{
								"astId": 2170,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "teams",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2174,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "matrixDirect",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2179,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "directReferrals",
								"offset": 0,
								"slot": "20",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2283,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "poolPackages",
								"offset": 0,
								"slot": "21",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2295,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "glbBoosterPackages",
								"offset": 0,
								"slot": "22",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2307,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "minLevelForPool",
								"offset": 0,
								"slot": "23",
								"type": "t_array(t_uint256)7_storage"
							},
							{
								"astId": 2320,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "minLevelForGlbBooster",
								"offset": 0,
								"slot": "30",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 2333,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "minPoolForGlbBooster",
								"offset": 0,
								"slot": "38",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 2367,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userPooltopup",
								"offset": 0,
								"slot": "46",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)2349_storage))"
							},
							{
								"astId": 2374,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userPooldtl",
								"offset": 0,
								"slot": "47",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)2344_storage))"
							},
							{
								"astId": 2381,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userChildren",
								"offset": 0,
								"slot": "48",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2388,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userIdPerPool",
								"offset": 0,
								"slot": "49",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2393,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "poolUsers",
								"offset": 0,
								"slot": "50",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2399,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userHasPool",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2406,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userBoosterdtl",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)2360_storage))"
							},
							{
								"astId": 2413,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userBoosterChildren",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2418,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "boosterUsers",
								"offset": 0,
								"slot": "54",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2424,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userHasbooster",
								"offset": 0,
								"slot": "55",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2433,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentWeeklyRound",
								"offset": 0,
								"slot": "56",
								"type": "t_uint256"
							},
							{
								"astId": 2436,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentWeeklyStartTime",
								"offset": 0,
								"slot": "57",
								"type": "t_uint256"
							},
							{
								"astId": 2439,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "WeeklyTotalReward",
								"offset": 0,
								"slot": "58",
								"type": "t_uint256"
							},
							{
								"astId": 2474,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyContestdtl",
								"offset": 0,
								"slot": "59",
								"type": "t_mapping(t_uint256,t_struct(WeeklyContest)2458_storage)"
							},
							{
								"astId": 2479,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyQualifiedUsers",
								"offset": 0,
								"slot": "60",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2486,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyUserdtl",
								"offset": 0,
								"slot": "61",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2469_storage))"
							},
							{
								"astId": 2493,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyUserDirects",
								"offset": 0,
								"slot": "62",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2536,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentMonthlyRound",
								"offset": 0,
								"slot": "63",
								"type": "t_uint256"
							},
							{
								"astId": 2539,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentMonthlyStartTime",
								"offset": 0,
								"slot": "64",
								"type": "t_uint256"
							},
							{
								"astId": 2542,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyTotalReward",
								"offset": 0,
								"slot": "65",
								"type": "t_uint256"
							},
							{
								"astId": 2579,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyRoyaltydtl",
								"offset": 0,
								"slot": "66",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyalty)2561_storage)"
							},
							{
								"astId": 2582,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyQualifiedUsers",
								"offset": 0,
								"slot": "67",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2587,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyRoyaltyUserdtl",
								"offset": 0,
								"slot": "68",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2574_storage)"
							},
							{
								"astId": 2592,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyUserDirects",
								"offset": 0,
								"slot": "69",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2629,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyRound",
								"offset": 0,
								"slot": "70",
								"type": "t_uint256"
							},
							{
								"astId": 2632,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyStartTime",
								"offset": 0,
								"slot": "71",
								"type": "t_uint256"
							},
							{
								"astId": 2635,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyReward",
								"offset": 0,
								"slot": "72",
								"type": "t_uint256"
							},
							{
								"astId": 2672,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltydtl",
								"offset": 0,
								"slot": "73",
								"type": "t_mapping(t_uint256,t_struct(topRoyalty)2654_storage)"
							},
							{
								"astId": 2675,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyQualifiedUsers",
								"offset": 0,
								"slot": "74",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2680,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyUserdtl",
								"offset": 0,
								"slot": "75",
								"type": "t_mapping(t_uint256,t_struct(topRoyaltyUser)2667_storage)"
							},
							{
								"astId": 2685,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyUserDirects",
								"offset": 0,
								"slot": "76",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Deposit)2042_storage)dyn_storage": {
								"base": "t_struct(Deposit)2042_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Deposit[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Income)2132_storage)dyn_storage": {
								"base": "t_struct(Income)2132_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Income[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)7_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[7]",
								"numberOfBytes": "224"
							},
							"t_array(t_uint256)8_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[8]",
								"numberOfBytes": "256"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)232": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_array(t_struct(Income)2132_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.Income[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Income)2132_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)2360_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserBooster)2360_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)2344_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPool)2344_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)2349_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPoolTopup)2349_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2469_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(weeklyUser)2469_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_uint256,t_struct(User)2089_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)2089_storage"
							},
							"t_mapping(t_uint256,t_struct(UserBooster)2360_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserBooster)",
								"numberOfBytes": "32",
								"value": "t_struct(UserBooster)2360_storage"
							},
							"t_mapping(t_uint256,t_struct(UserIncome)2114_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserIncome)",
								"numberOfBytes": "32",
								"value": "t_struct(UserIncome)2114_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPool)2344_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPool)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPool)2344_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPoolTopup)2349_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPoolTopup)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPoolTopup)2349_storage"
							},
							"t_mapping(t_uint256,t_struct(WeeklyContest)2458_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.WeeklyContest)",
								"numberOfBytes": "32",
								"value": "t_struct(WeeklyContest)2458_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyalty)2561_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyalty)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyalty)2561_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2574_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyaltyUser)2574_storage"
							},
							"t_mapping(t_uint256,t_struct(topRoyalty)2654_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.topRoyalty)",
								"numberOfBytes": "32",
								"value": "t_struct(topRoyalty)2654_storage"
							},
							"t_mapping(t_uint256,t_struct(topRoyaltyUser)2667_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.topRoyaltyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(topRoyaltyUser)2667_storage"
							},
							"t_mapping(t_uint256,t_struct(weeklyUser)2469_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.weeklyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(weeklyUser)2469_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Deposit)2042_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Deposit",
								"members": [
									{
										"astId": 2035,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2037,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "withdrawn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2039,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "start",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2041,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "depositType",
										"offset": 0,
										"slot": "3",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Income)2132_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Income",
								"members": [
									{
										"astId": 2123,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "fromUserId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2125,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2127,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "packageLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2129,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2131,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "incomeType",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(User)2089_storage": {
								"encoding": "inplace",
								"label": "struct Storage.User",
								"members": [
									{
										"astId": 2044,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "account",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2048,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "deposits",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Deposit)2042_storage)dyn_storage"
									},
									{
										"astId": 2050,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "checkpoint",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2052,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2054,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "sponsorId",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2056,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "uplineId",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2058,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "level",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2060,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "directTeam",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2062,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "directPoolQualified",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2064,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalMatrixTeam",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2066,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalDeposit",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2068,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roiCap",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 2070,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poollevel",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 2072,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolDeposit",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 2074,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolStartTime",
										"offset": 0,
										"slot": "14",
										"type": "t_uint256"
									},
									{
										"astId": 2076,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "boosterlevel",
										"offset": 0,
										"slot": "15",
										"type": "t_uint256"
									},
									{
										"astId": 2078,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "boosterDeposit",
										"offset": 0,
										"slot": "16",
										"type": "t_uint256"
									},
									{
										"astId": 2080,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "registrationTime",
										"offset": 0,
										"slot": "17",
										"type": "t_uint256"
									},
									{
										"astId": 2082,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "level10Time",
										"offset": 0,
										"slot": "18",
										"type": "t_uint256"
									},
									{
										"astId": 2084,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "level15Time",
										"offset": 0,
										"slot": "19",
										"type": "t_uint256"
									},
									{
										"astId": 2086,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "monthlyUserDirectCount",
										"offset": 0,
										"slot": "20",
										"type": "t_uint256"
									},
									{
										"astId": 2088,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "topRoyaltyDirectCount",
										"offset": 0,
										"slot": "21",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "704"
							},
							"t_struct(UserBooster)2360_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserBooster",
								"members": [
									{
										"astId": 2351,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2353,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2355,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "parentId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2357,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "bonusCount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2359,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserIncome)2114_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserIncome",
								"members": [
									{
										"astId": 2091,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalIncome",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2093,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "sponsorIncome",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2095,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "matrixIncome",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2097,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "levelBoosterIncome",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2099,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "royaltyIncome",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2101,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "royaltyIncomeClaimed",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2103,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "communityIncome",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2105,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolIncome",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2107,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "boosterIncome",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2109,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "weeklyContestIncome",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2111,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "monthlyRoyalty",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2113,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "topRoyalty",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "384"
							},
							"t_struct(UserPool)2344_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPool",
								"members": [
									{
										"astId": 2335,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2337,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "mainid",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2339,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2341,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "parentId",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2343,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "bonusCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserPoolTopup)2349_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPoolTopup",
								"members": [
									{
										"astId": 2346,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "nextPoolAmt",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2348,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "reTopupAmt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(WeeklyContest)2458_storage": {
								"encoding": "inplace",
								"label": "struct Storage.WeeklyContest",
								"members": [
									{
										"astId": 2441,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2443,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2445,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2447,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2449,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2451,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2453,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2455,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2457,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyalty)2561_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyalty",
								"members": [
									{
										"astId": 2544,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2546,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2548,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2550,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2552,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2554,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2556,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2558,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2560,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyaltyUser)2574_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyaltyUser",
								"members": [
									{
										"astId": 2563,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2565,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "qualifiedRoundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2567,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2571,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_uint256,t_bool)"
									},
									{
										"astId": 2573,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isQualified",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(topRoyalty)2654_storage": {
								"encoding": "inplace",
								"label": "struct Storage.topRoyalty",
								"members": [
									{
										"astId": 2637,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2639,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2641,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2643,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2645,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2647,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2649,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2651,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2653,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(topRoyaltyUser)2667_storage": {
								"encoding": "inplace",
								"label": "struct Storage.topRoyaltyUser",
								"members": [
									{
										"astId": 2656,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2658,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "qualifiedRoundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2660,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2664,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_uint256,t_bool)"
									},
									{
										"astId": 2666,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isQualified",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(weeklyUser)2469_storage": {
								"encoding": "inplace",
								"label": "struct Storage.weeklyUser",
								"members": [
									{
										"astId": 2460,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2462,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2464,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2466,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 2468,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isQualified",
										"offset": 1,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							708
						],
						"IERC20": [
							232
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								708,
								232
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 709,
							"src": "133:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 233,
							"src": "132:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "140:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							154
						]
					},
					"id": 155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 98,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 154,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 114,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 119,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 124,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 130,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 154,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 137,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 138,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 154,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 148,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 149,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 147,
												"id": 151,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 154,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 155,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 156,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 157,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 232,
							"linearizedBaseContracts": [
								232
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 166,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 175,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 232,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 232,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 232,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 232,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 232,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 232,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 233,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"SafeERC20": [
							696
						]
					},
					"id": 697,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 234,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 233,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 235,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 238,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 82,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 237,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 239,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 696,
							"linearizedBaseContracts": [
								696
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 244,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 253,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 265,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 268,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 270,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 271,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 272,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 266,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 264,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 696,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 294,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 296,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 297,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 292,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 290,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 279,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 696,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 318,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 321,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 323,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 310,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 324,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 325,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 319,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 317,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 316,
												"id": 328,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 306,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 696,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 349,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 351,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 352,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 353,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 354,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 347,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 345,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 357,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 333,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 332,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 232,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 696,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 376,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 372,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 383,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 385,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 361,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 232,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 696,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															402
														],
														"declarations": [
															{
																"constant": false,
																"id": 402,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 401,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 411,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 407,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 405,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 409,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 209,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 413,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 422,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 421,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 416,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 417,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 402,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 418,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 398,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 415,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 420,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 424,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 425,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 426,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 427,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 423,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 392,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 232,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 696,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 444,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 448,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 219,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 450,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 452,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 446,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 456,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 457,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 455,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 461,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 464,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 437,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$232",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 219,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 466,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 439,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 468,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 462,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 460,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 474,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 472,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 232,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 696,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 493,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 508,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 509,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 505,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 520,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 519,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 515,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 484,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 512,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 518,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 499,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 500,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 501,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 498,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 482,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 696,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 538,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 554,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 556,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 567,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 566,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 562,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 527,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 560,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 559,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 565,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 545,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 546,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 547,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 543,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 526,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 525,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 696,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 583,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 597,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 598,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 599,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 595,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 610,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 609,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 605,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 574,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 603,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 602,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 608,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 589,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 590,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 591,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 588,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 572,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 696,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 623,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 626,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 617,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 628,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 629,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 640,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 634,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 632,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 617,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 615,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 232,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 696,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 665,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 671,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 669,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 672,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 658,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 674,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 675,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 676,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 687,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 681,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 658,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 679,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 691,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 664,
												"id": 693,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 656,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 232,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 696,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 697,
							"src": "698:9376:5",
							"usedErrors": [
								244,
								253
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 698,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 699,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 708,
							"linearizedBaseContracts": [
								708
							],
							"name": "IERC165",
							"nameLocation": "433:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "819:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 701,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:6"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "862:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:6"
									},
									"scope": 708,
									"src": "792:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 709,
							"src": "423:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:6"
				},
				"id": 6
			},
			"contracts/modules/InfinityPool.sol": {
				"ast": {
					"absolutePath": "contracts/modules/InfinityPool.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"InfinityPool": [
							1900
						],
						"ReentrancyGuard": [
							154
						],
						"SafeERC20": [
							696
						],
						"Storage": [
							3371
						]
					},
					"id": 1901,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:7"
						},
						{
							"absolutePath": "contracts/modules/Storage.sol",
							"file": "./Storage.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1901,
							"sourceUnit": 3372,
							"src": "71:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 712,
										"name": "Storage",
										"nameLocations": [
											"127:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3371,
										"src": "127:7:7"
									},
									"id": 713,
									"nodeType": "InheritanceSpecifier",
									"src": "127:7:7"
								}
							],
							"canonicalName": "InfinityPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1900,
							"linearizedBaseContracts": [
								1900,
								3371,
								154
							],
							"name": "InfinityPool",
							"nameLocation": "111:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "167:18:7",
										"statements": []
									},
									"id": 717,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "164:2:7"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:0:7"
									},
									"scope": 1900,
									"src": "153:32:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "288:588:7",
										"statements": [
											{
												"assignments": [
													728
												],
												"declarations": [
													{
														"constant": false,
														"id": 728,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "312:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "299:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 727,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 726,
																"name": "User",
																"nameLocations": [
																	"299:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2089,
																"src": "299:4:7"
															},
															"referencedDeclaration": 2089,
															"src": "299:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 732,
												"initialValue": {
													"baseExpression": {
														"id": 729,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "319:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2089_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 731,
													"indexExpression": {
														"id": 730,
														"name": "userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "325:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "319:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2089_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "299:33:7"
											},
											{
												"assignments": [
													734
												],
												"declarations": [
													{
														"constant": false,
														"id": 734,
														"mutability": "mutable",
														"name": "nextPool",
														"nameLocation": "348:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "343:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 733,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "343:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 737,
												"initialValue": {
													"expression": {
														"id": 735,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "359:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "364:9:7",
													"memberName": "poollevel",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2070,
													"src": "359:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "343:30:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "388:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 739,
															"name": "poolPackages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "400:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "413:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "400:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "388:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 747,
												"nodeType": "IfStatement",
												"src": "384:117:7",
												"trueBody": {
													"id": 746,
													"nodeType": "Block",
													"src": "421:80:7",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "444:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "596f752061726520616c726561647920617420746865206869676865737420706f6f6c",
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "451:37:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_744d03fe4a98631da082f0ecf18c7009d35088e037dbca2932748b6542ce1070",
																			"typeString": "literal_string \"You are already at the highest pool\""
																		},
																		"value": "You are already at the highest pool"
																	}
																],
																"id": 744,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "443:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_744d03fe4a98631da082f0ecf18c7009d35088e037dbca2932748b6542ce1070_$",
																	"typeString": "tuple(bool,literal_string \"You are already at the highest pool\")"
																}
															},
															"functionReturnParameters": 725,
															"id": 745,
															"nodeType": "Return",
															"src": "436:53:7"
														}
													]
												}
											},
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "requiredLevel",
														"nameLocation": "518:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "513:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 748,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "513:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"baseExpression": {
														"id": 750,
														"name": "minLevelForPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "534:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$7_storage",
															"typeString": "uint256[7] storage ref"
														}
													},
													"id": 752,
													"indexExpression": {
														"id": 751,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "550:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "534:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "513:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 754,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "576:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "581:5:7",
														"memberName": "level",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2058,
														"src": "576:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 756,
														"name": "requiredLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "589:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "576:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "572:115:7",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "604:83:7",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "627:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "596f75206e65656420746f207265616368206120686967686572206c6576656c206669727374",
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "634:40:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3aadf727440b46723180ac9d128b418b1a0bcac78dfa740be5b4c5bf3a3acf15",
																			"typeString": "literal_string \"You need to reach a higher level first\""
																		},
																		"value": "You need to reach a higher level first"
																	}
																],
																"id": 760,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "626:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_3aadf727440b46723180ac9d128b418b1a0bcac78dfa740be5b4c5bf3a3acf15_$",
																	"typeString": "tuple(bool,literal_string \"You need to reach a higher level first\")"
																}
															},
															"functionReturnParameters": 725,
															"id": 761,
															"nodeType": "Return",
															"src": "619:56:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 764,
															"name": "nextPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "703:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "714:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "703:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 767,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "719:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 768,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "724:9:7",
															"memberName": "poollevel",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2070,
															"src": "719:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 769,
															"name": "nextPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "736:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "719:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "703:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 777,
												"nodeType": "IfStatement",
												"src": "699:115:7",
												"trueBody": {
													"id": 776,
													"nodeType": "Block",
													"src": "746:68:7",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "769:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "4275792070726576696f757320706f6f6c206669727374",
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "776:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5f5fa9d58a74e1ce1932ae4e067a9f842704fbfbc24d932ec13f6cf4e6e7c5b8",
																			"typeString": "literal_string \"Buy previous pool first\""
																		},
																		"value": "Buy previous pool first"
																	}
																],
																"id": 774,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "768:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_5f5fa9d58a74e1ce1932ae4e067a9f842704fbfbc24d932ec13f6cf4e6e7c5b8_$",
																	"typeString": "tuple(bool,literal_string \"Buy previous pool first\")"
																}
															},
															"functionReturnParameters": 725,
															"id": 775,
															"nodeType": "Return",
															"src": "761:41:7"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "834:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"hexValue": "456c696769626c6520746f20627579206e65787420706f6f6c",
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "840:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fafd60b978dcf196df403054d18f0a85faa9d7d73e6cdf9657e05b527116f52",
																"typeString": "literal_string \"Eligible to buy next pool\""
															},
															"value": "Eligible to buy next pool"
														}
													],
													"id": 780,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "833:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_2fafd60b978dcf196df403054d18f0a85faa9d7d73e6cdf9657e05b527116f52_$",
														"typeString": "tuple(bool,literal_string \"Eligible to buy next pool\")"
													}
												},
												"functionReturnParameters": 725,
												"id": 781,
												"nodeType": "Return",
												"src": "826:42:7"
											}
										]
									},
									"functionSelector": "67d52d4d",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canBuyNextPool",
									"nameLocation": "202:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "222:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "217:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "217:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "216:13:7"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "eligible",
												"nameLocation": "256:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "251:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 721,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "251:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "280:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "266:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 723,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "266:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:37:7"
									},
									"scope": 1900,
									"src": "193:683:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "951:1086:7",
										"statements": [
											{
												"assignments": [
													792
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "980:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 883,
														"src": "967:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 791,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 790,
																"name": "User",
																"nameLocations": [
																	"967:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2089,
																"src": "967:4:7"
															},
															"referencedDeclaration": 2089,
															"src": "967:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"initialValue": {
													"baseExpression": {
														"id": 793,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "987:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2089_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 795,
													"indexExpression": {
														"id": 794,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "993:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "987:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2089_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "967:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 798,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "1020:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1025:7:7",
																"memberName": "account",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2044,
																"src": "1020:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 800,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1036:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1040:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1036:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1020:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420796f7572206163636f756e74",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1048:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															},
															"value": "Not your account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1012:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1012:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "1012:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 807,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "1086:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1091:9:7",
																"memberName": "poollevel",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2070,
																"src": "1086:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "37",
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1103:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7_by_1",
																	"typeString": "int_const 7"
																},
																"value": "7"
															},
															"src": "1086:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206d617820706f6f6c",
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1106:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2301e420cfc72a69fd463c53e71ee80b3f7d1dada318fc1a447f9445639f8de",
																"typeString": "literal_string \"At max pool\""
															},
															"value": "At max pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2301e420cfc72a69fd463c53e71ee80b3f7d1dada318fc1a447f9445639f8de",
																"typeString": "literal_string \"At max pool\""
															}
														],
														"id": 806,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1078:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1078:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "1078:42:7"
											},
											{
												"assignments": [
													815
												],
												"declarations": [
													{
														"constant": false,
														"id": 815,
														"mutability": "mutable",
														"name": "packagePrice",
														"nameLocation": "1225:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 883,
														"src": "1217:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 814,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1217:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"nodeType": "VariableDeclarationStatement",
												"src": "1217:20:7"
											},
											{
												"expression": {
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 817,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "1250:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 818,
															"name": "poolPackages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "1265:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 820,
														"indexExpression": {
															"id": 819,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "1278:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1265:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1250:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "1250:36:7"
											},
											{
												"assignments": [
													825
												],
												"declarations": [
													{
														"constant": false,
														"id": 825,
														"mutability": "mutable",
														"name": "top",
														"nameLocation": "1325:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 883,
														"src": "1303:25:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserPoolTopup_$2349_storage_ptr",
															"typeString": "struct Storage.UserPoolTopup"
														},
														"typeName": {
															"id": 824,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 823,
																"name": "UserPoolTopup",
																"nameLocations": [
																	"1303:13:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2349,
																"src": "1303:13:7"
															},
															"referencedDeclaration": 2349,
															"src": "1303:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserPoolTopup_$2349_storage_ptr",
																"typeString": "struct Storage.UserPoolTopup"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 826,
															"name": "userPooltopup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2367,
															"src": "1331:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2349_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup storage ref))"
															}
														},
														"id": 828,
														"indexExpression": {
															"id": 827,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "1345:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1331:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2349_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserPoolTopup storage ref)"
														}
													},
													"id": 830,
													"indexExpression": {
														"id": 829,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1354:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1331:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserPoolTopup_$2349_storage",
														"typeString": "struct Storage.UserPoolTopup storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1303:59:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 833,
																	"name": "top",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "1381:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserPoolTopup_$2349_storage_ptr",
																		"typeString": "struct Storage.UserPoolTopup storage pointer"
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1385:10:7",
																"memberName": "reTopupAmt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2348,
																"src": "1381:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 835,
																"name": "packagePrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "1399:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1381:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768207265546f7075702062616c616e6365",
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1413:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_814e4f9b85ee8c0e54438da0ecd15e2e4b1a37ced8b1df4be66e0647686f8fb5",
																"typeString": "literal_string \"Not enough reTopup balance\""
															},
															"value": "Not enough reTopup balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_814e4f9b85ee8c0e54438da0ecd15e2e4b1a37ced8b1df4be66e0647686f8fb5",
																"typeString": "literal_string \"Not enough reTopup balance\""
															}
														],
														"id": 832,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1373:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "1373:69:7"
											},
											{
												"expression": {
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 840,
															"name": "top",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "1482:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserPoolTopup_$2349_storage_ptr",
																"typeString": "struct Storage.UserPoolTopup storage pointer"
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1486:10:7",
														"memberName": "reTopupAmt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2348,
														"src": "1482:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 843,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "1500:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1482:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "1482:30:7"
											},
											{
												"expression": {
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 846,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "1552:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1557:11:7",
														"memberName": "poolDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2072,
														"src": "1552:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 849,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "1572:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1552:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "1552:32:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 853,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "1651:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 854,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "1660:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 855,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "1669:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 852,
														"name": "_placeInPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "1638:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1638:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "1638:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 864,
																	"name": "packagePrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "1761:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1799:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"expression": {
																		"id": 866,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1822:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1828:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1822:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "3130",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1865:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	}
																],
																"id": 863,
																"name": "Deposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "1730:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Deposit_$2042_storage_ptr_$",
																	"typeString": "type(struct Storage.Deposit storage pointer)"
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"1753:6:7",
																"1788:9:7",
																"1815:5:7",
																"1852:11:7"
															],
															"names": [
																"amount",
																"withdrawn",
																"start",
																"depositType"
															],
															"nodeType": "FunctionCall",
															"src": "1730:172:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deposit_$2042_memory_ptr",
																"typeString": "struct Storage.Deposit memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Deposit_$2042_memory_ptr",
																"typeString": "struct Storage.Deposit memory"
															}
														],
														"expression": {
															"expression": {
																"id": 858,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "1711:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1716:8:7",
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2048,
															"src": "1711:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$2042_storage_$dyn_storage",
																"typeString": "struct Storage.Deposit storage ref[] storage ref"
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1725:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1711:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$2042_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$2042_storage_$returns$__$attached_to$_t_array$_t_struct$_Deposit_$2042_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Storage.Deposit storage ref[] storage pointer,struct Storage.Deposit storage ref)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1711:192:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "1711:192:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 873,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1929:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1933:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1929:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "1941:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 876,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "1950:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 877,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "1959:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "506f6f6c205265546f70757020284561726e696e6729",
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1973:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_17c9f18468bc8a39f55c52e9a3a8211c840200ad3e9a11f88031b36e010cfcd9",
																"typeString": "literal_string \"Pool ReTopup (Earning)\""
															},
															"value": "Pool ReTopup (Earning)"
														},
														{
															"expression": {
																"id": 879,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2000:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2006:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2000:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_17c9f18468bc8a39f55c52e9a3a8211c840200ad3e9a11f88031b36e010cfcd9",
																"typeString": "literal_string \"Pool ReTopup (Earning)\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 872,
														"name": "Upgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2225,
														"src": "1921:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,string memory,uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1921:95:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "EmitStatement",
												"src": "1916:100:7"
											}
										]
									},
									"functionSelector": "7848f0a3",
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "RetopPoolByEarning",
									"nameLocation": "895:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "919:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "914:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "933:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "928:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "928:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:28:7"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "951:0:7"
									},
									"scope": 1900,
									"src": "886:1151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "2112:1625:7",
										"statements": [
											{
												"assignments": [
													893
												],
												"declarations": [
													{
														"constant": false,
														"id": 893,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "2245:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "2232:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 892,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 891,
																"name": "User",
																"nameLocations": [
																	"2232:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2089,
																"src": "2232:4:7"
															},
															"referencedDeclaration": 2089,
															"src": "2232:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 897,
												"initialValue": {
													"baseExpression": {
														"id": 894,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "2252:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2089_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 896,
													"indexExpression": {
														"id": 895,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "2258:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2252:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2089_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2232:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 899,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "2285:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 900,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2290:7:7",
																"memberName": "account",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2044,
																"src": "2285:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 901,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2301:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2305:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2301:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2285:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420796f7572206163636f756e74",
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2313:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															},
															"value": "Not your account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															}
														],
														"id": 898,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2277:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2277:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "2277:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 908,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "2351:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 909,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2356:9:7",
																"memberName": "poollevel",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2070,
																"src": "2351:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "37",
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2368:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7_by_1",
																	"typeString": "int_const 7"
																},
																"value": "7"
															},
															"src": "2351:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206d617820706f6f6c",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2301e420cfc72a69fd463c53e71ee80b3f7d1dada318fc1a447f9445639f8de",
																"typeString": "literal_string \"At max pool\""
															},
															"value": "At max pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2301e420cfc72a69fd463c53e71ee80b3f7d1dada318fc1a447f9445639f8de",
																"typeString": "literal_string \"At max pool\""
															}
														],
														"id": 907,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2343:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2343:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "2343:42:7"
											},
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "packagePrice",
														"nameLocation": "2412:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "2404:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 915,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2404:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 917,
												"nodeType": "VariableDeclarationStatement",
												"src": "2404:20:7"
											},
											{
												"assignments": [
													919
												],
												"declarations": [
													{
														"constant": false,
														"id": 919,
														"mutability": "mutable",
														"name": "targetPool",
														"nameLocation": "2443:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "2435:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 918,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2435:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"nodeType": "VariableDeclarationStatement",
												"src": "2435:18:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 922,
																	"name": "_poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "2486:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2496:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2486:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 925,
																	"name": "poolPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2283,
																	"src": "2500:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2513:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2500:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2486:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2068696768657220706f6f6c",
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2521:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dbf30eb606b6f290538ccf43fbcaab7e5f2c265479fab9e1e0529ecc3a34f35",
																"typeString": "literal_string \"No higher pool\""
															},
															"value": "No higher pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dbf30eb606b6f290538ccf43fbcaab7e5f2c265479fab9e1e0529ecc3a34f35",
																"typeString": "literal_string \"No higher pool\""
															}
														],
														"id": 921,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2478:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2478:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "2478:60:7"
											},
											{
												"expression": {
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 931,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "2549:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 932,
															"name": "poolPackages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "2564:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 936,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 933,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "2577:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2587:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2577:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2564:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2549:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "2549:40:7"
											},
											{
												"expression": {
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 939,
														"name": "targetPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "2600:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 940,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "2613:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2623:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2613:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2600:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "2600:24:7"
											},
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "top",
														"nameLocation": "2830:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "2808:25:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserPoolTopup_$2349_storage_ptr",
															"typeString": "struct Storage.UserPoolTopup"
														},
														"typeName": {
															"id": 946,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 945,
																"name": "UserPoolTopup",
																"nameLocations": [
																	"2808:13:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2349,
																"src": "2808:13:7"
															},
															"referencedDeclaration": 2349,
															"src": "2808:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserPoolTopup_$2349_storage_ptr",
																"typeString": "struct Storage.UserPoolTopup"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 953,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 948,
															"name": "userPooltopup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2367,
															"src": "2836:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2349_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup storage ref))"
															}
														},
														"id": 950,
														"indexExpression": {
															"id": 949,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "2850:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2836:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2349_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserPoolTopup storage ref)"
														}
													},
													"id": 952,
													"indexExpression": {
														"id": 951,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "2859:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2836:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserPoolTopup_$2349_storage",
														"typeString": "struct Storage.UserPoolTopup storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2808:59:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 955,
																	"name": "top",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "2886:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserPoolTopup_$2349_storage_ptr",
																		"typeString": "struct Storage.UserPoolTopup storage pointer"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2890:11:7",
																"memberName": "nextPoolAmt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2346,
																"src": "2886:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 957,
																"name": "packagePrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "2905:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2886:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206e65787420706f6f6c2062616c616e6365",
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c47752b15d308659416836a32471817185c55251e39b4cf1576050203056cf5",
																"typeString": "literal_string \"Not enough next pool balance\""
															},
															"value": "Not enough next pool balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c47752b15d308659416836a32471817185c55251e39b4cf1576050203056cf5",
																"typeString": "literal_string \"Not enough next pool balance\""
															}
														],
														"id": 954,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2878:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2878:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "2878:72:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2969:33:7",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 963,
																		"name": "userHasPool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "2970:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(uint256 => bool))"
																		}
																	},
																	"id": 965,
																	"indexExpression": {
																		"id": 964,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "2982:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2970:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 967,
																"indexExpression": {
																	"id": 966,
																	"name": "targetPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "2991:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2970:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920707572636861736564206e65787420706f6f6c",
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3004:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_820c20ccf70b35ca40ef8fcfc7c034bbd70a5d837f151a35affd990d9766d829",
																"typeString": "literal_string \"Already purchased next pool\""
															},
															"value": "Already purchased next pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_820c20ccf70b35ca40ef8fcfc7c034bbd70a5d837f151a35affd990d9766d829",
																"typeString": "literal_string \"Already purchased next pool\""
															}
														],
														"id": 962,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2961:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2961:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "2961:73:7"
											},
											{
												"expression": {
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 972,
															"name": "top",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "3072:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserPoolTopup_$2349_storage_ptr",
																"typeString": "struct Storage.UserPoolTopup storage pointer"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3076:11:7",
														"memberName": "nextPoolAmt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2346,
														"src": "3072:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 975,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "3091:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3072:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "3072:31:7"
											},
											{
												"expression": {
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 978,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "3145:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 980,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3150:9:7",
														"memberName": "poollevel",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2070,
														"src": "3145:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3163:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3145:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "3145:19:7"
											},
											{
												"expression": {
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 984,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "3181:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3186:11:7",
														"memberName": "poolDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2072,
														"src": "3181:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 987,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "3201:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3181:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "3181:32:7"
											},
											{
												"expression": {
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 990,
																"name": "userHasPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "3224:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(uint256 => bool))"
																}
															},
															"id": 993,
															"indexExpression": {
																"id": 991,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "3236:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3224:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 994,
														"indexExpression": {
															"id": 992,
															"name": "targetPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "3245:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3224:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3259:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3224:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "3224:39:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 999,
															"name": "targetPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "3320:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1000,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "3332:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 1001,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "3341:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 998,
														"name": "_placeInPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "3307:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3307:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "3307:47:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1005,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3630:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3634:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3630:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1007,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "3642:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1008,
																"name": "targetPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "3651:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3664:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3651:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1011,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "3667:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "506f6f6c205570677261646520284561726e696e6729",
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3681:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a8a5b118f00f38fd0e122b1d0a87415e70fc4729fe34330c5bf5aa82af033b89",
																"typeString": "literal_string \"Pool Upgrade (Earning)\""
															},
															"value": "Pool Upgrade (Earning)"
														},
														{
															"expression": {
																"id": 1013,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3707:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3713:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3707:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_a8a5b118f00f38fd0e122b1d0a87415e70fc4729fe34330c5bf5aa82af033b89",
																"typeString": "literal_string \"Pool Upgrade (Earning)\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1004,
														"name": "Upgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2225,
														"src": "3622:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,string memory,uint256)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3622:101:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "EmitStatement",
												"src": "3617:106:7"
											}
										]
									},
									"functionSelector": "8e222e24",
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradePoolByEarning",
									"nameLocation": "2052:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "2080:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2073:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 885,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2073:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "2094:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2089:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2089:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2072:30:7"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2112:0:7"
									},
									"scope": 1900,
									"src": "2043:1694:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "3789:2192:7",
										"statements": [
											{
												"assignments": [
													1025
												],
												"declarations": [
													{
														"constant": false,
														"id": 1025,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "3813:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "3800:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 1024,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1023,
																"name": "User",
																"nameLocations": [
																	"3800:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2089,
																"src": "3800:4:7"
															},
															"referencedDeclaration": 2089,
															"src": "3800:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1029,
												"initialValue": {
													"baseExpression": {
														"id": 1026,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "3820:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2089_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 1028,
													"indexExpression": {
														"id": 1027,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "3826:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3820:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2089_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3800:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1031,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "3853:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3858:7:7",
																"memberName": "account",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2044,
																"src": "3853:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1033,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3869:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3873:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3869:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3853:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420796f7572206163636f756e74",
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3881:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															},
															"value": "Not your account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															}
														],
														"id": 1030,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3845:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3845:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "3845:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1040,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "3919:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3924:9:7",
																"memberName": "poollevel",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2070,
																"src": "3919:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "37",
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3936:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7_by_1",
																	"typeString": "int_const 7"
																},
																"value": "7"
															},
															"src": "3919:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206d6178206c6576656c",
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3939:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f6d6f7b763be4c628a2ded4434e90bc0b02384f0d3a36303458913b65373af4",
																"typeString": "literal_string \"At max level\""
															},
															"value": "At max level"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f6d6f7b763be4c628a2ded4434e90bc0b02384f0d3a36303458913b65373af4",
																"typeString": "literal_string \"At max level\""
															}
														],
														"id": 1039,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3911:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3911:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "3911:43:7"
											},
											{
												"assignments": [
													1048
												],
												"declarations": [
													{
														"constant": false,
														"id": 1048,
														"mutability": "mutable",
														"name": "nextLevel",
														"nameLocation": "3980:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "3975:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1047,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3975:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1051,
												"initialValue": {
													"expression": {
														"id": 1049,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "3992:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3997:9:7",
													"memberName": "poollevel",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2070,
													"src": "3992:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3975:31:7"
											},
											{
												"assignments": [
													1053
												],
												"declarations": [
													{
														"constant": false,
														"id": 1053,
														"mutability": "mutable",
														"name": "nextPool",
														"nameLocation": "4024:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "4019:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1052,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4019:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1056,
												"initialValue": {
													"expression": {
														"id": 1054,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "4035:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4040:9:7",
													"memberName": "poollevel",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2070,
													"src": "4035:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4019:30:7"
											},
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"mutability": "mutable",
														"name": "requiredLevel",
														"nameLocation": "4101:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "4096:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1057,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4096:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"baseExpression": {
														"id": 1059,
														"name": "minLevelForPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "4117:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$7_storage",
															"typeString": "uint256[7] storage ref"
														}
													},
													"id": 1061,
													"indexExpression": {
														"id": 1060,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "4133:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4117:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4096:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1064,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "4258:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4263:5:7",
																"memberName": "level",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2058,
																"src": "4258:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1066,
																"name": "requiredLevel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1058,
																"src": "4272:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4258:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5570677261646520796f7572206c6576656c206669727374",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4287:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f4c21ebb40b1d6d7105da588a0eeee46f6103db1aedadf89b4d7409a5c1bb9a",
																"typeString": "literal_string \"Upgrade your level first\""
															},
															"value": "Upgrade your level first"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f4c21ebb40b1d6d7105da588a0eeee46f6103db1aedadf89b4d7409a5c1bb9a",
																"typeString": "literal_string \"Upgrade your level first\""
															}
														],
														"id": 1063,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4250:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4250:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "4250:64:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1071,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "4394:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4405:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4394:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1083,
												"nodeType": "IfStatement",
												"src": "4390:107:7",
												"trueBody": {
													"id": 1082,
													"nodeType": "Block",
													"src": "4408:89:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1075,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1025,
																				"src": "4431:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																					"typeString": "struct Storage.User storage pointer"
																				}
																			},
																			"id": 1076,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4436:9:7",
																			"memberName": "poollevel",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2070,
																			"src": "4431:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1077,
																			"name": "nextPool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1053,
																			"src": "4449:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4431:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4275792070726576696f757320706f6f6c206669727374",
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4459:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5f5fa9d58a74e1ce1932ae4e067a9f842704fbfbc24d932ec13f6cf4e6e7c5b8",
																			"typeString": "literal_string \"Buy previous pool first\""
																		},
																		"value": "Buy previous pool first"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5f5fa9d58a74e1ce1932ae4e067a9f842704fbfbc24d932ec13f6cf4e6e7c5b8",
																			"typeString": "literal_string \"Buy previous pool first\""
																		}
																	],
																	"id": 1074,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4423:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4423:62:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1081,
															"nodeType": "ExpressionStatement",
															"src": "4423:62:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4515:31:7",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1085,
																		"name": "userHasPool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "4516:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(uint256 => bool))"
																		}
																	},
																	"id": 1087,
																	"indexExpression": {
																		"id": 1086,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1020,
																		"src": "4528:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4516:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1089,
																"indexExpression": {
																	"id": 1088,
																	"name": "nextPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "4537:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4516:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20616c726561647920707572636861736564",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4548:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_909f3d3b7d1bfc91fce0554a59fdfa995b3e693af9ec22f5924ab4d305e96bc1",
																"typeString": "literal_string \"Pool already purchased\""
															},
															"value": "Pool already purchased"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_909f3d3b7d1bfc91fce0554a59fdfa995b3e693af9ec22f5924ab4d305e96bc1",
																"typeString": "literal_string \"Pool already purchased\""
															}
														],
														"id": 1084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4507:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4507:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "4507:66:7"
											},
											{
												"assignments": [
													1095
												],
												"declarations": [
													{
														"constant": false,
														"id": 1095,
														"mutability": "mutable",
														"name": "packagePrice",
														"nameLocation": "4603:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "4598:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1094,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4598:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1099,
												"initialValue": {
													"baseExpression": {
														"id": 1096,
														"name": "poolPackages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2283,
														"src": "4618:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1098,
													"indexExpression": {
														"id": 1097,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "4631:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4618:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4598:42:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1103,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4726:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4730:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4726:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1107,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4746:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_InfinityPool_$1900",
																		"typeString": "contract InfinityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_InfinityPool_$1900",
																		"typeString": "contract InfinityPool"
																	}
																],
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4738:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1105,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4738:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4738:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "4753:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1100,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "4708:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4713:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 231,
														"src": "4708:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4708:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "4708:58:7"
											},
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "nowTime",
														"nameLocation": "4792:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "4787:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1112,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4787:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1116,
												"initialValue": {
													"expression": {
														"id": 1114,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "4802:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4808:9:7",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "4802:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4787:30:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1117,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "4832:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4844:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4832:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1166,
												"nodeType": "IfStatement",
												"src": "4829:476:7",
												"trueBody": {
													"id": 1165,
													"nodeType": "Block",
													"src": "4846:459:7",
													"statements": [
														{
															"expression": {
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1120,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "4861:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4866:13:7",
																	"memberName": "poolStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2074,
																	"src": "4861:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1123,
																	"name": "nowTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "4882:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4861:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "4861:28:7"
														},
														{
															"assignments": [
																1128
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1128,
																	"mutability": "mutable",
																	"name": "sponsor",
																	"nameLocation": "4917:7:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1165,
																	"src": "4904:20:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																		"typeString": "struct Storage.User"
																	},
																	"typeName": {
																		"id": 1127,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1126,
																			"name": "User",
																			"nameLocations": [
																				"4904:4:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2089,
																			"src": "4904:4:7"
																		},
																		"referencedDeclaration": 2089,
																		"src": "4904:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																			"typeString": "struct Storage.User"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1133,
															"initialValue": {
																"baseExpression": {
																	"id": 1129,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2152,
																	"src": "4927:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2089_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 1132,
																"indexExpression": {
																	"expression": {
																		"id": 1130,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "4933:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4938:9:7",
																	"memberName": "sponsorId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2054,
																	"src": "4933:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4927:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2089_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4904:44:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1134,
																				"name": "sponsor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1128,
																				"src": "5015:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																					"typeString": "struct Storage.User storage pointer"
																				}
																			},
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5023:16:7",
																			"memberName": "registrationTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2080,
																			"src": "5015:24:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1136,
																			"name": "ROI_2X_TIME",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1936,
																			"src": "5042:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5015:38:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1138,
																		"name": "nowTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "5057:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5015:49:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1140,
																			"name": "sponsor",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1128,
																			"src": "5068:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																				"typeString": "struct Storage.User storage pointer"
																			}
																		},
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5076:6:7",
																		"memberName": "roiCap",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2068,
																		"src": "5068:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "3135",
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5086:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "15"
																	},
																	"src": "5068:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5015:73:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1164,
															"nodeType": "IfStatement",
															"src": "5012:282:7",
															"trueBody": {
																"id": 1163,
																"nodeType": "Block",
																"src": "5089:205:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1145,
																					"name": "sponsor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1128,
																					"src": "5109:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																						"typeString": "struct Storage.User storage pointer"
																					}
																				},
																				"id": 1147,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "5117:19:7",
																				"memberName": "directPoolQualified",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2062,
																				"src": "5109:27:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 1148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5140:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5109:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1150,
																		"nodeType": "ExpressionStatement",
																		"src": "5109:32:7"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1151,
																					"name": "sponsor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1128,
																					"src": "5164:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																						"typeString": "struct Storage.User storage pointer"
																					}
																				},
																				"id": 1152,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5172:19:7",
																				"memberName": "directPoolQualified",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2062,
																				"src": "5164:27:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5194:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5164:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1162,
																		"nodeType": "IfStatement",
																		"src": "5160:119:7",
																		"trueBody": {
																			"id": 1161,
																			"nodeType": "Block",
																			"src": "5196:83:7",
																			"statements": [
																				{
																					"expression": {
																						"id": 1159,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 1155,
																								"name": "sponsor",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1128,
																								"src": "5219:7:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																									"typeString": "struct Storage.User storage pointer"
																								}
																							},
																							"id": 1157,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberLocation": "5227:6:7",
																							"memberName": "roiCap",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2068,
																							"src": "5219:14:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "3230",
																							"id": 1158,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5236:2:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_20_by_1",
																								"typeString": "int_const 20"
																							},
																							"value": "20"
																						},
																						"src": "5219:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1160,
																					"nodeType": "ExpressionStatement",
																					"src": "5219:19:7"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1167,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "5320:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5325:19:7",
																"memberName": "directPoolQualified",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2062,
																"src": "5320:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5345:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "5320:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1171,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "5351:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5356:16:7",
																	"memberName": "registrationTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2080,
																	"src": "5351:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1173,
																	"name": "ROI_2X_TIME",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1936,
																	"src": "5375:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5351:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1175,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "5390:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5395:13:7",
																"memberName": "poolStartTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2074,
																"src": "5390:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5351:57:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5320:88:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1179,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "5413:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5418:6:7",
															"memberName": "roiCap",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2068,
															"src": "5413:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3135",
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5428:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15_by_1",
																"typeString": "int_const 15"
															},
															"value": "15"
														},
														"src": "5413:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5320:110:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "IfStatement",
												"src": "5317:159:7",
												"trueBody": {
													"id": 1190,
													"nodeType": "Block",
													"src": "5431:45:7",
													"statements": [
														{
															"expression": {
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1184,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "5446:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5451:6:7",
																	"memberName": "roiCap",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2068,
																	"src": "5446:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3230",
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5460:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "5446:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1189,
															"nodeType": "ExpressionStatement",
															"src": "5446:16:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1192,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "5486:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5491:9:7",
														"memberName": "poollevel",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2070,
														"src": "5486:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5504:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5486:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "5486:19:7"
											},
											{
												"expression": {
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1198,
																"name": "userHasPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "5516:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(uint256 => bool))"
																}
															},
															"id": 1201,
															"indexExpression": {
																"id": 1199,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "5528:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5516:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1202,
														"indexExpression": {
															"id": 1200,
															"name": "nextPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "5537:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5516:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5549:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5516:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "5516:37:7"
											},
											{
												"expression": {
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1206,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "5564:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5569:11:7",
														"memberName": "poolDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2072,
														"src": "5564:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1209,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "5584:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5564:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "5564:32:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1213,
															"name": "nextLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "5620:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1214,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "5631:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1215,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "5640:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1212,
														"name": "_placeInPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "5607:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5607:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "5607:46:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1219,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5908:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5912:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5908:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1221,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "5920:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1222,
																"name": "nextPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "5929:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5940:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "5929:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1225,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "5943:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "506f6f6c",
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5957:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a62f5c1187999cdd374fd40d850be57b4952a965136e01501e2ac9ed75fe27f",
																"typeString": "literal_string \"Pool\""
															},
															"value": "Pool"
														},
														{
															"id": 1227,
															"name": "nowTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "5965:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_4a62f5c1187999cdd374fd40d850be57b4952a965136e01501e2ac9ed75fe27f",
																"typeString": "literal_string \"Pool\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1218,
														"name": "Upgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2225,
														"src": "5900:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,string memory,uint256)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5900:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "EmitStatement",
												"src": "5895:78:7"
											}
										]
									},
									"functionSelector": "4060160a",
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradePool",
									"nameLocation": "3754:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "3771:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "3766:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3766:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3765:14:7"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3789:0:7"
									},
									"scope": 1900,
									"src": "3745:2236:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "6077:1026:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1241,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "6096:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1242,
																	"name": "poolPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2283,
																	"src": "6105:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6118:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6105:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6096:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964",
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6126:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c84d91f537f720db0d8ff8472db06e97a59d22ac83366d0af861134338d0e345",
																"typeString": "literal_string \"Invalid\""
															},
															"value": "Invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c84d91f537f720db0d8ff8472db06e97a59d22ac83366d0af861134338d0e345",
																"typeString": "literal_string \"Invalid\""
															}
														],
														"id": 1240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6088:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6088:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "6088:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1249,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6155:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6159:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "6155:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"baseExpression": {
																	"id": 1251,
																	"name": "poolPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2283,
																	"src": "6168:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1253,
																"indexExpression": {
																	"id": 1252,
																	"name": "poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "6181:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6168:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6155:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f727265637420616d6f756e74",
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6190:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f313977f9f132db863cda3455f302e47301ce6a1616834c5cd6d5972d9a8c2f4",
																"typeString": "literal_string \"Incorrect amount\""
															},
															"value": "Incorrect amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f313977f9f132db863cda3455f302e47301ce6a1616834c5cd6d5972d9a8c2f4",
																"typeString": "literal_string \"Incorrect amount\""
															}
														],
														"id": 1248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6147:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6147:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "6147:62:7"
											},
											{
												"assignments": [
													1259
												],
												"declarations": [
													{
														"constant": false,
														"id": 1259,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "6292:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "6287:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1258,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6287:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1260,
															"name": "poolUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2393,
															"src": "6300:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(uint256 => uint256[] storage ref)"
															}
														},
														"id": 1262,
														"indexExpression": {
															"id": 1261,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "6310:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6300:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6318:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6300:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6287:37:7"
											},
											{
												"assignments": [
													1266
												],
												"declarations": [
													{
														"constant": false,
														"id": 1266,
														"mutability": "mutable",
														"name": "newUserId",
														"nameLocation": "6403:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "6398:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1265,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6398:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1273,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1267,
														"name": "defaultRefId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "6415:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"id": 1270,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1259,
																"src": "6435:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6430:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1268,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6430:4:7",
																"typeDescriptions": {}
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6430:11:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6415:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6398:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1278,
															"name": "newUserId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "6475:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1274,
																"name": "poolUsers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2393,
																"src": "6452:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 1276,
															"indexExpression": {
																"id": 1275,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "6462:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6452:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6470:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6452:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6452:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "6452:33:7"
											},
											{
												"assignments": [
													1282
												],
												"declarations": [
													{
														"constant": false,
														"id": 1282,
														"mutability": "mutable",
														"name": "parentIndex",
														"nameLocation": "6534:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "6526:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6526:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1289,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1283,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "6549:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6557:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6549:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1286,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6548:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "33",
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6562:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "6548:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6526:37:7"
											},
											{
												"assignments": [
													1291
												],
												"declarations": [
													{
														"constant": false,
														"id": 1291,
														"mutability": "mutable",
														"name": "parentId",
														"nameLocation": "6579:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "6574:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1290,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6574:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1297,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1292,
															"name": "poolUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2393,
															"src": "6590:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(uint256 => uint256[] storage ref)"
															}
														},
														"id": 1294,
														"indexExpression": {
															"id": 1293,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "6600:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6590:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1296,
													"indexExpression": {
														"id": 1295,
														"name": "parentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "6608:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6590:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6574:46:7"
											},
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1298,
																"name": "userPooldtl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2374,
																"src": "6659:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPool_$2344_storage_$_$",
																	"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool storage ref))"
																}
															},
															"id": 1301,
															"indexExpression": {
																"id": 1299,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "6671:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6659:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPool_$2344_storage_$",
																"typeString": "mapping(uint256 => struct Storage.UserPool storage ref)"
															}
														},
														"id": 1302,
														"indexExpression": {
															"id": 1300,
															"name": "newUserId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "6679:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6659:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserPool_$2344_storage",
															"typeString": "struct Storage.UserPool storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1304,
																"name": "newUserId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "6724:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1305,
																"name": "userMainId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "6760:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1306,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "6797:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1307,
																"name": "parentId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "6832:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6871:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1303,
															"name": "UserPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2344,
															"src": "6692:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_UserPool_$2344_storage_ptr_$",
																"typeString": "type(struct Storage.UserPool storage pointer)"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"6720:2:7",
															"6752:6:7",
															"6789:6:7",
															"6822:8:7",
															"6859:10:7"
														],
														"names": [
															"id",
															"mainid",
															"poolId",
															"parentId",
															"bonusCount"
														],
														"nodeType": "FunctionCall",
														"src": "6692:196:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserPool_$2344_memory_ptr",
															"typeString": "struct Storage.UserPool memory"
														}
													},
													"src": "6659:229:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserPool_$2344_storage",
														"typeString": "struct Storage.UserPool storage ref"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "6659:229:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1318,
															"name": "newUserId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "6951:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1312,
																	"name": "userIdPerPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2388,
																	"src": "6912:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																	}
																},
																"id": 1315,
																"indexExpression": {
																	"id": 1313,
																	"name": "poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "6926:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6912:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 1316,
															"indexExpression": {
																"id": 1314,
																"name": "userMainId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "6934:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6912:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6946:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6912:38:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6912:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "6912:49:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1327,
															"name": "newUserId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "7008:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1321,
																	"name": "userChildren",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2381,
																	"src": "6972:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																	}
																},
																"id": 1324,
																"indexExpression": {
																	"id": 1322,
																	"name": "poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "6985:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6972:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 1325,
															"indexExpression": {
																"id": 1323,
																"name": "parentId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "6993:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6972:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7003:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6972:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6972:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "6972:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1331,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "7052:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1332,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "7062:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1333,
															"name": "userMainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "7070:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1334,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "7082:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1330,
														"name": "_distributePoolIncome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "7029:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7029:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "7029:66:7"
											}
										]
									},
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_placeInPool",
									"nameLocation": "6004:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "6025:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "6017:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6017:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "userMainId",
												"nameLocation": "6038:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "6033:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6033:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "packagePrice",
												"nameLocation": "6055:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "6050:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6050:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6016:52:7"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6077:0:7"
									},
									"scope": 1900,
									"src": "5995:1108:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1489,
										"nodeType": "Block",
										"src": "7213:1564:7",
										"statements": [
											{
												"assignments": [
													1350
												],
												"declarations": [
													{
														"constant": false,
														"id": 1350,
														"mutability": "mutable",
														"name": "currentParent",
														"nameLocation": "7238:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1489,
														"src": "7233:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1349,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7233:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1352,
												"initialValue": {
													"id": 1351,
													"name": "_parentId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1340,
													"src": "7254:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7233:30:7"
											},
											{
												"assignments": [
													1354
												],
												"declarations": [
													{
														"constant": false,
														"id": 1354,
														"mutability": "mutable",
														"name": "amountPerLevel",
														"nameLocation": "7286:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 1489,
														"src": "7281:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1353,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7281:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1358,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1355,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "7303:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "33",
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7313:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "7303:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7281:33:7"
											},
											{
												"assignments": [
													1360
												],
												"declarations": [
													{
														"constant": false,
														"id": 1360,
														"mutability": "mutable",
														"name": "totalDistributed",
														"nameLocation": "7332:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1489,
														"src": "7327:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1359,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7327:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1362,
												"initialValue": {
													"hexValue": "30",
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7351:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7327:25:7"
											},
											{
												"body": {
													"id": 1472,
													"nodeType": "Block",
													"src": "7388:1158:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1373,
																		"name": "currentParent",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "7420:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7437:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7420:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1376,
																		"name": "currentParent",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "7442:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1377,
																		"name": "defaultRefId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1922,
																		"src": "7459:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7442:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7420:51:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1397,
															"nodeType": "IfStatement",
															"src": "7416:335:7",
															"trueBody": {
																"id": 1396,
																"nodeType": "Block",
																"src": "7473:278:7",
																"statements": [
																	{
																		"assignments": [
																			1381
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1381,
																				"mutability": "mutable",
																				"name": "remaining",
																				"nameLocation": "7568:9:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1396,
																				"src": "7563:14:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1380,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "7563:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1385,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1382,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1346,
																				"src": "7580:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1383,
																				"name": "totalDistributed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1360,
																				"src": "7590:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7580:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7563:43:7"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1386,
																				"name": "remaining",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1381,
																				"src": "7629:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7641:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "7629:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1394,
																		"nodeType": "IfStatement",
																		"src": "7625:87:7",
																		"trueBody": {
																			"id": 1393,
																			"nodeType": "Block",
																			"src": "7644:68:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1390,
																								"name": "remaining",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1381,
																								"src": "7682:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1389,
																							"name": "_sendToCreator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2771,
																							"src": "7667:14:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																								"typeString": "function (uint256)"
																							}
																						},
																						"id": 1391,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7667:25:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1392,
																					"nodeType": "ExpressionStatement",
																					"src": "7667:25:7"
																				}
																			]
																		}
																	},
																	{
																		"id": 1395,
																		"nodeType": "Break",
																		"src": "7730:5:7"
																	}
																]
															}
														},
														{
															"assignments": [
																1400
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1400,
																	"mutability": "mutable",
																	"name": "userp",
																	"nameLocation": "7784:5:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1472,
																	"src": "7767:22:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserPool_$2344_storage_ptr",
																		"typeString": "struct Storage.UserPool"
																	},
																	"typeName": {
																		"id": 1399,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1398,
																			"name": "UserPool",
																			"nameLocations": [
																				"7767:8:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2344,
																			"src": "7767:8:7"
																		},
																		"referencedDeclaration": 2344,
																		"src": "7767:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserPool_$2344_storage_ptr",
																			"typeString": "struct Storage.UserPool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1406,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1401,
																		"name": "userPooldtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2374,
																		"src": "7792:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPool_$2344_storage_$_$",
																			"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool storage ref))"
																		}
																	},
																	"id": 1403,
																	"indexExpression": {
																		"id": 1402,
																		"name": "_poolId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "7804:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7792:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPool_$2344_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.UserPool storage ref)"
																	}
																},
																"id": 1405,
																"indexExpression": {
																	"id": 1404,
																	"name": "currentParent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "7813:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7792:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserPool_$2344_storage",
																	"typeString": "struct Storage.UserPool storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7767:60:7"
														},
														{
															"assignments": [
																1408
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1408,
																	"mutability": "mutable",
																	"name": "parentMainId",
																	"nameLocation": "7847:12:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1472,
																	"src": "7842:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1407,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "7842:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1411,
															"initialValue": {
																"expression": {
																	"id": 1409,
																	"name": "userp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "7862:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserPool_$2344_storage_ptr",
																		"typeString": "struct Storage.UserPool storage pointer"
																	}
																},
																"id": 1410,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7868:6:7",
																"memberName": "mainid",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2337,
																"src": "7862:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7842:32:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1412,
																		"name": "userp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "7910:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserPool_$2344_storage_ptr",
																			"typeString": "struct Storage.UserPool storage pointer"
																		}
																	},
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7916:10:7",
																	"memberName": "bonusCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2343,
																	"src": "7910:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "3339",
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7929:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_39_by_1",
																		"typeString": "int_const 39"
																	},
																	"value": "39"
																},
																"src": "7910:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1462,
															"nodeType": "IfStatement",
															"src": "7906:497:7",
															"trueBody": {
																"id": 1461,
																"nodeType": "Block",
																"src": "7933:470:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1416,
																					"name": "userp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1400,
																					"src": "7952:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserPool_$2344_storage_ptr",
																						"typeString": "struct Storage.UserPool storage pointer"
																					}
																				},
																				"id": 1418,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "7958:10:7",
																				"memberName": "bonusCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2343,
																				"src": "7952:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 1419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7972:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "7952:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1421,
																		"nodeType": "ExpressionStatement",
																		"src": "7952:21:7"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1422,
																					"name": "userp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1400,
																					"src": "7998:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserPool_$2344_storage_ptr",
																						"typeString": "struct Storage.UserPool storage pointer"
																					}
																				},
																				"id": 1423,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8004:10:7",
																				"memberName": "bonusCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2343,
																				"src": "7998:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"hexValue": "3234",
																				"id": 1424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8018:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_24_by_1",
																					"typeString": "int_const 24"
																				},
																				"value": "24"
																			},
																			"src": "7998:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1435,
																						"name": "userp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1400,
																						"src": "8139:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserPool_$2344_storage_ptr",
																							"typeString": "struct Storage.UserPool storage pointer"
																						}
																					},
																					"id": 1436,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8145:10:7",
																					"memberName": "bonusCount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2343,
																					"src": "8139:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"hexValue": "3336",
																					"id": 1437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8159:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_36_by_1",
																						"typeString": "int_const 36"
																					},
																					"value": "36"
																				},
																				"src": "8139:22:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"id": 1458,
																				"nodeType": "Block",
																				"src": "8278:108:7",
																				"statements": [
																					{
																						"expression": {
																							"id": 1456,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"expression": {
																									"baseExpression": {
																										"baseExpression": {
																											"id": 1449,
																											"name": "userPooltopup",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2367,
																											"src": "8301:13:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2349_storage_$_$",
																												"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup storage ref))"
																											}
																										},
																										"id": 1452,
																										"indexExpression": {
																											"id": 1450,
																											"name": "_poolId",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1342,
																											"src": "8315:7:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "8301:22:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2349_storage_$",
																											"typeString": "mapping(uint256 => struct Storage.UserPoolTopup storage ref)"
																										}
																									},
																									"id": 1453,
																									"indexExpression": {
																										"id": 1451,
																										"name": "parentMainId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1408,
																										"src": "8324:12:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "8301:36:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserPoolTopup_$2349_storage",
																										"typeString": "struct Storage.UserPoolTopup storage ref"
																									}
																								},
																								"id": 1454,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": true,
																								"memberLocation": "8338:10:7",
																								"memberName": "reTopupAmt",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2348,
																								"src": "8301:47:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"id": 1455,
																								"name": "amountPerLevel",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1354,
																								"src": "8352:14:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "8301:65:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1457,
																						"nodeType": "ExpressionStatement",
																						"src": "8301:65:7"
																					}
																				]
																			},
																			"id": 1459,
																			"nodeType": "IfStatement",
																			"src": "8135:251:7",
																			"trueBody": {
																				"id": 1448,
																				"nodeType": "Block",
																				"src": "8163:109:7",
																				"statements": [
																					{
																						"expression": {
																							"id": 1446,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"expression": {
																									"baseExpression": {
																										"baseExpression": {
																											"id": 1439,
																											"name": "userPooltopup",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2367,
																											"src": "8186:13:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2349_storage_$_$",
																												"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup storage ref))"
																											}
																										},
																										"id": 1442,
																										"indexExpression": {
																											"id": 1440,
																											"name": "_poolId",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1342,
																											"src": "8200:7:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "8186:22:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2349_storage_$",
																											"typeString": "mapping(uint256 => struct Storage.UserPoolTopup storage ref)"
																										}
																									},
																									"id": 1443,
																									"indexExpression": {
																										"id": 1441,
																										"name": "parentMainId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1408,
																										"src": "8209:12:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "8186:36:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_UserPoolTopup_$2349_storage",
																										"typeString": "struct Storage.UserPoolTopup storage ref"
																									}
																								},
																								"id": 1444,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": true,
																								"memberLocation": "8223:11:7",
																								"memberName": "nextPoolAmt",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2346,
																								"src": "8186:48:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"id": 1445,
																								"name": "amountPerLevel",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1354,
																								"src": "8238:14:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "8186:66:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1447,
																						"nodeType": "ExpressionStatement",
																						"src": "8186:66:7"
																					}
																				]
																			}
																		},
																		"id": 1460,
																		"nodeType": "IfStatement",
																		"src": "7994:392:7",
																		"trueBody": {
																			"id": 1434,
																			"nodeType": "Block",
																			"src": "8022:107:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1427,
																								"name": "parentMainId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1408,
																								"src": "8060:12:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1428,
																								"name": "_userMainId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1344,
																								"src": "8074:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1429,
																								"name": "amountPerLevel",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1354,
																								"src": "8087:14:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "31",
																								"id": 1430,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8103:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							{
																								"hexValue": "3130",
																								"id": 1431,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8106:2:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								{
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								}
																							],
																							"id": 1426,
																							"name": "_payPoolIncome",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1570,
																							"src": "8045:14:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (uint256,uint256,uint256,uint256,uint256)"
																							}
																						},
																						"id": 1432,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8045:64:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1433,
																					"nodeType": "ExpressionStatement",
																					"src": "8045:64:7"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1463,
																	"name": "totalDistributed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "8426:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1464,
																	"name": "amountPerLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1354,
																	"src": "8446:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8426:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1466,
															"nodeType": "ExpressionStatement",
															"src": "8426:34:7"
														},
														{
															"expression": {
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1467,
																	"name": "currentParent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "8504:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1468,
																		"name": "userp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "8520:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserPool_$2344_storage_ptr",
																			"typeString": "struct Storage.UserPool storage pointer"
																		}
																	},
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8526:8:7",
																	"memberName": "parentId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2341,
																	"src": "8520:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8504:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1471,
															"nodeType": "ExpressionStatement",
															"src": "8504:30:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1367,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "7379:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "33",
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7381:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "7379:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1473,
												"initializationExpression": {
													"assignments": [
														1364
													],
													"declarations": [
														{
															"constant": false,
															"id": 1364,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7374:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1473,
															"src": "7369:6:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1363,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7369:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1366,
													"initialValue": {
														"hexValue": "30",
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7376:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7369:8:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7384:3:7",
														"subExpression": {
															"id": 1370,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "7384:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1372,
													"nodeType": "ExpressionStatement",
													"src": "7384:3:7"
												},
												"nodeType": "ForStatement",
												"src": "7365:1181:7"
											},
											{
												"assignments": [
													1475
												],
												"declarations": [
													{
														"constant": false,
														"id": 1475,
														"mutability": "mutable",
														"name": "_remaining",
														"nameLocation": "8645:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1489,
														"src": "8640:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1474,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8640:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1479,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1476,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "8658:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1477,
														"name": "totalDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "8668:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8658:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8640:44:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1480,
														"name": "_remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "8699:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8712:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8699:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1488,
												"nodeType": "IfStatement",
												"src": "8695:73:7",
												"trueBody": {
													"id": 1487,
													"nodeType": "Block",
													"src": "8715:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1484,
																		"name": "_remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "8745:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1483,
																	"name": "_sendToCreator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2771,
																	"src": "8730:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8730:26:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1486,
															"nodeType": "ExpressionStatement",
															"src": "8730:26:7"
														}
													]
												}
											}
										]
									},
									"id": 1490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributePoolIncome",
									"nameLocation": "7120:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "_parentId",
												"nameLocation": "7148:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "7143:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7143:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "7164:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "7159:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7159:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "_userMainId",
												"nameLocation": "7178:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "7173:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7173:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7196:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "7191:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7191:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7141:63:7"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7213:0:7"
									},
									"scope": 1900,
									"src": "7111:1666:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "8895:1058:7",
										"statements": [
											{
												"assignments": [
													1505
												],
												"declarations": [
													{
														"constant": false,
														"id": 1505,
														"mutability": "mutable",
														"name": "inc",
														"nameLocation": "8936:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1569,
														"src": "8917:22:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
															"typeString": "struct Storage.UserIncome"
														},
														"typeName": {
															"id": 1504,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1503,
																"name": "UserIncome",
																"nameLocations": [
																	"8917:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2114,
																"src": "8917:10:7"
															},
															"referencedDeclaration": 2114,
															"src": "8917:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																"typeString": "struct Storage.UserIncome"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1509,
												"initialValue": {
													"baseExpression": {
														"id": 1506,
														"name": "userIncomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2157,
														"src": "8942:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2114_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
														}
													},
													"id": 1508,
													"indexExpression": {
														"id": 1507,
														"name": "receiverId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "8954:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8942:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIncome_$2114_storage",
														"typeString": "struct Storage.UserIncome storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8917:48:7"
											},
											{
												"assignments": [
													1512
												],
												"declarations": [
													{
														"constant": false,
														"id": 1512,
														"mutability": "mutable",
														"name": "incomeType",
														"nameLocation": "9025:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1569,
														"src": "9014:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_IncomeType_$2143",
															"typeString": "enum Storage.IncomeType"
														},
														"typeName": {
															"id": 1511,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1510,
																"name": "IncomeType",
																"nameLocations": [
																	"9014:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2143,
																"src": "9014:10:7"
															},
															"referencedDeclaration": 2143,
															"src": "9014:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$2143",
																"typeString": "enum Storage.IncomeType"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1515,
												"initialValue": {
													"expression": {
														"id": 1513,
														"name": "IncomeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2143,
														"src": "9037:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_IncomeType_$2143_$",
															"typeString": "type(enum Storage.IncomeType)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "9048:4:7",
													"memberName": "Pool",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2138,
													"src": "9037:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_IncomeType_$2143",
														"typeString": "enum Storage.IncomeType"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9014:38:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1516,
														"name": "_incomeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "9066:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9081:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "9066:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1526,
												"nodeType": "IfStatement",
												"src": "9063:73:7",
												"trueBody": {
													"id": 1525,
													"nodeType": "Block",
													"src": "9084:52:7",
													"statements": [
														{
															"expression": {
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1519,
																		"name": "inc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "9100:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																			"typeString": "struct Storage.UserIncome storage pointer"
																		}
																	},
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9104:10:7",
																	"memberName": "poolIncome",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2105,
																	"src": "9100:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1522,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1496,
																	"src": "9118:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9100:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1524,
															"nodeType": "ExpressionStatement",
															"src": "9100:24:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1527,
														"name": "_incomeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "9149:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3131",
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9164:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_11_by_1",
															"typeString": "int_const 11"
														},
														"value": "11"
													},
													"src": "9149:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1542,
												"nodeType": "IfStatement",
												"src": "9146:123:7",
												"trueBody": {
													"id": 1541,
													"nodeType": "Block",
													"src": "9167:102:7",
													"statements": [
														{
															"expression": {
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1530,
																		"name": "inc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "9183:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																			"typeString": "struct Storage.UserIncome storage pointer"
																		}
																	},
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9187:13:7",
																	"memberName": "boosterIncome",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2107,
																	"src": "9183:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1533,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1496,
																	"src": "9204:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9183:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1535,
															"nodeType": "ExpressionStatement",
															"src": "9183:27:7"
														},
														{
															"expression": {
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1536,
																	"name": "incomeType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "9226:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_IncomeType_$2143",
																		"typeString": "enum Storage.IncomeType"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1537,
																		"name": "IncomeType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2143,
																		"src": "9239:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_IncomeType_$2143_$",
																			"typeString": "type(enum Storage.IncomeType)"
																		}
																	},
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "9250:7:7",
																	"memberName": "Booster",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2139,
																	"src": "9239:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_IncomeType_$2143",
																		"typeString": "enum Storage.IncomeType"
																	}
																},
																"src": "9226:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_IncomeType_$2143",
																	"typeString": "enum Storage.IncomeType"
																}
															},
															"id": 1540,
															"nodeType": "ExpressionStatement",
															"src": "9226:31:7"
														}
													]
												}
											},
											{
												"assignments": [
													1544
												],
												"declarations": [
													{
														"constant": false,
														"id": 1544,
														"mutability": "mutable",
														"name": "netamount",
														"nameLocation": "9648:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1569,
														"src": "9643:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1543,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9643:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1551,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1545,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1496,
																	"src": "9661:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3935",
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9669:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_95_by_1",
																		"typeString": "int_const 95"
																	},
																	"value": "95"
																},
																"src": "9661:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1548,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9660:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9674:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "9660:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9643:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1553,
															"name": "receiverId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "9706:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1554,
															"name": "fromId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "9718:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1555,
															"name": "netamount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "9726:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1556,
															"name": "packageLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "9737:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1557,
															"name": "incomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "9751:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$2143",
																"typeString": "enum Storage.IncomeType"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_IncomeType_$2143",
																"typeString": "enum Storage.IncomeType"
															}
														],
														"id": 1552,
														"name": "_distributeIncome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2960,
														"src": "9688:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_IncomeType_$2143_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256,enum Storage.IncomeType)"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9688:74:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1559,
												"nodeType": "ExpressionStatement",
												"src": "9688:74:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1561,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1496,
																			"src": "9830:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "35",
																			"id": 1562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9837:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5_by_1",
																				"typeString": "int_const 5"
																			},
																			"value": "5"
																		},
																		"src": "9830:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1564,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9829:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9842:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "9829:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1560,
														"name": "_sendToCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2771,
														"src": "9814:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9814:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "9814:32:7"
											}
										]
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_payPoolIncome",
									"nameLocation": "8792:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "receiverId",
												"nameLocation": "8812:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "8807:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8807:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "fromId",
												"nameLocation": "8829:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "8824:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8824:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8842:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "8837:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8837:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "8855:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "8850:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8850:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "_incomeType",
												"nameLocation": "8874:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "8869:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8869:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8806:80:7"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8895:0:7"
									},
									"scope": 1900,
									"src": "8783:1170:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "10016:1659:7",
										"statements": [
											{
												"assignments": [
													1577
												],
												"declarations": [
													{
														"constant": false,
														"id": 1577,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "10040:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1709,
														"src": "10027:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 1576,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1575,
																"name": "User",
																"nameLocations": [
																	"10027:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2089,
																"src": "10027:4:7"
															},
															"referencedDeclaration": 2089,
															"src": "10027:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1581,
												"initialValue": {
													"baseExpression": {
														"id": 1578,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "10047:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2089_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 1580,
													"indexExpression": {
														"id": 1579,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "10053:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10047:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2089_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10027:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1583,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "10080:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10085:7:7",
																"memberName": "account",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2044,
																"src": "10080:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1585,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10096:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10100:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10096:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10080:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420796f7572206163636f756e74",
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10108:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															},
															"value": "Not your account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															}
														],
														"id": 1582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10072:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10072:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1590,
												"nodeType": "ExpressionStatement",
												"src": "10072:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1592,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "10146:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10151:12:7",
																"memberName": "boosterlevel",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2076,
																"src": "10146:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "38",
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10166:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_8_by_1",
																	"typeString": "int_const 8"
																},
																"value": "8"
															},
															"src": "10146:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206d6178206c6576656c",
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10169:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f6d6f7b763be4c628a2ded4434e90bc0b02384f0d3a36303458913b65373af4",
																"typeString": "literal_string \"At max level\""
															},
															"value": "At max level"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f6d6f7b763be4c628a2ded4434e90bc0b02384f0d3a36303458913b65373af4",
																"typeString": "literal_string \"At max level\""
															}
														],
														"id": 1591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10138:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1598,
												"nodeType": "ExpressionStatement",
												"src": "10138:46:7"
											},
											{
												"assignments": [
													1600
												],
												"declarations": [
													{
														"constant": false,
														"id": 1600,
														"mutability": "mutable",
														"name": "nextPool",
														"nameLocation": "10259:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1709,
														"src": "10254:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1599,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10254:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1603,
												"initialValue": {
													"expression": {
														"id": 1601,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "10270:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "10275:12:7",
													"memberName": "boosterlevel",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2076,
													"src": "10270:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10254:33:7"
											},
											{
												"assignments": [
													1605
												],
												"declarations": [
													{
														"constant": false,
														"id": 1605,
														"mutability": "mutable",
														"name": "requiredLevel",
														"nameLocation": "10339:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1709,
														"src": "10334:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1604,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10334:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1609,
												"initialValue": {
													"baseExpression": {
														"id": 1606,
														"name": "minLevelForGlbBooster",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2320,
														"src": "10355:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$8_storage",
															"typeString": "uint256[8] storage ref"
														}
													},
													"id": 1608,
													"indexExpression": {
														"id": 1607,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "10377:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10355:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10334:52:7"
											},
											{
												"assignments": [
													1611
												],
												"declarations": [
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "requiredPool",
														"nameLocation": "10439:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1709,
														"src": "10434:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1610,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10434:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1615,
												"initialValue": {
													"baseExpression": {
														"id": 1612,
														"name": "minPoolForGlbBooster",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2333,
														"src": "10454:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$8_storage",
															"typeString": "uint256[8] storage ref"
														}
													},
													"id": 1614,
													"indexExpression": {
														"id": 1613,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "10475:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10454:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10434:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1617,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1577,
																		"src": "10598:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10603:5:7",
																	"memberName": "level",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2058,
																	"src": "10598:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1619,
																	"name": "requiredLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "10612:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10598:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1621,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1577,
																		"src": "10629:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10634:9:7",
																	"memberName": "poollevel",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2070,
																	"src": "10629:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1623,
																	"name": "requiredPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "10647:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10629:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10598:61:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5570677261646520536c6f7420616e6420506f6f6c",
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10661:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3630323abd6062c06a06ae3eee7055e3fb0eb90cf77f6c0f7f2936d0718def27",
																"typeString": "literal_string \"Upgrade Slot and Pool\""
															},
															"value": "Upgrade Slot and Pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3630323abd6062c06a06ae3eee7055e3fb0eb90cf77f6c0f7f2936d0718def27",
																"typeString": "literal_string \"Upgrade Slot and Pool\""
															}
														],
														"id": 1616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10590:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10590:95:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1628,
												"nodeType": "ExpressionStatement",
												"src": "10590:95:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1629,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "10765:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10776:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10765:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1641,
												"nodeType": "IfStatement",
												"src": "10761:110:7",
												"trueBody": {
													"id": 1640,
													"nodeType": "Block",
													"src": "10779:92:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1633,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1577,
																				"src": "10802:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																					"typeString": "struct Storage.User storage pointer"
																				}
																			},
																			"id": 1634,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10807:12:7",
																			"memberName": "boosterlevel",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2076,
																			"src": "10802:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1635,
																			"name": "nextPool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1600,
																			"src": "10823:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10802:29:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4275792070726576696f757320706f6f6c206669727374",
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10833:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5f5fa9d58a74e1ce1932ae4e067a9f842704fbfbc24d932ec13f6cf4e6e7c5b8",
																			"typeString": "literal_string \"Buy previous pool first\""
																		},
																		"value": "Buy previous pool first"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5f5fa9d58a74e1ce1932ae4e067a9f842704fbfbc24d932ec13f6cf4e6e7c5b8",
																			"typeString": "literal_string \"Buy previous pool first\""
																		}
																	],
																	"id": 1632,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10794:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10794:65:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1639,
															"nodeType": "ExpressionStatement",
															"src": "10794:65:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10889:34:7",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1643,
																		"name": "userHasbooster",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2424,
																		"src": "10890:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(uint256 => bool))"
																		}
																	},
																	"id": 1645,
																	"indexExpression": {
																		"id": 1644,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "10905:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10890:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1647,
																"indexExpression": {
																	"id": 1646,
																	"name": "nextPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "10914:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10890:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20616c726561647920707572636861736564",
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10925:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_909f3d3b7d1bfc91fce0554a59fdfa995b3e693af9ec22f5924ab4d305e96bc1",
																"typeString": "literal_string \"Pool already purchased\""
															},
															"value": "Pool already purchased"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_909f3d3b7d1bfc91fce0554a59fdfa995b3e693af9ec22f5924ab4d305e96bc1",
																"typeString": "literal_string \"Pool already purchased\""
															}
														],
														"id": 1642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10881:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10881:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "10881:69:7"
											},
											{
												"assignments": [
													1653
												],
												"declarations": [
													{
														"constant": false,
														"id": 1653,
														"mutability": "mutable",
														"name": "packagePrice",
														"nameLocation": "10968:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1709,
														"src": "10963:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1652,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10963:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1657,
												"initialValue": {
													"baseExpression": {
														"id": 1654,
														"name": "glbBoosterPackages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2295,
														"src": "10983:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1656,
													"indexExpression": {
														"id": 1655,
														"name": "nextPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "11002:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10983:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10963:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1661,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11097:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11101:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11097:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1665,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11117:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_InfinityPool_$1900",
																		"typeString": "contract InfinityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_InfinityPool_$1900",
																		"typeString": "contract InfinityPool"
																	}
																],
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11109:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1663,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11109:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11109:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1667,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "11124:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1658,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "11079:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11084:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 231,
														"src": "11079:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11079:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "11079:58:7"
											},
											{
												"expression": {
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1670,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "11158:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 1672,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11163:12:7",
														"memberName": "boosterlevel",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2076,
														"src": "11158:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11179:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11158:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1675,
												"nodeType": "ExpressionStatement",
												"src": "11158:22:7"
											},
											{
												"expression": {
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1676,
																"name": "userHasbooster",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2424,
																"src": "11191:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(uint256 => bool))"
																}
															},
															"id": 1679,
															"indexExpression": {
																"id": 1677,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "11206:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11191:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1680,
														"indexExpression": {
															"id": 1678,
															"name": "nextPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "11215:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11191:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11227:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11191:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "11191:40:7"
											},
											{
												"expression": {
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1684,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "11242:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11247:14:7",
														"memberName": "boosterDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2078,
														"src": "11242:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1687,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "11265:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11242:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "11242:35:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1691,
															"name": "nextPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "11304:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1692,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "11314:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1693,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "11323:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1690,
														"name": "_placeInBooster",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1899,
														"src": "11288:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11288:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1695,
												"nodeType": "ExpressionStatement",
												"src": "11288:48:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1697,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11591:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11595:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11591:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1699,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "11603:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1700,
																"name": "nextPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1600,
																"src": "11612:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11623:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11612:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1703,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "11626:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "426f6f73746572",
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11640:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f19a689ab4213e6b4258a9b8797f22ef5804c6ac6e1dd57ebfc2d159b9027ad",
																"typeString": "literal_string \"Booster\""
															},
															"value": "Booster"
														},
														{
															"expression": {
																"id": 1705,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "11651:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11657:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "11651:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5f19a689ab4213e6b4258a9b8797f22ef5804c6ac6e1dd57ebfc2d159b9027ad",
																"typeString": "literal_string \"Booster\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1696,
														"name": "Upgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2225,
														"src": "11583:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,string memory,uint256)"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11583:84:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1708,
												"nodeType": "EmitStatement",
												"src": "11578:89:7"
											}
										]
									},
									"functionSelector": "bc1fa7c0",
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBooster",
									"nameLocation": "9978:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "9998:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "9993:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9993:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9992:14:7"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10016:0:7"
									},
									"scope": 1900,
									"src": "9969:1706:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "11774:2043:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1720,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "11793:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1721,
																	"name": "glbBoosterPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "11802:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11821:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11802:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11793:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964",
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11829:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c84d91f537f720db0d8ff8472db06e97a59d22ac83366d0af861134338d0e345",
																"typeString": "literal_string \"Invalid\""
															},
															"value": "Invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c84d91f537f720db0d8ff8472db06e97a59d22ac83366d0af861134338d0e345",
																"typeString": "literal_string \"Invalid\""
															}
														],
														"id": 1719,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11785:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11785:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1726,
												"nodeType": "ExpressionStatement",
												"src": "11785:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1728,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "11858:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11862:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "11858:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"baseExpression": {
																	"id": 1730,
																	"name": "glbBoosterPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "11871:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1732,
																"indexExpression": {
																	"id": 1731,
																	"name": "poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "11890:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11871:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11858:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f727265637420616d6f756e74",
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11899:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f313977f9f132db863cda3455f302e47301ce6a1616834c5cd6d5972d9a8c2f4",
																"typeString": "literal_string \"Incorrect amount\""
															},
															"value": "Incorrect amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f313977f9f132db863cda3455f302e47301ce6a1616834c5cd6d5972d9a8c2f4",
																"typeString": "literal_string \"Incorrect amount\""
															}
														],
														"id": 1727,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11850:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11850:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "11850:68:7"
											},
											{
												"assignments": [
													1738
												],
												"declarations": [
													{
														"constant": false,
														"id": 1738,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "12004:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1898,
														"src": "11999:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1737,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11999:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1743,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1739,
															"name": "boosterUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2418,
															"src": "12012:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(uint256 => uint256[] storage ref)"
															}
														},
														"id": 1741,
														"indexExpression": {
															"id": 1740,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "12025:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12012:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12033:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "12012:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11999:40:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1748,
															"name": "userMainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "12208:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1744,
																"name": "boosterUsers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2418,
																"src": "12182:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 1746,
															"indexExpression": {
																"id": 1745,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "12195:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12182:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12203:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "12182:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12182:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1750,
												"nodeType": "ExpressionStatement",
												"src": "12182:37:7"
											},
											{
												"assignments": [
													1752
												],
												"declarations": [
													{
														"constant": false,
														"id": 1752,
														"mutability": "mutable",
														"name": "parentIndex",
														"nameLocation": "12268:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1898,
														"src": "12260:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12260:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1759,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1753,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1738,
																	"src": "12283:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12291:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12283:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1756,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12282:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "33",
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12296:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "12282:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12260:37:7"
											},
											{
												"assignments": [
													1761
												],
												"declarations": [
													{
														"constant": false,
														"id": 1761,
														"mutability": "mutable",
														"name": "parentId",
														"nameLocation": "12313:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1898,
														"src": "12308:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1760,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12308:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1767,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1762,
															"name": "boosterUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2418,
															"src": "12324:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(uint256 => uint256[] storage ref)"
															}
														},
														"id": 1764,
														"indexExpression": {
															"id": 1763,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "12337:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12324:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1766,
													"indexExpression": {
														"id": 1765,
														"name": "parentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "12345:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12324:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12308:49:7"
											},
											{
												"expression": {
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1768,
																"name": "userBoosterdtl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2406,
																"src": "12395:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$2360_storage_$_$",
																	"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster storage ref))"
																}
															},
															"id": 1771,
															"indexExpression": {
																"id": 1769,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "12410:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12395:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBooster_$2360_storage_$",
																"typeString": "mapping(uint256 => struct Storage.UserBooster storage ref)"
															}
														},
														"id": 1772,
														"indexExpression": {
															"id": 1770,
															"name": "userMainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "12418:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12395:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserBooster_$2360_storage",
															"typeString": "struct Storage.UserBooster storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1774,
																"name": "userMainId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "12467:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1775,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "12519:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1776,
																"name": "parentId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "12554:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12593:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"expression": {
																	"id": 1778,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "12623:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12629:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "12623:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1773,
															"name": "UserBooster",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2360,
															"src": "12432:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_UserBooster_$2360_storage_ptr_$",
																"typeString": "type(struct Storage.UserBooster storage pointer)"
															}
														},
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"12463:2:7",
															"12511:6:7",
															"12544:8:7",
															"12581:10:7",
															"12613:8:7"
														],
														"names": [
															"id",
															"poolId",
															"parentId",
															"bonusCount",
															"joinTime"
														],
														"nodeType": "FunctionCall",
														"src": "12432:222:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserBooster_$2360_memory_ptr",
															"typeString": "struct Storage.UserBooster memory"
														}
													},
													"src": "12395:259:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserBooster_$2360_storage",
														"typeString": "struct Storage.UserBooster storage ref"
													}
												},
												"id": 1782,
												"nodeType": "ExpressionStatement",
												"src": "12395:259:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1789,
															"name": "userMainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "12708:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1783,
																	"name": "userBoosterChildren",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2413,
																	"src": "12665:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																	}
																},
																"id": 1786,
																"indexExpression": {
																	"id": 1784,
																	"name": "poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "12685:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12665:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 1787,
															"indexExpression": {
																"id": 1785,
																"name": "parentId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "12693:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12665:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12703:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "12665:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12665:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "12665:54:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1792,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "12744:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12754:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12744:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1848,
												"nodeType": "IfStatement",
												"src": "12741:584:7",
												"trueBody": {
													"id": 1847,
													"nodeType": "Block",
													"src": "12758:567:7",
													"statements": [
														{
															"assignments": [
																1797
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1797,
																	"mutability": "mutable",
																	"name": "userdtl",
																	"nameLocation": "12785:7:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1847,
																	"src": "12773:19:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2089_memory_ptr",
																		"typeString": "struct Storage.User"
																	},
																	"typeName": {
																		"id": 1796,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1795,
																			"name": "User",
																			"nameLocations": [
																				"12773:4:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2089,
																			"src": "12773:4:7"
																		},
																		"referencedDeclaration": 2089,
																		"src": "12773:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																			"typeString": "struct Storage.User"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1801,
															"initialValue": {
																"baseExpression": {
																	"id": 1798,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2152,
																	"src": "12795:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2089_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 1800,
																"indexExpression": {
																	"id": 1799,
																	"name": "userMainId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "12801:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12795:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2089_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12773:39:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1809,
																		"name": "userMainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1714,
																		"src": "12889:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 1802,
																				"name": "weeklyUserDirects",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2493,
																				"src": "12827:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																					"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																				}
																			},
																			"id": 1806,
																			"indexExpression": {
																				"id": 1803,
																				"name": "currentWeeklyRound",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2433,
																				"src": "12845:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12827:37:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																				"typeString": "mapping(uint256 => uint256[] storage ref)"
																			}
																		},
																		"id": 1807,
																		"indexExpression": {
																			"expression": {
																				"id": 1804,
																				"name": "userdtl",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1797,
																				"src": "12865:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$2089_memory_ptr",
																					"typeString": "struct Storage.User memory"
																				}
																			},
																			"id": 1805,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12873:9:7",
																			"memberName": "sponsorId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2054,
																			"src": "12865:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12827:56:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12884:4:7",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "12827:61:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12827:73:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1811,
															"nodeType": "ExpressionStatement",
															"src": "12827:73:7"
														},
														{
															"assignments": [
																1813
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1813,
																	"mutability": "mutable",
																	"name": "directsCount",
																	"nameLocation": "12920:12:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1847,
																	"src": "12915:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1812,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "12915:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1821,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1814,
																			"name": "weeklyUserDirects",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2493,
																			"src": "12935:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																				"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																			}
																		},
																		"id": 1816,
																		"indexExpression": {
																			"id": 1815,
																			"name": "currentWeeklyRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2433,
																			"src": "12953:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12935:37:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(uint256 => uint256[] storage ref)"
																		}
																	},
																	"id": 1819,
																	"indexExpression": {
																		"expression": {
																			"id": 1817,
																			"name": "userdtl",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1797,
																			"src": "12973:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$2089_memory_ptr",
																				"typeString": "struct Storage.User memory"
																			}
																		},
																		"id": 1818,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12981:9:7",
																		"memberName": "sponsorId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2054,
																		"src": "12973:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12935:56:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12992:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12935:63:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12915:83:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1822,
																			"name": "userdtl",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1797,
																			"src": "13018:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$2089_memory_ptr",
																				"typeString": "struct Storage.User memory"
																			}
																		},
																		"id": 1823,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13026:16:7",
																		"memberName": "registrationTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2080,
																		"src": "13018:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1824,
																		"name": "TIME_STEP",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1933,
																		"src": "13045:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13018:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"id": 1826,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "13058:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13064:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "13058:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13018:55:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1835,
															"nodeType": "IfStatement",
															"src": "13015:150:7",
															"trueBody": {
																"id": 1834,
																"nodeType": "Block",
																"src": "13074:91:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1830,
																					"name": "userMainId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1714,
																					"src": "13118:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1831,
																					"name": "currentWeeklyRound",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2433,
																					"src": "13130:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1829,
																				"name": "_tryWeeklyContestQualify",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2982,
																				"src": "13093:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13093:56:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1833,
																		"nodeType": "ExpressionStatement",
																		"src": "13093:56:7"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1836,
																	"name": "directsCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "13183:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13199:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "13183:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1846,
															"nodeType": "IfStatement",
															"src": "13179:121:7",
															"trueBody": {
																"id": 1845,
																"nodeType": "Block",
																"src": "13201:99:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1840,
																						"name": "userdtl",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1797,
																						"src": "13246:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$2089_memory_ptr",
																							"typeString": "struct Storage.User memory"
																						}
																					},
																					"id": 1841,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "13254:9:7",
																					"memberName": "sponsorId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2054,
																					"src": "13246:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1842,
																					"name": "currentWeeklyRound",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2433,
																					"src": "13265:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1839,
																				"name": "_tryWeeklyContestQualify",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2982,
																				"src": "13221:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13221:63:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1844,
																		"nodeType": "ExpressionStatement",
																		"src": "13221:63:7"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1849,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "13343:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13355:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "13343:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1852,
															"name": "parentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "13360:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1853,
															"name": "defaultRefId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "13372:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13360:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13343:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1862,
												"nodeType": "IfStatement",
												"src": "13339:123:7",
												"trueBody": {
													"id": 1861,
													"nodeType": "Block",
													"src": "13386:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1857,
																		"name": "packagePrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1716,
																		"src": "13416:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1856,
																	"name": "_sendToCreator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2771,
																	"src": "13401:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13401:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1859,
															"nodeType": "ExpressionStatement",
															"src": "13401:28:7"
														},
														{
															"functionReturnParameters": 1718,
															"id": 1860,
															"nodeType": "Return",
															"src": "13444:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													1865
												],
												"declarations": [
													{
														"constant": false,
														"id": 1865,
														"mutability": "mutable",
														"name": "userB",
														"nameLocation": "13494:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1898,
														"src": "13474:25:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserBooster_$2360_storage_ptr",
															"typeString": "struct Storage.UserBooster"
														},
														"typeName": {
															"id": 1864,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1863,
																"name": "UserBooster",
																"nameLocations": [
																	"13474:11:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2360,
																"src": "13474:11:7"
															},
															"referencedDeclaration": 2360,
															"src": "13474:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserBooster_$2360_storage_ptr",
																"typeString": "struct Storage.UserBooster"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1871,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1866,
															"name": "userBoosterdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "13502:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$2360_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster storage ref))"
															}
														},
														"id": 1868,
														"indexExpression": {
															"id": 1867,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "13517:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13502:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBooster_$2360_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserBooster storage ref)"
														}
													},
													"id": 1870,
													"indexExpression": {
														"id": 1869,
														"name": "parentId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "13525:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13502:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserBooster_$2360_storage",
														"typeString": "struct Storage.UserBooster storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13474:60:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1872,
															"name": "userB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "13549:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserBooster_$2360_storage_ptr",
																"typeString": "struct Storage.UserBooster storage pointer"
															}
														},
														"id": 1873,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13555:10:7",
														"memberName": "bonusCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2357,
														"src": "13549:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "33",
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13566:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "13549:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1896,
													"nodeType": "Block",
													"src": "13714:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1892,
																		"name": "packagePrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1716,
																		"src": "13744:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1891,
																	"name": "_sendToCreator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2771,
																	"src": "13729:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13729:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1894,
															"nodeType": "ExpressionStatement",
															"src": "13729:28:7"
														},
														{
															"functionReturnParameters": 1718,
															"id": 1895,
															"nodeType": "Return",
															"src": "13772:7:7"
														}
													]
												},
												"id": 1897,
												"nodeType": "IfStatement",
												"src": "13545:245:7",
												"trueBody": {
													"id": 1890,
													"nodeType": "Block",
													"src": "13578:122:7",
													"statements": [
														{
															"expression": {
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1876,
																		"name": "userB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1865,
																		"src": "13593:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserBooster_$2360_storage_ptr",
																			"typeString": "struct Storage.UserBooster storage pointer"
																		}
																	},
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "13599:10:7",
																	"memberName": "bonusCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2357,
																	"src": "13593:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13612:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13593:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1881,
															"nodeType": "ExpressionStatement",
															"src": "13593:20:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1883,
																		"name": "parentId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "13644:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1884,
																		"name": "userMainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1714,
																		"src": "13654:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1885,
																		"name": "packagePrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1716,
																		"src": "13666:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 1886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13680:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	{
																		"hexValue": "3131",
																		"id": 1887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13683:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_11_by_1",
																			"typeString": "int_const 11"
																		},
																		"value": "11"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		{
																			"typeIdentifier": "t_rational_11_by_1",
																			"typeString": "int_const 11"
																		}
																	],
																	"id": 1882,
																	"name": "_payPoolIncome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1570,
																	"src": "13629:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13629:57:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1889,
															"nodeType": "ExpressionStatement",
															"src": "13629:57:7"
														}
													]
												}
											}
										]
									},
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_placeInBooster",
									"nameLocation": "11698:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "11722:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "11714:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11714:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "userMainId",
												"nameLocation": "11735:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "11730:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11730:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "packagePrice",
												"nameLocation": "11752:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "11747:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11747:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11713:52:7"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11774:0:7"
									},
									"scope": 1900,
									"src": "11689:2128:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1901,
							"src": "102:13729:7",
							"usedErrors": [
								244
							],
							"usedEvents": [
								2193,
								2201,
								2211,
								2225,
								2237,
								2247,
								2255,
								2272,
								2509,
								2519,
								2527,
								2608,
								2618,
								2626,
								2701,
								2711,
								2719
							]
						}
					],
					"src": "37:13796:7"
				},
				"id": 7
			},
			"contracts/modules/Storage.sol": {
				"ast": {
					"absolutePath": "contracts/modules/Storage.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"ReentrancyGuard": [
							154
						],
						"SafeERC20": [
							696
						],
						"Storage": [
							3371
						]
					},
					"id": 3372,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1902,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1903,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3372,
							"sourceUnit": 155,
							"src": "99:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1904,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3372,
							"sourceUnit": 233,
							"src": "165:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1905,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3372,
							"sourceUnit": 697,
							"src": "223:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1906,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"312:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 154,
										"src": "312:15:8"
									},
									"id": 1907,
									"nodeType": "InheritanceSpecifier",
									"src": "312:15:8"
								}
							],
							"canonicalName": "Storage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3371,
							"linearizedBaseContracts": [
								3371,
								154
							],
							"name": "Storage",
							"nameLocation": "301:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1911,
									"libraryName": {
										"id": 1908,
										"name": "SafeERC20",
										"nameLocations": [
											"341:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 696,
										"src": "341:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "335:27:8",
									"typeName": {
										"id": 1910,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1909,
											"name": "IERC20",
											"nameLocations": [
												"355:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 232,
											"src": "355:6:8"
										},
										"referencedDeclaration": 232,
										"src": "355:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$232",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 1914,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "382:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "368:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$232",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1913,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1912,
											"name": "IERC20",
											"nameLocations": [
												"368:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 232,
											"src": "368:6:8"
										},
										"referencedDeclaration": 232,
										"src": "368:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$232",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cdc65f2",
									"id": 1916,
									"mutability": "mutable",
									"name": "creatorWallet",
									"nameLocation": "437:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "422:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1915,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "422:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e9e34a16",
									"id": 1918,
									"mutability": "mutable",
									"name": "systemMaintance",
									"nameLocation": "475:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "460:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1917,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "460:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f5d74d93",
									"id": 1920,
									"mutability": "mutable",
									"name": "teamDevelopment",
									"nameLocation": "512:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "497:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1919,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "497:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec597e6f",
									"id": 1922,
									"mutability": "mutable",
									"name": "defaultRefId",
									"nameLocation": "546:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "534:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1921,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "534:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bff1f9e1",
									"id": 1924,
									"mutability": "mutable",
									"name": "totalUsers",
									"nameLocation": "577:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "565:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1923,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "565:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1927,
									"mutability": "constant",
									"name": "maxLayers",
									"nameLocation": "617:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "594:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1925,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "594:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 1926,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "629:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "01c234a8",
									"id": 1930,
									"mutability": "constant",
									"name": "PERCENTS_DIVIDER",
									"nameLocation": "664:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "640:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1928,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "640:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 1929,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "683:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32bc298c",
									"id": 1933,
									"mutability": "constant",
									"name": "TIME_STEP",
									"nameLocation": "719:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "695:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1931,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1932,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "731:6:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3a5084b3",
									"id": 1936,
									"mutability": "constant",
									"name": "ROI_2X_TIME",
									"nameLocation": "768:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "744:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1934,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1935,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "782:6:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_172800_by_1",
											"typeString": "int_const 172800"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a5e52b99",
									"id": 1939,
									"mutability": "constant",
									"name": "MONTHLY_ROYALTY_TIME",
									"nameLocation": "819:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "795:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1937,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "795:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 1938,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "842:8:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8640000_by_1",
											"typeString": "int_const 8640000"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "705fee2d",
									"id": 1942,
									"mutability": "constant",
									"name": "TOP_ROYALTY_TIME",
									"nameLocation": "881:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "857:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1940,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "857:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343530",
										"id": 1941,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "900:8:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_38880000_by_1",
											"typeString": "int_const 38880000"
										},
										"value": "450"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "375b43b4",
									"id": 1945,
									"mutability": "constant",
									"name": "ROI_CAP_MULTIPLIER",
									"nameLocation": "939:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "915:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1943,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "915:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 1944,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "960:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "58c7d352",
									"id": 1948,
									"mutability": "constant",
									"name": "ROI_CAP_DIVIDER",
									"nameLocation": "1001:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "977:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1946,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "977:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1947,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1019:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "23fd338e",
									"id": 1951,
									"mutability": "constant",
									"name": "MONTHLY_ROYALTY_LEVEL",
									"nameLocation": "1052:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "1028:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1949,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1028:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1950,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1076:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ae0ee0d",
									"id": 1954,
									"mutability": "constant",
									"name": "TOP_ROYALTY_LEVEL",
									"nameLocation": "1109:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "1085:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1952,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1085:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 1953,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1129:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d2f0490d",
									"id": 1957,
									"mutability": "constant",
									"name": "MONTHLY_ROYALTY_DIRECT",
									"nameLocation": "1162:22:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "1138:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1955,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1138:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 1956,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1187:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "31bb6a30",
									"id": 1960,
									"mutability": "constant",
									"name": "TOP_ROYALTY_DIRECT",
									"nameLocation": "1219:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "1195:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1958,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1195:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1959,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1240:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39ab3603",
									"id": 1963,
									"mutability": "mutable",
									"name": "registeredUserIds",
									"nameLocation": "1271:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "1257:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1961,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1257:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1962,
										"nodeType": "ArrayTypeName",
										"src": "1257:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1965,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "1308:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "1295:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1964,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1295:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "32fcd966",
									"id": 1968,
									"mutability": "constant",
									"name": "ACC_PRECISION",
									"nameLocation": "1497:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "1473:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1966,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1473:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1967,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1513:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78f6ad6d",
									"id": 1970,
									"mutability": "mutable",
									"name": "communityAccPerUser",
									"nameLocation": "1545:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "1530:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1969,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1530:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "45cb537c",
									"id": 1974,
									"mutability": "mutable",
									"name": "communityAccPerPackage",
									"nameLocation": "1853:22:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "1818:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1973,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1971,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1826:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1818:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1972,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1837:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89043ece",
									"id": 1980,
									"mutability": "mutable",
									"name": "communityDebt",
									"nameLocation": "1982:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "1927:68:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1979,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1975,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1935:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1927:47:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1978,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1976,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1954:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1946:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1977,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1965:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0676d0d6",
									"id": 1984,
									"mutability": "mutable",
									"name": "packageQualifiedUsers",
									"nameLocation": "2128:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "2093:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1983,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1981,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2101:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2093:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1982,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2112:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c216212a",
									"id": 2033,
									"mutability": "mutable",
									"name": "packages",
									"nameLocation": "2200:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "2186:540:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1985,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2186:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1986,
										"nodeType": "ArrayTypeName",
										"src": "2186:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"commonType": {
													"typeIdentifier": "t_rational_15000000000000000000_by_1",
													"typeString": "int_const 15000000000000000000"
												},
												"id": 1989,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3135",
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2222:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_15_by_1",
														"typeString": "int_const 15"
													},
													"value": "15"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2227:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2222:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_15000000000000000000_by_1",
													"typeString": "int_const 15000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_25000000000000000000_by_1",
													"typeString": "int_const 25000000000000000000"
												},
												"id": 1992,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3235",
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2254:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_25_by_1",
														"typeString": "int_const 25"
													},
													"value": "25"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2259:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2254:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_25000000000000000000_by_1",
													"typeString": "int_const 25000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_50000000000000000000_by_1",
													"typeString": "int_const 50000000000000000000"
												},
												"id": 1995,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3530",
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2286:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_50_by_1",
														"typeString": "int_const 50"
													},
													"value": "50"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2291:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2286:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_50000000000000000000_by_1",
													"typeString": "int_const 50000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_100000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000"
												},
												"id": 1998,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "313030",
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2318:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"value": "100"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2324:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2318:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_200000000000000000000_by_1",
													"typeString": "int_const 200000000000000000000"
												},
												"id": 2001,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "323030",
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2351:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_200_by_1",
														"typeString": "int_const 200"
													},
													"value": "200"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2357:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2351:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_200000000000000000000_by_1",
													"typeString": "int_const 200000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_400000000000000000000_by_1",
													"typeString": "int_const 400000000000000000000"
												},
												"id": 2004,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "343030",
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2384:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_400_by_1",
														"typeString": "int_const 400"
													},
													"value": "400"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2390:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2384:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_400000000000000000000_by_1",
													"typeString": "int_const 400000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_800000000000000000000_by_1",
													"typeString": "int_const 800000000000000000000"
												},
												"id": 2007,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "383030",
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2417:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_800_by_1",
														"typeString": "int_const 800"
													},
													"value": "800"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2423:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2417:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_800000000000000000000_by_1",
													"typeString": "int_const 800000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_1600000000000000000000_by_1",
													"typeString": "int_const 1600000000000000000000"
												},
												"id": 2010,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "31363030",
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2450:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1600_by_1",
														"typeString": "int_const 1600"
													},
													"value": "1600"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2457:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2450:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1600000000000000000000_by_1",
													"typeString": "int_const 1600000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_3200000000000000000000_by_1",
													"typeString": "int_const 3200000000000000000000"
												},
												"id": 2013,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "33323030",
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2484:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3200_by_1",
														"typeString": "int_const 3200"
													},
													"value": "3200"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2491:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2484:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3200000000000000000000_by_1",
													"typeString": "int_const 3200000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_6400000000000000000000_by_1",
													"typeString": "int_const 6400000000000000000000"
												},
												"id": 2016,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "36343030",
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2518:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6400_by_1",
														"typeString": "int_const 6400"
													},
													"value": "6400"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2525:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2518:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6400000000000000000000_by_1",
													"typeString": "int_const 6400000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_12800000000000000000000_by_1",
													"typeString": "int_const 12800000000000000000000"
												},
												"id": 2019,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3132383030",
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2552:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_12800_by_1",
														"typeString": "int_const 12800"
													},
													"value": "12800"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2560:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2552:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_12800000000000000000000_by_1",
													"typeString": "int_const 12800000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_25600000000000000000000_by_1",
													"typeString": "int_const 25600000000000000000000"
												},
												"id": 2022,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3235363030",
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2587:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_25600_by_1",
														"typeString": "int_const 25600"
													},
													"value": "25600"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2595:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2587:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_25600000000000000000000_by_1",
													"typeString": "int_const 25600000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_51200000000000000000000_by_1",
													"typeString": "int_const 51200000000000000000000"
												},
												"id": 2025,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3531323030",
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2622:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_51200_by_1",
														"typeString": "int_const 51200"
													},
													"value": "51200"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2630:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2622:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_51200000000000000000000_by_1",
													"typeString": "int_const 51200000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_102400000000000000000000_by_1",
													"typeString": "int_const 102400000000000000000000"
												},
												"id": 2028,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "313032343030",
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2657:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_102400_by_1",
														"typeString": "int_const 102400"
													},
													"value": "102400"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2666:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2657:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_102400000000000000000000_by_1",
													"typeString": "int_const 102400000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_204800000000000000000000_by_1",
													"typeString": "int_const 204800000000000000000000"
												},
												"id": 2031,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "323034383030",
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2693:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_204800_by_1",
														"typeString": "int_const 204800"
													},
													"value": "204800"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2702:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2693:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_204800000000000000000000_by_1",
													"typeString": "int_const 204800000000000000000000"
												}
											}
										],
										"id": 2032,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "2211:515:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$15_memory_ptr",
											"typeString": "uint80[15] memory"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.Deposit",
									"id": 2042,
									"members": [
										{
											"constant": false,
											"id": 2035,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2873:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2042,
											"src": "2865:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2034,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2865:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2037,
											"mutability": "mutable",
											"name": "withdrawn",
											"nameLocation": "2898:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2042,
											"src": "2890:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2036,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2890:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2039,
											"mutability": "mutable",
											"name": "start",
											"nameLocation": "2926:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 2042,
											"src": "2918:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2038,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2918:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2041,
											"mutability": "mutable",
											"name": "depositType",
											"nameLocation": "2949:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2042,
											"src": "2943:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2040,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2943:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deposit",
									"nameLocation": "2846:7:8",
									"nodeType": "StructDefinition",
									"scope": 3371,
									"src": "2839:131:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.User",
									"id": 2089,
									"members": [
										{
											"constant": false,
											"id": 2044,
											"mutability": "mutable",
											"name": "account",
											"nameLocation": "3009:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3001:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2043,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3001:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2048,
											"mutability": "mutable",
											"name": "deposits",
											"nameLocation": "3037:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3027:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Deposit_$2042_storage_$dyn_storage_ptr",
												"typeString": "struct Storage.Deposit[]"
											},
											"typeName": {
												"baseType": {
													"id": 2046,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2045,
														"name": "Deposit",
														"nameLocations": [
															"3027:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2042,
														"src": "3027:7:8"
													},
													"referencedDeclaration": 2042,
													"src": "3027:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deposit_$2042_storage_ptr",
														"typeString": "struct Storage.Deposit"
													}
												},
												"id": 2047,
												"nodeType": "ArrayTypeName",
												"src": "3027:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Deposit_$2042_storage_$dyn_storage_ptr",
													"typeString": "struct Storage.Deposit[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2050,
											"mutability": "mutable",
											"name": "checkpoint",
											"nameLocation": "3064:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3056:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2049,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3056:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2052,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "3090:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3085:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2051,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3085:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2054,
											"mutability": "mutable",
											"name": "sponsorId",
											"nameLocation": "3108:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3103:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2053,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3103:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2056,
											"mutability": "mutable",
											"name": "uplineId",
											"nameLocation": "3146:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3141:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2055,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3141:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2058,
											"mutability": "mutable",
											"name": "level",
											"nameLocation": "3195:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3190:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2057,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3190:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2060,
											"mutability": "mutable",
											"name": "directTeam",
											"nameLocation": "3253:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3248:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2059,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3248:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2062,
											"mutability": "mutable",
											"name": "directPoolQualified",
											"nameLocation": "3305:19:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3300:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2061,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3300:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2064,
											"mutability": "mutable",
											"name": "totalMatrixTeam",
											"nameLocation": "3383:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3378:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2063,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3378:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2066,
											"mutability": "mutable",
											"name": "totalDeposit",
											"nameLocation": "3439:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3434:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2065,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3434:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2068,
											"mutability": "mutable",
											"name": "roiCap",
											"nameLocation": "3467:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3462:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2067,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3462:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2070,
											"mutability": "mutable",
											"name": "poollevel",
											"nameLocation": "3489:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3484:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2069,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3484:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2072,
											"mutability": "mutable",
											"name": "poolDeposit",
											"nameLocation": "3514:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3509:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2071,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3509:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2074,
											"mutability": "mutable",
											"name": "poolStartTime",
											"nameLocation": "3541:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3536:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2073,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3536:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2076,
											"mutability": "mutable",
											"name": "boosterlevel",
											"nameLocation": "3570:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3565:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2075,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3565:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2078,
											"mutability": "mutable",
											"name": "boosterDeposit",
											"nameLocation": "3598:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3593:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2077,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3593:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2080,
											"mutability": "mutable",
											"name": "registrationTime",
											"nameLocation": "3628:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3623:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2079,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3623:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2082,
											"mutability": "mutable",
											"name": "level10Time",
											"nameLocation": "3660:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3655:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2081,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3655:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2084,
											"mutability": "mutable",
											"name": "level15Time",
											"nameLocation": "3687:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3682:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2083,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3682:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2086,
											"mutability": "mutable",
											"name": "monthlyUserDirectCount",
											"nameLocation": "3714:22:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3709:27:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2085,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3709:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2088,
											"mutability": "mutable",
											"name": "topRoyaltyDirectCount",
											"nameLocation": "3782:21:8",
											"nodeType": "VariableDeclaration",
											"scope": 2089,
											"src": "3777:26:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2087,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3777:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "2985:4:8",
									"nodeType": "StructDefinition",
									"scope": 3371,
									"src": "2978:866:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserIncome",
									"id": 2114,
									"members": [
										{
											"constant": false,
											"id": 2091,
											"mutability": "mutable",
											"name": "totalIncome",
											"nameLocation": "3915:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2114,
											"src": "3910:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2090,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3910:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2093,
											"mutability": "mutable",
											"name": "sponsorIncome",
											"nameLocation": "3942:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2114,
											"src": "3937:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2092,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3937:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2095,
											"mutability": "mutable",
											"name": "matrixIncome",
											"nameLocation": "3971:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2114,
											"src": "3966:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2094,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3966:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2097,
											"mutability": "mutable",
											"name": "levelBoosterIncome",
											"nameLocation": "3999:18:8",
											"nodeType": "VariableDeclaration",
											"scope": 2114,
											"src": "3994:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2096,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3994:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2099,
											"mutability": "mutable",
											"name": "royaltyIncome",
											"nameLocation": "4062:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2114,
											"src": "4057:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2098,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4057:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2101,
											"mutability": "mutable",
											"name": "royaltyIncomeClaimed",
											"nameLocation": "4091:20:8",
											"nodeType": "VariableDeclaration",
											"scope": 2114,
											"src": "4086:25:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2100,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4086:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2103,
											"mutability": "mutable",
											"name": "communityIncome",
											"nameLocation": "4164:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 2114,
											"src": "4159:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2102,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4159:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2105,
											"mutability": "mutable",
											"name": "poolIncome",
											"nameLocation": "4244:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2114,
											"src": "4239:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2104,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4239:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2107,
											"mutability": "mutable",
											"name": "boosterIncome",
											"nameLocation": "4305:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2114,
											"src": "4300:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2106,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4300:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2109,
											"mutability": "mutable",
											"name": "weeklyContestIncome",
											"nameLocation": "4363:19:8",
											"nodeType": "VariableDeclaration",
											"scope": 2114,
											"src": "4358:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2108,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4358:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2111,
											"mutability": "mutable",
											"name": "monthlyRoyalty",
											"nameLocation": "4434:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 2114,
											"src": "4429:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2110,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4429:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2113,
											"mutability": "mutable",
											"name": "topRoyalty",
											"nameLocation": "4500:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2114,
											"src": "4495:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2112,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4495:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserIncome",
									"nameLocation": "3888:10:8",
									"nodeType": "StructDefinition",
									"scope": 3371,
									"src": "3881:673:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserPackage",
									"id": 2121,
									"members": [
										{
											"constant": false,
											"id": 2116,
											"mutability": "mutable",
											"name": "packagePrice",
											"nameLocation": "4596:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2121,
											"src": "4591:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2115,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4591:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2118,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4624:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2121,
											"src": "4619:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2117,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4619:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2120,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "4646:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2121,
											"src": "4641:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2119,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4641:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserPackage",
									"nameLocation": "4569:11:8",
									"nodeType": "StructDefinition",
									"scope": 3371,
									"src": "4562:101:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.Income",
									"id": 2132,
									"members": [
										{
											"constant": false,
											"id": 2123,
											"mutability": "mutable",
											"name": "fromUserId",
											"nameLocation": "4701:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2132,
											"src": "4696:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2122,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4696:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2125,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4727:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2132,
											"src": "4722:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2124,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4722:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2127,
											"mutability": "mutable",
											"name": "packageLevel",
											"nameLocation": "4749:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2132,
											"src": "4744:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2126,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4744:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2129,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "4777:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2132,
											"src": "4772:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2128,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4772:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2131,
											"mutability": "mutable",
											"name": "incomeType",
											"nameLocation": "4802:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2132,
											"src": "4797:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2130,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4797:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Income",
									"nameLocation": "4678:6:8",
									"nodeType": "StructDefinition",
									"scope": 3371,
									"src": "4671:309:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.IncomeType",
									"id": 2143,
									"members": [
										{
											"id": 2133,
											"name": "Creator",
											"nameLocation": "5013:7:8",
											"nodeType": "EnumValue",
											"src": "5013:7:8"
										},
										{
											"id": 2134,
											"name": "Sponsor",
											"nameLocation": "5047:7:8",
											"nodeType": "EnumValue",
											"src": "5047:7:8"
										},
										{
											"id": 2135,
											"name": "Matrix",
											"nameLocation": "5081:6:8",
											"nodeType": "EnumValue",
											"src": "5081:6:8"
										},
										{
											"id": 2136,
											"name": "LevelBooster",
											"nameLocation": "5115:12:8",
											"nodeType": "EnumValue",
											"src": "5115:12:8"
										},
										{
											"id": 2137,
											"name": "Community",
											"nameLocation": "5157:9:8",
											"nodeType": "EnumValue",
											"src": "5157:9:8"
										},
										{
											"id": 2138,
											"name": "Pool",
											"nameLocation": "5191:4:8",
											"nodeType": "EnumValue",
											"src": "5191:4:8"
										},
										{
											"id": 2139,
											"name": "Booster",
											"nameLocation": "5225:7:8",
											"nodeType": "EnumValue",
											"src": "5225:7:8"
										},
										{
											"id": 2140,
											"name": "WeeklyContest",
											"nameLocation": "5259:13:8",
											"nodeType": "EnumValue",
											"src": "5259:13:8"
										},
										{
											"id": 2141,
											"name": "MonthlyRoyalty",
											"nameLocation": "5293:14:8",
											"nodeType": "EnumValue",
											"src": "5293:14:8"
										},
										{
											"id": 2142,
											"name": "TopRoyalty",
											"nameLocation": "5327:10:8",
											"nodeType": "EnumValue",
											"src": "5327:10:8"
										}
									],
									"name": "IncomeType",
									"nameLocation": "4991:10:8",
									"nodeType": "EnumDefinition",
									"src": "4986:365:8"
								},
								{
									"constant": false,
									"id": 2147,
									"mutability": "mutable",
									"name": "addressToId",
									"nameLocation": "5397:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "5363:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2146,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2144,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5371:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5363:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2145,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5382:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2152,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "5446:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "5415:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2089_storage_$",
										"typeString": "mapping(uint256 => struct Storage.User)"
									},
									"typeName": {
										"id": 2151,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2148,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5423:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5415:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2089_storage_$",
											"typeString": "mapping(uint256 => struct Storage.User)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2150,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2149,
												"name": "User",
												"nameLocations": [
													"5431:4:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2089,
												"src": "5431:4:8"
											},
											"referencedDeclaration": 2089,
											"src": "5431:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
												"typeString": "struct Storage.User"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2157,
									"mutability": "mutable",
									"name": "userIncomes",
									"nameLocation": "5495:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "5458:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2114_storage_$",
										"typeString": "mapping(uint256 => struct Storage.UserIncome)"
									},
									"typeName": {
										"id": 2156,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2153,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5466:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5458:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2114_storage_$",
											"typeString": "mapping(uint256 => struct Storage.UserIncome)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2155,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2154,
												"name": "UserIncome",
												"nameLocations": [
													"5474:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2114,
												"src": "5474:10:8"
											},
											"referencedDeclaration": 2114,
											"src": "5474:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
												"typeString": "struct Storage.UserIncome"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2163,
									"mutability": "mutable",
									"name": "incomeHistory",
									"nameLocation": "5579:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "5544:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$2132_storage_$dyn_storage_$",
										"typeString": "mapping(uint256 => struct Storage.Income[])"
									},
									"typeName": {
										"id": 2162,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2158,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5552:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5544:25:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$2132_storage_$dyn_storage_$",
											"typeString": "mapping(uint256 => struct Storage.Income[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2160,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2159,
													"name": "Income",
													"nameLocations": [
														"5560:6:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2132,
													"src": "5560:6:8"
												},
												"referencedDeclaration": 2132,
												"src": "5560:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Income_$2132_storage_ptr",
													"typeString": "struct Storage.Income"
												}
											},
											"id": 2161,
											"nodeType": "ArrayTypeName",
											"src": "5560:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Income_$2132_storage_$dyn_storage_ptr",
												"typeString": "struct Storage.Income[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2170,
									"mutability": "mutable",
									"name": "teams",
									"nameLocation": "5649:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "5599:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2169,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2164,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5607:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5599:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2168,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2165,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5623:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "5615:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2166,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5631:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2167,
												"nodeType": "ArrayTypeName",
												"src": "5631:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2174,
									"mutability": "mutable",
									"name": "matrixDirect",
									"nameLocation": "5726:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "5695:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2173,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2171,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5703:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5695:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2172,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5711:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2179,
									"mutability": "mutable",
									"name": "directReferrals",
									"nameLocation": "5814:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "5781:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2178,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2175,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5789:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5781:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2176,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5797:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2177,
											"nodeType": "ArrayTypeName",
											"src": "5797:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "0c28361b1bd0a8a8cd2daf76b402a306e7c3ed3e7bb56820ba81a5edab4636e0",
									"id": 2193,
									"name": "UserJoined",
									"nameLocation": "5844:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"indexed": true,
												"mutability": "mutable",
												"name": "matrixId",
												"nameLocation": "5869:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "5855:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2180,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5855:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"indexed": true,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "5894:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "5879:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2182,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "5879:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5918:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "5902:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5902:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2187,
												"indexed": false,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "5931:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "5924:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2186,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "5924:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"indexed": false,
												"mutability": "mutable",
												"name": "parentAddr",
												"nameLocation": "5949:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "5941:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2191,
												"indexed": false,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "5967:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "5961:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2190,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5961:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5854:122:8"
									},
									"src": "5838:139:8"
								},
								{
									"anonymous": false,
									"eventSelector": "792af4ddd1dc413b17bea369ca90e7ae463cc96b773c936c70b33d8b08bc096f",
									"id": 2201,
									"name": "RewardSent",
									"nameLocation": "5989:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6016:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "6000:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6000:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6028:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "6020:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"indexed": false,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "6043:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "6036:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6036:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:50:8"
									},
									"src": "5983:67:8"
								},
								{
									"anonymous": false,
									"eventSelector": "309bb360e8b69c23937ccc5fb01f9aeeead1c95a99604e175113ff82f2b1723a",
									"id": 2211,
									"name": "Registration",
									"nameLocation": "6082:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6111:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "6095:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6095:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"indexed": true,
												"mutability": "mutable",
												"name": "sponsor",
												"nameLocation": "6133:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "6117:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6117:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"indexed": true,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "6155:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "6142:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6142:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"indexed": false,
												"mutability": "mutable",
												"name": "uplineId",
												"nameLocation": "6168:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "6163:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6163:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6094:83:8"
									},
									"src": "6076:102:8"
								},
								{
									"anonymous": false,
									"eventSelector": "26adb22cec823ef144935e9fbef1b6b4a3a29dacbe5444d59292fa2620f3d377",
									"id": 2225,
									"name": "Upgrade",
									"nameLocation": "6190:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6214:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "6198:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6198:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"indexed": true,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "6233:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "6220:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6220:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "6246:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "6241:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6241:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"indexed": false,
												"mutability": "mutable",
												"name": "packagePrice",
												"nameLocation": "6265:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "6260:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6260:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"indexed": false,
												"mutability": "mutable",
												"name": "depositType",
												"nameLocation": "6286:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "6279:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2220,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6279:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2223,
												"indexed": false,
												"mutability": "mutable",
												"name": "upgradeTime",
												"nameLocation": "6304:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "6299:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2222,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6299:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6197:119:8"
									},
									"src": "6184:133:8"
								},
								{
									"anonymous": false,
									"eventSelector": "e17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e3",
									"id": 2237,
									"name": "IncomeDistributed",
									"nameLocation": "6329:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6363:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "6347:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6347:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6383:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "6367:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6367:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6394:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "6389:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6389:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "6407:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "6402:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6402:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"indexed": false,
												"mutability": "mutable",
												"name": "incomeType",
												"nameLocation": "6426:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "6421:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6421:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6346:91:8"
									},
									"src": "6323:115:8"
								},
								{
									"anonymous": false,
									"eventSelector": "5cbb4caf17c10875f33a7c303c1862bcd2fca5faed9a98d1f6e8f41bf720491f",
									"id": 2247,
									"name": "LotteryReward",
									"nameLocation": "6450:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "6480:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "6464:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6464:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromUserId",
												"nameLocation": "6501:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "6488:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6488:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6518:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "6513:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6513:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2245,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "6531:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "6526:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6526:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6463:78:8"
									},
									"src": "6444:98:8"
								},
								{
									"anonymous": false,
									"eventSelector": "ed2ed4e697131e475ee1946b709d36d74793101a68ffaa7386f98886a32d8d9f",
									"id": 2255,
									"name": "CommunityBonusDistributed",
									"nameLocation": "6554:25:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6585:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "6580:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6580:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"indexed": false,
												"mutability": "mutable",
												"name": "usersCount",
												"nameLocation": "6598:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "6593:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6593:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2253,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUser",
												"nameLocation": "6615:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "6610:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6610:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6579:44:8"
									},
									"src": "6548:76:8"
								},
								{
									"anonymous": false,
									"eventSelector": "4d634c31300b97dad99b3af799178230163d88ad306370d063be9cd992d0be7f",
									"id": 2272,
									"name": "IncomeDistribution",
									"nameLocation": "6636:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2257,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6672:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "6656:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6656:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2259,
												"indexed": true,
												"mutability": "mutable",
												"name": "toId",
												"nameLocation": "6689:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "6676:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6676:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromId",
												"nameLocation": "6708:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "6695:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6695:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2263,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6723:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "6715:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2265,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "6738:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "6730:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6730:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"indexed": false,
												"mutability": "mutable",
												"name": "incomeType",
												"nameLocation": "6762:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "6751:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_IncomeType_$2143",
													"typeString": "enum Storage.IncomeType"
												},
												"typeName": {
													"id": 2267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2266,
														"name": "IncomeType",
														"nameLocations": [
															"6751:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2143,
														"src": "6751:10:8"
													},
													"referencedDeclaration": 2143,
													"src": "6751:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_IncomeType_$2143",
														"typeString": "enum Storage.IncomeType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "6781:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "6773:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6773:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6654:137:8"
									},
									"src": "6630:162:8"
								},
								{
									"constant": false,
									"functionSelector": "ae4708dc",
									"id": 2283,
									"mutability": "mutable",
									"name": "poolPackages",
									"nameLocation": "6861:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "6847:93:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2273,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6847:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2274,
										"nodeType": "ArrayTypeName",
										"src": "6847:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "3735653138",
												"id": 2275,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6877:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_75000000000000000000_by_1",
													"typeString": "int_const 75000000000000000000"
												},
												"value": "75e18"
											},
											{
												"hexValue": "333030653138",
												"id": 2276,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6884:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_300000000000000000000_by_1",
													"typeString": "int_const 300000000000000000000"
												},
												"value": "300e18"
											},
											{
												"hexValue": "31323030653138",
												"id": 2277,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6892:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1200000000000000000000_by_1",
													"typeString": "int_const 1200000000000000000000"
												},
												"value": "1200e18"
											},
											{
												"hexValue": "34383030653138",
												"id": 2278,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6901:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_4800000000000000000000_by_1",
													"typeString": "int_const 4800000000000000000000"
												},
												"value": "4800e18"
											},
											{
												"hexValue": "3139323030653138",
												"id": 2279,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6910:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_19200000000000000000000_by_1",
													"typeString": "int_const 19200000000000000000000"
												},
												"value": "19200e18"
											},
											{
												"hexValue": "3736383030653138",
												"id": 2280,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6920:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_76800000000000000000000_by_1",
													"typeString": "int_const 76800000000000000000000"
												},
												"value": "76800e18"
											},
											{
												"hexValue": "333037323030653138",
												"id": 2281,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6930:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_307200000000000000000000_by_1",
													"typeString": "int_const 307200000000000000000000"
												},
												"value": "307200e18"
											}
										],
										"id": 2282,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "6876:64:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$7_memory_ptr",
											"typeString": "uint80[7] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2350268f",
									"id": 2295,
									"mutability": "mutable",
									"name": "glbBoosterPackages",
									"nameLocation": "6961:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "6947:105:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2284,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6947:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2285,
										"nodeType": "ArrayTypeName",
										"src": "6947:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "313030653138",
												"id": 2286,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6984:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000"
												},
												"value": "100e18"
											},
											{
												"hexValue": "323030653138",
												"id": 2287,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6992:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_200000000000000000000_by_1",
													"typeString": "int_const 200000000000000000000"
												},
												"value": "200e18"
											},
											{
												"hexValue": "343030653138",
												"id": 2288,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7000:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_400000000000000000000_by_1",
													"typeString": "int_const 400000000000000000000"
												},
												"value": "400e18"
											},
											{
												"hexValue": "383030653138",
												"id": 2289,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7008:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_800000000000000000000_by_1",
													"typeString": "int_const 800000000000000000000"
												},
												"value": "800e18"
											},
											{
												"hexValue": "31363030653138",
												"id": 2290,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7016:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1600000000000000000000_by_1",
													"typeString": "int_const 1600000000000000000000"
												},
												"value": "1600e18"
											},
											{
												"hexValue": "33323030653138",
												"id": 2291,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7025:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3200000000000000000000_by_1",
													"typeString": "int_const 3200000000000000000000"
												},
												"value": "3200e18"
											},
											{
												"hexValue": "36343030653138",
												"id": 2292,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7034:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6400000000000000000000_by_1",
													"typeString": "int_const 6400000000000000000000"
												},
												"value": "6400e18"
											},
											{
												"hexValue": "3132383030653138",
												"id": 2293,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7043:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_12800000000000000000000_by_1",
													"typeString": "int_const 12800000000000000000000"
												},
												"value": "12800e18"
											}
										],
										"id": 2294,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "6982:70:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$8_memory_ptr",
											"typeString": "uint80[8] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2132d204",
									"id": 2307,
									"mutability": "mutable",
									"name": "minLevelForPool",
									"nameLocation": "7074:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "7059:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$7_storage",
										"typeString": "uint256[7]"
									},
									"typeName": {
										"baseType": {
											"id": 2296,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7059:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2298,
										"length": {
											"hexValue": "37",
											"id": 2297,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7064:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_7_by_1",
												"typeString": "int_const 7"
											},
											"value": "7"
										},
										"nodeType": "ArrayTypeName",
										"src": "7059:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$7_storage_ptr",
											"typeString": "uint256[7]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "33",
												"id": 2299,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7093:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											},
											{
												"hexValue": "35",
												"id": 2300,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7096:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												},
												"value": "5"
											},
											{
												"hexValue": "37",
												"id": 2301,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7099:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_7_by_1",
													"typeString": "int_const 7"
												},
												"value": "7"
											},
											{
												"hexValue": "39",
												"id": 2302,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7102:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											{
												"hexValue": "3131",
												"id": 2303,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7105:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_11_by_1",
													"typeString": "int_const 11"
												},
												"value": "11"
											},
											{
												"hexValue": "3133",
												"id": 2304,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7109:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_13_by_1",
													"typeString": "int_const 13"
												},
												"value": "13"
											},
											{
												"hexValue": "3135",
												"id": 2305,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7113:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_15_by_1",
													"typeString": "int_const 15"
												},
												"value": "15"
											}
										],
										"id": 2306,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "7092:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$7_memory_ptr",
											"typeString": "uint8[7] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0a2fd79",
									"id": 2320,
									"mutability": "mutable",
									"name": "minLevelForGlbBooster",
									"nameLocation": "7138:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "7123:64:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$8_storage",
										"typeString": "uint256[8]"
									},
									"typeName": {
										"baseType": {
											"id": 2308,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7123:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2310,
										"length": {
											"hexValue": "38",
											"id": 2309,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7128:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_8_by_1",
												"typeString": "int_const 8"
											},
											"value": "8"
										},
										"nodeType": "ArrayTypeName",
										"src": "7123:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
											"typeString": "uint256[8]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "34",
												"id": 2311,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7163:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_4_by_1",
													"typeString": "int_const 4"
												},
												"value": "4"
											},
											{
												"hexValue": "35",
												"id": 2312,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7166:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												},
												"value": "5"
											},
											{
												"hexValue": "36",
												"id": 2313,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7169:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6_by_1",
													"typeString": "int_const 6"
												},
												"value": "6"
											},
											{
												"hexValue": "37",
												"id": 2314,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7172:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_7_by_1",
													"typeString": "int_const 7"
												},
												"value": "7"
											},
											{
												"hexValue": "38",
												"id": 2315,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7175:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_8_by_1",
													"typeString": "int_const 8"
												},
												"value": "8"
											},
											{
												"hexValue": "39",
												"id": 2316,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7178:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											{
												"hexValue": "3130",
												"id": 2317,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7181:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											{
												"hexValue": "3131",
												"id": 2318,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7184:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_11_by_1",
													"typeString": "int_const 11"
												},
												"value": "11"
											}
										],
										"id": 2319,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "7162:25:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$8_memory_ptr",
											"typeString": "uint8[8] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "956a3228",
									"id": 2333,
									"mutability": "mutable",
									"name": "minPoolForGlbBooster",
									"nameLocation": "7209:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "7194:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$8_storage",
										"typeString": "uint256[8]"
									},
									"typeName": {
										"baseType": {
											"id": 2321,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7194:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2323,
										"length": {
											"hexValue": "38",
											"id": 2322,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7199:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_8_by_1",
												"typeString": "int_const 8"
											},
											"value": "8"
										},
										"nodeType": "ArrayTypeName",
										"src": "7194:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
											"typeString": "uint256[8]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "30",
												"id": 2324,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7233:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											{
												"hexValue": "31",
												"id": 2325,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7236:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2326,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7239:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2327,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7242:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2328,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7245:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2329,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7248:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2330,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7251:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2331,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7253:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											}
										],
										"id": 2332,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "7232:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$8_memory_ptr",
											"typeString": "uint8[8] memory"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserPool",
									"id": 2344,
									"members": [
										{
											"constant": false,
											"id": 2335,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "7298:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 2344,
											"src": "7293:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2334,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7293:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2337,
											"mutability": "mutable",
											"name": "mainid",
											"nameLocation": "7331:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2344,
											"src": "7326:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2336,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7326:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2339,
											"mutability": "mutable",
											"name": "poolId",
											"nameLocation": "7353:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2344,
											"src": "7348:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2338,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7348:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2341,
											"mutability": "mutable",
											"name": "parentId",
											"nameLocation": "7375:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2344,
											"src": "7370:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2340,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7370:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2343,
											"mutability": "mutable",
											"name": "bonusCount",
											"nameLocation": "7401:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2344,
											"src": "7396:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2342,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7396:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserPool",
									"nameLocation": "7273:8:8",
									"nodeType": "StructDefinition",
									"scope": 3371,
									"src": "7266:165:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserPoolTopup",
									"id": 2349,
									"members": [
										{
											"constant": false,
											"id": 2346,
											"mutability": "mutable",
											"name": "nextPoolAmt",
											"nameLocation": "7480:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2349,
											"src": "7475:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2345,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7475:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2348,
											"mutability": "mutable",
											"name": "reTopupAmt",
											"nameLocation": "7514:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2349,
											"src": "7509:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2347,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7509:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserPoolTopup",
									"nameLocation": "7450:13:8",
									"nodeType": "StructDefinition",
									"scope": 3371,
									"src": "7443:94:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserBooster",
									"id": 2360,
									"members": [
										{
											"constant": false,
											"id": 2351,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "7605:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 2360,
											"src": "7600:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2350,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7600:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2353,
											"mutability": "mutable",
											"name": "poolId",
											"nameLocation": "7624:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2360,
											"src": "7619:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2352,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7619:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2355,
											"mutability": "mutable",
											"name": "parentId",
											"nameLocation": "7646:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2360,
											"src": "7641:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2354,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7641:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2357,
											"mutability": "mutable",
											"name": "bonusCount",
											"nameLocation": "7672:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2360,
											"src": "7667:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2356,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7667:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2359,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "7699:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2360,
											"src": "7694:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2358,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7694:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserBooster",
									"nameLocation": "7577:11:8",
									"nodeType": "StructDefinition",
									"scope": 3371,
									"src": "7570:157:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2367,
									"mutability": "mutable",
									"name": "userPooltopup",
									"nameLocation": "7829:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "7771:71:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2349_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))"
									},
									"typeName": {
										"id": 2366,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2361,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7779:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7771:48:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2349_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2365,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2362,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7796:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7788:30:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2349_storage_$",
												"typeString": "mapping(uint256 => struct Storage.UserPoolTopup)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2364,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2363,
													"name": "UserPoolTopup",
													"nameLocations": [
														"7804:13:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2349,
													"src": "7804:13:8"
												},
												"referencedDeclaration": 2349,
												"src": "7804:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserPoolTopup_$2349_storage_ptr",
													"typeString": "struct Storage.UserPoolTopup"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2374,
									"mutability": "mutable",
									"name": "userPooldtl",
									"nameLocation": "7904:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "7851:64:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPool_$2344_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))"
									},
									"typeName": {
										"id": 2373,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2368,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7859:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7851:43:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPool_$2344_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2372,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2369,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7876:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7868:25:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPool_$2344_storage_$",
												"typeString": "mapping(uint256 => struct Storage.UserPool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2371,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2370,
													"name": "UserPool",
													"nameLocations": [
														"7884:8:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2344,
													"src": "7884:8:8"
												},
												"referencedDeclaration": 2344,
												"src": "7884:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserPool_$2344_storage_ptr",
													"typeString": "struct Storage.UserPool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2381,
									"mutability": "mutable",
									"name": "userChildren",
									"nameLocation": "7972:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "7922:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2380,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2375,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7930:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7922:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2379,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2376,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7946:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7938:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2377,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7954:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2378,
												"nodeType": "ArrayTypeName",
												"src": "7954:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2388,
									"mutability": "mutable",
									"name": "userIdPerPool",
									"nameLocation": "8064:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "8014:63:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2387,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2382,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8022:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8014:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2386,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2383,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8038:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "8030:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2384,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8046:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2385,
												"nodeType": "ArrayTypeName",
												"src": "8046:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2393,
									"mutability": "mutable",
									"name": "poolUsers",
									"nameLocation": "8149:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "8116:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2392,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2389,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8124:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8116:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2390,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8132:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2391,
											"nodeType": "ArrayTypeName",
											"src": "8132:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2399,
									"mutability": "mutable",
									"name": "userHasPool",
									"nameLocation": "8243:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "8195:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 2398,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2394,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8203:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8195:38:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2397,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2395,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8219:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "8211:21:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2396,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8227:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2406,
									"mutability": "mutable",
									"name": "userBoosterdtl",
									"nameLocation": "8358:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "8302:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$2360_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))"
									},
									"typeName": {
										"id": 2405,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2400,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8310:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8302:46:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$2360_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2404,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2401,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8327:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "8319:28:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBooster_$2360_storage_$",
												"typeString": "mapping(uint256 => struct Storage.UserBooster)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2403,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2402,
													"name": "UserBooster",
													"nameLocations": [
														"8335:11:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2360,
													"src": "8335:11:8"
												},
												"referencedDeclaration": 2360,
												"src": "8335:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserBooster_$2360_storage_ptr",
													"typeString": "struct Storage.UserBooster"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2413,
									"mutability": "mutable",
									"name": "userBoosterChildren",
									"nameLocation": "8430:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "8379:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2412,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2407,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8387:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8379:41:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2411,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2408,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8404:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "8396:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8412:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2410,
												"nodeType": "ArrayTypeName",
												"src": "8412:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2418,
									"mutability": "mutable",
									"name": "boosterUsers",
									"nameLocation": "8489:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "8456:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2417,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2414,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8464:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8456:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2415,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8472:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2416,
											"nodeType": "ArrayTypeName",
											"src": "8472:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2424,
									"mutability": "mutable",
									"name": "userHasbooster",
									"nameLocation": "8589:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "8541:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 2423,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2419,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8549:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8541:38:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2422,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2420,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8565:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "8557:21:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2421,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8573:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "76f5f700",
									"id": 2427,
									"mutability": "constant",
									"name": "WEEK_DURATION",
									"nameLocation": "8664:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "8643:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2425,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "8643:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 2426,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8680:6:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ebe0ff15",
									"id": 2430,
									"mutability": "constant",
									"name": "WeeklyCapping",
									"nameLocation": "8717:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "8696:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2428,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "8696:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030653138",
										"id": 2429,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8733:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										},
										"value": "1000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ca8e9121",
									"id": 2433,
									"mutability": "mutable",
									"name": "currentWeeklyRound",
									"nameLocation": "8764:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "8752:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2431,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "8752:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2432,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8785:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fddc806f",
									"id": 2436,
									"mutability": "mutable",
									"name": "currentWeeklyStartTime",
									"nameLocation": "8805:22:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "8793:38:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2434,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "8793:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2435,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8830:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3080b5bc",
									"id": 2439,
									"mutability": "mutable",
									"name": "WeeklyTotalReward",
									"nameLocation": "8852:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "8840:33:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2437,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "8840:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2438,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8872:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.WeeklyContest",
									"id": 2458,
									"members": [
										{
											"constant": false,
											"id": 2441,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "8926:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2458,
											"src": "8921:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2440,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8921:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2443,
											"mutability": "mutable",
											"name": "totalReward",
											"nameLocation": "8953:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2458,
											"src": "8948:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2442,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8948:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2445,
											"mutability": "mutable",
											"name": "totalUsers",
											"nameLocation": "8980:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2458,
											"src": "8975:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2444,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8975:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2447,
											"mutability": "mutable",
											"name": "perUserReward",
											"nameLocation": "9006:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2458,
											"src": "9001:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2446,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9001:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2449,
											"mutability": "mutable",
											"name": "claimedCount",
											"nameLocation": "9035:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2458,
											"src": "9030:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2448,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9030:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2451,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "9063:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2458,
											"src": "9058:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2450,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9058:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2453,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "9088:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2458,
											"src": "9083:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2452,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9083:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2455,
											"mutability": "mutable",
											"name": "carryForward",
											"nameLocation": "9111:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2458,
											"src": "9106:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2454,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9106:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2457,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "9139:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2458,
											"src": "9134:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2456,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "9134:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WeeklyContest",
									"nameLocation": "8896:13:8",
									"nodeType": "StructDefinition",
									"scope": 3371,
									"src": "8889:264:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.weeklyUser",
									"id": 2469,
									"members": [
										{
											"constant": false,
											"id": 2460,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "9205:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2469,
											"src": "9200:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2459,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9200:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2462,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "9229:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2469,
											"src": "9224:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2461,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9224:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2464,
											"mutability": "mutable",
											"name": "claimTime",
											"nameLocation": "9253:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2469,
											"src": "9248:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2463,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9248:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2466,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "9278:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2469,
											"src": "9273:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2465,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "9273:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2468,
											"mutability": "mutable",
											"name": "isQualified",
											"nameLocation": "9304:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2469,
											"src": "9299:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2467,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "9299:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "weeklyUser",
									"nameLocation": "9171:10:8",
									"nodeType": "StructDefinition",
									"scope": 3371,
									"src": "9164:159:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2474,
									"mutability": "mutable",
									"name": "weeklyContestdtl",
									"nameLocation": "9370:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "9329:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$2458_storage_$",
										"typeString": "mapping(uint256 => struct Storage.WeeklyContest)"
									},
									"typeName": {
										"id": 2473,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2470,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "9338:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "9329:31:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$2458_storage_$",
											"typeString": "mapping(uint256 => struct Storage.WeeklyContest)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2472,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2471,
												"name": "WeeklyContest",
												"nameLocations": [
													"9346:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2458,
												"src": "9346:13:8"
											},
											"referencedDeclaration": 2458,
											"src": "9346:13:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_WeeklyContest_$2458_storage_ptr",
												"typeString": "struct Storage.WeeklyContest"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2479,
									"mutability": "mutable",
									"name": "weeklyQualifiedUsers",
									"nameLocation": "9444:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "9421:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2478,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2475,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "9429:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "9421:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2476,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9436:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2477,
											"nodeType": "ArrayTypeName",
											"src": "9436:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2486,
									"mutability": "mutable",
									"name": "weeklyUserdtl",
									"nameLocation": "9548:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "9494:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2469_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))"
									},
									"typeName": {
										"id": 2485,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2480,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "9502:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "9494:44:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2469_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2484,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2481,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9518:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "9510:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2469_storage_$",
												"typeString": "mapping(uint256 => struct Storage.weeklyUser)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2483,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2482,
													"name": "weeklyUser",
													"nameLocations": [
														"9526:10:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2469,
													"src": "9526:10:8"
												},
												"referencedDeclaration": 2469,
												"src": "9526:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_weeklyUser_$2469_storage_ptr",
													"typeString": "struct Storage.weeklyUser"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2493,
									"mutability": "mutable",
									"name": "weeklyUserDirects",
									"nameLocation": "9645:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "9595:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2492,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2487,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "9603:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "9595:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2491,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2488,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9619:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "9611:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2489,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9627:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2490,
												"nodeType": "ArrayTypeName",
												"src": "9627:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "ca8a78d1841a8dafbb8ff53c869b3fa9a69abd051022178024f84b680ffd2e3c",
									"id": 2509,
									"name": "WeeklyClosed",
									"nameLocation": "9721:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2495,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "9739:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "9734:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2494,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9734:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2497,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalUsers",
												"nameLocation": "9753:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "9748:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2496,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9748:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2499,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "9770:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "9765:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2498,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9765:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2501,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReward",
												"nameLocation": "9790:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "9785:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2500,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9785:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2503,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDistributed",
												"nameLocation": "9808:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "9803:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2502,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9803:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2505,
												"indexed": false,
												"mutability": "mutable",
												"name": "leftoverReward",
												"nameLocation": "9831:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "9826:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2504,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9826:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2507,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "9852:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "9847:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9847:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9733:127:8"
									},
									"src": "9715:146:8"
								},
								{
									"anonymous": false,
									"eventSelector": "96ee4f374d0394c5383b347dc3b7ec04a1eceddcd2e25521157bce21c42b24d5",
									"id": 2519,
									"name": "WeeklyRewardClaim",
									"nameLocation": "9873:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "9896:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "9891:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2510,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9891:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2513,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "9910:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "9905:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2512,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9905:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2515,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "9923:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "9918:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2514,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9918:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2517,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTime",
												"nameLocation": "9944:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "9939:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2516,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9939:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9890:64:8"
									},
									"src": "9867:88:8"
								},
								{
									"anonymous": false,
									"eventSelector": "360cb96d3e85b4fc299ddfa9a572850fc70961c86f0f1703f033143b0e5a82cf",
									"id": 2527,
									"name": "WeeklyContestQualified",
									"nameLocation": "9967:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "9995:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "9990:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9990:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2523,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "10009:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "10004:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2522,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10004:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2525,
												"indexed": false,
												"mutability": "mutable",
												"name": "joinTime",
												"nameLocation": "10022:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "10017:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10017:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9989:42:8"
									},
									"src": "9961:71:8"
								},
								{
									"constant": true,
									"functionSelector": "2a891534",
									"id": 2530,
									"mutability": "constant",
									"name": "MONTH_DURATION",
									"nameLocation": "10110:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "10089:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2528,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "10089:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 2529,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10127:7:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c8df2908",
									"id": 2533,
									"mutability": "constant",
									"name": "monthlyCapping",
									"nameLocation": "10162:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "10141:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2531,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "10141:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030653138",
										"id": 2532,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10179:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000"
										},
										"value": "10000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c9ed0708",
									"id": 2536,
									"mutability": "mutable",
									"name": "currentMonthlyRound",
									"nameLocation": "10212:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "10200:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2534,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "10200:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2535,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10234:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e898fc38",
									"id": 2539,
									"mutability": "mutable",
									"name": "currentMonthlyStartTime",
									"nameLocation": "10254:23:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "10242:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2537,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "10242:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2538,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10280:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a59d17d1",
									"id": 2542,
									"mutability": "mutable",
									"name": "monthlyTotalReward",
									"nameLocation": "10300:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "10288:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2540,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "10288:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2541,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10321:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.monthlyRoyalty",
									"id": 2561,
									"members": [
										{
											"constant": false,
											"id": 2544,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "10369:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2561,
											"src": "10364:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2543,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10364:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2546,
											"mutability": "mutable",
											"name": "totalReward",
											"nameLocation": "10396:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2561,
											"src": "10391:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2545,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10391:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2548,
											"mutability": "mutable",
											"name": "totalUsers",
											"nameLocation": "10423:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2561,
											"src": "10418:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2547,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10418:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2550,
											"mutability": "mutable",
											"name": "perUserReward",
											"nameLocation": "10449:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2561,
											"src": "10444:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2549,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10444:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2552,
											"mutability": "mutable",
											"name": "claimedCount",
											"nameLocation": "10478:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2561,
											"src": "10473:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2551,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10473:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2554,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "10506:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2561,
											"src": "10501:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2553,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10501:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2556,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "10531:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2561,
											"src": "10526:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2555,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10526:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2558,
											"mutability": "mutable",
											"name": "carryForward",
											"nameLocation": "10554:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2561,
											"src": "10549:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2557,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10549:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2560,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "10582:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2561,
											"src": "10577:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2559,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10577:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "monthlyRoyalty",
									"nameLocation": "10338:14:8",
									"nodeType": "StructDefinition",
									"scope": 3371,
									"src": "10331:265:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.monthlyRoyaltyUser",
									"id": 2574,
									"members": [
										{
											"constant": false,
											"id": 2563,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "10653:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2574,
											"src": "10648:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2562,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10648:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2565,
											"mutability": "mutable",
											"name": "qualifiedRoundId",
											"nameLocation": "10677:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 2574,
											"src": "10672:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2564,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10672:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2567,
											"mutability": "mutable",
											"name": "claimTime",
											"nameLocation": "10710:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2574,
											"src": "10705:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2566,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10705:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2571,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "10752:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2574,
											"src": "10730:31:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 2570,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 2568,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10738:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "10730:21:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10746:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2573,
											"mutability": "mutable",
											"name": "isQualified",
											"nameLocation": "10778:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2574,
											"src": "10773:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2572,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10773:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "monthlyRoyaltyUser",
									"nameLocation": "10611:18:8",
									"nodeType": "StructDefinition",
									"scope": 3371,
									"src": "10604:193:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2579,
									"mutability": "mutable",
									"name": "monthlyRoyaltydtl",
									"nameLocation": "10845:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "10803:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$2561_storage_$",
										"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty)"
									},
									"typeName": {
										"id": 2578,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2575,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "10812:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "10803:32:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$2561_storage_$",
											"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2577,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2576,
												"name": "monthlyRoyalty",
												"nameLocations": [
													"10820:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2561,
												"src": "10820:14:8"
											},
											"referencedDeclaration": 2561,
											"src": "10820:14:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_monthlyRoyalty_$2561_storage_ptr",
												"typeString": "struct Storage.monthlyRoyalty"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2582,
									"mutability": "mutable",
									"name": "monthlyQualifiedUsers",
									"nameLocation": "10905:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "10898:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2580,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "10898:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2581,
										"nodeType": "ArrayTypeName",
										"src": "10898:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2587,
									"mutability": "mutable",
									"name": "monthlyRoyaltyUserdtl",
									"nameLocation": "11012:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "10967:66:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2574_storage_$",
										"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)"
									},
									"typeName": {
										"id": 2586,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2583,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "10975:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "10967:35:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2574_storage_$",
											"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2585,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2584,
												"name": "monthlyRoyaltyUser",
												"nameLocations": [
													"10983:18:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2574,
												"src": "10983:18:8"
											},
											"referencedDeclaration": 2574,
											"src": "10983:18:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2574_storage_ptr",
												"typeString": "struct Storage.monthlyRoyaltyUser"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2592,
									"mutability": "mutable",
									"name": "monthlyUserDirects",
									"nameLocation": "11073:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "11040:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2591,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2588,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "11048:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "11040:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2589,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11056:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2590,
											"nodeType": "ArrayTypeName",
											"src": "11056:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "1b674071adfa65db18518e4868ae7d5f54dd365c69e0babe9b704cbade8fe4bb",
									"id": 2608,
									"name": "MonthlyClosed",
									"nameLocation": "11161:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "11180:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "11175:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11175:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2596,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalUsers",
												"nameLocation": "11194:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "11189:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2595,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11189:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2598,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "11211:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "11206:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2597,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11206:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2600,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReward",
												"nameLocation": "11231:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "11226:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2599,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11226:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2602,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDistributed",
												"nameLocation": "11249:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "11244:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2601,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11244:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2604,
												"indexed": false,
												"mutability": "mutable",
												"name": "leftoverReward",
												"nameLocation": "11272:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "11267:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2603,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11267:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2606,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "11293:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "11288:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2605,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11288:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11174:127:8"
									},
									"src": "11155:147:8"
								},
								{
									"anonymous": false,
									"eventSelector": "8211032682f8fd8be8ff252e0a106cdb6ad4b10427152b4d93c2bc9a1f11c3c2",
									"id": 2618,
									"name": "MonthlyRewardClaim",
									"nameLocation": "11314:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "11338:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "11333:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11333:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2612,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "11352:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "11347:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2611,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11347:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2614,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "11365:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "11360:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2613,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11360:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2616,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTime",
												"nameLocation": "11386:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "11381:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11381:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11332:64:8"
									},
									"src": "11308:89:8"
								},
								{
									"anonymous": false,
									"eventSelector": "42ee5ef523a95c6fb3ffdd2e9b34955b83ea8c2b11ff268c87ae6ea25556eaac",
									"id": 2626,
									"name": "MonthlyRoyaltyQualified",
									"nameLocation": "11409:23:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2620,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "11438:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2626,
												"src": "11433:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2619,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11433:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2622,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "11452:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2626,
												"src": "11447:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11447:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2624,
												"indexed": false,
												"mutability": "mutable",
												"name": "joinTime",
												"nameLocation": "11465:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2626,
												"src": "11460:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2623,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11460:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11432:42:8"
									},
									"src": "11403:72:8"
								},
								{
									"constant": false,
									"functionSelector": "4b8cbf9b",
									"id": 2629,
									"mutability": "mutable",
									"name": "topRoyaltyRound",
									"nameLocation": "11522:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "11510:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2627,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "11510:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2628,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11540:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b40ab97",
									"id": 2632,
									"mutability": "mutable",
									"name": "topRoyaltyStartTime",
									"nameLocation": "11560:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "11548:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2630,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "11548:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2631,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11582:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5b62d1d5",
									"id": 2635,
									"mutability": "mutable",
									"name": "topRoyaltyReward",
									"nameLocation": "11602:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "11590:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2633,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "11590:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2634,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11621:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.topRoyalty",
									"id": 2654,
									"members": [
										{
											"constant": false,
											"id": 2637,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "11665:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2654,
											"src": "11660:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2636,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11660:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2639,
											"mutability": "mutable",
											"name": "totalReward",
											"nameLocation": "11692:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2654,
											"src": "11687:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2638,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11687:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2641,
											"mutability": "mutable",
											"name": "totalUsers",
											"nameLocation": "11719:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2654,
											"src": "11714:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2640,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11714:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2643,
											"mutability": "mutable",
											"name": "perUserReward",
											"nameLocation": "11745:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2654,
											"src": "11740:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2642,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11740:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2645,
											"mutability": "mutable",
											"name": "claimedCount",
											"nameLocation": "11774:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2654,
											"src": "11769:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2644,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11769:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2647,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "11802:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2654,
											"src": "11797:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2646,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11797:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2649,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "11827:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2654,
											"src": "11822:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2648,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11822:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2651,
											"mutability": "mutable",
											"name": "carryForward",
											"nameLocation": "11850:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2654,
											"src": "11845:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2650,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11845:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2653,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "11878:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2654,
											"src": "11873:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2652,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "11873:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "topRoyalty",
									"nameLocation": "11638:10:8",
									"nodeType": "StructDefinition",
									"scope": 3371,
									"src": "11631:261:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.topRoyaltyUser",
									"id": 2667,
									"members": [
										{
											"constant": false,
											"id": 2656,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "11945:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2667,
											"src": "11940:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2655,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11940:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2658,
											"mutability": "mutable",
											"name": "qualifiedRoundId",
											"nameLocation": "11969:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 2667,
											"src": "11964:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2657,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11964:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2660,
											"mutability": "mutable",
											"name": "claimTime",
											"nameLocation": "12002:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2667,
											"src": "11997:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2659,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11997:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2664,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "12044:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2667,
											"src": "12022:31:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 2663,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 2661,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12030:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "12022:21:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12038:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2666,
											"mutability": "mutable",
											"name": "isQualified",
											"nameLocation": "12070:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2667,
											"src": "12065:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2665,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "12065:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "topRoyaltyUser",
									"nameLocation": "11907:14:8",
									"nodeType": "StructDefinition",
									"scope": 3371,
									"src": "11900:189:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2672,
									"mutability": "mutable",
									"name": "topRoyaltydtl",
									"nameLocation": "12133:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "12095:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyalty_$2654_storage_$",
										"typeString": "mapping(uint256 => struct Storage.topRoyalty)"
									},
									"typeName": {
										"id": 2671,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2668,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "12104:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "12095:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyalty_$2654_storage_$",
											"typeString": "mapping(uint256 => struct Storage.topRoyalty)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2670,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2669,
												"name": "topRoyalty",
												"nameLocations": [
													"12112:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2654,
												"src": "12112:10:8"
											},
											"referencedDeclaration": 2654,
											"src": "12112:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_topRoyalty_$2654_storage_ptr",
												"typeString": "struct Storage.topRoyalty"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2675,
									"mutability": "mutable",
									"name": "topRoyaltyQualifiedUsers",
									"nameLocation": "12193:24:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "12186:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2673,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "12186:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2674,
										"nodeType": "ArrayTypeName",
										"src": "12186:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2680,
									"mutability": "mutable",
									"name": "topRoyaltyUserdtl",
									"nameLocation": "12295:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "12254:58:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyaltyUser_$2667_storage_$",
										"typeString": "mapping(uint256 => struct Storage.topRoyaltyUser)"
									},
									"typeName": {
										"id": 2679,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2676,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "12262:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "12254:31:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyaltyUser_$2667_storage_$",
											"typeString": "mapping(uint256 => struct Storage.topRoyaltyUser)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2678,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2677,
												"name": "topRoyaltyUser",
												"nameLocations": [
													"12270:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2667,
												"src": "12270:14:8"
											},
											"referencedDeclaration": 2667,
											"src": "12270:14:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_topRoyaltyUser_$2667_storage_ptr",
												"typeString": "struct Storage.topRoyaltyUser"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2685,
									"mutability": "mutable",
									"name": "topRoyaltyUserDirects",
									"nameLocation": "12352:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 3371,
									"src": "12319:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2684,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2681,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "12327:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "12319:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2682,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "12335:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2683,
											"nodeType": "ArrayTypeName",
											"src": "12335:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "3e2269a22c7571b51c53565ece51da09613519b306c6dde588beea1f5fd3cfd3",
									"id": 2701,
									"name": "TopRoyaltyClosed",
									"nameLocation": "12439:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2687,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "12461:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "12456:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2686,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12456:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2689,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalUsers",
												"nameLocation": "12475:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "12470:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12470:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "12492:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "12487:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2690,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12487:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2693,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReward",
												"nameLocation": "12512:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "12507:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2692,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12507:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2695,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDistributed",
												"nameLocation": "12530:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "12525:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2694,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12525:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2697,
												"indexed": false,
												"mutability": "mutable",
												"name": "leftoverReward",
												"nameLocation": "12553:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "12548:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2696,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12548:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2699,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "12574:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "12569:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2698,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12569:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12455:127:8"
									},
									"src": "12433:150:8"
								},
								{
									"anonymous": false,
									"eventSelector": "6ac5dc27fbf1276a5db7faad992ea92a268d34b18f81922f747d9d3beb5f9c55",
									"id": 2711,
									"name": "TopRoyaltyRewardClaim",
									"nameLocation": "12595:21:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2703,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "12622:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "12617:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2702,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12617:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2705,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "12636:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "12631:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2704,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12631:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2707,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "12649:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "12644:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2706,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12644:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2709,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTime",
												"nameLocation": "12670:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "12665:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2708,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12665:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12616:64:8"
									},
									"src": "12589:92:8"
								},
								{
									"anonymous": false,
									"eventSelector": "e0adb9e294d1c73aeabf8e4f0d778fcf5f718aac0cd3c7527f920e520ec9aff2",
									"id": 2719,
									"name": "TopRoyaltyQualified",
									"nameLocation": "12693:19:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2713,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "12718:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2719,
												"src": "12713:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2712,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12713:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2715,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "12732:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2719,
												"src": "12727:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2714,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12727:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"indexed": false,
												"mutability": "mutable",
												"name": "joinTime",
												"nameLocation": "12745:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2719,
												"src": "12740:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2716,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12740:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12712:42:8"
									},
									"src": "12687:68:8"
								},
								{
									"body": {
										"id": 2722,
										"nodeType": "Block",
										"src": "12786:17:8",
										"statements": []
									},
									"id": 2723,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12783:2:8"
									},
									"returnParameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12786:0:8"
									},
									"scope": 3371,
									"src": "12772:31:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2770,
										"nodeType": "Block",
										"src": "12872:708:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2729,
																"name": "creatorWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1916,
																"src": "12887:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12912:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12904:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2730,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12904:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12904:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12887:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "666565206164647273206e6f7420736574",
															"id": 2735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12915:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24633079efecc28c5aede41112c3990abdd9e7b0bb26db3b9a203d1a67268b03",
																"typeString": "literal_string \"fee addrs not set\""
															},
															"value": "fee addrs not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24633079efecc28c5aede41112c3990abdd9e7b0bb26db3b9a203d1a67268b03",
																"typeString": "literal_string \"fee addrs not set\""
															}
														],
														"id": 2728,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12879:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12879:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2737,
												"nodeType": "ExpressionStatement",
												"src": "12879:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2741,
															"name": "creatorWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1916,
															"src": "13051:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2742,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2725,
															"src": "13066:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2738,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "13033:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 2740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13038:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "13033:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13033:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2744,
												"nodeType": "ExpressionStatement",
												"src": "13033:41:8"
											},
											{
												"assignments": [
													2747
												],
												"declarations": [
													{
														"constant": false,
														"id": 2747,
														"mutability": "mutable",
														"name": "creatorIncome",
														"nameLocation": "13153:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 2770,
														"src": "13134:32:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
															"typeString": "struct Storage.UserIncome"
														},
														"typeName": {
															"id": 2746,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2745,
																"name": "UserIncome",
																"nameLocations": [
																	"13134:10:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2114,
																"src": "13134:10:8"
															},
															"referencedDeclaration": 2114,
															"src": "13134:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																"typeString": "struct Storage.UserIncome"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2751,
												"initialValue": {
													"baseExpression": {
														"id": 2748,
														"name": "userIncomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2157,
														"src": "13169:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2114_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
														}
													},
													"id": 2750,
													"indexExpression": {
														"id": 2749,
														"name": "defaultRefId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "13181:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13169:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIncome_$2114_storage",
														"typeString": "struct Storage.UserIncome storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13134:60:8"
											},
											{
												"expression": {
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2752,
															"name": "creatorIncome",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2747,
															"src": "13201:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 2754,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13215:11:8",
														"memberName": "totalIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2091,
														"src": "13201:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2755,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2725,
														"src": "13230:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13201:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2757,
												"nodeType": "ExpressionStatement",
												"src": "13201:36:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2759,
															"name": "creatorWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1916,
															"src": "13484:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2760,
															"name": "defaultRefId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "13499:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2761,
															"name": "defaultRefId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "13513:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2762,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2725,
															"src": "13527:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 2763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13536:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 2764,
																"name": "IncomeType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2143,
																"src": "13539:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_IncomeType_$2143_$",
																	"typeString": "type(enum Storage.IncomeType)"
																}
															},
															"id": 2765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "13550:7:8",
															"memberName": "Creator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2133,
															"src": "13539:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$2143",
																"typeString": "enum Storage.IncomeType"
															}
														},
														{
															"expression": {
																"id": 2766,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "13559:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13565:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "13559:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_enum$_IncomeType_$2143",
																"typeString": "enum Storage.IncomeType"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2758,
														"name": "IncomeDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2272,
														"src": "13465:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_IncomeType_$2143_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,enum Storage.IncomeType,uint256)"
														}
													},
													"id": 2768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13465:111:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2769,
												"nodeType": "EmitStatement",
												"src": "13460:116:8"
											}
										]
									},
									"id": 2771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sendToCreator",
									"nameLocation": "12834:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2725,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12854:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2771,
												"src": "12849:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2724,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12849:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12848:14:8"
									},
									"returnParameters": {
										"id": 2727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12872:0:8"
									},
									"scope": 3371,
									"src": "12825:755:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2959,
										"nodeType": "Block",
										"src": "13714:1752:8",
										"statements": [
											{
												"assignments": [
													2787
												],
												"declarations": [
													{
														"constant": false,
														"id": 2787,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "13738:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2959,
														"src": "13725:17:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 2786,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2785,
																"name": "User",
																"nameLocations": [
																	"13725:4:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2089,
																"src": "13725:4:8"
															},
															"referencedDeclaration": 2089,
															"src": "13725:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2791,
												"initialValue": {
													"baseExpression": {
														"id": 2788,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "13745:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2089_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 2790,
													"indexExpression": {
														"id": 2789,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2773,
														"src": "13751:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13745:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2089_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13725:34:8"
											},
											{
												"assignments": [
													2793
												],
												"declarations": [
													{
														"constant": false,
														"id": 2793,
														"mutability": "mutable",
														"name": "userAddress",
														"nameLocation": "13778:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 2959,
														"src": "13770:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2792,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13770:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2796,
												"initialValue": {
													"expression": {
														"id": 2794,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2787,
														"src": "13792:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 2795,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13797:7:8",
													"memberName": "account",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2044,
													"src": "13792:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13770:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2798,
																"name": "userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "13823:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13846:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13838:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2799,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13838:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13838:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13823:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642075736572",
															"id": 2804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13850:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34e7942b50fb081b1a15c529d5017673bd90fd52cb4962fa3d50206a7121a1b",
																"typeString": "literal_string \"Invalid user\""
															},
															"value": "Invalid user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34e7942b50fb081b1a15c529d5017673bd90fd52cb4962fa3d50206a7121a1b",
																"typeString": "literal_string \"Invalid user\""
															}
														],
														"id": 2797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13815:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13815:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2806,
												"nodeType": "ExpressionStatement",
												"src": "13815:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2808,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2777,
																"src": "13884:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13894:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13884:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616d6f756e74",
															"id": 2811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13897:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															},
															"value": "Zero amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															}
														],
														"id": 2807,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13876:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13876:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2813,
												"nodeType": "ExpressionStatement",
												"src": "13876:35:8"
											},
											{
												"assignments": [
													2816
												],
												"declarations": [
													{
														"constant": false,
														"id": 2816,
														"mutability": "mutable",
														"name": "income",
														"nameLocation": "14059:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2959,
														"src": "14040:25:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
															"typeString": "struct Storage.UserIncome"
														},
														"typeName": {
															"id": 2815,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2814,
																"name": "UserIncome",
																"nameLocations": [
																	"14040:10:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2114,
																"src": "14040:10:8"
															},
															"referencedDeclaration": 2114,
															"src": "14040:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																"typeString": "struct Storage.UserIncome"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2820,
												"initialValue": {
													"baseExpression": {
														"id": 2817,
														"name": "userIncomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2157,
														"src": "14068:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2114_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
														}
													},
													"id": 2819,
													"indexExpression": {
														"id": 2818,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2773,
														"src": "14080:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14068:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIncome_$2114_storage",
														"typeString": "struct Storage.UserIncome storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14040:48:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_IncomeType_$2143",
															"typeString": "enum Storage.IncomeType"
														},
														"id": 2824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2821,
															"name": "_incomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2782,
															"src": "14102:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$2143",
																"typeString": "enum Storage.IncomeType"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 2822,
																"name": "IncomeType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2143,
																"src": "14117:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_IncomeType_$2143_$",
																	"typeString": "type(enum Storage.IncomeType)"
																}
															},
															"id": 2823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "14128:7:8",
															"memberName": "Booster",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2139,
															"src": "14117:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$2143",
																"typeString": "enum Storage.IncomeType"
															}
														},
														"src": "14102:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_IncomeType_$2143",
															"typeString": "enum Storage.IncomeType"
														},
														"id": 2828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2825,
															"name": "_incomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2782,
															"src": "14139:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$2143",
																"typeString": "enum Storage.IncomeType"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 2826,
																"name": "IncomeType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2143,
																"src": "14154:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_IncomeType_$2143_$",
																	"typeString": "type(enum Storage.IncomeType)"
																}
															},
															"id": 2827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "14165:4:8",
															"memberName": "Pool",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2138,
															"src": "14154:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$2143",
																"typeString": "enum Storage.IncomeType"
															}
														},
														"src": "14139:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14102:67:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2837,
												"nodeType": "IfStatement",
												"src": "14099:129:8",
												"trueBody": {
													"id": 2836,
													"nodeType": "Block",
													"src": "14170:58:8",
													"statements": [
														{
															"expression": {
																"id": 2834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2830,
																		"name": "income",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2816,
																		"src": "14187:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																			"typeString": "struct Storage.UserIncome storage pointer"
																		}
																	},
																	"id": 2832,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "14194:11:8",
																	"memberName": "totalIncome",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2091,
																	"src": "14187:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2833,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2777,
																	"src": "14209:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14187:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2835,
															"nodeType": "ExpressionStatement",
															"src": "14187:29:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_IncomeType_$2143",
														"typeString": "enum Storage.IncomeType"
													},
													"id": 2841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2838,
														"name": "_incomeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2782,
														"src": "14322:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_IncomeType_$2143",
															"typeString": "enum Storage.IncomeType"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2839,
															"name": "IncomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "14337:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_IncomeType_$2143_$",
																"typeString": "type(enum Storage.IncomeType)"
															}
														},
														"id": 2840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14348:7:8",
														"memberName": "Sponsor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2134,
														"src": "14337:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_IncomeType_$2143",
															"typeString": "enum Storage.IncomeType"
														}
													},
													"src": "14322:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_IncomeType_$2143",
															"typeString": "enum Storage.IncomeType"
														},
														"id": 2851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2848,
															"name": "_incomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2782,
															"src": "14408:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$2143",
																"typeString": "enum Storage.IncomeType"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2849,
																"name": "IncomeType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2143,
																"src": "14423:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_IncomeType_$2143_$",
																	"typeString": "type(enum Storage.IncomeType)"
																}
															},
															"id": 2850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "14434:6:8",
															"memberName": "Matrix",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2135,
															"src": "14423:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$2143",
																"typeString": "enum Storage.IncomeType"
															}
														},
														"src": "14408:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_IncomeType_$2143",
																"typeString": "enum Storage.IncomeType"
															},
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2858,
																"name": "_incomeType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2782,
																"src": "14492:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_IncomeType_$2143",
																	"typeString": "enum Storage.IncomeType"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2859,
																	"name": "IncomeType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2143,
																	"src": "14507:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_IncomeType_$2143_$",
																		"typeString": "type(enum Storage.IncomeType)"
																	}
																},
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "14518:12:8",
																"memberName": "LevelBooster",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2136,
																"src": "14507:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_IncomeType_$2143",
																	"typeString": "enum Storage.IncomeType"
																}
															},
															"src": "14492:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_IncomeType_$2143",
																	"typeString": "enum Storage.IncomeType"
																},
																"id": 2871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2868,
																	"name": "_incomeType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2782,
																	"src": "14590:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_IncomeType_$2143",
																		"typeString": "enum Storage.IncomeType"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2869,
																		"name": "IncomeType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2143,
																		"src": "14605:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_IncomeType_$2143_$",
																			"typeString": "type(enum Storage.IncomeType)"
																		}
																	},
																	"id": 2870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "14616:9:8",
																	"memberName": "Community",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2137,
																	"src": "14605:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_IncomeType_$2143",
																		"typeString": "enum Storage.IncomeType"
																	}
																},
																"src": "14590:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_IncomeType_$2143",
																		"typeString": "enum Storage.IncomeType"
																	},
																	"id": 2881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2878,
																		"name": "_incomeType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2782,
																		"src": "14683:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_IncomeType_$2143",
																			"typeString": "enum Storage.IncomeType"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 2879,
																			"name": "IncomeType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "14698:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_IncomeType_$2143_$",
																				"typeString": "type(enum Storage.IncomeType)"
																			}
																		},
																		"id": 2880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "14709:4:8",
																		"memberName": "Pool",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2138,
																		"src": "14698:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_IncomeType_$2143",
																			"typeString": "enum Storage.IncomeType"
																		}
																	},
																	"src": "14683:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_IncomeType_$2143",
																			"typeString": "enum Storage.IncomeType"
																		},
																		"id": 2891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2888,
																			"name": "_incomeType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2782,
																			"src": "14763:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_IncomeType_$2143",
																				"typeString": "enum Storage.IncomeType"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 2889,
																				"name": "IncomeType",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2143,
																				"src": "14778:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_IncomeType_$2143_$",
																					"typeString": "type(enum Storage.IncomeType)"
																				}
																			},
																			"id": 2890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "14789:7:8",
																			"memberName": "Booster",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2139,
																			"src": "14778:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_IncomeType_$2143",
																				"typeString": "enum Storage.IncomeType"
																			}
																		},
																		"src": "14763:33:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_enum$_IncomeType_$2143",
																				"typeString": "enum Storage.IncomeType"
																			},
																			"id": 2901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2898,
																				"name": "_incomeType",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2782,
																				"src": "14849:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_IncomeType_$2143",
																					"typeString": "enum Storage.IncomeType"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"expression": {
																					"id": 2899,
																					"name": "IncomeType",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2143,
																					"src": "14864:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_IncomeType_$2143_$",
																						"typeString": "type(enum Storage.IncomeType)"
																					}
																				},
																				"id": 2900,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "14875:13:8",
																				"memberName": "WeeklyContest",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2140,
																				"src": "14864:24:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_IncomeType_$2143",
																					"typeString": "enum Storage.IncomeType"
																				}
																			},
																			"src": "14849:39:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_IncomeType_$2143",
																					"typeString": "enum Storage.IncomeType"
																				},
																				"id": 2911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2908,
																					"name": "_incomeType",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2782,
																					"src": "14947:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_IncomeType_$2143",
																						"typeString": "enum Storage.IncomeType"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2909,
																						"name": "IncomeType",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2143,
																						"src": "14962:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_IncomeType_$2143_$",
																							"typeString": "type(enum Storage.IncomeType)"
																						}
																					},
																					"id": 2910,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "14973:14:8",
																					"memberName": "MonthlyRoyalty",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2141,
																					"src": "14962:25:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_IncomeType_$2143",
																						"typeString": "enum Storage.IncomeType"
																					}
																				},
																				"src": "14947:40:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_enum$_IncomeType_$2143",
																						"typeString": "enum Storage.IncomeType"
																					},
																					"id": 2921,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2918,
																						"name": "_incomeType",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2782,
																						"src": "15041:11:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_IncomeType_$2143",
																							"typeString": "enum Storage.IncomeType"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"id": 2919,
																							"name": "IncomeType",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2143,
																							"src": "15056:10:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_enum$_IncomeType_$2143_$",
																								"typeString": "type(enum Storage.IncomeType)"
																							}
																						},
																						"id": 2920,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15067:10:8",
																						"memberName": "TopRoyalty",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2142,
																						"src": "15056:21:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_IncomeType_$2143",
																							"typeString": "enum Storage.IncomeType"
																						}
																					},
																					"src": "15041:36:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"expression": {
																						"arguments": [
																							{
																								"hexValue": "556e6b6e6f776e20696e636f6d652074797065",
																								"id": 2929,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "15144:21:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_362cd1cd93870aa625050dba699b71f0dd1830454709724c3f6a93954bf62033",
																									"typeString": "literal_string \"Unknown income type\""
																								},
																								"value": "Unknown income type"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_362cd1cd93870aa625050dba699b71f0dd1830454709724c3f6a93954bf62033",
																									"typeString": "literal_string \"Unknown income type\""
																								}
																							],
																							"id": 2928,
																							"name": "revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967277,
																								4294967277
																							],
																							"referencedDeclaration": 4294967277,
																							"src": "15137:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (string memory) pure"
																							}
																						},
																						"id": 2930,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15137:29:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2931,
																					"nodeType": "ExpressionStatement",
																					"src": "15137:29:8"
																				},
																				"id": 2932,
																				"nodeType": "IfStatement",
																				"src": "15037:129:8",
																				"trueBody": {
																					"expression": {
																						"id": 2926,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 2922,
																								"name": "income",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2816,
																								"src": "15079:6:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																									"typeString": "struct Storage.UserIncome storage pointer"
																								}
																							},
																							"id": 2924,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberLocation": "15086:10:8",
																							"memberName": "topRoyalty",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2113,
																							"src": "15079:17:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 2925,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2777,
																							"src": "15100:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "15079:28:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2927,
																					"nodeType": "ExpressionStatement",
																					"src": "15079:28:8"
																				}
																			},
																			"id": 2933,
																			"nodeType": "IfStatement",
																			"src": "14943:223:8",
																			"trueBody": {
																				"expression": {
																					"id": 2916,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2912,
																							"name": "income",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2816,
																							"src": "14989:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																								"typeString": "struct Storage.UserIncome storage pointer"
																							}
																						},
																						"id": 2914,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "14996:14:8",
																						"memberName": "monthlyRoyalty",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2111,
																						"src": "14989:21:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"id": 2915,
																						"name": "_amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2777,
																						"src": "15014:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14989:32:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2917,
																				"nodeType": "ExpressionStatement",
																				"src": "14989:32:8"
																			}
																		},
																		"id": 2934,
																		"nodeType": "IfStatement",
																		"src": "14845:321:8",
																		"trueBody": {
																			"expression": {
																				"id": 2906,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"id": 2902,
																						"name": "income",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2816,
																						"src": "14890:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																							"typeString": "struct Storage.UserIncome storage pointer"
																						}
																					},
																					"id": 2904,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberLocation": "14897:19:8",
																					"memberName": "weeklyContestIncome",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2109,
																					"src": "14890:26:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"id": 2905,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2777,
																					"src": "14920:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14890:37:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2907,
																			"nodeType": "ExpressionStatement",
																			"src": "14890:37:8"
																		}
																	},
																	"id": 2935,
																	"nodeType": "IfStatement",
																	"src": "14759:407:8",
																	"trueBody": {
																		"expression": {
																			"id": 2896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2892,
																					"name": "income",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2816,
																					"src": "14798:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																						"typeString": "struct Storage.UserIncome storage pointer"
																					}
																				},
																				"id": 2894,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "14805:13:8",
																				"memberName": "boosterIncome",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2107,
																				"src": "14798:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2895,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2777,
																				"src": "14822:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14798:31:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2897,
																		"nodeType": "ExpressionStatement",
																		"src": "14798:31:8"
																	}
																},
																"id": 2936,
																"nodeType": "IfStatement",
																"src": "14679:487:8",
																"trueBody": {
																	"expression": {
																		"id": 2886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 2882,
																				"name": "income",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2816,
																				"src": "14715:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																					"typeString": "struct Storage.UserIncome storage pointer"
																				}
																			},
																			"id": 2884,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "14722:10:8",
																			"memberName": "poolIncome",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2105,
																			"src": "14715:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 2885,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2777,
																			"src": "14736:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14715:28:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2887,
																	"nodeType": "ExpressionStatement",
																	"src": "14715:28:8"
																}
															},
															"id": 2937,
															"nodeType": "IfStatement",
															"src": "14586:580:8",
															"trueBody": {
																"expression": {
																	"id": 2876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 2872,
																			"name": "income",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2816,
																			"src": "14627:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																				"typeString": "struct Storage.UserIncome storage pointer"
																			}
																		},
																		"id": 2874,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "14634:15:8",
																		"memberName": "communityIncome",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2103,
																		"src": "14627:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 2875,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2777,
																		"src": "14653:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14627:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2877,
																"nodeType": "ExpressionStatement",
																"src": "14627:33:8"
															}
														},
														"id": 2938,
														"nodeType": "IfStatement",
														"src": "14488:678:8",
														"trueBody": {
															"expression": {
																"id": 2866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2862,
																		"name": "income",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2816,
																		"src": "14532:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																			"typeString": "struct Storage.UserIncome storage pointer"
																		}
																	},
																	"id": 2864,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "14539:18:8",
																	"memberName": "levelBoosterIncome",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2097,
																	"src": "14532:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2865,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2777,
																	"src": "14561:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14532:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2867,
															"nodeType": "ExpressionStatement",
															"src": "14532:36:8"
														}
													},
													"id": 2939,
													"nodeType": "IfStatement",
													"src": "14404:762:8",
													"trueBody": {
														"expression": {
															"id": 2856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2852,
																	"name": "income",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2816,
																	"src": "14442:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																		"typeString": "struct Storage.UserIncome storage pointer"
																	}
																},
																"id": 2854,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "14449:12:8",
																"memberName": "matrixIncome",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2095,
																"src": "14442:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2855,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2777,
																"src": "14465:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14442:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2857,
														"nodeType": "ExpressionStatement",
														"src": "14442:30:8"
													}
												},
												"id": 2940,
												"nodeType": "IfStatement",
												"src": "14313:853:8",
												"trueBody": {
													"expression": {
														"id": 2846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"id": 2842,
																"name": "income",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2816,
																"src": "14357:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserIncome_$2114_storage_ptr",
																	"typeString": "struct Storage.UserIncome storage pointer"
																}
															},
															"id": 2844,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberLocation": "14364:13:8",
															"memberName": "sponsorIncome",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2093,
															"src": "14357:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"id": 2845,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2777,
															"src": "14381:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14357:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2847,
													"nodeType": "ExpressionStatement",
													"src": "14357:31:8"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2944,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2793,
															"src": "15201:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2945,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2777,
															"src": "15214:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2941,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "15183:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 2943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15188:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "15183:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15183:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2947,
												"nodeType": "ExpressionStatement",
												"src": "15183:39:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2949,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2793,
															"src": "15257:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2950,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "15270:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2951,
															"name": "_fromUserId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2775,
															"src": "15279:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2952,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2777,
															"src": "15292:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2953,
															"name": "_packageLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2779,
															"src": "15300:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2954,
															"name": "_incomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2782,
															"src": "15315:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$2143",
																"typeString": "enum Storage.IncomeType"
															}
														},
														{
															"expression": {
																"id": 2955,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "15328:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15334:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "15328:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_IncomeType_$2143",
																"typeString": "enum Storage.IncomeType"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2948,
														"name": "IncomeDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2272,
														"src": "15238:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_IncomeType_$2143_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,enum Storage.IncomeType,uint256)"
														}
													},
													"id": 2957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15238:107:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2958,
												"nodeType": "EmitStatement",
												"src": "15233:112:8"
											}
										]
									},
									"id": 2960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributeIncome",
									"nameLocation": "13599:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "13622:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "13617:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13617:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "_fromUserId",
												"nameLocation": "13635:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "13630:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2774,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13630:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2777,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "13652:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "13647:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2776,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13647:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "_packageLevel",
												"nameLocation": "13666:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "13661:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2778,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13661:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2782,
												"mutability": "mutable",
												"name": "_incomeType",
												"nameLocation": "13692:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "13681:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_IncomeType_$2143",
													"typeString": "enum Storage.IncomeType"
												},
												"typeName": {
													"id": 2781,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2780,
														"name": "IncomeType",
														"nameLocations": [
															"13681:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2143,
														"src": "13681:10:8"
													},
													"referencedDeclaration": 2143,
													"src": "13681:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_IncomeType_$2143",
														"typeString": "enum Storage.IncomeType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13616:88:8"
									},
									"returnParameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13714:0:8"
									},
									"scope": 3371,
									"src": "13590:1876:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2981,
										"nodeType": "Block",
										"src": "15545:154:8",
										"statements": [
											{
												"condition": {
													"id": 2973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "15564:45:8",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2967,
																	"name": "weeklyUserdtl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2486,
																	"src": "15565:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2469_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser storage ref))"
																	}
																},
																"id": 2969,
																"indexExpression": {
																	"id": 2968,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2964,
																	"src": "15579:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15565:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2469_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.weeklyUser storage ref)"
																}
															},
															"id": 2971,
															"indexExpression": {
																"id": 2970,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2962,
																"src": "15589:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15565:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2469_storage",
																"typeString": "struct Storage.weeklyUser storage ref"
															}
														},
														"id": 2972,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15598:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2468,
														"src": "15565:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2980,
												"nodeType": "IfStatement",
												"src": "15560:132:8",
												"trueBody": {
													"id": 2979,
													"nodeType": "Block",
													"src": "15611:81:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2975,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2962,
																		"src": "15658:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2976,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2964,
																		"src": "15667:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2974,
																	"name": "_weeklyContestQualifier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3100,
																	"src": "15634:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 2977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15634:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2978,
															"nodeType": "ExpressionStatement",
															"src": "15634:42:8"
														}
													]
												}
											}
										]
									},
									"id": 2982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryWeeklyContestQualify",
									"nameLocation": "15483:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2962,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "15513:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "15508:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2961,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15508:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "15527:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "15522:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2963,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15522:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15507:29:8"
									},
									"returnParameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15545:0:8"
									},
									"scope": 3371,
									"src": "15474:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3099,
										"nodeType": "Block",
										"src": "15777:1408:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2990,
																"name": "_roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2986,
																"src": "15864:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2991,
																"name": "currentWeeklyRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2433,
																"src": "15876:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15864:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726f756e64",
															"id": 2993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15896:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															},
															"value": "Invalid round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															}
														],
														"id": 2989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15856:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15856:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2995,
												"nodeType": "ExpressionStatement",
												"src": "15856:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "15931:34:8",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2997,
																		"name": "weeklyContestdtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2474,
																		"src": "15932:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$2458_storage_$",
																			"typeString": "mapping(uint256 => struct Storage.WeeklyContest storage ref)"
																		}
																	},
																	"id": 2999,
																	"indexExpression": {
																		"id": 2998,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2986,
																		"src": "15949:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15932:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeeklyContest_$2458_storage",
																		"typeString": "struct Storage.WeeklyContest storage ref"
																	}
																},
																"id": 3000,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15959:6:8",
																"memberName": "closed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2457,
																"src": "15932:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e6420636c6f736564",
															"id": 3002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15967:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															},
															"value": "Round closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															}
														],
														"id": 2996,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15923:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15923:59:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3004,
												"nodeType": "ExpressionStatement",
												"src": "15923:59:8"
											},
											{
												"assignments": [
													3007
												],
												"declarations": [
													{
														"constant": false,
														"id": 3007,
														"mutability": "mutable",
														"name": "userBoosterJoinDtl",
														"nameLocation": "16012:18:8",
														"nodeType": "VariableDeclaration",
														"scope": 3099,
														"src": "15993:37:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserBooster_$2360_memory_ptr",
															"typeString": "struct Storage.UserBooster"
														},
														"typeName": {
															"id": 3006,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3005,
																"name": "UserBooster",
																"nameLocations": [
																	"15993:11:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2360,
																"src": "15993:11:8"
															},
															"referencedDeclaration": 2360,
															"src": "15993:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserBooster_$2360_storage_ptr",
																"typeString": "struct Storage.UserBooster"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3013,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 3008,
															"name": "userBoosterdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "16033:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$2360_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster storage ref))"
															}
														},
														"id": 3010,
														"indexExpression": {
															"hexValue": "31",
															"id": 3009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16048:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16033:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBooster_$2360_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserBooster storage ref)"
														}
													},
													"id": 3012,
													"indexExpression": {
														"id": 3011,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2984,
														"src": "16051:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16033:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserBooster_$2360_storage",
														"typeString": "struct Storage.UserBooster storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15993:66:8"
											},
											{
												"assignments": [
													3015
												],
												"declarations": [
													{
														"constant": false,
														"id": 3015,
														"mutability": "mutable",
														"name": "hasEnoughDirects",
														"nameLocation": "16077:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 3099,
														"src": "16072:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3014,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16072:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3024,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 3016,
																	"name": "weeklyUserDirects",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2493,
																	"src": "16096:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																	}
																},
																"id": 3018,
																"indexExpression": {
																	"id": 3017,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2986,
																	"src": "16114:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16096:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 3020,
															"indexExpression": {
																"id": 3019,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2984,
																"src": "16124:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16096:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16133:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "16096:43:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "35",
														"id": 3022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16143:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "16096:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16072:72:8"
											},
											{
												"assignments": [
													3026
												],
												"declarations": [
													{
														"constant": false,
														"id": 3026,
														"mutability": "mutable",
														"name": "boosterEarlyJoin",
														"nameLocation": "16160:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 3099,
														"src": "16155:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3025,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16155:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3042,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3027,
																		"name": "userBoosterJoinDtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3007,
																		"src": "16194:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserBooster_$2360_memory_ptr",
																			"typeString": "struct Storage.UserBooster memory"
																		}
																	},
																	"id": 3028,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16213:2:8",
																	"memberName": "id",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2351,
																	"src": "16194:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3029,
																	"name": "_userId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2984,
																	"src": "16219:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16194:32:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3031,
																		"name": "userBoosterJoinDtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3007,
																		"src": "16244:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserBooster_$2360_memory_ptr",
																			"typeString": "struct Storage.UserBooster memory"
																		}
																	},
																	"id": 3032,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16263:8:8",
																	"memberName": "joinTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2359,
																	"src": "16244:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3033,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2152,
																				"src": "16275:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2089_storage_$",
																					"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																				}
																			},
																			"id": 3035,
																			"indexExpression": {
																				"id": 3034,
																				"name": "_userId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2984,
																				"src": "16281:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "16275:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$2089_storage",
																				"typeString": "struct Storage.User storage ref"
																			}
																		},
																		"id": 3036,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "16290:16:8",
																		"memberName": "registrationTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2080,
																		"src": "16275:31:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 3037,
																		"name": "TIME_STEP",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1933,
																		"src": "16309:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16275:43:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16244:74:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "16194:124:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 3041,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "16179:150:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16155:174:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3044,
																"name": "hasEnoughDirects",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3015,
																"src": "16348:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 3045,
																"name": "boosterEarlyJoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3026,
																"src": "16368:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "16348:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656c696769626c6520666f72207765656b6c7920636f6e74657374",
															"id": 3047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16386:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_118c80ebb328a86f89c9abb7dbb00582133be73c782846c45c96fae9ea1c5087",
																"typeString": "literal_string \"Not eligible for weekly contest\""
															},
															"value": "Not eligible for weekly contest"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_118c80ebb328a86f89c9abb7dbb00582133be73c782846c45c96fae9ea1c5087",
																"typeString": "literal_string \"Not eligible for weekly contest\""
															}
														],
														"id": 3043,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16340:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16340:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3049,
												"nodeType": "ExpressionStatement",
												"src": "16340:80:8"
											},
											{
												"assignments": [
													3052
												],
												"declarations": [
													{
														"constant": false,
														"id": 3052,
														"mutability": "mutable",
														"name": "weeklyuserdtl",
														"nameLocation": "16769:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 3099,
														"src": "16750:32:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_weeklyUser_$2469_storage_ptr",
															"typeString": "struct Storage.weeklyUser"
														},
														"typeName": {
															"id": 3051,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3050,
																"name": "weeklyUser",
																"nameLocations": [
																	"16750:10:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2469,
																"src": "16750:10:8"
															},
															"referencedDeclaration": 2469,
															"src": "16750:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2469_storage_ptr",
																"typeString": "struct Storage.weeklyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3058,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 3053,
															"name": "weeklyUserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2486,
															"src": "16785:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2469_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser storage ref))"
															}
														},
														"id": 3055,
														"indexExpression": {
															"id": 3054,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2986,
															"src": "16799:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16785:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2469_storage_$",
															"typeString": "mapping(uint256 => struct Storage.weeklyUser storage ref)"
														}
													},
													"id": 3057,
													"indexExpression": {
														"id": 3056,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2984,
														"src": "16809:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16785:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_weeklyUser_$2469_storage",
														"typeString": "struct Storage.weeklyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16750:67:8"
											},
											{
												"condition": {
													"expression": {
														"id": 3059,
														"name": "weeklyuserdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3052,
														"src": "16832:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_weeklyUser_$2469_storage_ptr",
															"typeString": "struct Storage.weeklyUser storage pointer"
														}
													},
													"id": 3060,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16846:11:8",
													"memberName": "isQualified",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2468,
													"src": "16832:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3062,
												"nodeType": "IfStatement",
												"src": "16828:38:8",
												"trueBody": {
													"functionReturnParameters": 2988,
													"id": 3061,
													"nodeType": "Return",
													"src": "16859:7:8"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "16884:26:8",
															"subExpression": {
																"expression": {
																	"id": 3064,
																	"name": "weeklyuserdtl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3052,
																	"src": "16885:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_weeklyUser_$2469_storage_ptr",
																		"typeString": "struct Storage.weeklyUser storage pointer"
																	}
																},
																"id": 3065,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16899:11:8",
																"memberName": "isQualified",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2468,
																"src": "16885:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c7265616479205175616c6966696564",
															"id": 3067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16912:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															},
															"value": "already Qualified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															}
														],
														"id": 3063,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16876:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16876:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3069,
												"nodeType": "ExpressionStatement",
												"src": "16876:56:8"
											},
											{
												"assignments": [
													3071
												],
												"declarations": [
													{
														"constant": false,
														"id": 3071,
														"mutability": "mutable",
														"name": "nowTime",
														"nameLocation": "16950:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 3099,
														"src": "16945:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3070,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16945:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3074,
												"initialValue": {
													"expression": {
														"id": 3072,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "16960:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 3073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16966:9:8",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "16960:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16945:30:8"
											},
											{
												"expression": {
													"id": 3079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3075,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3052,
															"src": "16988:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2469_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 3077,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17002:8:8",
														"memberName": "joinTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2460,
														"src": "16988:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3078,
														"name": "nowTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3071,
														"src": "17013:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16988:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3080,
												"nodeType": "ExpressionStatement",
												"src": "16988:32:8"
											},
											{
												"expression": {
													"id": 3085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3081,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3052,
															"src": "17031:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2469_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 3083,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17045:7:8",
														"memberName": "roundId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2462,
														"src": "17031:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3084,
														"name": "_roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2986,
														"src": "17055:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17031:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3086,
												"nodeType": "ExpressionStatement",
												"src": "17031:32:8"
											},
											{
												"expression": {
													"id": 3091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3087,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3052,
															"src": "17074:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2469_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 3089,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17088:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2468,
														"src": "17074:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17102:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "17074:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3092,
												"nodeType": "ExpressionStatement",
												"src": "17074:32:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3094,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2986,
															"src": "17150:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3095,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2984,
															"src": "17160:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3096,
															"name": "nowTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3071,
															"src": "17169:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3093,
														"name": "WeeklyContestQualified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2527,
														"src": "17127:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 3097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17127:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3098,
												"nodeType": "EmitStatement",
												"src": "17122:55:8"
											}
										]
									},
									"id": 3100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_weeklyContestQualifier",
									"nameLocation": "15716:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2984,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "15745:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3100,
												"src": "15740:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2983,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15740:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2986,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "15759:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3100,
												"src": "15754:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2985,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15754:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15739:29:8"
									},
									"returnParameters": {
										"id": 2988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15777:0:8"
									},
									"scope": 3371,
									"src": "15707:1478:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3119,
										"nodeType": "Block",
										"src": "17265:153:8",
										"statements": [
											{
												"condition": {
													"id": 3111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "17284:43:8",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 3107,
																"name": "monthlyRoyaltyUserdtl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2587,
																"src": "17285:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2574_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser storage ref)"
																}
															},
															"id": 3109,
															"indexExpression": {
																"id": 3108,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3102,
																"src": "17307:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17285:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2574_storage",
																"typeString": "struct Storage.monthlyRoyaltyUser storage ref"
															}
														},
														"id": 3110,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17316:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2573,
														"src": "17285:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3118,
												"nodeType": "IfStatement",
												"src": "17280:131:8",
												"trueBody": {
													"id": 3117,
													"nodeType": "Block",
													"src": "17329:82:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3113,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3102,
																		"src": "17377:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3114,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3104,
																		"src": "17386:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3112,
																	"name": "_monthlyRoyaltyQualifier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3235,
																	"src": "17352:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 3115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17352:43:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3116,
															"nodeType": "ExpressionStatement",
															"src": "17352:43:8"
														}
													]
												}
											}
										]
									},
									"id": 3120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryMonthlyRoyaltyQualify",
									"nameLocation": "17202:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "17233:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "17228:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3101,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17228:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3104,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "17247:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "17242:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3103,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17242:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17227:29:8"
									},
									"returnParameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17265:0:8"
									},
									"scope": 3371,
									"src": "17193:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3234,
										"nodeType": "Block",
										"src": "17497:1127:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3128,
																"name": "_roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3124,
																"src": "17531:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3129,
																"name": "currentMonthlyRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2536,
																"src": "17543:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17531:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726f756e64",
															"id": 3131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17564:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															},
															"value": "Invalid round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															}
														],
														"id": 3127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17523:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17523:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3133,
												"nodeType": "ExpressionStatement",
												"src": "17523:57:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "17599:35:8",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3135,
																		"name": "monthlyRoyaltydtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2579,
																		"src": "17600:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$2561_storage_$",
																			"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty storage ref)"
																		}
																	},
																	"id": 3137,
																	"indexExpression": {
																		"id": 3136,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3124,
																		"src": "17618:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17600:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyalty_$2561_storage",
																		"typeString": "struct Storage.monthlyRoyalty storage ref"
																	}
																},
																"id": 3138,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17628:6:8",
																"memberName": "closed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2560,
																"src": "17600:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e6420636c6f736564",
															"id": 3140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17636:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															},
															"value": "Round closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															}
														],
														"id": 3134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17591:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17591:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3142,
												"nodeType": "ExpressionStatement",
												"src": "17591:60:8"
											},
											{
												"assignments": [
													3145
												],
												"declarations": [
													{
														"constant": false,
														"id": 3145,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "17684:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 3234,
														"src": "17671:17:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 3144,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3143,
																"name": "User",
																"nameLocations": [
																	"17671:4:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2089,
																"src": "17671:4:8"
															},
															"referencedDeclaration": 2089,
															"src": "17671:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3149,
												"initialValue": {
													"baseExpression": {
														"id": 3146,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "17691:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2089_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 3148,
													"indexExpression": {
														"id": 3147,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3122,
														"src": "17697:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17691:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2089_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17671:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3151,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3145,
																	"src": "17734:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 3152,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17739:11:8",
																"memberName": "level10Time",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2082,
																"src": "17734:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17753:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17734:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206e6f74206c6576656c203130",
															"id": 3155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17756:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef95fffa9aa32a0d69f6c9a3b04b835c4c32f66e357dd62871407cd72c03d7be",
																"typeString": "literal_string \"User not level 10\""
															},
															"value": "User not level 10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef95fffa9aa32a0d69f6c9a3b04b835c4c32f66e357dd62871407cd72c03d7be",
																"typeString": "literal_string \"User not level 10\""
															}
														],
														"id": 3150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17726:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17726:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3157,
												"nodeType": "ExpressionStatement",
												"src": "17726:50:8"
											},
											{
												"assignments": [
													3159
												],
												"declarations": [
													{
														"constant": false,
														"id": 3159,
														"mutability": "mutable",
														"name": "withinTime",
														"nameLocation": "17792:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 3234,
														"src": "17787:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3158,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17787:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3167,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3160,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3145,
															"src": "17805:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 3161,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17810:11:8",
														"memberName": "level10Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2082,
														"src": "17805:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3162,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3145,
																"src": "17825:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 3163,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17830:16:8",
															"memberName": "registrationTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2080,
															"src": "17825:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 3164,
															"name": "MONTHLY_ROYALTY_TIME",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1939,
															"src": "17849:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "17825:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17805:64:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17787:82:8"
											},
											{
												"assignments": [
													3169
												],
												"declarations": [
													{
														"constant": false,
														"id": 3169,
														"mutability": "mutable",
														"name": "qualifiedByLevel",
														"nameLocation": "17885:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 3234,
														"src": "17880:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3168,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17880:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3174,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3170,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3145,
															"src": "17904:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 3171,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17909:5:8",
														"memberName": "level",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2058,
														"src": "17904:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 3172,
														"name": "MONTHLY_ROYALTY_LEVEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "17918:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17904:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17880:59:8"
											},
											{
												"assignments": [
													3176
												],
												"declarations": [
													{
														"constant": false,
														"id": 3176,
														"mutability": "mutable",
														"name": "qualifiedByDirects",
														"nameLocation": "17955:18:8",
														"nodeType": "VariableDeclaration",
														"scope": 3234,
														"src": "17950:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3175,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17950:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3181,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3177,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3145,
															"src": "17976:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 3178,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17981:22:8",
														"memberName": "monthlyUserDirectCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2086,
														"src": "17976:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 3179,
														"name": "MONTHLY_ROYALTY_DIRECT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1957,
														"src": "18007:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17976:53:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17950:79:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3183,
																	"name": "withinTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3159,
																	"src": "18048:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 3184,
																	"name": "qualifiedByLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3169,
																	"src": "18062:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "18048:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 3186,
																"name": "qualifiedByDirects",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3176,
																"src": "18082:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "18048:52:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656c696769626c65",
															"id": 3188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18102:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61a1e089173dfc78ca2944058dfe526d4bbfefdc58d29e3f537021afcab20284",
																"typeString": "literal_string \"Not eligible\""
															},
															"value": "Not eligible"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61a1e089173dfc78ca2944058dfe526d4bbfefdc58d29e3f537021afcab20284",
																"typeString": "literal_string \"Not eligible\""
															}
														],
														"id": 3182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18040:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18040:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3190,
												"nodeType": "ExpressionStatement",
												"src": "18040:77:8"
											},
											{
												"assignments": [
													3193
												],
												"declarations": [
													{
														"constant": false,
														"id": 3193,
														"mutability": "mutable",
														"name": "userRoyalty",
														"nameLocation": "18165:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 3234,
														"src": "18138:38:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2574_storage_ptr",
															"typeString": "struct Storage.monthlyRoyaltyUser"
														},
														"typeName": {
															"id": 3192,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3191,
																"name": "monthlyRoyaltyUser",
																"nameLocations": [
																	"18138:18:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2574,
																"src": "18138:18:8"
															},
															"referencedDeclaration": 2574,
															"src": "18138:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2574_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3197,
												"initialValue": {
													"baseExpression": {
														"id": 3194,
														"name": "monthlyRoyaltyUserdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2587,
														"src": "18180:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2574_storage_$",
															"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser storage ref)"
														}
													},
													"id": 3196,
													"indexExpression": {
														"id": 3195,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3122,
														"src": "18202:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18180:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2574_storage",
														"typeString": "struct Storage.monthlyRoyaltyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18138:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "18286:24:8",
															"subExpression": {
																"expression": {
																	"id": 3199,
																	"name": "userRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3193,
																	"src": "18287:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2574_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																	}
																},
																"id": 3200,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18299:11:8",
																"memberName": "isQualified",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2573,
																"src": "18287:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c7265616479205175616c6966696564",
															"id": 3202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18312:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															},
															"value": "already Qualified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															}
														],
														"id": 3198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18278:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18278:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3204,
												"nodeType": "ExpressionStatement",
												"src": "18278:54:8"
											},
											{
												"assignments": [
													3206
												],
												"declarations": [
													{
														"constant": false,
														"id": 3206,
														"mutability": "mutable",
														"name": "nowTime",
														"nameLocation": "18350:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 3234,
														"src": "18345:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3205,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "18345:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3209,
												"initialValue": {
													"expression": {
														"id": 3207,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "18360:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 3208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "18366:9:8",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "18360:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18345:30:8"
											},
											{
												"expression": {
													"id": 3214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3210,
															"name": "userRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3193,
															"src": "18423:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2574_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
															}
														},
														"id": 3212,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "18435:8:8",
														"memberName": "joinTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2563,
														"src": "18423:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3213,
														"name": "nowTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3206,
														"src": "18446:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18423:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3215,
												"nodeType": "ExpressionStatement",
												"src": "18423:30:8"
											},
											{
												"expression": {
													"id": 3220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3216,
															"name": "userRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3193,
															"src": "18464:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2574_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
															}
														},
														"id": 3218,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "18476:16:8",
														"memberName": "qualifiedRoundId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2565,
														"src": "18464:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3219,
														"name": "_roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3124,
														"src": "18495:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18464:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3221,
												"nodeType": "ExpressionStatement",
												"src": "18464:39:8"
											},
											{
												"expression": {
													"id": 3226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3222,
															"name": "userRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3193,
															"src": "18514:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2574_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
															}
														},
														"id": 3224,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "18526:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2573,
														"src": "18514:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18540:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "18514:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3227,
												"nodeType": "ExpressionStatement",
												"src": "18514:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3229,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3124,
															"src": "18589:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3230,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3122,
															"src": "18599:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3231,
															"name": "nowTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3206,
															"src": "18608:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3228,
														"name": "MonthlyRoyaltyQualified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2626,
														"src": "18565:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 3232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18565:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3233,
												"nodeType": "EmitStatement",
												"src": "18560:56:8"
											}
										]
									},
									"id": 3235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_monthlyRoyaltyQualifier",
									"nameLocation": "17435:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "17465:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3235,
												"src": "17460:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3121,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17460:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "17479:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3235,
												"src": "17474:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3123,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17474:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17459:29:8"
									},
									"returnParameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17497:0:8"
									},
									"scope": 3371,
									"src": "17426:1198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3254,
										"nodeType": "Block",
										"src": "18708:145:8",
										"statements": [
											{
												"condition": {
													"id": 3246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18727:39:8",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 3242,
																"name": "topRoyaltyUserdtl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2680,
																"src": "18728:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyaltyUser_$2667_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.topRoyaltyUser storage ref)"
																}
															},
															"id": 3244,
															"indexExpression": {
																"id": 3243,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3237,
																"src": "18746:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18728:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyaltyUser_$2667_storage",
																"typeString": "struct Storage.topRoyaltyUser storage ref"
															}
														},
														"id": 3245,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18755:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2666,
														"src": "18728:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3253,
												"nodeType": "IfStatement",
												"src": "18723:123:8",
												"trueBody": {
													"id": 3252,
													"nodeType": "Block",
													"src": "18768:78:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3248,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3237,
																		"src": "18812:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3249,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3239,
																		"src": "18821:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3247,
																	"name": "_topRoyaltyQualifier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3370,
																	"src": "18791:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 3250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18791:39:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3251,
															"nodeType": "ExpressionStatement",
															"src": "18791:39:8"
														}
													]
												}
											}
										]
									},
									"id": 3255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryTopRoyaltyQualify",
									"nameLocation": "18649:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3237,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "18676:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3255,
												"src": "18671:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3236,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18671:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3239,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "18690:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3255,
												"src": "18685:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3238,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18685:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18670:29:8"
									},
									"returnParameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18708:0:8"
									},
									"scope": 3371,
									"src": "18640:213:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3369,
										"nodeType": "Block",
										"src": "18928:1098:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3263,
																"name": "_roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3259,
																"src": "18962:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3264,
																"name": "topRoyaltyRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2629,
																"src": "18974:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18962:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726f756e64",
															"id": 3266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18991:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															},
															"value": "Invalid round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															}
														],
														"id": 3262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18954:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18954:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3268,
												"nodeType": "ExpressionStatement",
												"src": "18954:53:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "19026:31:8",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3270,
																		"name": "topRoyaltydtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2672,
																		"src": "19027:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyalty_$2654_storage_$",
																			"typeString": "mapping(uint256 => struct Storage.topRoyalty storage ref)"
																		}
																	},
																	"id": 3272,
																	"indexExpression": {
																		"id": 3271,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3259,
																		"src": "19041:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19027:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_topRoyalty_$2654_storage",
																		"typeString": "struct Storage.topRoyalty storage ref"
																	}
																},
																"id": 3273,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19051:6:8",
																"memberName": "closed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2653,
																"src": "19027:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e6420636c6f736564",
															"id": 3275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19059:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															},
															"value": "Round closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															}
														],
														"id": 3269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19018:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19018:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3277,
												"nodeType": "ExpressionStatement",
												"src": "19018:56:8"
											},
											{
												"assignments": [
													3280
												],
												"declarations": [
													{
														"constant": false,
														"id": 3280,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "19107:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 3369,
														"src": "19094:17:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 3279,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3278,
																"name": "User",
																"nameLocations": [
																	"19094:4:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2089,
																"src": "19094:4:8"
															},
															"referencedDeclaration": 2089,
															"src": "19094:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3284,
												"initialValue": {
													"baseExpression": {
														"id": 3281,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "19114:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2089_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 3283,
													"indexExpression": {
														"id": 3282,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3257,
														"src": "19120:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19114:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2089_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19094:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3286,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3280,
																	"src": "19157:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 3287,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19162:11:8",
																"memberName": "level15Time",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2084,
																"src": "19157:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19176:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19157:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206e6f74206c6576656c203135",
															"id": 3290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19179:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a64254b203ace91c0680044017e16ce6de6a80470428d645afdde3ac237a5986",
																"typeString": "literal_string \"User not level 15\""
															},
															"value": "User not level 15"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a64254b203ace91c0680044017e16ce6de6a80470428d645afdde3ac237a5986",
																"typeString": "literal_string \"User not level 15\""
															}
														],
														"id": 3285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19149:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19149:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3292,
												"nodeType": "ExpressionStatement",
												"src": "19149:50:8"
											},
											{
												"assignments": [
													3294
												],
												"declarations": [
													{
														"constant": false,
														"id": 3294,
														"mutability": "mutable",
														"name": "withinTime",
														"nameLocation": "19215:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 3369,
														"src": "19210:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3293,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "19210:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3302,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3295,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3280,
															"src": "19228:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 3296,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19233:11:8",
														"memberName": "level15Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2084,
														"src": "19228:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3297,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3280,
																"src": "19248:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 3298,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19253:16:8",
															"memberName": "registrationTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2080,
															"src": "19248:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 3299,
															"name": "TOP_ROYALTY_TIME",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "19272:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19248:40:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19228:60:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19210:78:8"
											},
											{
												"assignments": [
													3304
												],
												"declarations": [
													{
														"constant": false,
														"id": 3304,
														"mutability": "mutable",
														"name": "qualifiedByLevel",
														"nameLocation": "19304:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 3369,
														"src": "19299:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3303,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "19299:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3309,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3305,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3280,
															"src": "19323:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 3306,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19328:5:8",
														"memberName": "level",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2058,
														"src": "19323:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 3307,
														"name": "TOP_ROYALTY_LEVEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "19337:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19323:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19299:55:8"
											},
											{
												"assignments": [
													3311
												],
												"declarations": [
													{
														"constant": false,
														"id": 3311,
														"mutability": "mutable",
														"name": "qualifiedByDirects",
														"nameLocation": "19370:18:8",
														"nodeType": "VariableDeclaration",
														"scope": 3369,
														"src": "19365:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3310,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "19365:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3316,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3312,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3280,
															"src": "19391:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2089_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 3313,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19396:21:8",
														"memberName": "topRoyaltyDirectCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2088,
														"src": "19391:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 3314,
														"name": "TOP_ROYALTY_DIRECT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "19421:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19391:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19365:74:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3318,
																	"name": "withinTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3294,
																	"src": "19458:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 3319,
																	"name": "qualifiedByLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3304,
																	"src": "19472:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "19458:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 3321,
																"name": "qualifiedByDirects",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3311,
																"src": "19492:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "19458:52:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656c696769626c65",
															"id": 3323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19512:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61a1e089173dfc78ca2944058dfe526d4bbfefdc58d29e3f537021afcab20284",
																"typeString": "literal_string \"Not eligible\""
															},
															"value": "Not eligible"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61a1e089173dfc78ca2944058dfe526d4bbfefdc58d29e3f537021afcab20284",
																"typeString": "literal_string \"Not eligible\""
															}
														],
														"id": 3317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19450:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19450:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3325,
												"nodeType": "ExpressionStatement",
												"src": "19450:77:8"
											},
											{
												"assignments": [
													3328
												],
												"declarations": [
													{
														"constant": false,
														"id": 3328,
														"mutability": "mutable",
														"name": "userRoyalty",
														"nameLocation": "19571:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 3369,
														"src": "19548:34:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_topRoyaltyUser_$2667_storage_ptr",
															"typeString": "struct Storage.topRoyaltyUser"
														},
														"typeName": {
															"id": 3327,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3326,
																"name": "topRoyaltyUser",
																"nameLocations": [
																	"19548:14:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2667,
																"src": "19548:14:8"
															},
															"referencedDeclaration": 2667,
															"src": "19548:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyaltyUser_$2667_storage_ptr",
																"typeString": "struct Storage.topRoyaltyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3332,
												"initialValue": {
													"baseExpression": {
														"id": 3329,
														"name": "topRoyaltyUserdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "19586:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyaltyUser_$2667_storage_$",
															"typeString": "mapping(uint256 => struct Storage.topRoyaltyUser storage ref)"
														}
													},
													"id": 3331,
													"indexExpression": {
														"id": 3330,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3257,
														"src": "19604:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19586:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_topRoyaltyUser_$2667_storage",
														"typeString": "struct Storage.topRoyaltyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19548:64:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "19688:24:8",
															"subExpression": {
																"expression": {
																	"id": 3334,
																	"name": "userRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3328,
																	"src": "19689:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_topRoyaltyUser_$2667_storage_ptr",
																		"typeString": "struct Storage.topRoyaltyUser storage pointer"
																	}
																},
																"id": 3335,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19701:11:8",
																"memberName": "isQualified",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2666,
																"src": "19689:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c7265616479205175616c6966696564",
															"id": 3337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19714:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															},
															"value": "already Qualified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															}
														],
														"id": 3333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19680:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19680:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3339,
												"nodeType": "ExpressionStatement",
												"src": "19680:54:8"
											},
											{
												"assignments": [
													3341
												],
												"declarations": [
													{
														"constant": false,
														"id": 3341,
														"mutability": "mutable",
														"name": "nowTime",
														"nameLocation": "19752:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 3369,
														"src": "19747:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3340,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "19747:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3344,
												"initialValue": {
													"expression": {
														"id": 3342,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "19762:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 3343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "19768:9:8",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "19762:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19747:30:8"
											},
											{
												"expression": {
													"id": 3349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3345,
															"name": "userRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3328,
															"src": "19825:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyaltyUser_$2667_storage_ptr",
																"typeString": "struct Storage.topRoyaltyUser storage pointer"
															}
														},
														"id": 3347,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19837:8:8",
														"memberName": "joinTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2656,
														"src": "19825:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3348,
														"name": "nowTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3341,
														"src": "19848:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19825:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3350,
												"nodeType": "ExpressionStatement",
												"src": "19825:30:8"
											},
											{
												"expression": {
													"id": 3355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3351,
															"name": "userRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3328,
															"src": "19866:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyaltyUser_$2667_storage_ptr",
																"typeString": "struct Storage.topRoyaltyUser storage pointer"
															}
														},
														"id": 3353,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19878:16:8",
														"memberName": "qualifiedRoundId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2658,
														"src": "19866:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3354,
														"name": "_roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3259,
														"src": "19897:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19866:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3356,
												"nodeType": "ExpressionStatement",
												"src": "19866:39:8"
											},
											{
												"expression": {
													"id": 3361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3357,
															"name": "userRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3328,
															"src": "19916:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyaltyUser_$2667_storage_ptr",
																"typeString": "struct Storage.topRoyaltyUser storage pointer"
															}
														},
														"id": 3359,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19928:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2666,
														"src": "19916:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19942:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "19916:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3362,
												"nodeType": "ExpressionStatement",
												"src": "19916:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3364,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3259,
															"src": "19991:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3365,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3257,
															"src": "20001:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3366,
															"name": "nowTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3341,
															"src": "20010:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3363,
														"name": "MonthlyRoyaltyQualified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2626,
														"src": "19967:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 3367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19967:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3368,
												"nodeType": "EmitStatement",
												"src": "19962:56:8"
											}
										]
									},
									"id": 3370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_topRoyaltyQualifier",
									"nameLocation": "18870:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3257,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "18896:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3370,
												"src": "18891:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3256,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18891:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3259,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "18910:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3370,
												"src": "18905:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3258,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18905:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18890:29:8"
									},
									"returnParameters": {
										"id": 3261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18928:0:8"
									},
									"scope": 3371,
									"src": "18861:1165:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3372,
							"src": "292:19739:8",
							"usedErrors": [],
							"usedEvents": [
								2193,
								2201,
								2211,
								2225,
								2237,
								2247,
								2255,
								2272,
								2509,
								2519,
								2527,
								2608,
								2618,
								2626,
								2701,
								2711,
								2719
							]
						}
					],
					"src": "33:19998:8"
				},
				"id": 8
			}
		}
	}
}