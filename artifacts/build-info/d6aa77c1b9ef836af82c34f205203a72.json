{
	"id": "d6aa77c1b9ef836af82c34f205203a72",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/modules/ContestRoyalty.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.30;\r\n\r\n\r\nimport \"./Storage.sol\";\r\n\r\ncontract ContestRoyalty is Storage  {\r\n\r\n    \r\n    constructor() {\r\n        currentWeeklyStartTime = block.timestamp;\r\n        currentMonthlyStartTime = block.timestamp;\r\n        topRoyaltyStartTime = block.timestamp;\r\n\r\n        WeeklyTotalReward = 0;\r\n        currentWeeklyRound = 1;\r\n\r\n        monthlyTotalReward = 0;\r\n        currentMonthlyRound = 1;    \r\n\r\n        topRoyaltyReward = 0;\r\n        topRoyaltyRound = 1;\r\n    }\r\n\r\n    function _closeTopRoyalty() internal {\r\n        \r\n        if (block.timestamp < topRoyaltyStartTime + MONTH_DURATION) return;\r\n        uint currentRound = topRoyaltyRound;\r\n        topRoyalty storage curentTopRoyalty = topRoyaltydtl[currentRound];\r\n\r\n        // Prevent double closing\r\n        // if (curentMonthRoyalty.endTime > 0 && block.timestamp < curentMonthRoyalty.endTime) {\r\n        //     return;\r\n        // }\r\n        if (curentTopRoyalty.closed) return;\r\n        uint qualifiedCount = topRoyaltyQualifiedUsers.length;\r\n        uint perUserReward;\r\n        uint distributedAmount;\r\n        uint leftover;\r\n\r\n        if (qualifiedCount > 0) {\r\n            // Calculate reward distribution              \r\n            \r\n            perUserReward = topRoyaltyReward / qualifiedCount;\r\n            distributedAmount = perUserReward * qualifiedCount;\r\n            leftover = topRoyaltyReward - distributedAmount;\r\n        } else {\r\n            // No qualified users → carry forward all\r\n            leftover = topRoyaltyReward;\r\n            distributedAmount = 0;\r\n            perUserReward = 0;\r\n        }\r\n\r\n        // Store round data\r\n        curentTopRoyalty.roundId = currentRound;\r\n        curentTopRoyalty.perUserReward = perUserReward;\r\n        curentTopRoyalty.totalUsers = qualifiedCount;\r\n        curentTopRoyalty.totalReward = topRoyaltyReward;//distributedAmount;\r\n        curentTopRoyalty.carryForward = leftover;\r\n        curentTopRoyalty.endTime = topRoyaltyStartTime + MONTH_DURATION;\r\n        curentTopRoyalty.closed = true;\r\n\r\n        // Prepare next round\r\n        topRoyaltyStartTime = curentTopRoyalty.endTime;\r\n        topRoyaltyRound = currentRound + 1;\r\n        topRoyaltyReward = leftover; // carry forward\r\n\r\n        emit TopRoyaltyClosed(currentRound, qualifiedCount, perUserReward,  distributedAmount+leftover, distributedAmount, leftover, curentTopRoyalty.endTime);\r\n        \r\n    }\r\n\r\n    function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {\r\n        monthlyRoyaltyUser storage userRoyalty = monthlyRoyaltyUserdtl[_userId];\r\n        monthlyRoyalty storage royalty = monthlyRoyaltydtl[_roundId];\r\n\r\n        if (\r\n            !royalty.closed ||\r\n            _roundId >= currentMonthlyRound ||\r\n            !userRoyalty.isQualified ||\r\n            userRoyalty.qualifiedRoundId > _roundId ||\r\n            userRoyalty.isClaimed[_roundId] ||\r\n            royalty.perUserReward == 0\r\n        ) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    \r\n    function _closeMonthlyRoyalty() internal {\r\n        \r\n        if (block.timestamp >= (currentMonthlyStartTime + MONTH_DURATION)) {\r\n            uint currentRound = currentMonthlyRound;\r\n            monthlyRoyalty storage curentMonthRoyalty = monthlyRoyaltydtl[currentRound];\r\n\r\n            // Prevent double closing\r\n            // if (curentMonthRoyalty.endTime > 0 && block.timestamp < curentMonthRoyalty.endTime) {\r\n            //     return;\r\n            // }\r\n            if (curentMonthRoyalty.closed) return;\r\n            uint qualifiedCount = monthlyQualifiedUsers.length;\r\n            uint perUserReward;\r\n            uint distributedAmount;\r\n            uint leftover;\r\n\r\n            if (qualifiedCount > 0) {\r\n                // Calculate reward distribution\r\n                uint rawReward = monthlyTotalReward / qualifiedCount;\r\n                perUserReward = (rawReward > monthlyCapping) ? monthlyCapping : rawReward;\r\n                distributedAmount = perUserReward * qualifiedCount;\r\n                leftover = (monthlyTotalReward > distributedAmount) ? monthlyTotalReward - distributedAmount : 0;\r\n            } else {\r\n                // No qualified users → carry forward all\r\n                leftover = monthlyTotalReward;\r\n                distributedAmount = 0;\r\n                perUserReward = 0;\r\n            }\r\n\r\n            // Store round data\r\n            curentMonthRoyalty.roundId = currentRound;\r\n            curentMonthRoyalty.perUserReward = perUserReward;\r\n            curentMonthRoyalty.totalUsers = qualifiedCount;\r\n            curentMonthRoyalty.totalReward = monthlyTotalReward;//distributedAmount;\r\n            curentMonthRoyalty.carryForward = leftover;\r\n            curentMonthRoyalty.endTime = currentMonthlyStartTime + MONTH_DURATION;\r\n            curentMonthRoyalty.closed = true;\r\n\r\n            // Prepare next round\r\n            currentMonthlyStartTime = curentMonthRoyalty.endTime;\r\n            currentMonthlyRound = currentRound + 1;\r\n            monthlyTotalReward = leftover; // carry forward\r\n\r\n            emit MonthlyClosed(currentRound, qualifiedCount, perUserReward,  distributedAmount+leftover, distributedAmount, leftover, curentMonthRoyalty.endTime);\r\n        }\r\n    } \r\n\r\n    function claimMonthlyContestReward(uint _userId, uint _roundId) external nonReentrant {\r\n        \r\n        User storage user = users[_userId];\r\n        address userAddress = user.account ;\r\n        require(userAddress == msg.sender, \"Not your account\");\r\n        require(_userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true && _roundId < currentMonthlyRound, \"Invalid userId or roundId or round or not closed\");\r\n        monthlyRoyaltyUser storage userRoyalty  = monthlyRoyaltyUserdtl[_userId];\r\n        monthlyRoyalty storage currentMonthRoyalty = monthlyRoyaltydtl[_roundId];\r\n\r\n        require(userRoyalty.isQualified == true, \"Not qualified \");\r\n        require(!userRoyalty.isClaimed[_roundId], \"Already claimed for this round\");\r\n        require(currentMonthRoyalty.perUserReward > 0, \"No reward to claim\");\r\n        require(currentMonthRoyalty.claimedCount < currentMonthRoyalty.totalUsers, \"All users claimed\");\r\n        require(userRoyalty.qualifiedRoundId <= _roundId, \"Not eligible to claim\");\r\n        uint amount = currentMonthRoyalty.perUserReward;\r\n  \r\n        currentMonthRoyalty.claimedCount += 1;\r\n        userRoyalty.isClaimed[_roundId] = true;\r\n        \r\n        _distributeIncome(_userId, _userId, amount, 0, IncomeType.MonthlyRoyalty);       \r\n       \r\n        emit MonthlyRewardClaim(_roundId, _userId, amount,  block.timestamp);\r\n    } \r\n\r\n    function _closeWeeklyContest() internal {\r\n        \r\n        if (block.timestamp >= (currentWeeklyStartTime + WEEK_DURATION)) {\r\n            uint currentRound = currentWeeklyRound;\r\n            WeeklyContest storage curentWeekContest = weeklyContestdtl[currentRound];\r\n\r\n            // Prevent double closing\r\n            // if (curentWeekContest.endTime > 0 && block.timestamp < curentWeekContest.endTime) {\r\n            //     return;\r\n            // }\r\n            if (curentWeekContest.closed) return;\r\n\r\n            uint qualifiedCount = weeklyQualifiedUsers[currentRound].length;\r\n            uint perUserReward;\r\n            uint distributedAmount;\r\n            uint leftover;\r\n\r\n            if (qualifiedCount > 0) {\r\n                // Calculate reward distribution\r\n                uint rawReward = WeeklyTotalReward / qualifiedCount;\r\n                perUserReward = (rawReward > WeeklyCapping) ? WeeklyCapping : rawReward;\r\n                distributedAmount = perUserReward * qualifiedCount;\r\n                leftover = (WeeklyTotalReward > distributedAmount) ? WeeklyTotalReward - distributedAmount : 0;\r\n            } else {\r\n                // No qualified users → carry forward all\r\n                leftover = WeeklyTotalReward;\r\n                distributedAmount = 0;\r\n                perUserReward = 0;\r\n            }\r\n\r\n            // Store round data\r\n            curentWeekContest.roundId = currentRound;\r\n            curentWeekContest.perUserReward = perUserReward;\r\n            curentWeekContest.totalUsers = qualifiedCount;\r\n            curentWeekContest.totalReward = WeeklyTotalReward;//distributedAmount;\r\n            curentWeekContest.carryForward = leftover;\r\n            curentWeekContest.endTime = currentWeeklyStartTime + WEEK_DURATION;\r\n            curentWeekContest.closed = true;\r\n\r\n            // Prepare next round\r\n            currentWeeklyStartTime = curentWeekContest.endTime;\r\n            currentWeeklyRound = currentRound + 1;\r\n            WeeklyTotalReward = leftover; // carry forward\r\n\r\n             emit WeeklyClosed(currentRound, qualifiedCount, perUserReward,  distributedAmount+leftover, distributedAmount, leftover, curentWeekContest.endTime);\r\n        }\r\n    }   \r\n\r\n    function claimWeeklyContestReward(uint _userId, uint _roundId) external nonReentrant {\r\n        \r\n        User storage user = users[_userId];\r\n        address userAddress = user.account ;\r\n        require(userAddress == msg.sender, \"Not your account\");\r\n        require(_userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true && _roundId < currentWeeklyRound, \"Invalid userId or roundId or round or not closed\");\r\n        weeklyUser storage weeklyuserdtl = weeklyUserdtl[_roundId][_userId];\r\n        WeeklyContest storage curentWeekContest = weeklyContestdtl[_roundId];\r\n        require(weeklyuserdtl.isQualified == true && weeklyuserdtl.isClaimed == false, \"Not qualified or already claimed\");\r\n        require(curentWeekContest.perUserReward > 0, \"No reward to claim\");\r\n        require(curentWeekContest.claimedCount < curentWeekContest.totalUsers, \"All users claimed\");\r\n\r\n        uint amount = curentWeekContest.perUserReward;\r\n  \r\n        curentWeekContest.claimedCount += 1;\r\n        weeklyuserdtl.isClaimed = true;\r\n        \r\n        _distributeIncome(_userId, _userId, amount, 0, IncomeType.WeeklyContest);       \r\n       \r\n        emit WeeklyRewardClaim(_roundId, _userId, amount,  block.timestamp);\r\n    }   \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    // --- View helper (for frontend) ---\r\n    \r\n\r\n    // Deposit funds\r\n   // receive() external payable {}\r\n}\r\n"
			},
			"contracts/modules/Storage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.30;\r\n\r\n//import \"../interfaces/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract Storage is ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n    IERC20 public usdt;\r\n    //address public owner;\r\n    address public creatorWallet;   \r\n    address public systemMaintance;\r\n    address public teamDevelopment;\r\n    uint public defaultRefId;\r\n    uint public totalUsers;\r\n    uint internal constant maxLayers = 15;\r\n\r\n    uint256 public constant PERCENTS_DIVIDER = 10000;\r\n    uint256 public constant TIME_STEP = 1 days;\r\n    uint256 public constant MONTHLY_ROYALTY = 100 days;\r\n    uint256 public constant TOP_ROYALTY = 450 days;\r\n    uint256 public constant ROI_CAP_MULTIPLIER = 15; // 1.5x\r\n    uint256 public constant ROI_CAP_DIVIDER = 10;\r\n    uint256 public constant MONTHLY_ROYALTY_LEVEL = 10;\r\n    uint256 public constant TOP_ROYALTY_LEVEL = 15;\r\n\r\n\r\n \r\n    uint[] public registeredUserIds;\r\n    uint private nonce; // add this at the top of your contract\r\n  \r\n    // Package prices in USDT (with 18 decimals)\r\n\r\n        // --- Community bonus accrual (pull-based) ---\r\n    uint256 public constant ACC_PRECISION = 1e18;\r\n    uint256 public communityAccPerUser;                 // global accumulator\r\n    mapping(uint => uint256) internal communityDebt;      // user snapshot\r\n\r\n    uint[] public packages = [\r\n        15 * 1e18,      // 15$\r\n        25 * 1e18,      // 25$\r\n        50 * 1e18,      // 50$\r\n        100 * 1e18,     // 100$\r\n        200 * 1e18,     // 200$\r\n        400 * 1e18,     // 400$\r\n        800 * 1e18,     // 800$\r\n        1600 * 1e18,    // 1600$\r\n        3200 * 1e18,    // 3200$\r\n        6400 * 1e18,    // 6400$\r\n        12800 * 1e18,   // 12800$\r\n        25600 * 1e18,   // 25600$\r\n        51200 * 1e18,   // 51200$\r\n        102400 * 1e18,  // 102400$\r\n        204800 * 1e18   // 204800$\r\n    ];\r\n\r\n        //  User struct into basic info and relationships\r\n\r\n        /*User main struct and mappings*/\r\n    struct Deposit {\r\n        uint256 amount;\r\n        uint256 withdrawn;\r\n        uint256 start; \r\n        uint8 depositType;  \r\n    }\r\n\r\n    struct User {\r\n        address account;\r\n        Deposit[] deposits;\r\n        uint256 checkpoint;\r\n        uint id;\r\n        uint sponsorId;  // Referrer\r\n        uint uplineId;   // Placement in matrix\r\n        uint level;      // Current package level (1-15)\r\n        uint directTeam; // Direct referrals count\r\n        uint directPoolQualified; // Direct referrals count in infinity pool\r\n        uint totalMatrixTeam; // Total users in matrix\r\n        uint totalDeposit;\r\n        uint poollevel;\r\n        uint poolDeposit;\r\n        uint boosterlevel;\r\n        uint boosterDeposit;\r\n        uint registrationTime;\r\n        uint level10Time;\r\n        uint level15Time;\r\n        uint monthlyUserDirectCount; // at 10 th level in 100 days\r\n        uint topRoyaltyDirectCount; // // at 15 th level in 450 days\r\n\r\n\r\n    }\r\n     // struct for bonus calc\r\n    struct UserIncome {\r\n        uint totalIncome;\r\n        uint sponsorIncome;\r\n        uint matrixIncome;\r\n        uint levelBoosterIncome;\r\n        //uint levelIncome;\r\n        uint royaltyIncome;\r\n        uint royaltyIncomeClaimed; // Track claimed royalty for capping\r\n        uint communityIncome;        // <-- NEW: total community bonus claimed\r\n        uint poolIncome;        // <-- Infinity Pool Income\r\n        uint boosterIncome;        // <-- booster Income\r\n        uint weeklyContestIncome;        // <-- weekly contest Income\r\n        uint monthlyRoyalty;        // <-- weekly contest Income\r\n        uint monthlyTopRoyalty;        // <-- weekly contest Income\r\n    }\r\n\r\n    struct Income {\r\n        uint fromUserId;\r\n        uint amount;\r\n        uint packageLevel;\r\n        uint timestamp;\r\n        uint incomeType; // 1: Sponsor, 2: Matrix, 3: Level, 4: Level Booster, 5: Creator, 6: Royalty , 7 Lottery  , 8 Roi Income, 10 Infintiy Pool, 11 Booster Income,12 weekly contest\r\n    }\r\n    enum IncomeType {\r\n        Creator,            // 0\r\n        Sponsor,            // 1\r\n        Matrix,             // 2\r\n        LevelBooster,       // 3        \r\n        Community,          // 4\r\n        Pool,               // 5\r\n        Booster,            // 6\r\n        WeeklyContest,      // 7\r\n        MonthlyRoyalty,     // 8\r\n        MonthlyTopRoyalty   // 9\r\n    }\r\n\r\n\r\n\r\n    mapping(address => uint) internal addressToId;\r\n    mapping(uint => User) internal users;\r\n    mapping(uint => UserIncome) internal userIncomes; // New mapping for income data\r\n    mapping(uint => Income[]) internal incomeHistory;\r\n    mapping(uint => mapping(uint => uint[])) internal teams; // Matrix team structure by level\r\n    mapping(uint => uint) internal matrixDirect; // Count of direct matrix referrals\r\n    mapping(uint => uint[]) internal directReferrals;\r\n\r\n    event UserJoined(uint8 indexed matrixId, uint32 indexed userId, address indexed user, uint32 parentId, address parentAddr, uint8 position);\r\n    event RewardSent(address indexed to, uint256 amount, string level);\r\n\r\n\r\n     // Events\r\n    event Registration(address indexed user, address indexed sponsor, uint indexed userId, uint uplineId);\r\n    event Upgrade(address indexed user, uint indexed userId, uint packageLevel, string depositType, uint upgradeTime);\r\n    event IncomeDistributed(address indexed to, address indexed from, uint amount, uint packageLevel, uint incomeType);\r\n    event LotteryReward(address indexed winner, uint indexed fromUserId, uint amount, uint timestamp);\r\n    event CommunityBonusDistributed(uint amount, uint usersCount, uint perUser);\r\n    event IncomeDistribution(address indexed to,address indexed from,uint256 amount,uint256 packageLevel,IncomeType incomeType,uint256 timestamp);\r\n  \r\n    // Infinity Pool and booster bonus \r\n\r\n\r\n    uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18];\r\n    uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18];\r\n    uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15];\r\n    uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11];\r\n    uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1];\r\n\r\n\r\n    struct UserPool {\r\n        uint id;               \r\n        uint mainid;\r\n        uint poolId;\r\n        uint parentId;  \r\n        uint bonusCount;            \r\n    }\r\n    \r\n    struct UserPoolTopup{\r\n         uint nextPoolAmt;       \r\n        uint reTopupAmt;     \r\n    }\r\n\r\n      // Golbal Booster\r\n    struct UserBooster {\r\n        uint id; \r\n        uint poolId;\r\n        uint parentId;  \r\n        uint bonusCount;\r\n         uint joinTime;            \r\n    }\r\n\r\n    /* mapping for Infinity Pool*/\r\n    mapping(uint =>  mapping(uint => UserPoolTopup)) internal userPooltopup;\r\n\r\n    mapping(uint =>  mapping(uint => UserPool)) internal userPooldtl;\r\n    mapping(uint => mapping(uint => uint[])) internal userChildren;// in each pool id wise\r\n    mapping(uint => mapping(uint => uint[])) internal userIdPerPool;// will store user ids pool wise\r\n    mapping(uint => uint[]) internal poolUsers; // store all users  pool wise\r\n    mapping(uint => mapping(uint => bool)) internal userHasPool; \r\n\r\n    /* mapping for Global Booster */\r\n    mapping(uint =>  mapping(uint => UserBooster)) internal userBoosterdtl;\r\n    mapping(uint =>  mapping(uint => uint[])) internal userBoosterChildren;\r\n    mapping(uint => uint[]) internal boosterUsers;  // store all users booster wise\r\n    mapping(uint => mapping(uint => bool)) internal userHasbooster; \r\n\r\n   \r\n    // weekly contest\r\n\r\n    uint public constant WEEK_DURATION = 7 days;   \r\n    uint public constant WeeklyCapping = 1000e18;\r\n \r\n\r\n    uint public currentWeeklyRound = 0;\r\n    uint public currentWeeklyStartTime = 0;  \r\n    uint public WeeklyTotalReward = 0;\r\n   \r\n\r\n\r\n    struct WeeklyContest {\r\n        uint roundId;    \r\n        uint totalReward;\r\n        uint totalUsers;\r\n        uint perUserReward;\r\n        uint claimedCount;\r\n        uint startTime;\r\n        uint endTime;\r\n        uint carryForward;\r\n        bool closed;\r\n    }\r\n   \r\n    struct weeklyUser{\r\n      \r\n        uint joinTime;\r\n        uint roundId ;\r\n        uint claimTime;\r\n        bool isClaimed; \r\n        bool isQualified;\r\n    }\r\n    mapping (uint => WeeklyContest) internal weeklyContestdtl;// details of weekly contest\r\n    mapping(uint=> uint[]) weeklyQualifiedUsers; // qualifieduserweekly\r\n    mapping(uint => mapping(uint => weeklyUser)) internal weeklyUserdtl;// details of weekly user))\r\n    mapping(uint => mapping(uint => uint[])) internal weeklyUserDirects;//details users direct in current weekly round\r\n    event WeeklyClosed(uint roundId, uint totalUsers, uint perUserReward, uint totalReward, uint totalDistributed, uint leftoverReward, uint endTime);\r\n    event WeeklyRewardClaim(uint roundId, uint userId, uint perUserReward,  uint claimTime);\r\n    event WeeklyContestQualified(uint roundId, uint userId, uint joinTime);\r\n\r\n    //, monthly royalty and top royalty\r\n\r\n    \r\n    uint public constant MONTH_DURATION = 30 days;\r\n    uint public constant monthlyCapping = 10000e18;\r\n\r\n  \r\n    uint public currentMonthlyRound = 1;\r\n    uint public currentMonthlyStartTime = 0;\r\n    uint public monthlyTotalReward = 0;\r\n\r\n    struct monthlyRoyalty {\r\n        uint roundId;    \r\n        uint totalReward;\r\n        uint totalUsers;\r\n        uint perUserReward;\r\n        uint claimedCount;\r\n        uint startTime;\r\n        uint endTime;\r\n        uint carryForward;\r\n        bool closed;\r\n    }\r\n\r\n    struct monthlyRoyaltyUser{\r\n      \r\n        uint joinTime;\r\n        uint qualifiedRoundId ;\r\n        uint claimTime;\r\n        mapping(uint => bool) isClaimed; \r\n        bool isQualified;\r\n    }\r\n    mapping (uint => monthlyRoyalty) internal monthlyRoyaltydtl;// details of monthly royalty\r\n    uint[] monthlyQualifiedUsers; // qualified user monthly royalty\r\n    mapping(uint => monthlyRoyaltyUser) internal monthlyRoyaltyUserdtl;\r\n    mapping(uint => uint[]) internal monthlyUserDirects;//details users direct in monthly Royalty at 10th level\r\n\r\n    event MonthlyClosed(uint roundId, uint totalUsers, uint perUserReward, uint totalReward, uint totalDistributed, uint leftoverReward, uint endTime);\r\n    event MonthlyRewardClaim(uint roundId, uint userId, uint perUserReward,  uint claimTime);\r\n    event MonthlyRoyaltyQualified(uint roundId, uint userId, uint joinTime);\r\n\r\n      //, Top royalty\r\n  \r\n    uint public topRoyaltyRound = 1;\r\n    uint public topRoyaltyStartTime = 0;\r\n    uint public topRoyaltyReward = 0;\r\n\r\n    struct topRoyalty {\r\n        uint roundId;    \r\n        uint totalReward;\r\n        uint totalUsers;\r\n        uint perUserReward;\r\n        uint claimedCount;\r\n        uint startTime;\r\n        uint endTime;\r\n        uint carryForward;\r\n        bool closed;\r\n    }\r\n\r\n    struct topRoyaltyUser{\r\n      \r\n        uint joinTime;\r\n        uint qualifiedRoundId ;\r\n        uint claimTime;\r\n        mapping(uint => bool) isClaimed; \r\n        bool isQualified;\r\n    }\r\n    mapping (uint => topRoyalty) internal topRoyaltydtl;// details of top royalty contest\r\n    uint[] topRoyaltyQualifiedUsers; // qualified user top royalty\r\n    mapping(uint => topRoyaltyUser) internal topRoyaltyUserdtl;\r\n    mapping(uint => uint[]) internal topRoyaltyUserDirects;//details users direct in top Royalty at 15th level\r\n\r\n    event TopRoyaltyClosed(uint roundId, uint totalUsers, uint perUserReward, uint totalReward, uint totalDistributed, uint leftoverReward, uint endTime);\r\n    event TopRoyaltyRewardClaim(uint roundId, uint userId, uint perUserReward,  uint claimTime);\r\n    event TopRoyaltyQualified(uint roundId, uint userId, uint joinTime);\r\n\r\n\r\n\r\n   \r\n    constructor() {\r\n       \r\n    }\r\n      \r\n    \r\n\r\n    function _sendToCreator(uint _amount) internal {\r\n    require(creatorWallet != address(0),\"fee addrs not set\");\r\n    // 100% split to creator\r\n    \r\n    // Send dust to creator (you can pick any bucket)\r\n    usdt.safeTransfer(creatorWallet, _amount);\r\n  \r\n\r\n    // Bookkeeping for the full routed amount\r\n    UserIncome storage creatorIncome = userIncomes[defaultRefId];\r\n    creatorIncome.totalIncome += _amount;\r\n\r\n    // incomeHistory[defaultRefId].push(Income({\r\n    //     fromUserId: 0,\r\n    //     amount: _amount,\r\n    //     packageLevel: 0,\r\n    //     timestamp: block.timestamp,\r\n    //     incomeType: 5\r\n    // }));\r\n    emit IncomeDistribution(creatorWallet, creatorWallet, _amount, 0, IncomeType.Creator, block.timestamp );\r\n}\r\n\r\n\r\n    function _distributeIncome(uint _userId,uint _fromUserId,uint _amount, uint _packageLevel, IncomeType _incomeType) internal {\r\n        User storage user = users[_userId];\r\n        address userAddress = user.account;\r\n        require(userAddress != address(0), \"Invalid user\");\r\n        require(_amount > 0, \"Zero amount\");\r\n\r\n\r\n        // Transfer tokens\r\n        //usdt.safeTransfer(userAddress, _amount);\r\n    //( userAddress, _amount);\r\n\r\n        UserIncome storage income = userIncomes[_userId];\r\n        income.totalIncome += _amount;\r\n            // --- Update specific income field based on type ---\r\n        if      (_incomeType == IncomeType.Sponsor) income.sponsorIncome += _amount;\r\n        else if (_incomeType == IncomeType.Matrix) income.matrixIncome += _amount;\r\n        else if (_incomeType == IncomeType.LevelBooster) income.levelBoosterIncome += _amount;  \r\n        else if (_incomeType == IncomeType.Community) income.communityIncome += _amount;   \r\n        else if (_incomeType == IncomeType.Pool) income.poolIncome += _amount;\r\n        else if (_incomeType == IncomeType.Booster) income.boosterIncome += _amount;\r\n        else if (_incomeType == IncomeType.WeeklyContest) income.weeklyContestIncome += _amount;\r\n        else if (_incomeType == IncomeType.MonthlyRoyalty) income.monthlyRoyalty += _amount;\r\n        else if (_incomeType == IncomeType.MonthlyTopRoyalty) income.monthlyTopRoyalty += _amount;\r\n\r\n        \r\n\r\n        else revert(\"Unknown income type\");\r\n    \r\n            // --- Update total income ---\r\n        \r\n\r\n        // Record income in user history\r\n        // incomeHistory[_userId].push(Income({\r\n        //     fromUserId: _fromUserId,\r\n        //     amount: _amount,\r\n        //     packageLevel: _packageLevel,\r\n        //     timestamp: block.timestamp,\r\n        //     incomeType: _incomeType\r\n        // }));\r\n        //usdt.transfer(userAddress, _amount);\r\n    \r\n        usdt.safeTransfer(userAddress, _amount);\r\n        emit IncomeDistribution(userAddress, users[_fromUserId].account, _amount,_packageLevel, _incomeType, block.timestamp );\r\n        //emit IncomeDistributed(userAddress, users[_fromUserId].account, _amount, _packageLevel, _incomeType);\r\n    }\r\n\r\n    function _tryWeeklyContestQualify(uint _userId, uint _roundId)internal {\r\n            if (!weeklyUserdtl[_roundId][_userId].isQualified) {\r\n                    _weeklyContestQualifier(_userId, _roundId);\r\n            }\r\n    }\r\n\r\n    function _weeklyContestQualifier(uint _userId, uint _roundId)internal {\r\n       \r\n       // uint currentRound = currentWeeklyRound;        \r\n        require(_roundId == currentWeeklyRound, \"Invalid round\");\r\n        require(!weeklyContestdtl[_roundId].closed, \"Round closed\");\r\n        UserBooster memory userBoosterJoinDtl = userBoosterdtl[1][_userId];\r\n\r\n        bool hasEnoughDirects = weeklyUserDirects[_roundId][_userId].length >= 5;\r\n        bool boosterEarlyJoin = (\r\n            userBoosterJoinDtl.id == _userId && \r\n            userBoosterJoinDtl.joinTime <= users[_userId].registrationTime + TIME_STEP\r\n        );\r\n        require(hasEnoughDirects || boosterEarlyJoin, \"Not eligible for weekly contest\");\r\n        //require(weeklyUserDirects[currentRound][_userId].length >=5 ||  (userBoosterJoinDtl.id == _userId && userBoosterJoinDtl.joinTime <= users[_userId].registrationTime + TIME_STEP), \"not eligible\"); // (userBoosterJoinDtl.id = _userId && userBoosterJoinDtl.joinTime <= users[_userId].registrationTime)\r\n        \r\n        weeklyUser storage weeklyuserdtl = weeklyUserdtl[_roundId][_userId];\r\n        if (weeklyuserdtl.isQualified) return;\r\n        require(!weeklyuserdtl.isQualified, \"already Qualified\");\r\n\r\n        uint nowTime = block.timestamp;\r\n\r\n        weeklyuserdtl.joinTime = nowTime;\r\n        weeklyuserdtl.roundId = _roundId;\r\n        weeklyuserdtl.isQualified = true;\r\n   \r\n        emit WeeklyContestQualified(_roundId, _userId, nowTime);\r\n    }\r\n\r\n    function _tryMonthlyRoyaltyQualify(uint _userId, uint _roundId)internal {\r\n            if (!monthlyRoyaltyUserdtl[_userId].isQualified) {\r\n                    _monthlyRoyaltyQualifier(_userId, _roundId);\r\n            }\r\n    }\r\n\r\n    function _monthlyRoyaltyQualifier(uint _userId, uint _roundId)internal {      \r\n       \r\n        require(_roundId == currentMonthlyRound, \"Invalid round\");\r\n        require(!monthlyRoyaltydtl[_roundId].closed, \"Round closed\");\r\n       \r\n        User storage user = users[_userId];        \r\n\r\n        require(user.level10Time > 0, \"User not level 10\");\r\n        bool withinTime = user.level10Time <= user.registrationTime + MONTHLY_ROYALTY;\r\n        bool qualifiedByLevel = user.level >= 10;\r\n        bool qualifiedByDirects = user.monthlyUserDirectCount >= 5;\r\n        require(withinTime && qualifiedByLevel && qualifiedByDirects, \"Not eligible\");\r\n        \r\n        monthlyRoyaltyUser storage userRoyalty  = monthlyRoyaltyUserdtl[_userId];\r\n       \r\n        //if (userRoyalty.isQualified) return;\r\n        require(!userRoyalty.isQualified, \"already Qualified\");\r\n\r\n        uint nowTime = block.timestamp;\r\n        //userRoyalty.id = _userId;\r\n        userRoyalty.joinTime = nowTime;\r\n        userRoyalty.qualifiedRoundId = _roundId;\r\n        userRoyalty.isQualified = true;\r\n   \r\n        emit MonthlyRoyaltyQualified(_roundId, _userId, nowTime);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x1E 0x1F JUMPI REVERT PUSH27 0x408F714C9BCBFCFA134ECF359ACED058BF4DF923CAED95D0DDF564 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x1E 0x1F JUMPI REVERT PUSH27 0x408F714C9BCBFCFA134ECF359ACED058BF4DF923CAED95D0DDF564 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "698:9376:5:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "library_deploy_address"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/modules/ContestRoyalty.sol",
								"contracts/modules/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/ContestRoyalty.sol": {
				"ContestRoyalty": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usersCount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUser",
									"type": "uint256"
								}
							],
							"name": "CommunityBonusDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "incomeType",
									"type": "uint256"
								}
							],
							"name": "IncomeDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum Storage.IncomeType",
									"name": "incomeType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "IncomeDistribution",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromUserId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LotteryReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyRewardClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyRoyaltyQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sponsor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "uplineId",
									"type": "uint256"
								}
							],
							"name": "Registration",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "level",
									"type": "string"
								}
							],
							"name": "RewardSent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyRewardClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "depositType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "upgradeTime",
									"type": "uint256"
								}
							],
							"name": "Upgrade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint8",
									"name": "matrixId",
									"type": "uint8"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "userId",
									"type": "uint32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "parentId",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "parentAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "position",
									"type": "uint8"
								}
							],
							"name": "UserJoined",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyContestQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyRewardClaim",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACC_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY_LEVEL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTH_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERCENTS_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TIME_STEP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY_LEVEL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WEEK_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_roundId",
									"type": "uint256"
								}
							],
							"name": "canClaimMonthlyReward",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_roundId",
									"type": "uint256"
								}
							],
							"name": "claimMonthlyContestReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_roundId",
									"type": "uint256"
								}
							],
							"name": "claimWeeklyContestReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "communityAccPerUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creatorWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultRefId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "glbBoosterPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minPoolForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "packages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "registeredUserIds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "systemMaintance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamDevelopment",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_4, callvalue)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sstore\n  mload(0x40)\n  0x01e0\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup3\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n    /* \"contracts/modules/Storage.sol\":1544:1553  15 * 1e18 */\n  0xd02ab486cedc0000\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1576:1585  25 * 1e18 */\n  0x015af1d78b58c40000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1608:1617  50 * 1e18 */\n  0x02b5e3af16b1880000\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1640:1650  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x60\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1673:1683  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x80\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1706:1716  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xa0\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1739:1749  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xc0\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1772:1783  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xe0\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1806:1817  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0100\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1840:1851  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0120\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1874:1886  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0140\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1909:1921  25600 * 1e18 */\n  0x056bc75e2d6310000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0160\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1944:1956  51200 * 1e18 */\n  0x0ad78ebc5ac620000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0180\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1979:1992  102400 * 1e18 */\n  0x15af1d78b58c40000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x01a0\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2015:2028  204800 * 1e18 */\n  0x2b5e3af16b1880000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x01c0\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0b\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0f\n  0x0b\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0f\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  lt\n  tag_8\n  jumpi\ntag_9:\n  pop\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\ntag_10:\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0f\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  dup2\n  lt\n  tag_11\n  jumpi\n  tag_13\n  tag_1\n  jump\t// in\ntag_13:\n    /* \"contracts/modules/Storage.sol\":6018:6023  75e18 */\n  0x0410d586a20a4c0000\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":6025:6031  300e18 */\n  0x1043561a8829300000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6033:6040  1200e18 */\n  0x410d586a20a4c00000\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6042:6049  4800e18 */\n  0x01043561a88293000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6051:6059  19200e18 */\n  0x0410d586a20a4c000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6061:6069  76800e18 */\n  0x1043561a882930000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6071:6080  307200e18 */\n  0x410d586a20a4c0000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n  0x13\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  lt\n  tag_14\n  jumpi\ntag_15:\n  pop\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\ntag_16:\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  dup2\n  lt\n  tag_17\n  jumpi\n  tag_19\n  tag_2\n  jump\t// in\ntag_19:\n    /* \"contracts/modules/Storage.sol\":1640:1650  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1673:1683  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1706:1716  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1739:1749  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1772:1783  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1806:1817  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1840:1851  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1874:1886  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n  0x14\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  lt\n  tag_20\n  jumpi\ntag_21:\n  pop\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\ntag_22:\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  dup2\n  lt\n  tag_23\n  jumpi\n  tag_25\n  tag_1\n  jump\t// in\ntag_25:\n    /* \"contracts/modules/Storage.sol\":6234:6235  3 */\n  0x03\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6233:6257  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6233:6257  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6243:6244  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6233:6257  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0b\n  0x80\n    /* \"contracts/modules/Storage.sol\":6233:6257  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6250:6252  13 */\n  0x0d\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6233:6257  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0f\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6233:6257  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\ntag_26:\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  dup2\n  lt\n  tag_27\n  jumpi\n  tag_29\n  tag_2\n  jump\t// in\ntag_29:\n    /* \"contracts/modules/Storage.sol\":6304:6305  4 */\n  0x04\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6310:6311  6 */\n  0x06\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6243:6244  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6322:6324  10 */\n  0x0a\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0b\n  0xe0\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\ntag_30:\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  dup2\n  lt\n  tag_31\n  jumpi\n  tag_33\n  tag_2\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\ntag_34:\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  dup2\n  lt\n  tag_35\n  jumpi\n    /* \"contracts/modules/ContestRoyalty.sol\":191:206  block.timestamp */\n  timestamp\n    /* \"contracts/modules/Storage.sol\":7971:7972  0 */\n  0x37\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sstore\n    /* \"contracts/modules/ContestRoyalty.sol\":191:206  block.timestamp */\n  timestamp\n    /* \"contracts/modules/Storage.sol\":9421:9422  0 */\n  0x3e\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sstore\n    /* \"contracts/modules/ContestRoyalty.sol\":191:206  block.timestamp */\n  timestamp\n    /* \"contracts/modules/Storage.sol\":10723:10724  0 */\n  0x45\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8013:8014  0 */\n  0x38\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":7926:7927  0 */\n  0x36\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":9462:9463  0 */\n  0x3f\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":9375:9376  1 */\n  0x3d\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":10762:10763  0 */\n  0x46\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":10681:10682  1 */\n  0x44\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_35:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  0x24\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  add\n  sstore\n  add\n  jump(tag_34)\ntag_31:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  0x1c\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  add\n  sstore\n  add\n  jump(tag_30)\ntag_27:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":6233:6257  [3, 5, 7, 9, 11, 13, 15] */\n  0x15\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  add\n  sstore\n  add\n  jump(tag_26)\ntag_23:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  add\n  jump(tag_22)\ntag_20:\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n  tag_37\n  swap1\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec\n  add\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f4\n  tag_3\n  jump\t// in\ntag_37:\n  dup2\n  jump(tag_21)\ntag_17:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  add\n  jump(tag_16)\ntag_14:\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n  tag_38\n  swap1\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090\n  add\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a097\n  tag_3\n  jump\t// in\ntag_38:\n  dup2\n  jump(tag_15)\ntag_11:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  add\n  jump(tag_10)\ntag_8:\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n  tag_39\n  swap1\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n  add\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc8\n  tag_3\n  jump\t// in\ntag_39:\n  0x00\n  jump(tag_9)\ntag_6:\n  shl(0xe0, 0x4e487b71)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  mstore\n  mstore(0x04, 0x41)\n  0x24\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n  revert\ntag_4:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap1\n  0xe0\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  mload(0x40)\n  swap1\n  0x0100\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_3:\n  dup2\n  dup2\n  lt\n  tag_45\n  jumpi\n  pop\n  pop\n  jump\t// out\ntag_45:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_3)\nstop\n\nsub_0: assembly {\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_12, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_12:\n      0x00\n      swap1\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01c234a8\n      eq\n      tag_14\n      jumpi\n      pop\n      dup1\n      0x16298056\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x2132d204\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x2350268f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x23fd338e\n      eq\n      tag_44\n      jumpi\n      dup1\n      0x2a891534\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x2ae0ee0d\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x3080b5bc\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x32bc298c\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x32fcd966\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x375b43b4\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x39ab3603\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x4b8cbf9b\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x4c2215e3\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x58c7d352\n      eq\n      tag_44\n      jumpi\n      dup1\n      0x5b62d1d5\n      eq\n      tag_46\n      jumpi\n      dup1\n      0x76f5f700\n      eq\n      tag_48\n      jumpi\n      dup1\n      0x78f6ad6d\n      eq\n      tag_50\n      jumpi\n      dup1\n      0x7cdc65f2\n      eq\n      tag_52\n      jumpi\n      dup1\n      0x7d846e38\n      eq\n      tag_54\n      jumpi\n      dup1\n      0x7dd2b847\n      eq\n      tag_56\n      jumpi\n      dup1\n      0x956a3228\n      eq\n      tag_58\n      jumpi\n      dup1\n      0x9b40ab97\n      eq\n      tag_60\n      jumpi\n      dup1\n      0xa59d17d1\n      eq\n      tag_62\n      jumpi\n      dup1\n      0xae4708dc\n      eq\n      tag_64\n      jumpi\n      dup1\n      0xbff1f9e1\n      eq\n      tag_66\n      jumpi\n      dup1\n      0xc216212a\n      eq\n      tag_68\n      jumpi\n      dup1\n      0xc8df2908\n      eq\n      tag_70\n      jumpi\n      dup1\n      0xc9ed0708\n      eq\n      tag_72\n      jumpi\n      dup1\n      0xca8e9121\n      eq\n      tag_74\n      jumpi\n      dup1\n      0xd0a2fd79\n      eq\n      tag_76\n      jumpi\n      dup1\n      0xe898fc38\n      eq\n      tag_78\n      jumpi\n      dup1\n      0xe9e34a16\n      eq\n      tag_80\n      jumpi\n      dup1\n      0xebe0ff15\n      eq\n      tag_82\n      jumpi\n      dup1\n      0xec597e6f\n      eq\n      tag_84\n      jumpi\n      dup1\n      0xf5d74d93\n      eq\n      tag_86\n      jumpi\n      dup1\n      0xf63a6861\n      eq\n      tag_88\n      jumpi\n      0xfddc806f\n      eq\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n        /* \"contracts/modules/Storage.sol\":7934:7972  uint public currentWeeklyStartTime = 0 */\n      0x37\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_94:\n      dup1\n      revert\n    tag_88:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":786:794  100 days */\n      0x83d600\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_86:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      sload(0x04)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_84:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n        /* \"contracts/modules/Storage.sol\":534:558  uint public defaultRefId */\n      0x05\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_82:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":7874:7881  1000e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_80:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n        /* \"contracts/modules/Storage.sol\":460:490  address public systemMaintance */\n      0x03\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_78:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n        /* \"contracts/modules/Storage.sol\":9383:9422  uint public currentMonthlyStartTime = 0 */\n      0x3e\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_76:\n      pop\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":6264:6328  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      dup2\n      lt\n      iszero\n      tag_124\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      swap2\n      pop\n        /* \"contracts/modules/Storage.sol\":6264:6328  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      0x1c\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n        /* \"contracts/modules/Storage.sol\":6264:6328  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n    tag_124:\n      pop\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup1\n      revert\n    tag_74:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n        /* \"contracts/modules/Storage.sol\":7893:7927  uint public currentWeeklyRound = 0 */\n      0x36\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_72:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n        /* \"contracts/modules/Storage.sol\":9341:9376  uint public currentMonthlyRound = 1 */\n      0x3d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_70:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":9320:9328  10000e18 */\n      0x021e19e0c9bab2400000\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_68:\n      pop\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n        /* \"contracts/modules/Storage.sol\":1508:2048  uint[] public packages = [... */\n      0x0b\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":1508:2048  uint[] public packages = [... */\n      dup3\n      lt\n      iszero\n      tag_94\n      jumpi\n      0x0b\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      dup3\n      lt\n      iszero\n      tag_144\n      jumpi\n      0x20\n      swap2\n        /* \"contracts/modules/Storage.sol\":1508:2048  uint[] public packages = [... */\n      0x0b\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup3\n      mstore\n      dup3\n      dup3\n      keccak256\n      add\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_144:\n      shl(0xe0, 0x4e487b71)\n      dup2\n      mstore\n      mstore(0x04, 0x32)\n      0x24\n      swap1\n      revert\n    tag_66:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n        /* \"contracts/modules/Storage.sol\":565:587  uint public totalUsers */\n      0x06\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_64:\n      pop\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n        /* \"contracts/modules/Storage.sol\":5988:6081  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x13\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":5988:6081  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      dup3\n      lt\n      iszero\n      tag_94\n      jumpi\n      0x13\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      dup3\n      lt\n      iszero\n      tag_144\n      jumpi\n      0x20\n      swap2\n        /* \"contracts/modules/Storage.sol\":5988:6081  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x13\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup3\n      mstore\n      dup3\n      dup3\n      keccak256\n      add\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_62:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n        /* \"contracts/modules/Storage.sol\":9429:9463  uint public monthlyTotalReward = 0 */\n      0x3f\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_60:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n        /* \"contracts/modules/Storage.sol\":10689:10724  uint public topRoyaltyStartTime = 0 */\n      0x45\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_58:\n      pop\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":6335:6396  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      dup2\n      lt\n      iszero\n      tag_124\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      swap2\n      pop\n        /* \"contracts/modules/Storage.sol\":6335:6396  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      0x24\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_56:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":839:847  450 days */\n      0x02514300\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_54:\n      pop\n      jumpi(tag_94, callvalue)\n      0x20\n      tag_178\n      tag_179\n      calldatasize\n      tag_1\n      jump\t// in\n    tag_179:\n      swap1\n      tag_10\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_52:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n        /* \"contracts/modules/Storage.sol\":422:450  address public creatorWallet */\n      0x02\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_50:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n        /* \"contracts/modules/Storage.sol\":1351:1385  uint256 public communityAccPerUser */\n      0x09\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_48:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":7821:7827  7 days */\n      0x093a80\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_46:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n        /* \"contracts/modules/Storage.sol\":10731:10763  uint public topRoyaltyReward = 0 */\n      0x46\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_44:\n      tag_2\n      jump\t// in\n    tag_42:\n      pop\n      jumpi(tag_94, callvalue)\n      tag_198\n      calldatasize\n      tag_1\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      swap2\n      swap1\n      tag_199\n      tag_11\n      jump\t// in\n    tag_199:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup1\n      dup3\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":5437:5442  users */\n      0x0d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":5508:5562  require(userAddress == msg.sender, \"Not your account\") */\n      tag_200\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x40\n      dup5\n      keccak256\n      sload\n      and\n        /* \"contracts/modules/ContestRoyalty.sol\":5531:5541  msg.sender */\n      caller\n        /* \"contracts/modules/ContestRoyalty.sol\":5516:5541  userAddress == msg.sender */\n      eq\n        /* \"contracts/modules/ContestRoyalty.sol\":5508:5562  require(userAddress == msg.sender, \"Not your account\") */\n      tag_4\n      jump\t// in\n    tag_200:\n        /* \"contracts/modules/ContestRoyalty.sol\":5581:5592  _userId > 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":5581:5608  _userId > 0 && _roundId > 0 */\n      dup1\n      tag_201\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n    tag_202:\n        /* \"contracts/modules/ContestRoyalty.sol\":5581:5654  _userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true */\n      dup1\n      tag_203\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n    tag_204:\n        /* \"contracts/modules/ContestRoyalty.sol\":5581:5688  _userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true && _roundId < currentMonthlyRound */\n      dup1\n      tag_205\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n    tag_206:\n        /* \"contracts/modules/ContestRoyalty.sol\":5573:5741  require(_userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true && _roundId < currentMonthlyRound, \"Invalid userId or roundId or round or not closed\") */\n      tag_207\n      swap1\n      tag_5\n      jump\t// in\n    tag_207:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup1\n      dup3\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":5794:5815  monthlyRoyaltyUserdtl */\n      0x42\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n      swap2\n      dup4\n      dup2\n      mstore\n      mstore(0x20, 0x40)\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/modules/ContestRoyalty.sol\":5928:5951  userRoyalty.isQualified */\n      swap3\n        /* \"contracts/modules/ContestRoyalty.sol\":5955:5959  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0xff\n      0x04\n        /* \"contracts/modules/ContestRoyalty.sol\":5928:5951  userRoyalty.isQualified */\n      dup4\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      and\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":5928:5959  userRoyalty.isQualified == true */\n      sub\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      tag_208\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":5998:6019  userRoyalty.isClaimed */\n      0x03\n      dup2\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup6\n      dup4\n      mstore\n      dup1\n      0x20\n      mstore\n      0xff\n      0x40\n      dup5\n      keccak256\n      sload\n      and\n      tag_210\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":5998:6019  userRoyalty.isClaimed */\n      0x03\n        /* \"contracts/modules/ContestRoyalty.sol\":6083:6116  currentMonthRoyalty.perUserReward */\n      dup6\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":6083:6120  currentMonthRoyalty.perUserReward > 0 */\n      swap5\n      dup6\n      iszero\n      swap3\n        /* \"contracts/modules/ContestRoyalty.sol\":6075:6143  require(currentMonthRoyalty.perUserReward > 0, \"No reward to claim\") */\n      tag_212\n        /* \"contracts/modules/ContestRoyalty.sol\":6083:6120  currentMonthRoyalty.perUserReward > 0 */\n      dup5\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":6075:6143  require(currentMonthRoyalty.perUserReward > 0, \"No reward to claim\") */\n      tag_6\n      jump\t// in\n    tag_212:\n        /* \"contracts/modules/ContestRoyalty.sol\":6162:6194  currentMonthRoyalty.claimedCount */\n      dup8\n        /* \"contracts/modules/ContestRoyalty.sol\":5955:5959  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x04\n        /* \"contracts/modules/ContestRoyalty.sol\":6162:6194  currentMonthRoyalty.claimedCount */\n      dup5\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      swap3\n        /* \"contracts/modules/ContestRoyalty.sol\":6154:6249  require(currentMonthRoyalty.claimedCount < currentMonthRoyalty.totalUsers, \"All users claimed\") */\n      tag_213\n        /* \"contracts/modules/ContestRoyalty.sol\":6197:6227  currentMonthRoyalty.totalUsers */\n      0x02\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup6\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":6197:6227  currentMonthRoyalty.totalUsers */\n      swap7\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":6162:6227  currentMonthRoyalty.claimedCount < currentMonthRoyalty.totalUsers */\n      dup7\n      lt\n        /* \"contracts/modules/ContestRoyalty.sol\":6154:6249  require(currentMonthRoyalty.claimedCount < currentMonthRoyalty.totalUsers, \"All users claimed\") */\n      tag_7\n      jump\t// in\n    tag_213:\n        /* \"contracts/modules/ContestRoyalty.sol\":6268:6296  userRoyalty.qualifiedRoundId */\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":6268:6308  userRoyalty.qualifiedRoundId <= _roundId */\n      gt\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      tag_214\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":5955:5959  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_216\n      jumpi\n      sstore\n      dup6\n      dup4\n      mstore\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/modules/ContestRoyalty.sol\":5955:5959  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      or\n      swap1\n      sstore\n      dup5\n      dup5\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":5437:5442  users */\n      0x0d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      swap1\n      swap2\n      mstore\n      dup3\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/modules/Storage.sol\":12951:12976  userAddress != address(0) */\n      dup2\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      tag_218\n      jumpi\n      tag_220\n      jumpi\n      dup3\n      dup3\n      mstore\n        /* \"contracts/modules/Storage.sol\":13196:13207  userIncomes */\n      0x0e\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      0x0a\n      0x40\n      dup4\n      keccak256\n        /* \"contracts/modules/Storage.sol\":13227:13256  income.totalIncome += _amount */\n      tag_222\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup7\n      dup3\n      sload\n        /* \"contracts/modules/Storage.sol\":13227:13256  income.totalIncome += _amount */\n      tag_8\n      jump\t// in\n    tag_222:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup2\n      sstore\n        /* \"contracts/modules/Storage.sol\":14010:14031  income.monthlyRoyalty */\n      add\n        /* \"contracts/modules/Storage.sol\":14010:14042  income.monthlyRoyalty += _amount */\n      tag_223\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup6\n      dup3\n      sload\n        /* \"contracts/modules/Storage.sol\":14010:14042  income.monthlyRoyalty += _amount */\n      tag_8\n      jump\t// in\n    tag_223:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      swap1\n      sstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"contracts/modules/ContestRoyalty.sol\":5955:5959  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      and\n      mload(0x40)\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup2\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mstore\n      dup4\n      0x24\n      dup3\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      mstore\n      dup7\n      0x44\n      dup3\n      add\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup2\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x80\n      dup2\n      add\n      dup2\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_224\n      jumpi\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      swap2\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      swap1\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      dup6\n      gas\n      call\n      iszero\n      tag_226\n      jumpi\n      dup3\n      mload\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      pop\n      dup1\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_231\n      jumpi\n      pop\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup3\n      dup3\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":5437:5442  users */\n      0x0d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sload\n      swap1\n      mload\n      dup7\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap3\n      dup1\n      tag_233\n      jumpi\n      pop\n      swap2\n        /* \"contracts/modules/ContestRoyalty.sol\":6619:6682  MonthlyRewardClaim(_roundId, _userId, amount,  block.timestamp) */\n      0x8211032682f8fd8be8ff252e0a106cdb6ad4b10427152b4d93c2bc9a1f11c3c2\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      swap6\n      swap2\n        /* \"contracts/modules/Storage.sol\":14694:14807  IncomeDistribution(userAddress, users[_fromUserId].account, _amount,_packageLevel, _incomeType, block.timestamp ) */\n      0x0f67c60bc8519c61563ac616d368a6df646202c88d10744d736438bc4fbe2816\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x80\n      dup6\n        /* \"contracts/modules/ContestRoyalty.sol\":6561:6586  IncomeType.MonthlyRoyalty */\n      0x08\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x40\n        /* \"contracts/modules/ContestRoyalty.sol\":6619:6682  MonthlyRewardClaim(_roundId, _userId, amount,  block.timestamp) */\n      tag_235\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      swap9\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":14790:14805  block.timestamp */\n      timestamp\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":14694:14807  IncomeDistribution(userAddress, users[_fromUserId].account, _amount,_packageLevel, _incomeType, block.timestamp ) */\n      log3\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":14790:14805  block.timestamp */\n      swap4\n      dup5\n      swap4\n      timestamp\n        /* \"contracts/modules/ContestRoyalty.sol\":6619:6682  MonthlyRewardClaim(_roundId, _userId, amount,  block.timestamp) */\n      swap3\n      dup6\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      swap1\n      swap5\n      swap4\n      swap3\n      0x60\n      swap3\n      0x80\n      dup4\n      add\n      swap7\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      mstore\n      0x40\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"contracts/modules/ContestRoyalty.sol\":6619:6682  MonthlyRewardClaim(_roundId, _userId, amount,  block.timestamp) */\n    tag_235:\n      sub\n      swap1\n      log1\n        /* \"contracts/modules/ContestRoyalty.sol\":5955:5959  true */\n      0x01\n      0x00\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sstore\n      stop\n    tag_233:\n      shl(0xe0, 0x4e487b71)\n      dup2\n      mstore\n      mstore(0x04, 0x21)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      swap1\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_231:\n      shl(0xe0, 0x5274afe7)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      dup4\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x04\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      dup3\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_228:\n        /* \"contracts/modules/ContestRoyalty.sol\":5955:5959  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_230)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n    tag_226:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      returndatasize\n      dup5\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n    tag_224:\n      shl(0xe0, 0x4e487b71)\n      dup7\n      mstore\n      mstore(0x04, 0x41)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup7\n      revert\n    tag_220:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0b\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xaa, 0x16995c9bc8185b5bdd5b9d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_218:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x24b73b30b634b2103ab9b2b9)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_216:\n      shl(0xe0, 0x4e487b71)\n      dup6\n      mstore\n      mstore(0x04, 0x11)\n      0x24\n      dup6\n      revert\n    tag_214:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x4e6f7420656c696769626c6520746f20636c61696d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_210:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x416c726561647920636c61696d656420666f72207468697320726f756e640000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_208:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x95, 0x02737ba1038bab0b634b334b2b21)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/modules/ContestRoyalty.sol\":5581:5688  _userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true && _roundId < currentMonthlyRound */\n    tag_205:\n      pop\n        /* \"contracts/modules/ContestRoyalty.sol\":5669:5688  currentMonthlyRound */\n      0x3d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":5658:5688  _roundId < currentMonthlyRound */\n      dup4\n      lt\n        /* \"contracts/modules/ContestRoyalty.sol\":5581:5688  _userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true && _roundId < currentMonthlyRound */\n      jump(tag_206)\n        /* \"contracts/modules/ContestRoyalty.sol\":5581:5654  _userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true */\n    tag_203:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      pop\n      dup3\n      dup3\n      mstore\n      mstore(0x20, 0x40)\n        /* \"contracts/modules/ContestRoyalty.sol\":5650:5654  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0xff\n        /* \"contracts/modules/ContestRoyalty.sol\":5612:5646  monthlyRoyaltydtl[_roundId].closed */\n      0x08\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x40\n      dup6\n      keccak256\n        /* \"contracts/modules/ContestRoyalty.sol\":5612:5646  monthlyRoyaltydtl[_roundId].closed */\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      and\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":5612:5654  monthlyRoyaltydtl[_roundId].closed == true */\n      eq\n        /* \"contracts/modules/ContestRoyalty.sol\":5581:5654  _userId > 0 && _roundId > 0 && monthlyRoyaltydtl[_roundId].closed == true */\n      jump(tag_204)\n        /* \"contracts/modules/ContestRoyalty.sol\":5581:5608  _userId > 0 && _roundId > 0 */\n    tag_201:\n        /* \"contracts/modules/ContestRoyalty.sol\":5596:5608  _roundId > 0 */\n      pop\n      dup3\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":5581:5608  _userId > 0 && _roundId > 0 */\n      jump(tag_202)\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n    tag_40:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n        /* \"contracts/modules/Storage.sol\":10651:10682  uint public topRoyaltyRound = 1 */\n      0x44\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_38:\n      pop\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n        /* \"contracts/modules/Storage.sol\":1084:1115  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":1084:1115  uint[] public registeredUserIds */\n      dup3\n      lt\n      iszero\n      tag_94\n      jumpi\n      0x07\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      dup3\n      lt\n      iszero\n      tag_144\n      jumpi\n      0x20\n      swap2\n        /* \"contracts/modules/Storage.sol\":1084:1115  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup3\n      mstore\n      dup3\n      dup3\n      keccak256\n      add\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_36:\n      tag_3\n      jump\t// in\n    tag_34:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1340:1344  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_32:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":731:737  1 days */\n      0x015180\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_30:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n        /* \"contracts/modules/Storage.sol\":7981:8014  uint public WeeklyTotalReward = 0 */\n      0x38\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_28:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      sload(0x01)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_24:\n      pop\n      jumpi(tag_94, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_94\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":9268:9275  30 days */\n      0x278d00\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_20:\n      pop\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n        /* \"contracts/modules/Storage.sol\":6088:6193  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":6088:6193  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      dup3\n      lt\n      iszero\n      tag_94\n      jumpi\n      0x14\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      dup3\n      lt\n      iszero\n      tag_144\n      jumpi\n      0x20\n      swap2\n        /* \"contracts/modules/Storage.sol\":6088:6193  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup3\n      mstore\n      dup3\n      dup3\n      keccak256\n      add\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_18:\n      pop\n      jumpi(tag_94, callvalue)\n      jumpi(tag_94, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x07\n        /* \"contracts/modules/Storage.sol\":6200:6257  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      dup2\n      lt\n      iszero\n      tag_124\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      swap2\n      pop\n        /* \"contracts/modules/Storage.sol\":6200:6257  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      0x15\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_16:\n      jumpi(tag_282, callvalue)\n      tag_284\n      calldatasize\n      tag_1\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      swap1\n      tag_285\n      tag_11\n      jump\t// in\n    tag_285:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":9049:9054  users */\n      0x0d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":9120:9174  require(userAddress == msg.sender, \"Not your account\") */\n      tag_286\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(keccak256(0x00, 0x40))\n      and\n        /* \"contracts/modules/ContestRoyalty.sol\":9143:9153  msg.sender */\n      caller\n        /* \"contracts/modules/ContestRoyalty.sol\":9128:9153  userAddress == msg.sender */\n      eq\n        /* \"contracts/modules/ContestRoyalty.sol\":9120:9174  require(userAddress == msg.sender, \"Not your account\") */\n      tag_4\n      jump\t// in\n    tag_286:\n        /* \"contracts/modules/ContestRoyalty.sol\":9193:9204  _userId > 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":9193:9220  _userId > 0 && _roundId > 0 */\n      dup1\n      tag_287\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n    tag_288:\n        /* \"contracts/modules/ContestRoyalty.sol\":9193:9265  _userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true */\n      dup1\n      tag_289\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n    tag_290:\n        /* \"contracts/modules/ContestRoyalty.sol\":9193:9298  _userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true && _roundId < currentWeeklyRound */\n      dup1\n      tag_291\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n    tag_292:\n        /* \"contracts/modules/ContestRoyalty.sol\":9185:9351  require(_userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true && _roundId < currentWeeklyRound, \"Invalid userId or roundId or round or not closed\") */\n      tag_293\n      swap1\n      tag_5\n      jump\t// in\n    tag_293:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":9397:9410  weeklyUserdtl */\n      0x3b\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      dup3\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":9482:9498  weeklyContestdtl */\n      0x39\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":9527:9552  weeklyuserdtl.isQualified */\n      0x03\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/ContestRoyalty.sol\":9527:9552  weeklyuserdtl.isQualified */\n      swap3\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      swap2\n      dup3\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":9556:9560  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0xff\n      dup3\n      0x08\n      shr\n      and\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":9527:9560  weeklyuserdtl.isQualified == true */\n      eq\n        /* \"contracts/modules/ContestRoyalty.sol\":9527:9596  weeklyuserdtl.isQualified == true && weeklyuserdtl.isClaimed == false */\n      swap1\n      dup2\n      tag_294\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n    tag_295:\n      pop\n      iszero\n      tag_296\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":9527:9552  weeklyuserdtl.isQualified */\n      0x03\n        /* \"contracts/modules/ContestRoyalty.sol\":9652:9683  curentWeekContest.perUserReward */\n      dup2\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":9652:9687  curentWeekContest.perUserReward > 0 */\n      swap3\n      dup4\n      iszero\n      swap2\n        /* \"contracts/modules/ContestRoyalty.sol\":9644:9710  require(curentWeekContest.perUserReward > 0, \"No reward to claim\") */\n      tag_298\n        /* \"contracts/modules/ContestRoyalty.sol\":9652:9687  curentWeekContest.perUserReward > 0 */\n      dup4\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":9644:9710  require(curentWeekContest.perUserReward > 0, \"No reward to claim\") */\n      tag_6\n      jump\t// in\n    tag_298:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x04\n        /* \"contracts/modules/ContestRoyalty.sol\":9729:9759  curentWeekContest.claimedCount */\n      dup2\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":9721:9812  require(curentWeekContest.claimedCount < curentWeekContest.totalUsers, \"All users claimed\") */\n      tag_299\n        /* \"contracts/modules/ContestRoyalty.sol\":9762:9790  curentWeekContest.totalUsers */\n      0x02\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup3\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":9762:9790  curentWeekContest.totalUsers */\n      swap4\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":9729:9790  curentWeekContest.claimedCount < curentWeekContest.totalUsers */\n      dup4\n      lt\n        /* \"contracts/modules/ContestRoyalty.sol\":9721:9812  require(curentWeekContest.claimedCount < curentWeekContest.totalUsers, \"All users claimed\") */\n      tag_7\n      jump\t// in\n    tag_299:\n        /* \"contracts/modules/ContestRoyalty.sol\":9556:9560  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_300\n      jumpi\n      sstore\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/modules/ContestRoyalty.sol\":9556:9560  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      or\n      swap1\n      sstore\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":9049:9054  users */\n      0x0d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/modules/Storage.sol\":12951:12976  userAddress != address(0) */\n      dup2\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      tag_218\n      jumpi\n      tag_220\n      jumpi\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":13196:13207  userIncomes */\n      0x0e\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n        /* \"contracts/modules/Storage.sol\":13911:13937  income.weeklyContestIncome */\n      0x09\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":13227:13256  income.totalIncome += _amount */\n      tag_306\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup6\n      dup3\n      sload\n        /* \"contracts/modules/Storage.sol\":13227:13256  income.totalIncome += _amount */\n      tag_8\n      jump\t// in\n    tag_306:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup2\n      sstore\n        /* \"contracts/modules/Storage.sol\":13911:13937  income.weeklyContestIncome */\n      add\n        /* \"contracts/modules/Storage.sol\":13911:13948  income.weeklyContestIncome += _amount */\n      tag_307\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup5\n      dup3\n      sload\n        /* \"contracts/modules/Storage.sol\":13911:13948  income.weeklyContestIncome += _amount */\n      tag_8\n      jump\t// in\n    tag_307:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      swap1\n      sstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"contracts/modules/ContestRoyalty.sol\":9556:9560  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      and\n      mload(0x40)\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup2\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup2\n      mstore\n      dup4\n      0x24\n      dup4\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      mstore\n      dup6\n      0x44\n      dup4\n      add\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x80\n      dup3\n      add\n      swap1\n      dup3\n      dup3\n      lt\n      0xffffffffffffffff\n      dup4\n      gt\n      or\n      tag_308\n      jumpi\n      0x20\n      swap3\n      0x00\n      swap3\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      swap1\n      dup3\n      dup6\n      gas\n      call\n      iszero\n      tag_310\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      pop\n      dup1\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_315\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      pop\n        /* \"contracts/modules/ContestRoyalty.sol\":10086:10148  WeeklyRewardClaim(_roundId, _userId, amount,  block.timestamp) */\n      0x96ee4f374d0394c5383b347dc3b7ec04a1eceddcd2e25521157bce21c42b24d5\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      swap4\n        /* \"contracts/modules/ContestRoyalty.sol\":10086:10148  WeeklyRewardClaim(_roundId, _userId, amount,  block.timestamp) */\n      tag_235\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      swap2\n      dup4\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":9049:9054  users */\n      0x0d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(keccak256(0x00, 0x40))\n      and\n      swap1\n        /* \"contracts/modules/Storage.sol\":14694:14807  IncomeDistribution(userAddress, users[_fromUserId].account, _amount,_packageLevel, _incomeType, block.timestamp ) */\n      0x0f67c60bc8519c61563ac616d368a6df646202c88d10744d736438bc4fbe2816\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x80\n      mload(0x40)\n      dup9\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":10029:10053  IncomeType.WeeklyContest */\n      0x07\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":14790:14805  block.timestamp */\n      timestamp\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":14694:14807  IncomeDistribution(userAddress, users[_fromUserId].account, _amount,_packageLevel, _incomeType, block.timestamp ) */\n      log3\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":14790:14805  block.timestamp */\n      swap4\n      dup5\n      swap4\n      timestamp\n        /* \"contracts/modules/ContestRoyalty.sol\":10086:10148  WeeklyRewardClaim(_roundId, _userId, amount,  block.timestamp) */\n      swap3\n      dup6\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      swap1\n      swap5\n      swap4\n      swap3\n      0x60\n      swap3\n      0x80\n      dup4\n      add\n      swap7\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      mstore\n      0x40\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      shl(0xe0, 0x5274afe7)\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x04\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_312:\n        /* \"contracts/modules/ContestRoyalty.sol\":9556:9560  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_314)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n    tag_310:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      returndatasize\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n    tag_308:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x00\n      revert\n    tag_300:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_296:\n      0x64\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x20\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f74207175616c6966696564206f7220616c726561647920636c61696d6564\n      0x44\n      dup3\n      add\n      mstore\n      revert\n        /* \"contracts/modules/ContestRoyalty.sol\":9527:9596  weeklyuserdtl.isQualified == true && weeklyuserdtl.isClaimed == false */\n    tag_294:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0xff\n      swap2\n      pop\n      and\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":9527:9596  weeklyuserdtl.isQualified == true && weeklyuserdtl.isClaimed == false */\n      dup6\n      jump(tag_295)\n        /* \"contracts/modules/ContestRoyalty.sol\":9193:9298  _userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true && _roundId < currentWeeklyRound */\n    tag_291:\n      pop\n        /* \"contracts/modules/ContestRoyalty.sol\":9280:9298  currentWeeklyRound */\n      0x36\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":9269:9298  _roundId < currentWeeklyRound */\n      dup3\n      lt\n        /* \"contracts/modules/ContestRoyalty.sol\":9193:9298  _userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true && _roundId < currentWeeklyRound */\n      jump(tag_292)\n        /* \"contracts/modules/ContestRoyalty.sol\":9193:9265  _userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true */\n    tag_289:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      pop\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":9224:9240  weeklyContestdtl */\n      0x39\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":9261:9265  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0xff\n        /* \"contracts/modules/ContestRoyalty.sol\":9224:9257  weeklyContestdtl[_roundId].closed */\n      0x08\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/ContestRoyalty.sol\":9224:9257  weeklyContestdtl[_roundId].closed */\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      and\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":9224:9265  weeklyContestdtl[_roundId].closed == true */\n      eq\n        /* \"contracts/modules/ContestRoyalty.sol\":9193:9265  _userId > 0 && _roundId > 0 && weeklyContestdtl[_roundId].closed == true */\n      jump(tag_290)\n        /* \"contracts/modules/ContestRoyalty.sol\":9193:9220  _userId > 0 && _roundId > 0 */\n    tag_287:\n        /* \"contracts/modules/ContestRoyalty.sol\":9208:9220  _roundId > 0 */\n      pop\n      dup2\n      iszero\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":9193:9220  _userId > 0 && _roundId > 0 */\n      jump(tag_288)\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n    tag_282:\n      0x00\n      dup1\n      revert\n    tag_14:\n      jumpi(tag_282, callvalue)\n      jumpi(tag_282, slt(add(not(0x03), calldatasize), 0x00))\n      dup1\n        /* \"contracts/modules/Storage.sol\":683:688  10000 */\n      0x2710\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      swap3\n      mstore\n      return\n    tag_1:\n      0x40\n      swap1\n      not(0x03)\n      add\n      slt\n      tag_282\n      jumpi\n      calldataload(0x04)\n      swap1\n      calldataload(0x24)\n      swap1\n      jump\t// out\n    tag_2:\n      jumpi(tag_282, callvalue)\n      jumpi(tag_282, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1015:1017  10 */\n      0x0a\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_3:\n      jumpi(tag_282, callvalue)\n      jumpi(tag_282, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1068:1070  15 */\n      0x0f\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      dup2\n      mstore\n      return\n    tag_4:\n      iszero\n      tag_332\n      jumpi\n      jump\t// out\n    tag_332:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x139bdd081e5bdd5c881858d8dbdd5b9d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_5:\n      iszero\n      tag_334\n      jumpi\n      jump\t// out\n    tag_334:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x30\n      0x24\n      dup3\n      add\n      mstore\n      0x496e76616c696420757365724964206f7220726f756e644964206f7220726f75\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x82, 0x1b99081bdc881b9bdd0818db1bdcd959)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_6:\n      iszero\n      tag_336\n      jumpi\n      jump\t// out\n    tag_336:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x70, 0x4e6f2072657761726420746f20636c61696d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_7:\n      iszero\n      tag_338\n      jumpi\n      jump\t// out\n    tag_338:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x105b1b081d5cd95c9cc818db185a5b5959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_8:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_300\n      jumpi\n      jump\t// out\n        /* \"contracts/modules/ContestRoyalty.sol\":2454:3058  function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {... */\n    tag_10:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":2595:2616  monthlyRoyaltyUserdtl */\n      0x42\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, 0x40)\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/ContestRoyalty.sol\":2728:2742  royalty.closed */\n      swap1\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0xff\n        /* \"contracts/modules/ContestRoyalty.sol\":2728:2742  royalty.closed */\n      0x08\n      dup4\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      and\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2742  !royalty.closed */\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      swap3\n      dup4\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2790  !royalty.closed ||... */\n      tag_342\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":2454:3058  function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {... */\n    tag_343:\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2831  !royalty.closed ||... */\n      dup4\n      iszero\n      tag_344\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":2454:3058  function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {... */\n    tag_345:\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2887  !royalty.closed ||... */\n      dup4\n      iszero\n      tag_346\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":2454:3058  function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {... */\n    tag_347:\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2935  !royalty.closed ||... */\n      dup4\n      iszero\n      tag_348\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":2454:3058  function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {... */\n    tag_349:\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2978  !royalty.closed ||... */\n      pop\n      pop\n      dup2\n      iszero\n      tag_350\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":2454:3058  function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {... */\n    tag_351:\n        /* \"contracts/modules/ContestRoyalty.sol\":2709:3029  if (... */\n      pop\n      tag_352\n      jumpi\n        /* \"contracts/modules/ContestRoyalty.sol\":3046:3050  true */\n      0x01\n        /* \"contracts/modules/ContestRoyalty.sol\":2454:3058  function canClaimMonthlyReward(uint _userId, uint _roundId) external view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/ContestRoyalty.sol\":2709:3029  if (... */\n    tag_352:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x00\n        /* \"contracts/modules/ContestRoyalty.sol\":3005:3017  return false */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2978  !royalty.closed ||... */\n    tag_350:\n        /* \"contracts/modules/ContestRoyalty.sol\":2952:2973  royalty.perUserReward */\n      0x03\n      swap2\n      pop\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":2952:2978  royalty.perUserReward == 0 */\n      iszero\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2978  !royalty.closed ||... */\n      0x00\n      jump(tag_351)\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2935  !royalty.closed ||... */\n    tag_348:\n        /* \"contracts/modules/ContestRoyalty.sol\":2904:2925  userRoyalty.isClaimed */\n      0x03\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      swap3\n      swap4\n      pop\n      0x00\n      mstore\n        /* \"contracts/modules/ContestRoyalty.sol\":2904:2925  userRoyalty.isClaimed */\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x20\n      mstore\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2935  !royalty.closed ||... */\n      swap1\n      0x00\n      dup1\n      jump(tag_349)\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2887  !royalty.closed ||... */\n    tag_346:\n        /* \"contracts/modules/ContestRoyalty.sol\":2848:2876  userRoyalty.qualifiedRoundId */\n      dup1\n      swap4\n      pop\n      0x01\n      dup3\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":2848:2887  userRoyalty.qualifiedRoundId > _roundId */\n      gt\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2887  !royalty.closed ||... */\n      swap3\n      jump(tag_347)\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2831  !royalty.closed ||... */\n    tag_344:\n        /* \"contracts/modules/ContestRoyalty.sol\":2808:2831  userRoyalty.isQualified */\n      0x04\n      dup3\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n      0xff\n      and\n        /* \"contracts/modules/ContestRoyalty.sol\":2807:2831  !userRoyalty.isQualified */\n      iszero\n      swap4\n      pop\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2831  !royalty.closed ||... */\n      jump(tag_345)\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2790  !royalty.closed ||... */\n    tag_342:\n        /* \"contracts/modules/ContestRoyalty.sol\":2771:2790  currentMonthlyRound */\n      0x3d\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"contracts/modules/ContestRoyalty.sol\":2759:2790  _roundId >= currentMonthlyRound */\n      dup2\n      lt\n      iszero\n      swap4\n      pop\n        /* \"contracts/modules/ContestRoyalty.sol\":2727:2790  !royalty.closed ||... */\n      jump(tag_343)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x00\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      tag_354\n      jumpi\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x00\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n    tag_354:\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      mstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"contracts/modules/ContestRoyalty.sol\":90:10290  contract ContestRoyalty is Storage  {... */\n      0x44\n      dup3\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      mstore\n      0x64\n      swap1\n      revert\n\n    auxdata: 0xa26469706673582212207c79dfd98841b58b8242055fc7d510748b26691483af1ab8ff61afa1bd0dca0a64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"allocate_memory": {
									"entryPoint": 1359,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_4756": {
									"entryPoint": 1328,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"clear_storage_range_uint256": {
									"entryPoint": 1391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523461052c5760015f556040516101e081016001600160401b038111828210176105185760405267d02ab486cedc0000815268015af1d78b58c4000060208201526802b5e3af16b1880000604082015268056bc75e2d631000006060820152680ad78ebc5ac620000060808201526815af1d78b58c40000060a0820152682b5e3af16b1880000060c08201526856bc75e2d63100000060e082015268ad78ebc5ac6200000061010082015269015af1d78b58c40000006101208201526902b5e3af16b18800000061014082015269056bc75e2d6310000000610160820152690ad78ebc5ac6200000006101808201526915af1d78b58c400000006101a0820152692b5e3af16b18800000006101c0820152600b54600f600b5580600f106104c2575b50600b5f5260205f20905f5b600f81106104a557610141610530565b680410d586a20a4c00008152681043561a8829300000602082015268410d586a20a4c0000060408201526901043561a882930000006060820152690410d586a20a4c0000006080820152691043561a88293000000060a082015269410d586a20a4c000000060c082015260135460076013558060071061044f575b5060135f5260205f20905f5b60078110610432576101d861054f565b68056bc75e2d631000008152680ad78ebc5ac620000060208201526815af1d78b58c4000006040820152682b5e3af16b1880000060608201526856bc75e2d631000000608082015268ad78ebc5ac6200000060a082015269015af1d78b58c400000060c08201526902b5e3af16b18800000060e08201526014546008601455806008106103dc575b5060145f5260205f20905f5b600881106103bf5761027c610530565b60038152600560208201526007604082015260096060820152600b6080820152600d60a0820152600f60c08201525f5b600781106103a7576102bc61054f565b6004815260056020820152600660408201526007606082015260086080820152600960a0820152600a60c0820152600b60e08201525f5b6008811061038f5761030361054f565b5f815260016020820152600160408201526001606082015260016080820152600160a0820152600160c0820152600160e08201525f5b60088110610377574260375542603e55426045555f60385560016036555f603f556001603d555f604655600160445560405161108290816105868239f35b600190602060ff845116930192816024015501610339565b600190602060ff84511693019281601c0155016102f3565b600190602060ff8451169301928160150155016102ac565b81516001600160501b03168184015560209091019060010161026c565b60145f5261042c907fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec017fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f461056f565b81610260565b81516001600160501b0316818401556020909101906001016101c8565b60135f5261049f907f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090017f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09761056f565b816101bc565b81516001600160501b031681840155602090910190600101610131565b600b5f52610512907f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9017f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc861056f565b5f610125565b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b6040519060e082016001600160401b0381118382101761051857604052565b6040519061010082016001600160401b0381118382101761051857604052565b81811061057a575050565b5f815560010161056f56fe6080806040526004361015610012575f80fd5b5f905f3560e01c90816301c234a814610db7575080631629805614610abc5780632132d20414610a8e5780632350268f14610a4b57806323fd338e146105365780632a89153414610a2d5780632ae0ee0d146109a05780632f48ab7d14610a045780633080b5bc146109e657806332bc298c146109c857806332fcd966146109a5578063375b43b4146109a057806339ab36031461095d5780634b8cbf9b1461093f5780634c2215e31461053b57806358c7d352146105365780635b62d1d51461051857806376f5f700146104fa57806378f6ad6d146104dc5780637cdc65f2146104b35780637d846e381461048f5780637dd2b84714610470578063956a3228146104425780639b40ab9714610424578063a59d17d114610406578063ae4708dc146103c3578063bff1f9e1146103a5578063c216212a1461034e578063c8df290814610329578063c9ed07081461030b578063ca8e9121146102ed578063d0a2fd79146102bb578063e898fc381461029d578063e9e34a1614610274578063ebe0ff1514610250578063ec597e6f14610232578063f5d74d9314610209578063f63a6861146101eb5763fddc806f146101cb575f80fd5b346101e857806003193601126101e8576020603754604051908152f35b80fd5b50346101e857806003193601126101e85760206040516283d6008152f35b50346101e857806003193601126101e8576004546040516001600160a01b039091168152602090f35b50346101e857806003193601126101e8576020600554604051908152f35b50346101e857806003193601126101e8576020604051683635c9adc5dea000008152f35b50346101e857806003193601126101e8576003546040516001600160a01b039091168152602090f35b50346101e857806003193601126101e8576020603e54604051908152f35b50346101e85760203660031901126101e85760043560088110156102e95760209150601c0154604051908152f35b5080fd5b50346101e857806003193601126101e8576020603654604051908152f35b50346101e857806003193601126101e8576020603d54604051908152f35b50346101e857806003193601126101e857602060405169021e19e0c9bab24000008152f35b50346101e85760203660031901126101e85760043590600b548210156101e857600b5482101561039157602091600b825282822001549060031b1c604051908152f35b634e487b7160e01b81526032600452602490fd5b50346101e857806003193601126101e8576020600654604051908152f35b50346101e85760203660031901126101e857600435906013548210156101e857601354821015610391576020916013825282822001549060031b1c604051908152f35b50346101e857806003193601126101e8576020603f54604051908152f35b50346101e857806003193601126101e8576020604554604051908152f35b50346101e85760203660031901126101e85760043560088110156102e9576020915060240154604051908152f35b50346101e857806003193601126101e857602060405163025143008152f35b50346101e85760206104a96104a336610dd1565b90610f4f565b6040519015158152f35b50346101e857806003193601126101e8576002546040516001600160a01b039091168152602090f35b50346101e857806003193601126101e8576020600954604051908152f35b50346101e857806003193601126101e857602060405162093a808152f35b50346101e857806003193601126101e8576020604654604051908152f35b610de7565b50346101e85761054a36610dd1565b9190610554610ff8565b808252600d60205261057360018060a01b036040842054163314610e1d565b80151580610936575b80610918575b8061090d575b61059190610e5c565b8082526042602052604082209183815260406020526040812092600160ff6004830154161515036108d757600381018583528060205260ff604084205416610892576003850154948515926105e68415610ec1565b87600160048401926105ff600285549601548610610f02565b0154116108555760018201809211610841575585835260209081526040808420805460ff19166001179055848452600d9091528220546001600160a01b031690811561080d576107da57828252600e602052600a60408320610662868254610f42565b815501610670858254610f42565b905560018060a01b0360015416604051602081019063a9059cbb60e01b8252836024820152866044820152604481526080810181811067ffffffffffffffff8211176107c6576040525160209185919082855af1156107bb5782513d6107b25750803b155b6107a05750828252600d602090815260408084205490518681529182018490526001600160a01b0316928061078c5750917f8211032682f8fd8be8ff252e0a106cdb6ad4b10427152b4d93c2bc9a1f11c3c295917f0f67c60bc8519c61563ac616d368a6df646202c88d10744d736438bc4fbe281660808560086040610783980152426060820152a36040519384934292859094939260609260808301968352602083015260408201520152565b0390a160015f55005b634e487b7160e01b81526021600452602490fd5b635274afe760e01b8352600452602482fd5b600114156106d5565b6040513d84823e3d90fd5b634e487b7160e01b86526041600452602486fd5b60405162461bcd60e51b815260206004820152600b60248201526a16995c9bc8185b5bdd5b9d60aa1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103ab9b2b960a11b6044820152606490fd5b634e487b7160e01b85526011600452602485fd5b60405162461bcd60e51b81526020600482015260156024820152744e6f7420656c696769626c6520746f20636c61696d60581b6044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f416c726561647920636c61696d656420666f72207468697320726f756e6400006044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d02737ba1038bab0b634b334b2b2160951b6044820152606490fd5b50603d548310610588565b508282526040602052600160ff600860408520015416151514610582565b5082151561057c565b50346101e857806003193601126101e8576020604454604051908152f35b50346101e85760203660031901126101e857600435906007548210156101e857600754821015610391576020916007825282822001549060031b1c604051908152f35b610e02565b50346101e857806003193601126101e8576020604051670de0b6b3a76400008152f35b50346101e857806003193601126101e8576020604051620151808152f35b50346101e857806003193601126101e8576020603854604051908152f35b50346101e857806003193601126101e8576001546040516001600160a01b039091168152602090f35b50346101e857806003193601126101e857602060405162278d008152f35b50346101e85760203660031901126101e857600435906014548210156101e857601454821015610391576020916014825282822001549060031b1c604051908152f35b50346101e85760203660031901126101e85760043560078110156102e9576020915060150154604051908152f35b34610db357610aca36610dd1565b90610ad3610ff8565b805f52600d602052610af260018060a01b0360405f2054163314610e1d565b80151580610daa575b80610d8c575b80610d81575b610b1090610e5c565b815f52603b60205260405f20815f5260205260405f2090825f526039602052600360405f209201918254600160ff8260081c161515149081610d75575b5015610d3157600381015492831591610b668315610ec1565b60048101610b7b600282549301548310610f02565b60018201809211610d1d5755805460ff191660011790555f828152600d60205260409020546001600160a01b031690811561080d576107da57815f52600e602052600960405f20610bcd858254610f42565b815501610bdb848254610f42565b905560018060a01b03600154166040516020810163a9059cbb60e01b815283602483015285604483015260448252608082019082821067ffffffffffffffff831117610d09576020925f92604052519082855af115610cfe575f513d610cf55750803b155b610ce357507f96ee4f374d0394c5383b347dc3b7ec04a1eceddcd2e25521157bce21c42b24d59361078391835f52600d60205260018060a01b0360405f205416907f0f67c60bc8519c61563ac616d368a6df646202c88d10744d736438bc4fbe281660806040518881525f602082015260076040820152426060820152a36040519384934292859094939260609260808301968352602083015260408201520152565b635274afe760e01b5f5260045260245ffd5b60011415610c40565b6040513d5f823e3d90fd5b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b606460405162461bcd60e51b815260206004820152602060248201527f4e6f74207175616c6966696564206f7220616c726561647920636c61696d65646044820152fd5b60ff9150161585610b4d565b506036548210610b07565b50815f526039602052600160ff600860405f20015416151514610b01565b50811515610afb565b5f80fd5b34610db3575f366003190112610db3578061271060209252f35b6040906003190112610db3576004359060243590565b34610db3575f366003190112610db3576020604051600a8152f35b34610db3575f366003190112610db3576020604051600f8152f35b15610e2457565b60405162461bcd60e51b815260206004820152601060248201526f139bdd081e5bdd5c881858d8dbdd5b9d60821b6044820152606490fd5b15610e6357565b60405162461bcd60e51b815260206004820152603060248201527f496e76616c696420757365724964206f7220726f756e644964206f7220726f7560448201526f1b99081bdc881b9bdd0818db1bdcd95960821b6064820152608490fd5b15610ec857565b60405162461bcd60e51b81526020600482015260126024820152714e6f2072657761726420746f20636c61696d60701b6044820152606490fd5b15610f0957565b60405162461bcd60e51b8152602060048201526011602482015270105b1b081d5cd95c9cc818db185a5b5959607a1b6044820152606490fd5b91908201809211610d1d57565b5f52604260205260405f20815f52604060205260405f209060ff60088301541615928315610feb575b8315610fdb575b8315610fcc575b8315610fb1575b50508115610fa4575b50610fa057600190565b5f90565b600391500154155f610f96565b60039293505f520160205260ff60405f205416905f80610f8d565b80935060018201541192610f86565b600482015460ff16159350610f7f565b603d548110159350610f78565b60025f54146110075760025f55565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fdfea26469706673582212207c79dfd98841b58b8242055fc7d510748b26691483af1ab8ff61afa1bd0dca0a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x52C JUMPI PUSH1 0x1 PUSH0 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x518 JUMPI PUSH1 0x40 MSTORE PUSH8 0xD02AB486CEDC0000 DUP2 MSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH2 0x100 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH2 0x120 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH2 0x140 DUP3 ADD MSTORE PUSH10 0x56BC75E2D6310000000 PUSH2 0x160 DUP3 ADD MSTORE PUSH10 0xAD78EBC5AC620000000 PUSH2 0x180 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C40000000 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B1880000000 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xB SLOAD PUSH1 0xF PUSH1 0xB SSTORE DUP1 PUSH1 0xF LT PUSH2 0x4C2 JUMPI JUMPDEST POP PUSH1 0xB PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0xF DUP2 LT PUSH2 0x4A5 JUMPI PUSH2 0x141 PUSH2 0x530 JUMP JUMPDEST PUSH9 0x410D586A20A4C0000 DUP2 MSTORE PUSH9 0x1043561A8829300000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x410D586A20A4C00000 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1043561A88293000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH10 0x1043561A882930000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C0000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH1 0x7 PUSH1 0x13 SSTORE DUP1 PUSH1 0x7 LT PUSH2 0x44F JUMPI JUMPDEST POP PUSH1 0x13 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x432 JUMPI PUSH2 0x1D8 PUSH2 0x54F JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x14 SLOAD PUSH1 0x8 PUSH1 0x14 SSTORE DUP1 PUSH1 0x8 LT PUSH2 0x3DC JUMPI JUMPDEST POP PUSH1 0x14 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x3BF JUMPI PUSH2 0x27C PUSH2 0x530 JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0xC0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x3A7 JUMPI PUSH2 0x2BC PUSH2 0x54F JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x38F JUMPI PUSH2 0x303 PUSH2 0x54F JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x377 JUMPI TIMESTAMP PUSH1 0x37 SSTORE TIMESTAMP PUSH1 0x3E SSTORE TIMESTAMP PUSH1 0x45 SSTORE PUSH0 PUSH1 0x38 SSTORE PUSH1 0x1 PUSH1 0x36 SSTORE PUSH0 PUSH1 0x3F SSTORE PUSH1 0x1 PUSH1 0x3D SSTORE PUSH0 PUSH1 0x46 SSTORE PUSH1 0x1 PUSH1 0x44 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1082 SWAP1 DUP2 PUSH2 0x586 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x24 ADD SSTORE ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x1C ADD SSTORE ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x15 ADD SSTORE ADD PUSH2 0x2AC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x26C JUMP JUMPDEST PUSH1 0x14 PUSH0 MSTORE PUSH2 0x42C SWAP1 PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4 PUSH2 0x56F JUMP JUMPDEST DUP2 PUSH2 0x260 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x13 PUSH0 MSTORE PUSH2 0x49F SWAP1 PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097 PUSH2 0x56F JUMP JUMPDEST DUP2 PUSH2 0x1BC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x131 JUMP JUMPDEST PUSH1 0xB PUSH0 MSTORE PUSH2 0x512 SWAP1 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8 PUSH2 0x56F JUMP JUMPDEST PUSH0 PUSH2 0x125 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x518 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x100 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x518 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x57A JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x56F JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0xDB7 JUMPI POP DUP1 PUSH4 0x16298056 EQ PUSH2 0xABC JUMPI DUP1 PUSH4 0x2132D204 EQ PUSH2 0xA8E JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0xA4B JUMPI DUP1 PUSH4 0x23FD338E EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0xA2D JUMPI DUP1 PUSH4 0x2AE0EE0D EQ PUSH2 0x9A0 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0xA04 JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0x9E6 JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x9C8 JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0x9A5 JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0x9A0 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0x95D JUMPI DUP1 PUSH4 0x4B8CBF9B EQ PUSH2 0x93F JUMPI DUP1 PUSH4 0x4C2215E3 EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x5B62D1D5 EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0x7D846E38 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x7DD2B847 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x9B40AB97 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xF63A6861 EQ PUSH2 0x1EB JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x1CB JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x83D600 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x3E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x3D SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xB SLOAD DUP3 LT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0xB SLOAD DUP3 LT ISZERO PUSH2 0x391 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xB DUP3 MSTORE DUP3 DUP3 KECCAK256 ADD SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x13 SLOAD DUP3 LT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x13 SLOAD DUP3 LT ISZERO PUSH2 0x391 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x13 DUP3 MSTORE DUP3 DUP3 KECCAK256 ADD SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x45 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2514300 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH2 0x4A9 PUSH2 0x4A3 CALLDATASIZE PUSH2 0xDD1 JUMP JUMPDEST SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x46 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH2 0x54A CALLDATASIZE PUSH2 0xDD1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x554 PUSH2 0xFF8 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x573 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SLOAD AND CALLER EQ PUSH2 0xE1D JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x936 JUMPI JUMPDEST DUP1 PUSH2 0x918 JUMPI JUMPDEST DUP1 PUSH2 0x90D JUMPI JUMPDEST PUSH2 0x591 SWAP1 PUSH2 0xE5C JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 PUSH1 0x1 PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD AND ISZERO ISZERO SUB PUSH2 0x8D7 JUMPI PUSH1 0x3 DUP2 ADD DUP6 DUP4 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x892 JUMPI PUSH1 0x3 DUP6 ADD SLOAD SWAP5 DUP6 ISZERO SWAP3 PUSH2 0x5E6 DUP5 ISZERO PUSH2 0xEC1 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x4 DUP5 ADD SWAP3 PUSH2 0x5FF PUSH1 0x2 DUP6 SLOAD SWAP7 ADD SLOAD DUP7 LT PUSH2 0xF02 JUMP JUMPDEST ADD SLOAD GT PUSH2 0x855 JUMPI PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x841 JUMPI SSTORE DUP6 DUP4 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP5 DUP5 MSTORE PUSH1 0xD SWAP1 SWAP2 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x80D JUMPI PUSH2 0x7DA JUMPI DUP3 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xA PUSH1 0x40 DUP4 KECCAK256 PUSH2 0x662 DUP7 DUP3 SLOAD PUSH2 0xF42 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x670 DUP6 DUP3 SLOAD PUSH2 0xF42 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP3 MSTORE DUP4 PUSH1 0x24 DUP3 ADD MSTORE DUP7 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7C6 JUMPI PUSH1 0x40 MSTORE MLOAD PUSH1 0x20 SWAP2 DUP6 SWAP2 SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x7BB JUMPI DUP3 MLOAD RETURNDATASIZE PUSH2 0x7B2 JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x7A0 JUMPI POP DUP3 DUP3 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD SWAP1 MLOAD DUP7 DUP2 MSTORE SWAP2 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP1 PUSH2 0x78C JUMPI POP SWAP2 PUSH32 0x8211032682F8FD8BE8FF252E0A106CDB6AD4B10427152B4D93C2BC9A1F11C3C2 SWAP6 SWAP2 PUSH32 0xF67C60BC8519C61563AC616D368A6DF646202C88D10744D736438BC4FBE2816 PUSH1 0x80 DUP6 PUSH1 0x8 PUSH1 0x40 PUSH2 0x783 SWAP9 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE LOG3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH0 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x16995C9BC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F7420656C696769626C6520746F20636C61696D PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920636C61696D656420666F72207468697320726F756E640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2737BA1038BAB0B634B334B2B21 PUSH1 0x95 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3D SLOAD DUP4 LT PUSH2 0x588 JUMP JUMPDEST POP DUP3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD AND ISZERO ISZERO EQ PUSH2 0x582 JUMP JUMPDEST POP DUP3 ISZERO ISZERO PUSH2 0x57C JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x44 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x391 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x7 DUP3 MSTORE DUP3 DUP3 KECCAK256 ADD SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0xE02 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x14 SLOAD DUP3 LT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x14 SLOAD DUP3 LT ISZERO PUSH2 0x391 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x14 DUP3 MSTORE DUP3 DUP3 KECCAK256 ADD SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDB3 JUMPI PUSH2 0xACA CALLDATASIZE PUSH2 0xDD1 JUMP JUMPDEST SWAP1 PUSH2 0xAD3 PUSH2 0xFF8 JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0xAF2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND CALLER EQ PUSH2 0xE1D JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0xDAA JUMPI JUMPDEST DUP1 PUSH2 0xD8C JUMPI JUMPDEST DUP1 PUSH2 0xD81 JUMPI JUMPDEST PUSH2 0xB10 SWAP1 PUSH2 0xE5C JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0x3B PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x39 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 SWAP3 ADD SWAP2 DUP3 SLOAD PUSH1 0x1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND ISZERO ISZERO EQ SWAP1 DUP2 PUSH2 0xD75 JUMPI JUMPDEST POP ISZERO PUSH2 0xD31 JUMPI PUSH1 0x3 DUP2 ADD SLOAD SWAP3 DUP4 ISZERO SWAP2 PUSH2 0xB66 DUP4 ISZERO PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD PUSH2 0xB7B PUSH1 0x2 DUP3 SLOAD SWAP4 ADD SLOAD DUP4 LT PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xD1D JUMPI SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x80D JUMPI PUSH2 0x7DA JUMPI DUP2 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xBCD DUP6 DUP3 SLOAD PUSH2 0xF42 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0xBDB DUP5 DUP3 SLOAD PUSH2 0xF42 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x24 DUP4 ADD MSTORE DUP6 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0xD09 JUMPI PUSH1 0x20 SWAP3 PUSH0 SWAP3 PUSH1 0x40 MSTORE MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0xCFE JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0xCF5 JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0xCE3 JUMPI POP PUSH32 0x96EE4F374D0394C5383B347DC3B7EC04A1ECEDDCD2E25521157BCE21C42B24D5 SWAP4 PUSH2 0x783 SWAP2 DUP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 PUSH32 0xF67C60BC8519C61563AC616D368A6DF646202C88D10744D736438BC4FBE2816 PUSH1 0x80 PUSH1 0x40 MLOAD DUP9 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE LOG3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74207175616C6966696564206F7220616C726561647920636C61696D6564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF SWAP2 POP AND ISZERO DUP6 PUSH2 0xB4D JUMP JUMPDEST POP PUSH1 0x36 SLOAD DUP3 LT PUSH2 0xB07 JUMP JUMPDEST POP DUP2 PUSH0 MSTORE PUSH1 0x39 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND ISZERO ISZERO EQ PUSH2 0xB01 JUMP JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0xAFB JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDB3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDB3 JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xDB3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xDB3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDB3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDB3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDB3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST ISZERO PUSH2 0xE24 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081E5BDD5C881858D8DBDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xE63 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420757365724964206F7220726F756E644964206F7220726F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B99081BDC881B9BDD0818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xEC8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2072657761726420746F20636C61696D PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xF09 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1B081D5CD95C9CC818DB185A5B5959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xD1D JUMPI JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0xFF PUSH1 0x8 DUP4 ADD SLOAD AND ISZERO SWAP3 DUP4 ISZERO PUSH2 0xFEB JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xFDB JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xFCC JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xFB1 JUMPI JUMPDEST POP POP DUP2 ISZERO PUSH2 0xFA4 JUMPI JUMPDEST POP PUSH2 0xFA0 JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x3 SWAP2 POP ADD SLOAD ISZERO PUSH0 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x3 SWAP3 SWAP4 POP PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 PUSH0 DUP1 PUSH2 0xF8D JUMP JUMPDEST DUP1 SWAP4 POP PUSH1 0x1 DUP3 ADD SLOAD GT SWAP3 PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO SWAP4 POP PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x3D SLOAD DUP2 LT ISZERO SWAP4 POP PUSH2 0xF78 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD EQ PUSH2 0x1007 JUMPI PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x79DFD98841B58B8242055FC7D510748B26691483AF1AB8FF61AFA1BD0D 0xCA EXP PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "90:10200:7:-:0;;;;;;1716:1:3;1821:22;90:10200:7;;;;;;-1:-1:-1;;;;;90:10200:7;;;;;;;;;;1544:9:8;90:10200:7;;1576:9:8;1533:515;;;90:10200:7;1608:9:8;90:10200:7;1533:515:8;;90:10200:7;1640:10:8;1533:515;;;90:10200:7;1673:10:8;1533:515;;;90:10200:7;1706:10:8;1533:515;;;90:10200:7;1739:10:8;1533:515;;;90:10200:7;1772:11:8;1533:515;;;90:10200:7;1806:11:8;1533:515;;;90:10200:7;1840:11:8;1533:515;;;90:10200:7;1874:12:8;1533:515;;;90:10200:7;1909:12:8;1533:515;;;90:10200:7;1944:12:8;1533:515;;;90:10200:7;1979:13:8;1533:515;;;90:10200:7;2015:13:8;1533:515;;;90:10200:7;1533:515:8;90:10200:7;1533:515:8;;90:10200:7;;1533:515:8;90:10200:7;;;-1:-1:-1;90:10200:7;1533:515:8;1821:22:3;90:10200:7;1533:515:8;1821:22:3;90:10200:7;;1821:22:3;90:10200:7;1533:515:8;90:10200:7;;;;;;:::i;:::-;6018:5:8;90:10200:7;;6025:6:8;1533:515;6017:64;;90:10200:7;6033:7:8;90:10200:7;6017:64:8;;90:10200:7;6042:7:8;1533:515;6017:64;;90:10200:7;6051:8:8;1533:515;6017:64;;90:10200:7;6061:8:8;1533:515;6017:64;;90:10200:7;6071:9:8;1533:515;6017:64;;90:10200:7;6017:64:8;90:10200:7;6017:64:8;;90:10200:7;;6017:64:8;90:10200:7;;;;;6017:64:8;1821:22:3;90:10200:7;1533:515:8;1821:22:3;90:10200:7;;1821:22:3;90:10200:7;6017:64:8;90:10200:7;;;;;;:::i;:::-;1640:10:8;90:10200:7;;1673:10:8;1533:515;6123:70;;90:10200:7;1706:10:8;90:10200:7;6123:70:8;;90:10200:7;1739:10:8;1533:515;6123:70;;90:10200:7;1772:11:8;1533:515;6123:70;;90:10200:7;1806:11:8;1533:515;6123:70;;90:10200:7;1840:11:8;1533:515;6123:70;;90:10200:7;1874:12:8;1533:515;6123:70;;90:10200:7;6123:70:8;90:10200:7;6123:70:8;;90:10200:7;;6123:70:8;90:10200:7;;;;;6123:70:8;1821:22:3;90:10200:7;1533:515:8;1821:22:3;90:10200:7;;1821:22:3;90:10200:7;6123:70:8;90:10200:7;;;;;;:::i;:::-;6234:1:8;90:10200:7;;;1533:515:8;6233:24;;90:10200:7;6017:64:8;90:10200:7;6233:24:8;;90:10200:7;6243:1:8;1533:515;6233:24;;90:10200:7;1533:515:8;;6233:24;;90:10200:7;6250:2:8;1533:515;6233:24;;90:10200:7;1533:515:8;;6233:24;;90:10200:7;1821:22:3;90:10200:7;6017:64:8;90:10200:7;;;;;;:::i;:::-;6304:1:8;90:10200:7;;;1533:515:8;6303:25;;90:10200:7;6310:1:8;90:10200:7;6303:25:8;;90:10200:7;6017:64:8;1533:515;6303:25;;90:10200:7;6123:70:8;1533:515;6303:25;;90:10200:7;6243:1:8;1533:515;6303:25;;90:10200:7;6322:2:8;1533:515;6303:25;;90:10200:7;1533:515:8;;6303:25;;90:10200:7;1821:22:3;90:10200:7;6123:70:8;90:10200:7;;;;;;:::i;:::-;1821:22:3;90:10200:7;;1716:1:3;1533:515:8;6373:23;;90:10200:7;1716:1:3;90:10200:7;6373:23:8;;90:10200:7;1716:1:3;1533:515:8;6373:23;;90:10200:7;1716:1:3;1533:515:8;6373:23;;90:10200:7;1716:1:3;1533:515:8;6373:23;;90:10200:7;1716:1:3;1533:515:8;6373:23;;90:10200:7;1716:1:3;1533:515:8;6373:23;;90:10200:7;1821:22:3;90:10200:7;6123:70:8;90:10200:7;;;;191:15;7971:1:8;90:10200:7;191:15;9421:1:8;90:10200:7;191:15;10723:1:8;90:10200:7;1821:22:3;8013:1:8;90:10200:7;1716:1:3;7926::8;90:10200:7;1821:22:3;9462:1:8;90:10200:7;1716:1:3;9375::8;90:10200:7;1821:22:3;10762:1:8;90:10200:7;1716:1:3;10681::8;90:10200:7;;;;;;;;;;;1716:1:3;90:10200:7;1533:515:8;90:10200:7;;;;;;;;6373:23:8;90:10200:7;;;;;;1716:1:3;90:10200:7;1533:515:8;90:10200:7;;;;;;;;6303:25:8;90:10200:7;;;;;;1716:1:3;90:10200:7;1533:515:8;90:10200:7;;;;;;;;6233:24:8;90:10200:7;;;;;;;;-1:-1:-1;;;;;90:10200:7;;;;;1533:515:8;90:10200:7;;;;1716:1:3;90:10200:7;;;;6123:70:8;1821:22:3;90:10200:7;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;90:10200:7;;;;;1533:515:8;90:10200:7;;;;1716:1:3;90:10200:7;;;;6017:64:8;1821:22:3;90:10200:7;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;90:10200:7;;;;;1533:515:8;90:10200:7;;;;1716:1:3;90:10200:7;;;;1533:515:8;1821:22:3;90:10200:7;;;;;;;:::i;:::-;;;;;;;;1821:22:3;90:10200:7;;;;;1821:22:3;90:10200:7;;;;;;;;;;;;-1:-1:-1;;;;;90:10200:7;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;90:10200:7;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_uint256t_uint256": {
									"entryPoint": 3537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_encode_uint256_uint256_uint256_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 3906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"external_fun_MONTHLY_ROYALTY_LEVEL": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_TOP_ROYALTY_LEVEL": {
									"entryPoint": 3586,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_canClaimMonthlyReward": {
									"entryPoint": 3919,
									"id": 961,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_nonReentrantBefore": {
									"entryPoint": 4088,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"require_helper_stringliteral_1beb": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_d2be": {
									"entryPoint": 3613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_e4c6": {
									"entryPoint": 3777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_ef17": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0xDB7 JUMPI POP DUP1 PUSH4 0x16298056 EQ PUSH2 0xABC JUMPI DUP1 PUSH4 0x2132D204 EQ PUSH2 0xA8E JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0xA4B JUMPI DUP1 PUSH4 0x23FD338E EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0xA2D JUMPI DUP1 PUSH4 0x2AE0EE0D EQ PUSH2 0x9A0 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0xA04 JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0x9E6 JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x9C8 JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0x9A5 JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0x9A0 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0x95D JUMPI DUP1 PUSH4 0x4B8CBF9B EQ PUSH2 0x93F JUMPI DUP1 PUSH4 0x4C2215E3 EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x5B62D1D5 EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0x7D846E38 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x7DD2B847 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x9B40AB97 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xF63A6861 EQ PUSH2 0x1EB JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x1CB JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x83D600 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x3E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x3D SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xB SLOAD DUP3 LT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0xB SLOAD DUP3 LT ISZERO PUSH2 0x391 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xB DUP3 MSTORE DUP3 DUP3 KECCAK256 ADD SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x13 SLOAD DUP3 LT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x13 SLOAD DUP3 LT ISZERO PUSH2 0x391 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x13 DUP3 MSTORE DUP3 DUP3 KECCAK256 ADD SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x45 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2514300 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH2 0x4A9 PUSH2 0x4A3 CALLDATASIZE PUSH2 0xDD1 JUMP JUMPDEST SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x46 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH2 0x54A CALLDATASIZE PUSH2 0xDD1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x554 PUSH2 0xFF8 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x573 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SLOAD AND CALLER EQ PUSH2 0xE1D JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x936 JUMPI JUMPDEST DUP1 PUSH2 0x918 JUMPI JUMPDEST DUP1 PUSH2 0x90D JUMPI JUMPDEST PUSH2 0x591 SWAP1 PUSH2 0xE5C JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 PUSH1 0x1 PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD AND ISZERO ISZERO SUB PUSH2 0x8D7 JUMPI PUSH1 0x3 DUP2 ADD DUP6 DUP4 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x892 JUMPI PUSH1 0x3 DUP6 ADD SLOAD SWAP5 DUP6 ISZERO SWAP3 PUSH2 0x5E6 DUP5 ISZERO PUSH2 0xEC1 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x4 DUP5 ADD SWAP3 PUSH2 0x5FF PUSH1 0x2 DUP6 SLOAD SWAP7 ADD SLOAD DUP7 LT PUSH2 0xF02 JUMP JUMPDEST ADD SLOAD GT PUSH2 0x855 JUMPI PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x841 JUMPI SSTORE DUP6 DUP4 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP5 DUP5 MSTORE PUSH1 0xD SWAP1 SWAP2 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x80D JUMPI PUSH2 0x7DA JUMPI DUP3 DUP3 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xA PUSH1 0x40 DUP4 KECCAK256 PUSH2 0x662 DUP7 DUP3 SLOAD PUSH2 0xF42 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x670 DUP6 DUP3 SLOAD PUSH2 0xF42 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP3 MSTORE DUP4 PUSH1 0x24 DUP3 ADD MSTORE DUP7 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7C6 JUMPI PUSH1 0x40 MSTORE MLOAD PUSH1 0x20 SWAP2 DUP6 SWAP2 SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x7BB JUMPI DUP3 MLOAD RETURNDATASIZE PUSH2 0x7B2 JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x7A0 JUMPI POP DUP3 DUP3 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD SWAP1 MLOAD DUP7 DUP2 MSTORE SWAP2 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP1 PUSH2 0x78C JUMPI POP SWAP2 PUSH32 0x8211032682F8FD8BE8FF252E0A106CDB6AD4B10427152B4D93C2BC9A1F11C3C2 SWAP6 SWAP2 PUSH32 0xF67C60BC8519C61563AC616D368A6DF646202C88D10744D736438BC4FBE2816 PUSH1 0x80 DUP6 PUSH1 0x8 PUSH1 0x40 PUSH2 0x783 SWAP9 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE LOG3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH0 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x16995C9BC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103AB9B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F7420656C696769626C6520746F20636C61696D PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920636C61696D656420666F72207468697320726F756E640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2737BA1038BAB0B634B334B2B21 PUSH1 0x95 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x3D SLOAD DUP4 LT PUSH2 0x588 JUMP JUMPDEST POP DUP3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD AND ISZERO ISZERO EQ PUSH2 0x582 JUMP JUMPDEST POP DUP3 ISZERO ISZERO PUSH2 0x57C JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x44 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0x391 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x7 DUP3 MSTORE DUP3 DUP3 KECCAK256 ADD SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0xE02 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x14 SLOAD DUP3 LT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x14 SLOAD DUP3 LT ISZERO PUSH2 0x391 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x14 DUP3 MSTORE DUP3 DUP3 KECCAK256 ADD SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x20 SWAP2 POP PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDB3 JUMPI PUSH2 0xACA CALLDATASIZE PUSH2 0xDD1 JUMP JUMPDEST SWAP1 PUSH2 0xAD3 PUSH2 0xFF8 JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0xAF2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND CALLER EQ PUSH2 0xE1D JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0xDAA JUMPI JUMPDEST DUP1 PUSH2 0xD8C JUMPI JUMPDEST DUP1 PUSH2 0xD81 JUMPI JUMPDEST PUSH2 0xB10 SWAP1 PUSH2 0xE5C JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0x3B PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x39 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 SWAP3 ADD SWAP2 DUP3 SLOAD PUSH1 0x1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND ISZERO ISZERO EQ SWAP1 DUP2 PUSH2 0xD75 JUMPI JUMPDEST POP ISZERO PUSH2 0xD31 JUMPI PUSH1 0x3 DUP2 ADD SLOAD SWAP3 DUP4 ISZERO SWAP2 PUSH2 0xB66 DUP4 ISZERO PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD PUSH2 0xB7B PUSH1 0x2 DUP3 SLOAD SWAP4 ADD SLOAD DUP4 LT PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xD1D JUMPI SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x80D JUMPI PUSH2 0x7DA JUMPI DUP2 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xBCD DUP6 DUP3 SLOAD PUSH2 0xF42 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0xBDB DUP5 DUP3 SLOAD PUSH2 0xF42 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x24 DUP4 ADD MSTORE DUP6 PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0xD09 JUMPI PUSH1 0x20 SWAP3 PUSH0 SWAP3 PUSH1 0x40 MSTORE MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0xCFE JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0xCF5 JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0xCE3 JUMPI POP PUSH32 0x96EE4F374D0394C5383B347DC3B7EC04A1ECEDDCD2E25521157BCE21C42B24D5 SWAP4 PUSH2 0x783 SWAP2 DUP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 PUSH32 0xF67C60BC8519C61563AC616D368A6DF646202C88D10744D736438BC4FBE2816 PUSH1 0x80 PUSH1 0x40 MLOAD DUP9 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE LOG3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74207175616C6966696564206F7220616C726561647920636C61696D6564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF SWAP2 POP AND ISZERO DUP6 PUSH2 0xB4D JUMP JUMPDEST POP PUSH1 0x36 SLOAD DUP3 LT PUSH2 0xB07 JUMP JUMPDEST POP DUP2 PUSH0 MSTORE PUSH1 0x39 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND ISZERO ISZERO EQ PUSH2 0xB01 JUMP JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0xAFB JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDB3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDB3 JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xDB3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xDB3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDB3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDB3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDB3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST ISZERO PUSH2 0xE24 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081E5BDD5C881858D8DBDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xE63 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420757365724964206F7220726F756E644964206F7220726F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B99081BDC881B9BDD0818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xEC8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2072657761726420746F20636C61696D PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xF09 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1B081D5CD95C9CC818DB185A5B5959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xD1D JUMPI JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0xFF PUSH1 0x8 DUP4 ADD SLOAD AND ISZERO SWAP3 DUP4 ISZERO PUSH2 0xFEB JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xFDB JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xFCC JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xFB1 JUMPI JUMPDEST POP POP DUP2 ISZERO PUSH2 0xFA4 JUMPI JUMPDEST POP PUSH2 0xFA0 JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x3 SWAP2 POP ADD SLOAD ISZERO PUSH0 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x3 SWAP3 SWAP4 POP PUSH0 MSTORE ADD PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 PUSH0 DUP1 PUSH2 0xF8D JUMP JUMPDEST DUP1 SWAP4 POP PUSH1 0x1 DUP3 ADD SLOAD GT SWAP3 PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO SWAP4 POP PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x3D SLOAD DUP2 LT ISZERO SWAP4 POP PUSH2 0xF78 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD EQ PUSH2 0x1007 JUMPI PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x79DFD98841B58B8242055FC7D510748B26691483AF1AB8FF61AFA1BD0D 0xCA EXP PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "90:10200:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;90:10200:7;-1:-1:-1;;;90:10200:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;90:10200:7;-1:-1:-1;;;90:10200:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7934:38:8;90:10200:7;;;;;;;;;;;;;;;;;;;;;;;;;;786:8:8;90:10200:7;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;90:10200:7;;;;;;;;;;;;;;;;;;;;;;534:24:8;90:10200:7;;;;;;;;;;;;;;;;;;;;;;;7874:7:8;90:10200:7;;;;;;;;;;;;;;;;460:30:8;90:10200:7;;;-1:-1:-1;;;;;90:10200:7;;;;;;;;;;;;;;;;;;;;;;9383:39:8;90:10200:7;;;;;;;;;;;;;;-1:-1:-1;;90:10200:7;;;;;;;6264:64:8;;;;;90:10200:7;;;6264:64:8;90:10200:7;;;;;;;;6264:64:8;;90:10200:7;;;;;;;;;;;;;;;;7893:34:8;90:10200:7;;;;;;;;;;;;;;;;;;;;;9341:35:8;90:10200:7;;;;;;;;;;;;;;;;;;;;;;;9320:8:8;90:10200:7;;;;;;;;;;-1:-1:-1;;90:10200:7;;;;;;;1508:540:8;90:10200:7;1508:540:8;;;;;;90:10200:7;;;;;;;;1508:540:8;90:10200:7;;;;;;;;;;;;;;;;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;;;;;;;;;;;;;565:22:8;90:10200:7;;;;;;;;;;;;;;-1:-1:-1;;90:10200:7;;;;;;;5988:93:8;90:10200:7;5988:93:8;;;;;;90:10200:7;;;;;;;;5988:93:8;90:10200:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9429:34:8;90:10200:7;;;;;;;;;;;;;;;;;;;;;10689:35:8;90:10200:7;;;;;;;;;;;;;;-1:-1:-1;;90:10200:7;;;;;;;6335:61:8;;;;;90:10200:7;;;6335:61:8;90:10200:7;;;;;;;;;;;;;;;;;;;;;;;;839:8:8;90:10200:7;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;422:28:8;90:10200:7;;;-1:-1:-1;;;;;90:10200:7;;;;;;;;;;;;;;;;;;;;;;1351:34:8;90:10200:7;;;;;;;;;;;;;;;;;;;;;;;7821:6:8;90:10200:7;;;;;;;;;;;;;;;;;10731:32:8;90:10200:7;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;2227:103:3;;;;:::i;:::-;90:10200:7;;;5437:5;90:10200;;5508:54;90:10200;;;;;;;;;;5531:10;5516:25;5508:54;:::i;:::-;5581:11;;;:27;;;90:10200;5581:73;;;90:10200;5581:107;;;90:10200;5573:168;;;:::i;:::-;90:10200;;;5794:21;90:10200;;;;;;;;;;;;;;;5928:23;5955:4;90:10200;;5928:23;;90:10200;;;;5928:31;90:10200;;5998:21;;;90:10200;;;;;;;;;;;;;;5998:21;6083:33;;90:10200;6083:37;;;;6075:68;6083:37;;6075:68;:::i;:::-;6162:32;5955:4;90:10200;6162:32;;90:10200;6154:95;6197:30;90:10200;;6197:30;;90:10200;6162:65;;6154:95;:::i;:::-;6268:28;90:10200;6268:40;90:10200;;5955:4;90:10200;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;90:10200:7;5955:4;90:10200;;;;;;5437:5;90:10200;;;;;;-1:-1:-1;;;;;90:10200:7;;12951:25:8;;90:10200:7;;;;;;;13196:11:8;90:10200:7;;;;;;13227:29:8;90:10200:7;;;13227:29:8;:::i;:::-;90:10200:7;;14010:21:8;:32;90:10200:7;;;14010:32:8;:::i;:::-;90:10200:7;;;;;;;5955:4;90:10200;;;;;1328:43:5;;90:10200:7;;;;1328:43:5;;;;;;90:10200:7;;;;;;;1328:43:5;;90:10200:7;;;;;;;;;;;;;;8507:421:5;90:10200:7;;;;8507:421:5;90:10200:7;8507:421:5;;;;;;;;;8942:15;;8960:26;;;:31;8942:68;8938:146;;-1:-1:-1;90:10200:7;;;5437:5;90:10200;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;90:10200:7;;;;;;;6619:63;90:10200;;14694:113:8;90:10200:7;;6561:25;90:10200;6619:63;90:10200;;;14790:15:8;90:10200:7;;;;14694:113:8;90:10200:7;;14790:15:8;;;;6619:63:7;;90:10200;;;;;;;;;;;;;;;;;;;;;;;6619:63;;;;5955:4;-1:-1:-1;90:10200:7;;;-1:-1:-1;;;90:10200:7;;;;;1328:43:5;;90:10200:7;8938:146:5;-1:-1:-1;;;9033:40:5;;90:10200:7;;1328:43:5;9033:40;;8942:68;5955:4:7;8994:16:5;;8942:68;;8507:421;90:10200:7;8507:421:5;;;;;;;;90:10200:7;-1:-1:-1;;;90:10200:7;;;;;1328:43:5;90:10200:7;;;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;;;-1:-1:-1;;;90:10200:7;;;;;;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;;;-1:-1:-1;;;90:10200:7;;;;;;;5581:107;-1:-1:-1;5669:19:7;90:10200;5658:30;;5581:107;;:73;90:10200;;;;;;;5650:4;90:10200;5612:34;90:10200;;;5612:34;90:10200;;;;5612:42;5581:73;;:27;5596:12;;;;5581:27;;90:10200;;;;;;;;;;;;;;10651:31:8;90:10200:7;;;;;;;;;;;;;;-1:-1:-1;;90:10200:7;;;;;;;1084:31:8;90:10200:7;1084:31:8;;;;;;90:10200:7;;;;;;;;1084:31:8;90:10200:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1340:4:8;90:10200:7;;;;;;;;;;;;;;;;;;;731:6:8;90:10200:7;;;;;;;;;;;;;;;;;7981:33:8;90:10200:7;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;90:10200:7;;;;;;;;;;;;;;;;;;;;;;;;9268:7:8;90:10200:7;;;;;;;;;;-1:-1:-1;;90:10200:7;;;;;;;6088:105:8;90:10200:7;6088:105:8;;;;;;90:10200:7;;;;;;;;6088:105:8;90:10200:7;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;90:10200:7;;;;;;;6200:57:8;;;;;90:10200:7;;;6200:57:8;90:10200:7;;;;;;;;;;;;;;;:::i;:::-;2227:103:3;;;:::i;:::-;90:10200:7;;;9049:5;90:10200;;9120:54;90:10200;;;;;;;;;;9143:10;9128:25;9120:54;:::i;:::-;9193:11;;;:27;;;90:10200;9193:72;;;90:10200;9193:105;;;90:10200;9185:166;;;:::i;:::-;90:10200;;;9397:13;90:10200;;;;;;;;;;;;;;;;;9482:16;90:10200;;9527:25;90:10200;;;9527:25;;90:10200;;;9556:4;90:10200;;;;;;;9527:33;:69;;;;90:10200;;;;;9527:25;9652:31;;90:10200;9652:35;;;;9644:66;9652:35;;9644:66;:::i;:::-;90:10200;9729:30;;9721:91;9762:28;90:10200;;9762:28;;90:10200;9729:61;;9721:91;:::i;:::-;9556:4;90:10200;;;;;;;;;;-1:-1:-1;;90:10200:7;9556:4;90:10200;;;-1:-1:-1;90:10200:7;;;9049:5;90:10200;;;;;;-1:-1:-1;;;;;90:10200:7;;12951:25:8;;90:10200:7;;;;;;;13196:11:8;90:10200:7;;13911:26:8;90:10200:7;;;13227:29:8;90:10200:7;;;13227:29:8;:::i;:::-;90:10200:7;;13911:26:8;:37;90:10200:7;;;13911:37:8;:::i;:::-;90:10200:7;;;;;;;9556:4;90:10200;;;;;1328:43:5;;90:10200:7;;;1328:43:5;;;;;;90:10200:7;;;;;;;1328:43:5;;90:10200:7;;;;;;;;;;;;;;;;;;;8507:421:5;;;;;;;;;90:10200:7;8507:421:5;;8942:15;;8960:26;;;:31;8942:68;8938:146;;90:10200:7;10086:62;90:10200;10086:62;90:10200;;;;9049:5;90:10200;;;;;;;;;;;;;14694:113:8;90:10200:7;;;;;;;;;;;10029:24;90:10200;;;;14790:15:8;90:10200:7;;;;14694:113:8;90:10200:7;;14790:15:8;;;;10086:62:7;;90:10200;;;;;;;;;;;;;;;;;;;;;;;8938:146:5;9033:40;;;90:10200:7;9033:40:5;90:10200:7;;1328:43:5;90:10200:7;9033:40:5;8942:68;9556:4:7;8994:16:5;;8942:68;;8507:421;90:10200:7;8507:421:5;;90:10200:7;8507:421:5;;;;;90:10200:7;;;;;;;;;1328:43:5;90:10200:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9527:69;90:10200;;;;;9527:69;;;9193:105;-1:-1:-1;9280:18:7;90:10200;9269:29;;9193:105;;:72;90:10200;;;;9224:16;90:10200;;9261:4;90:10200;9224:33;90:10200;;;9224:33;90:10200;;;;9224:41;9193:72;;:27;9208:12;;;;9193:27;;90:10200;;;;;;;;;;-1:-1:-1;;90:10200:7;;;;;683:5:8;90:10200:7;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;90:10200:7;;;;;;;1015:2:8;90:10200:7;;;;;;;;;-1:-1:-1;;90:10200:7;;;;;;;1068:2:8;90:10200:7;;;;;;;:::o;:::-;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;;;-1:-1:-1;;;90:10200:7;;;;;;;;;;;;;;;;;:::o;2454:604::-;90:10200;;2595:21;90:10200;;;;;;;;;;;;;;2728:14;90:10200;2728:14;;;90:10200;;2727:15;90:10200;;;2727:63;;2454:604;2727:104;;;;2454:604;2727:160;;;;2454:604;2727:208;;;;2454:604;2727:251;;;;;;2454:604;2709:320;;;3046:4;2454:604;:::o;2709:320::-;90:10200;3005:12;:::o;2727:251::-;2952:21;;;;90:10200;2952:26;2727:251;;;:208;2904:21;90:10200;;;;;2904:21;90:10200;;;;;;;;2727:208;;;;;:160;2848:28;;;;;;90:10200;2848:39;2727:160;;;:104;2808:23;;;90:10200;;;2807:24;;-1:-1:-1;2727:104:7;;:63;2771:19;90:10200;2759:31;;;;-1:-1:-1;2727:63:7;;2336:287:3;1759:1;2468:7;90:10200:7;2468:19:3;1759:1;;;2468:7;90:10200:7;2336:287:3:o;1759:1::-;90:10200:7;;-1:-1:-1;;;1759:1:3;;;;;;;;;;;90:10200:7;1759:1:3;90:10200:7;;;1759:1:3;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "845200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACC_PRECISION()": "381",
								"MONTHLY_ROYALTY()": "975",
								"MONTHLY_ROYALTY_LEVEL()": "258",
								"MONTH_DURATION()": "271",
								"PERCENTS_DIVIDER()": "153",
								"ROI_CAP_DIVIDER()": "500",
								"ROI_CAP_MULTIPLIER()": "412",
								"TIME_STEP()": "359",
								"TOP_ROYALTY()": "623",
								"TOP_ROYALTY_LEVEL()": "302",
								"WEEK_DURATION()": "535",
								"WeeklyCapping()": "909",
								"WeeklyTotalReward()": "2440",
								"canClaimMonthlyReward(uint256,uint256)": "13778",
								"claimMonthlyContestReward(uint256,uint256)": "infinite",
								"claimWeeklyContestReward(uint256,uint256)": "infinite",
								"communityAccPerUser()": "2660",
								"creatorWallet()": "2706",
								"currentMonthlyRound()": "2902",
								"currentMonthlyStartTime()": "2968",
								"currentWeeklyRound()": "2924",
								"currentWeeklyStartTime()": "3095",
								"defaultRefId()": "3034",
								"glbBoosterPackages(uint256)": "6655",
								"minLevelForGlbBooster(uint256)": "2985",
								"minLevelForPool(uint256)": "2347",
								"minPoolForGlbBooster(uint256)": "2787",
								"monthlyCapping()": "777",
								"monthlyTotalReward()": "2792",
								"packages(uint256)": "7183",
								"poolPackages(uint256)": "7139",
								"registeredUserIds(uint256)": "6853",
								"systemMaintance()": "3014",
								"teamDevelopment()": "3080",
								"topRoyaltyReward()": "2616",
								"topRoyaltyRound()": "2550",
								"topRoyaltyStartTime()": "2770",
								"totalUsers()": "2836",
								"usdt()": "2442"
							},
							"internal": {
								"_closeMonthlyRoyalty()": "infinite",
								"_closeTopRoyalty()": "infinite",
								"_closeWeeklyContest()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "1E0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1544,
									"end": 1553,
									"name": "PUSH",
									"source": 8,
									"value": "D02AB486CEDC0000"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1576,
									"end": 1585,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1617,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1640,
									"end": 1650,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1683,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1706,
									"end": 1716,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1749,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1806,
									"end": 1817,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1840,
									"end": 1851,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1886,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1909,
									"end": 1921,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D6310000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1944,
									"end": 1956,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC620000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1979,
									"end": 1992,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "1A0"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2015,
									"end": 2028,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "1C0"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 10290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6018,
									"end": 6023,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6025,
									"end": 6031,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A8829300000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6033,
									"end": 6040,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C00000"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6042,
									"end": 6049,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A88293000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6051,
									"end": 6059,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6061,
									"end": 6069,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A882930000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6071,
									"end": 6080,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 90,
									"end": 10290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1640,
									"end": 1650,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1683,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1706,
									"end": 1716,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1749,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1806,
									"end": 1817,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1840,
									"end": 1851,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1886,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 10290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6234,
									"end": 6235,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6243,
									"end": 6244,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6250,
									"end": 6252,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 90,
									"end": 10290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6304,
									"end": 6305,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6310,
									"end": 6311,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6243,
									"end": 6244,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6322,
									"end": 6324,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 90,
									"end": 10290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 191,
									"end": 206,
									"name": "TIMESTAMP",
									"source": 7
								},
								{
									"begin": 7971,
									"end": 7972,
									"name": "PUSH",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 191,
									"end": 206,
									"name": "TIMESTAMP",
									"source": 7
								},
								{
									"begin": 9421,
									"end": 9422,
									"name": "PUSH",
									"source": 8,
									"value": "3E"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 191,
									"end": 206,
									"name": "TIMESTAMP",
									"source": 7
								},
								{
									"begin": 10723,
									"end": 10724,
									"name": "PUSH",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8013,
									"end": 8014,
									"name": "PUSH",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 7926,
									"end": 7927,
									"name": "PUSH",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 9462,
									"end": 9463,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 9375,
									"end": 9376,
									"name": "PUSH",
									"source": 8,
									"value": "3D"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 10762,
									"end": 10763,
									"name": "PUSH",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 10681,
									"end": 10682,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "RETURN",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "PUSH",
									"source": 8,
									"value": "1C"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 90,
									"end": 10290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 90,
									"end": 10290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 90,
									"end": 10290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 90,
									"end": 10290,
									"name": "JUMP",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207c79dfd98841b58b8242055fc7d510748b26691483af1ab8ff61afa1bd0dca0a64736f6c634300081e0033",
									".code": [
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "1C234A8"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "16298056"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "2132D204"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "18"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "2350268F"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "23FD338E"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "2A891534"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "2AE0EE0D"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "2F48AB7D"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3080B5BC"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "32BC298C"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "32FCD966"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "375B43B4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "39AB3603"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4B8CBF9B"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4C2215E3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "58C7D352"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "44"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "5B62D1D5"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "76F5F700"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "78F6AD6D"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "7CDC65F2"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "7D846E38"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "7DD2B847"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "956A3228"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "9B40AB97"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "A59D17D1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "AE4708DC"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "BFF1F9E1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "C216212A"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "C8DF2908"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "C9ED0708"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "CA8E9121"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "D0A2FD79"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "E898FC38"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "E9E34A16"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "EBE0FF15"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "EC597E6F"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "F5D74D93"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "F63A6861"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "FDDC806F"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7934,
											"end": 7972,
											"name": "PUSH",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 794,
											"name": "PUSH",
											"source": 8,
											"value": "83D600"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 534,
											"end": 558,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7874,
											"end": 7881,
											"name": "PUSH",
											"source": 8,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 460,
											"end": 490,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9383,
											"end": 9422,
											"name": "PUSH",
											"source": 8,
											"value": "3E"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6264,
											"end": 6328,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6264,
											"end": 6328,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6264,
											"end": 6328,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6264,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6264,
											"end": 6328,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6328,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6328,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6264,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6264,
											"end": 6328,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7893,
											"end": 7927,
											"name": "PUSH",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9341,
											"end": 9376,
											"name": "PUSH",
											"source": 8,
											"value": "3D"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9320,
											"end": 9328,
											"name": "PUSH",
											"source": 8,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9429,
											"end": 9463,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10689,
											"end": 10724,
											"name": "PUSH",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6335,
											"end": 6396,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6396,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6396,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6335,
											"end": 6396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6396,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 839,
											"end": 847,
											"name": "PUSH",
											"source": 8,
											"value": "2514300"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 90,
											"end": 10290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 422,
											"end": 450,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7821,
											"end": 7827,
											"name": "PUSH",
											"source": 8,
											"value": "93A80"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10731,
											"end": 10763,
											"name": "PUSH",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 10290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5437,
											"end": 5442,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5508,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5531,
											"end": 5541,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5541,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5508,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5508,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5508,
											"end": 5562,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 5508,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5592,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5592,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5592,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 5581,
											"end": 5608,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5654,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 5581,
											"end": 5654,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5688,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 5581,
											"end": 5688,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 5573,
											"end": 5741,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5573,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5741,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 5573,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5815,
											"name": "PUSH",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5928,
											"end": 5951,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5928,
											"end": 5951,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5928,
											"end": 5951,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5928,
											"end": 5959,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5998,
											"end": 6019,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5998,
											"end": 6019,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5998,
											"end": 6019,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5998,
											"end": 6019,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6083,
											"end": 6116,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6083,
											"end": 6116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6083,
											"end": 6120,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6083,
											"end": 6120,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6083,
											"end": 6120,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6083,
											"end": 6120,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6075,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 6083,
											"end": 6120,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6083,
											"end": 6120,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6075,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6075,
											"end": 6143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6075,
											"end": 6143,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 6075,
											"end": 6143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6194,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6162,
											"end": 6194,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 6197,
											"end": 6227,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6227,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6227,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6227,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6227,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6154,
											"end": 6249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6249,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 6154,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6268,
											"end": 6308,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5437,
											"end": 5442,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13196,
											"end": 13207,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 13227,
											"end": 13256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13227,
											"end": 13256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 13227,
											"end": 13256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13256,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 13227,
											"end": 13256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14010,
											"end": 14031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14010,
											"end": 14042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14010,
											"end": 14042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 14010,
											"end": 14042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14010,
											"end": 14042,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 14010,
											"end": 14042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5437,
											"end": 5442,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "PUSH",
											"source": 7,
											"value": "8211032682F8FD8BE8FF252E0A106CDB6AD4B10427152B4D93C2BC9A1F11C3C2"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14694,
											"end": 14807,
											"name": "PUSH",
											"source": 8,
											"value": "F67C60BC8519C61563AC616D368A6DF646202C88D10744D736438BC4FBE2816"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6586,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14790,
											"end": 14805,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14694,
											"end": 14807,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14790,
											"end": 14805,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14790,
											"end": 14805,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14790,
											"end": 14805,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14790,
											"end": 14805,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "16995C9BC8185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B2103AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656C696769626C6520746F20636C61696D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "416C726561647920636C61696D656420666F72207468697320726F756E640000"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1038BAB0B634B334B2B21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5688,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 5581,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5669,
											"end": 5688,
											"name": "PUSH",
											"source": 7,
											"value": "3D"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5688,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5688,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 5581,
											"end": 5688,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5654,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 5581,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5650,
											"end": 5654,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5612,
											"end": 5646,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5612,
											"end": 5646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5612,
											"end": 5654,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5581,
											"end": 5654,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5608,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 5581,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5581,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 5581,
											"end": 5608,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10651,
											"end": 10682,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1340,
											"end": 1344,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 8014,
											"name": "PUSH",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9268,
											"end": 9275,
											"name": "PUSH",
											"source": 8,
											"value": "278D00"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6200,
											"end": 6257,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6257,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6257,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6200,
											"end": 6257,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6200,
											"end": 6257,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9049,
											"end": 9054,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9120,
											"end": 9174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9143,
											"end": 9153,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 9128,
											"end": 9153,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9120,
											"end": 9174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9120,
											"end": 9174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9120,
											"end": 9174,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 9120,
											"end": 9174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9204,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9204,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9204,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9220,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 9193,
											"end": 9220,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 9193,
											"end": 9265,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9298,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 9193,
											"end": 9298,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9185,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 9185,
											"end": 9351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9185,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9185,
											"end": 9351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9185,
											"end": 9351,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 9185,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9397,
											"end": 9410,
											"name": "PUSH",
											"source": 7,
											"value": "3B"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9482,
											"end": 9498,
											"name": "PUSH",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9527,
											"end": 9552,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9527,
											"end": 9552,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9527,
											"end": 9552,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9556,
											"end": 9560,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9527,
											"end": 9560,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9527,
											"end": 9596,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9527,
											"end": 9596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9527,
											"end": 9596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 9527,
											"end": 9596,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9527,
											"end": 9552,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 9652,
											"end": 9683,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9644,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9687,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9644,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 9644,
											"end": 9710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9644,
											"end": 9710,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 9644,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9729,
											"end": 9759,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9729,
											"end": 9759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9721,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 9762,
											"end": 9790,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9762,
											"end": 9790,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9762,
											"end": 9790,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9729,
											"end": 9790,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9729,
											"end": 9790,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9721,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 9721,
											"end": 9812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9721,
											"end": 9812,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 9721,
											"end": 9812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9556,
											"end": 9560,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9556,
											"end": 9560,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9049,
											"end": 9054,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12951,
											"end": 12976,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13196,
											"end": 13207,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13911,
											"end": 13937,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 13227,
											"end": 13256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13227,
											"end": 13256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 13227,
											"end": 13256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13227,
											"end": 13256,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 13227,
											"end": 13256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 13911,
											"end": 13937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13911,
											"end": 13948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13911,
											"end": 13948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 13911,
											"end": 13948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13911,
											"end": 13948,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 13911,
											"end": 13948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9556,
											"end": 9560,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10086,
											"end": 10148,
											"name": "PUSH",
											"source": 7,
											"value": "96EE4F374D0394C5383B347DC3B7EC04A1ECEDDCD2E25521157BCE21C42B24D5"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10086,
											"end": 10148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9049,
											"end": 9054,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14694,
											"end": 14807,
											"name": "PUSH",
											"source": 8,
											"value": "F67C60BC8519C61563AC616D368A6DF646202C88D10744D736438BC4FBE2816"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10029,
											"end": 10053,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14790,
											"end": 14805,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14694,
											"end": 14807,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14790,
											"end": 14805,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14790,
											"end": 14805,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14790,
											"end": 14805,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14790,
											"end": 14805,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 10086,
											"end": 10148,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10086,
											"end": 10148,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE7"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9556,
											"end": 9560,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "461BCD"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "E5"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F74207175616C6966696564206F7220616C726561647920636C61696D6564"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9527,
											"end": 9596,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 9527,
											"end": 9596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9527,
											"end": 9596,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9527,
											"end": 9596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 9527,
											"end": 9596,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9298,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 9193,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "PUSH",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9269,
											"end": 9298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9269,
											"end": 9298,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 9193,
											"end": 9298,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9265,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 9193,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9240,
											"name": "PUSH",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9261,
											"end": 9265,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 9224,
											"end": 9257,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9265,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 9193,
											"end": 9265,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9220,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 9193,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9208,
											"end": 9220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9208,
											"end": 9220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9208,
											"end": 9220,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9208,
											"end": 9220,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 9193,
											"end": 9220,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 683,
											"end": 688,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1015,
											"end": 1017,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD081E5BDD5C881858D8DBDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420757365724964206F7220726F756E644964206F7220726F75"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B99081BDC881B9BDD0818DB1BDCD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F2072657761726420746F20636C61696D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1B081D5CD95C9CC818DB185A5B5959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 3058,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2454,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "PUSH",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2728,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2728,
											"end": 2742,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2742,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2727,
											"end": 2790,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 3058,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2454,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2727,
											"end": 2831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 3058,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 2454,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2887,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2887,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 2727,
											"end": 2887,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 3058,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2454,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2935,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2935,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 2727,
											"end": 2935,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 3058,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 2454,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2978,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2978,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 2727,
											"end": 2978,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 3058,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 2454,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 3029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 2709,
											"end": 3029,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3050,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2454,
											"end": 3058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 3058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 3029,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 2709,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3005,
											"end": 3017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3005,
											"end": 3017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2978,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 2727,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2973,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2952,
											"end": 2973,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2973,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2978,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2978,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 2727,
											"end": 2978,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2935,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 2727,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2925,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2935,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2935,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 2727,
											"end": 2935,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2887,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 2727,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2876,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2876,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2848,
											"end": 2876,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2887,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2887,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2727,
											"end": 2887,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2831,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2727,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2808,
											"end": 2831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2808,
											"end": 2831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2808,
											"end": 2831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2831,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2831,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2727,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 2727,
											"end": 2831,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2790,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 2727,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2771,
											"end": 2790,
											"name": "PUSH",
											"source": 7,
											"value": "3D"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2790,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2790,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2790,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2790,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2727,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2727,
											"end": 2790,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 90,
											"end": 10290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/modules/ContestRoyalty.sol",
								"contracts/modules/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ACC_PRECISION()": "32fcd966",
							"MONTHLY_ROYALTY()": "f63a6861",
							"MONTHLY_ROYALTY_LEVEL()": "23fd338e",
							"MONTH_DURATION()": "2a891534",
							"PERCENTS_DIVIDER()": "01c234a8",
							"ROI_CAP_DIVIDER()": "58c7d352",
							"ROI_CAP_MULTIPLIER()": "375b43b4",
							"TIME_STEP()": "32bc298c",
							"TOP_ROYALTY()": "7dd2b847",
							"TOP_ROYALTY_LEVEL()": "2ae0ee0d",
							"WEEK_DURATION()": "76f5f700",
							"WeeklyCapping()": "ebe0ff15",
							"WeeklyTotalReward()": "3080b5bc",
							"canClaimMonthlyReward(uint256,uint256)": "7d846e38",
							"claimMonthlyContestReward(uint256,uint256)": "4c2215e3",
							"claimWeeklyContestReward(uint256,uint256)": "16298056",
							"communityAccPerUser()": "78f6ad6d",
							"creatorWallet()": "7cdc65f2",
							"currentMonthlyRound()": "c9ed0708",
							"currentMonthlyStartTime()": "e898fc38",
							"currentWeeklyRound()": "ca8e9121",
							"currentWeeklyStartTime()": "fddc806f",
							"defaultRefId()": "ec597e6f",
							"glbBoosterPackages(uint256)": "2350268f",
							"minLevelForGlbBooster(uint256)": "d0a2fd79",
							"minLevelForPool(uint256)": "2132d204",
							"minPoolForGlbBooster(uint256)": "956a3228",
							"monthlyCapping()": "c8df2908",
							"monthlyTotalReward()": "a59d17d1",
							"packages(uint256)": "c216212a",
							"poolPackages(uint256)": "ae4708dc",
							"registeredUserIds(uint256)": "39ab3603",
							"systemMaintance()": "e9e34a16",
							"teamDevelopment()": "f5d74d93",
							"topRoyaltyReward()": "5b62d1d5",
							"topRoyaltyRound()": "4b8cbf9b",
							"topRoyaltyStartTime()": "9b40ab97",
							"totalUsers()": "bff1f9e1",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUser\",\"type\":\"uint256\"}],\"name\":\"CommunityBonusDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"incomeType\",\"type\":\"uint256\"}],\"name\":\"IncomeDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Storage.IncomeType\",\"name\":\"incomeType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"IncomeDistribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromUserId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LotteryReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyRewardClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyRoyaltyQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uplineId\",\"type\":\"uint256\"}],\"name\":\"Registration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"level\",\"type\":\"string\"}],\"name\":\"RewardSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyRewardClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"depositType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upgradeTime\",\"type\":\"uint256\"}],\"name\":\"Upgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"matrixId\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"userId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"parentId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"}],\"name\":\"UserJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyContestQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyRewardClaim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACC_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTH_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEEK_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"canClaimMonthlyReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"claimMonthlyContestReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"claimWeeklyContestReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityAccPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultRefId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"glbBoosterPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minPoolForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"packages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredUserIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemMaintance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamDevelopment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/ContestRoyalty.sol\":\"ContestRoyalty\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/modules/ContestRoyalty.sol\":{\"keccak256\":\"0x108c02df0b2fe410087f3f2e0526177fa1e41176e05efb3a3dc0b9e88d6d1c4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8264fe0b3ec08ca8889cb1ed493842f7d2cebfa3121b0d2c0f608ac14c2a4c82\",\"dweb:/ipfs/QmZUer8uNKvbzKUodrKzKMs9tqQ3te6Ea5E4ynzP5DxPbz\"]},\"contracts/modules/Storage.sol\":{\"keccak256\":\"0xacae5da302f28de169d1cbda77be69425ebd20d5f6183b7571ba8b98beba6b08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96e0807d2dc0b6e3c4e42033aa9c22697441271e118a7f0a4a0ed1caa3103435\",\"dweb:/ipfs/QmYRA5p5wzuKoRLsHMCB78ziyguDQw3ntuuR6eERqyoH8U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1586,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "usdt",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)232"
							},
							{
								"astId": 1588,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "creatorWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1590,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "systemMaintance",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1592,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "teamDevelopment",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1594,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "defaultRefId",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1596,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "totalUsers",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1626,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "registeredUserIds",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1628,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "nonce",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1633,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "communityAccPerUser",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1637,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "communityDebt",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1686,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "packages",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1789,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "addressToId",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1794,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "users",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_struct(User)1738_storage)"
							},
							{
								"astId": 1799,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userIncomes",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint256,t_struct(UserIncome)1763_storage)"
							},
							{
								"astId": 1805,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "incomeHistory",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_array(t_struct(Income)1774_storage)dyn_storage)"
							},
							{
								"astId": 1812,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "teams",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 1816,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "matrixDirect",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1821,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "directReferrals",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1921,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "poolPackages",
								"offset": 0,
								"slot": "19",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1933,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "glbBoosterPackages",
								"offset": 0,
								"slot": "20",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1945,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "minLevelForPool",
								"offset": 0,
								"slot": "21",
								"type": "t_array(t_uint256)7_storage"
							},
							{
								"astId": 1958,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "minLevelForGlbBooster",
								"offset": 0,
								"slot": "28",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 1971,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "minPoolForGlbBooster",
								"offset": 0,
								"slot": "36",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 2005,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userPooltopup",
								"offset": 0,
								"slot": "44",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)1987_storage))"
							},
							{
								"astId": 2012,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userPooldtl",
								"offset": 0,
								"slot": "45",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)1982_storage))"
							},
							{
								"astId": 2019,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userChildren",
								"offset": 0,
								"slot": "46",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2026,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userIdPerPool",
								"offset": 0,
								"slot": "47",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2031,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "poolUsers",
								"offset": 0,
								"slot": "48",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2037,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userHasPool",
								"offset": 0,
								"slot": "49",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2044,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userBoosterdtl",
								"offset": 0,
								"slot": "50",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)1998_storage))"
							},
							{
								"astId": 2051,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userBoosterChildren",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2056,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "boosterUsers",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2062,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "userHasbooster",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2071,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "currentWeeklyRound",
								"offset": 0,
								"slot": "54",
								"type": "t_uint256"
							},
							{
								"astId": 2074,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "currentWeeklyStartTime",
								"offset": 0,
								"slot": "55",
								"type": "t_uint256"
							},
							{
								"astId": 2077,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "WeeklyTotalReward",
								"offset": 0,
								"slot": "56",
								"type": "t_uint256"
							},
							{
								"astId": 2112,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "weeklyContestdtl",
								"offset": 0,
								"slot": "57",
								"type": "t_mapping(t_uint256,t_struct(WeeklyContest)2096_storage)"
							},
							{
								"astId": 2117,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "weeklyQualifiedUsers",
								"offset": 0,
								"slot": "58",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2124,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "weeklyUserdtl",
								"offset": 0,
								"slot": "59",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2107_storage))"
							},
							{
								"astId": 2131,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "weeklyUserDirects",
								"offset": 0,
								"slot": "60",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2174,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "currentMonthlyRound",
								"offset": 0,
								"slot": "61",
								"type": "t_uint256"
							},
							{
								"astId": 2177,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "currentMonthlyStartTime",
								"offset": 0,
								"slot": "62",
								"type": "t_uint256"
							},
							{
								"astId": 2180,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "monthlyTotalReward",
								"offset": 0,
								"slot": "63",
								"type": "t_uint256"
							},
							{
								"astId": 2217,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "monthlyRoyaltydtl",
								"offset": 0,
								"slot": "64",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyalty)2199_storage)"
							},
							{
								"astId": 2220,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "monthlyQualifiedUsers",
								"offset": 0,
								"slot": "65",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2225,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "monthlyRoyaltyUserdtl",
								"offset": 0,
								"slot": "66",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2212_storage)"
							},
							{
								"astId": 2230,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "monthlyUserDirects",
								"offset": 0,
								"slot": "67",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2267,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "topRoyaltyRound",
								"offset": 0,
								"slot": "68",
								"type": "t_uint256"
							},
							{
								"astId": 2270,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "topRoyaltyStartTime",
								"offset": 0,
								"slot": "69",
								"type": "t_uint256"
							},
							{
								"astId": 2273,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "topRoyaltyReward",
								"offset": 0,
								"slot": "70",
								"type": "t_uint256"
							},
							{
								"astId": 2310,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "topRoyaltydtl",
								"offset": 0,
								"slot": "71",
								"type": "t_mapping(t_uint256,t_struct(topRoyalty)2292_storage)"
							},
							{
								"astId": 2313,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "topRoyaltyQualifiedUsers",
								"offset": 0,
								"slot": "72",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2318,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "topRoyaltyUserdtl",
								"offset": 0,
								"slot": "73",
								"type": "t_mapping(t_uint256,t_struct(topRoyaltyUser)2305_storage)"
							},
							{
								"astId": 2323,
								"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
								"label": "topRoyaltyUserDirects",
								"offset": 0,
								"slot": "74",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Deposit)1695_storage)dyn_storage": {
								"base": "t_struct(Deposit)1695_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Deposit[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Income)1774_storage)dyn_storage": {
								"base": "t_struct(Income)1774_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Income[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)7_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[7]",
								"numberOfBytes": "224"
							},
							"t_array(t_uint256)8_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[8]",
								"numberOfBytes": "256"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)232": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_array(t_struct(Income)1774_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.Income[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Income)1774_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)1998_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserBooster)1998_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)1982_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPool)1982_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)1987_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPoolTopup)1987_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2107_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(weeklyUser)2107_storage)"
							},
							"t_mapping(t_uint256,t_struct(User)1738_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)1738_storage"
							},
							"t_mapping(t_uint256,t_struct(UserBooster)1998_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserBooster)",
								"numberOfBytes": "32",
								"value": "t_struct(UserBooster)1998_storage"
							},
							"t_mapping(t_uint256,t_struct(UserIncome)1763_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserIncome)",
								"numberOfBytes": "32",
								"value": "t_struct(UserIncome)1763_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPool)1982_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPool)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPool)1982_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPoolTopup)1987_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPoolTopup)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPoolTopup)1987_storage"
							},
							"t_mapping(t_uint256,t_struct(WeeklyContest)2096_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.WeeklyContest)",
								"numberOfBytes": "32",
								"value": "t_struct(WeeklyContest)2096_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyalty)2199_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyalty)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyalty)2199_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2212_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyaltyUser)2212_storage"
							},
							"t_mapping(t_uint256,t_struct(topRoyalty)2292_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.topRoyalty)",
								"numberOfBytes": "32",
								"value": "t_struct(topRoyalty)2292_storage"
							},
							"t_mapping(t_uint256,t_struct(topRoyaltyUser)2305_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.topRoyaltyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(topRoyaltyUser)2305_storage"
							},
							"t_mapping(t_uint256,t_struct(weeklyUser)2107_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.weeklyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(weeklyUser)2107_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Deposit)1695_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Deposit",
								"members": [
									{
										"astId": 1688,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1690,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "withdrawn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1692,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "start",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1694,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "depositType",
										"offset": 0,
										"slot": "3",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Income)1774_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Income",
								"members": [
									{
										"astId": 1765,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "fromUserId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1767,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1769,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "packageLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1771,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1773,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "incomeType",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(User)1738_storage": {
								"encoding": "inplace",
								"label": "struct Storage.User",
								"members": [
									{
										"astId": 1697,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "account",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1701,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "deposits",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Deposit)1695_storage)dyn_storage"
									},
									{
										"astId": 1703,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "checkpoint",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1705,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "id",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1707,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "sponsorId",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1709,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "uplineId",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1711,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "level",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1713,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "directTeam",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1715,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "directPoolQualified",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 1717,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalMatrixTeam",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 1719,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalDeposit",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 1721,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "poollevel",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 1723,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "poolDeposit",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 1725,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "boosterlevel",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 1727,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "boosterDeposit",
										"offset": 0,
										"slot": "14",
										"type": "t_uint256"
									},
									{
										"astId": 1729,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "registrationTime",
										"offset": 0,
										"slot": "15",
										"type": "t_uint256"
									},
									{
										"astId": 1731,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "level10Time",
										"offset": 0,
										"slot": "16",
										"type": "t_uint256"
									},
									{
										"astId": 1733,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "level15Time",
										"offset": 0,
										"slot": "17",
										"type": "t_uint256"
									},
									{
										"astId": 1735,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "monthlyUserDirectCount",
										"offset": 0,
										"slot": "18",
										"type": "t_uint256"
									},
									{
										"astId": 1737,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "topRoyaltyDirectCount",
										"offset": 0,
										"slot": "19",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "640"
							},
							"t_struct(UserBooster)1998_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserBooster",
								"members": [
									{
										"astId": 1989,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1991,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "poolId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1993,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "parentId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1995,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "bonusCount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1997,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "joinTime",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserIncome)1763_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserIncome",
								"members": [
									{
										"astId": 1740,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalIncome",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1742,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "sponsorIncome",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1744,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "matrixIncome",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1746,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "levelBoosterIncome",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1748,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "royaltyIncome",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1750,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "royaltyIncomeClaimed",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1752,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "communityIncome",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1754,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "poolIncome",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1756,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "boosterIncome",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 1758,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "weeklyContestIncome",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 1760,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "monthlyRoyalty",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 1762,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "monthlyTopRoyalty",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "384"
							},
							"t_struct(UserPool)1982_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPool",
								"members": [
									{
										"astId": 1973,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1975,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "mainid",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1977,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "poolId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1979,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "parentId",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1981,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "bonusCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserPoolTopup)1987_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPoolTopup",
								"members": [
									{
										"astId": 1984,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "nextPoolAmt",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1986,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "reTopupAmt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(WeeklyContest)2096_storage": {
								"encoding": "inplace",
								"label": "struct Storage.WeeklyContest",
								"members": [
									{
										"astId": 2079,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2081,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2083,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2085,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2087,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2089,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2091,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2093,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2095,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyalty)2199_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyalty",
								"members": [
									{
										"astId": 2182,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2184,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2186,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2188,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2190,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2192,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2194,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2196,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2198,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyaltyUser)2212_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyaltyUser",
								"members": [
									{
										"astId": 2201,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2203,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "qualifiedRoundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2205,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2209,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_uint256,t_bool)"
									},
									{
										"astId": 2211,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "isQualified",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(topRoyalty)2292_storage": {
								"encoding": "inplace",
								"label": "struct Storage.topRoyalty",
								"members": [
									{
										"astId": 2275,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2277,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2279,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2281,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2283,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2285,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2287,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2289,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2291,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(topRoyaltyUser)2305_storage": {
								"encoding": "inplace",
								"label": "struct Storage.topRoyaltyUser",
								"members": [
									{
										"astId": 2294,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2296,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "qualifiedRoundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2298,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2302,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_uint256,t_bool)"
									},
									{
										"astId": 2304,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "isQualified",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(weeklyUser)2107_storage": {
								"encoding": "inplace",
								"label": "struct Storage.weeklyUser",
								"members": [
									{
										"astId": 2098,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2100,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "roundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2102,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2104,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 2106,
										"contract": "contracts/modules/ContestRoyalty.sol:ContestRoyalty",
										"label": "isQualified",
										"offset": 1,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/Storage.sol": {
				"Storage": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usersCount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUser",
									"type": "uint256"
								}
							],
							"name": "CommunityBonusDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "incomeType",
									"type": "uint256"
								}
							],
							"name": "IncomeDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum Storage.IncomeType",
									"name": "incomeType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "IncomeDistribution",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromUserId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LotteryReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyRewardClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyRoyaltyQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sponsor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "uplineId",
									"type": "uint256"
								}
							],
							"name": "Registration",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "level",
									"type": "string"
								}
							],
							"name": "RewardSent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyRewardClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "depositType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "upgradeTime",
									"type": "uint256"
								}
							],
							"name": "Upgrade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint8",
									"name": "matrixId",
									"type": "uint8"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "userId",
									"type": "uint32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "parentId",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "parentAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "position",
									"type": "uint8"
								}
							],
							"name": "UserJoined",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyContestQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyRewardClaim",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACC_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY_LEVEL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTH_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERCENTS_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TIME_STEP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY_LEVEL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WEEK_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "communityAccPerUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creatorWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultRefId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "glbBoosterPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minPoolForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "packages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "registeredUserIds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "systemMaintance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamDevelopment",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_4, callvalue)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sstore\n  mload(0x40)\n  0x01e0\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup3\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n    /* \"contracts/modules/Storage.sol\":1544:1553  15 * 1e18 */\n  0xd02ab486cedc0000\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1576:1585  25 * 1e18 */\n  0x015af1d78b58c40000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1608:1617  50 * 1e18 */\n  0x02b5e3af16b1880000\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1640:1650  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x60\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1673:1683  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x80\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1706:1716  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xa0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1739:1749  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xc0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1772:1783  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xe0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1806:1817  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0100\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1840:1851  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0120\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1874:1886  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0140\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1909:1921  25600 * 1e18 */\n  0x056bc75e2d6310000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0160\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1944:1956  51200 * 1e18 */\n  0x0ad78ebc5ac620000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0180\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1979:1992  102400 * 1e18 */\n  0x15af1d78b58c40000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x01a0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2015:2028  204800 * 1e18 */\n  0x2b5e3af16b1880000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x01c0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0b\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0f\n  0x0b\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0f\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  lt\n  tag_8\n  jumpi\ntag_9:\n  pop\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\ntag_10:\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0f\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_11\n  jumpi\n  tag_13\n  tag_1\n  jump\t// in\ntag_13:\n    /* \"contracts/modules/Storage.sol\":6018:6023  75e18 */\n  0x0410d586a20a4c0000\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":6025:6031  300e18 */\n  0x1043561a8829300000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6033:6040  1200e18 */\n  0x410d586a20a4c00000\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6042:6049  4800e18 */\n  0x01043561a88293000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6051:6059  19200e18 */\n  0x0410d586a20a4c000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6061:6069  76800e18 */\n  0x1043561a882930000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6071:6080  307200e18 */\n  0x410d586a20a4c0000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n  0x13\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  lt\n  tag_14\n  jumpi\ntag_15:\n  pop\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\ntag_16:\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_17\n  jumpi\n  tag_19\n  tag_2\n  jump\t// in\ntag_19:\n    /* \"contracts/modules/Storage.sol\":1640:1650  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1673:1683  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1706:1716  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1739:1749  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1772:1783  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1806:1817  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1840:1851  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1874:1886  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n  0x14\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  lt\n  tag_20\n  jumpi\ntag_21:\n  pop\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\ntag_22:\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_23\n  jumpi\n  tag_25\n  tag_1\n  jump\t// in\ntag_25:\n    /* \"contracts/modules/Storage.sol\":6234:6235  3 */\n  0x03\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6233:6257  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6233:6257  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6243:6244  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6233:6257  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0b\n  0x80\n    /* \"contracts/modules/Storage.sol\":6233:6257  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6250:6252  13 */\n  0x0d\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6233:6257  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0f\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6233:6257  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\ntag_26:\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_27\n  jumpi\n  tag_29\n  tag_2\n  jump\t// in\ntag_29:\n    /* \"contracts/modules/Storage.sol\":6304:6305  4 */\n  0x04\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6310:6311  6 */\n  0x06\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6243:6244  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6322:6324  10 */\n  0x0a\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0b\n  0xe0\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\ntag_30:\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_31\n  jumpi\n  tag_33\n  tag_2\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\ntag_34:\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":7926:7927  0 */\n  0x36\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":7971:7972  0 */\n  0x37\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8013:8014  0 */\n  0x38\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":9375:9376  1 */\n  0x3d\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":9421:9422  0 */\n  0x3e\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":9462:9463  0 */\n  0x3f\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":10681:10682  1 */\n  0x44\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":10723:10724  0 */\n  0x45\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":10762:10763  0 */\n  0x46\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_35:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":6373:6396  [0, 1, 1, 1, 1, 1, 1,1] */\n  0x24\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  add\n  sstore\n  add\n  jump(tag_34)\ntag_31:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":6303:6328  [4, 5, 6, 7, 8, 9, 10,11] */\n  0x1c\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  add\n  sstore\n  add\n  jump(tag_30)\ntag_27:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":6233:6257  [3, 5, 7, 9, 11, 13, 15] */\n  0x15\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  add\n  sstore\n  add\n  jump(tag_26)\ntag_23:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  add\n  jump(tag_22)\ntag_20:\n    /* \"contracts/modules/Storage.sol\":6123:6193  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n  tag_37\n  swap1\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec\n  add\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f4\n  tag_3\n  jump\t// in\ntag_37:\n  dup2\n  jump(tag_21)\ntag_17:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  add\n  jump(tag_16)\ntag_14:\n    /* \"contracts/modules/Storage.sol\":6017:6081  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n  tag_38\n  swap1\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090\n  add\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a097\n  tag_3\n  jump\t// in\ntag_38:\n  dup2\n  jump(tag_15)\ntag_11:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  add\n  jump(tag_10)\ntag_8:\n    /* \"contracts/modules/Storage.sol\":1533:2048  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n  tag_39\n  swap1\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n  add\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc8\n  tag_3\n  jump\t// in\ntag_39:\n  0x00\n  jump(tag_9)\ntag_6:\n  shl(0xe0, 0x4e487b71)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  mstore\n  mstore(0x04, 0x41)\n  0x24\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n  revert\ntag_4:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap1\n  0xe0\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  mload(0x40)\n  swap1\n  0x0100\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_3:\n  dup2\n  dup2\n  lt\n  tag_45\n  jumpi\n  pop\n  pop\n  jump\t// out\ntag_45:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_3)\nstop\n\nsub_0: assembly {\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_3, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_3:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01c234a8\n      eq\n      tag_5\n      jumpi\n      pop\n      dup1\n      0x2132d204\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2350268f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23fd338e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x2a891534\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x2ae0ee0d\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x3080b5bc\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x32bc298c\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x32fcd966\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x375b43b4\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x39ab3603\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x4b8cbf9b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x58c7d352\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x5b62d1d5\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x76f5f700\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x78f6ad6d\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x7cdc65f2\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x7dd2b847\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x956a3228\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x9b40ab97\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xa59d17d1\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xae4708dc\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xbff1f9e1\n      eq\n      tag_51\n      jumpi\n      dup1\n      0xc216212a\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xc8df2908\n      eq\n      tag_55\n      jumpi\n      dup1\n      0xc9ed0708\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xca8e9121\n      eq\n      tag_59\n      jumpi\n      dup1\n      0xd0a2fd79\n      eq\n      tag_61\n      jumpi\n      dup1\n      0xe898fc38\n      eq\n      tag_63\n      jumpi\n      dup1\n      0xe9e34a16\n      eq\n      tag_65\n      jumpi\n      dup1\n      0xebe0ff15\n      eq\n      tag_67\n      jumpi\n      dup1\n      0xec597e6f\n      eq\n      tag_69\n      jumpi\n      dup1\n      0xf5d74d93\n      eq\n      tag_71\n      jumpi\n      dup1\n      0xf63a6861\n      eq\n      tag_73\n      jumpi\n      0xfddc806f\n      eq\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7934:7972  uint public currentWeeklyStartTime = 0 */\n      0x37\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_79:\n      0x00\n      dup1\n      revert\n    tag_73:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":786:794  100 days */\n      0x83d600\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_71:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x04)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_69:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":534:558  uint public defaultRefId */\n      0x05\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_67:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":7874:7881  1000e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_65:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":460:490  address public systemMaintance */\n      0x03\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_63:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":9383:9422  uint public currentMonthlyStartTime = 0 */\n      0x3e\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_61:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":6264:6328  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":6264:6328  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      0x1c\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_59:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7893:7927  uint public currentWeeklyRound = 0 */\n      0x36\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_57:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":9341:9376  uint public currentMonthlyRound = 1 */\n      0x3d\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_55:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":9320:9328  10000e18 */\n      0x021e19e0c9bab2400000\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_53:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":1508:2048  uint[] public packages = [... */\n      0x0b\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":1508:2048  uint[] public packages = [... */\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x0b\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/modules/Storage.sol\":1508:2048  uint[] public packages = [... */\n      0x0b\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_129:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_51:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":565:587  uint public totalUsers */\n      0x06\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_49:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":5988:6081  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x13\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":5988:6081  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x13\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/modules/Storage.sol\":5988:6081  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x13\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_47:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":9429:9463  uint public monthlyTotalReward = 0 */\n      0x3f\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_45:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":10689:10724  uint public topRoyaltyStartTime = 0 */\n      0x45\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_43:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":6335:6396  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":6335:6396  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      0x24\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_41:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":839:847  450 days */\n      0x02514300\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_39:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":422:450  address public creatorWallet */\n      0x02\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_37:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":1351:1385  uint256 public communityAccPerUser */\n      0x09\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_35:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":7821:7827  7 days */\n      0x093a80\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_33:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":10731:10763  uint public topRoyaltyReward = 0 */\n      0x46\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_31:\n      tag_1\n      jump\t// in\n    tag_29:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":10651:10682  uint public topRoyaltyRound = 1 */\n      0x44\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_27:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":1084:1115  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":1084:1115  uint[] public registeredUserIds */\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x07\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/modules/Storage.sol\":1084:1115  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_25:\n      tag_2\n      jump\t// in\n    tag_23:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1340:1344  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_21:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":731:737  1 days */\n      0x015180\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_19:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7981:8014  uint public WeeklyTotalReward = 0 */\n      0x38\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_17:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x01)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_13:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":9268:9275  30 days */\n      0x278d00\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_9:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":6088:6193  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":6088:6193  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x14\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/modules/Storage.sol\":6088:6193  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_7:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x07\n        /* \"contracts/modules/Storage.sol\":6200:6257  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":6200:6257  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      0x15\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_5:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      dup1\n        /* \"contracts/modules/Storage.sol\":683:688  10000 */\n      0x2710\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap3\n      mstore\n      return\n    tag_1:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1015:1017  10 */\n      0x0a\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_2:\n      jumpi(tag_79, callvalue)\n      jumpi(tag_79, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1068:1070  15 */\n      0x0f\n        /* \"contracts/modules/Storage.sol\":292:18044  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n\n    auxdata: 0xa2646970667358221220fff7f822c84acb57db0b940879846d4dea7c9a388e34b0a78feed4ebc492b4b264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"allocate_memory": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_3495": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"clear_storage_range_uint256": {
									"entryPoint": 1390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523461052b5760015f556040516101e081016001600160401b038111828210176105175760405267d02ab486cedc0000815268015af1d78b58c4000060208201526802b5e3af16b1880000604082015268056bc75e2d631000006060820152680ad78ebc5ac620000060808201526815af1d78b58c40000060a0820152682b5e3af16b1880000060c08201526856bc75e2d63100000060e082015268ad78ebc5ac6200000061010082015269015af1d78b58c40000006101208201526902b5e3af16b18800000061014082015269056bc75e2d6310000000610160820152690ad78ebc5ac6200000006101808201526915af1d78b58c400000006101a0820152692b5e3af16b18800000006101c0820152600b54600f600b5580600f106104c1575b50600b5f5260205f20905f5b600f81106104a45761014161052f565b680410d586a20a4c00008152681043561a8829300000602082015268410d586a20a4c0000060408201526901043561a882930000006060820152690410d586a20a4c0000006080820152691043561a88293000000060a082015269410d586a20a4c000000060c082015260135460076013558060071061044e575b5060135f5260205f20905f5b60078110610431576101d861054e565b68056bc75e2d631000008152680ad78ebc5ac620000060208201526815af1d78b58c4000006040820152682b5e3af16b1880000060608201526856bc75e2d631000000608082015268ad78ebc5ac6200000060a082015269015af1d78b58c400000060c08201526902b5e3af16b18800000060e08201526014546008601455806008106103db575b5060145f5260205f20905f5b600881106103be5761027c61052f565b60038152600560208201526007604082015260096060820152600b6080820152600d60a0820152600f60c08201525f5b600781106103a6576102bc61054e565b6004815260056020820152600660408201526007606082015260086080820152600960a0820152600a60c0820152600b60e08201525f5b6008811061038e5761030361054e565b5f815260016020820152600160408201526001606082015260016080820152600160a0820152600160c0820152600160e08201525f5b60088110610376575f6036555f6037555f6038556001603d555f603e555f603f5560016044555f6045555f60465560405161073390816105858239f35b600190602060ff845116930192816024015501610339565b600190602060ff84511693019281601c0155016102f3565b600190602060ff8451169301928160150155016102ac565b81516001600160501b03168184015560209091019060010161026c565b60145f5261042b907fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec017fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f461056e565b81610260565b81516001600160501b0316818401556020909101906001016101c8565b60135f5261049e907f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090017f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09761056e565b816101bc565b81516001600160501b031681840155602090910190600101610131565b600b5f52610511907f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9017f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc861056e565b5f610125565b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b6040519060e082016001600160401b0381118382101761051757604052565b6040519061010082016001600160401b0381118382101761051757604052565b818110610579575050565b5f815560010161056e56fe6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a8146106ad575080632132d204146106815780632350268f1461062757806323fd338e146105055780632a8915341461060a5780632ae0ee0d146105815780632f48ab7d146105e25780633080b5bc146105c557806332bc298c146105a857806332fcd96614610586578063375b43b41461058157806339ab3603146105275780634b8cbf9b1461050a57806358c7d352146105055780635b62d1d5146104e857806376f5f700146104cb57806378f6ad6d146104ae5780637cdc65f2146104865780637dd2b84714610468578063956a32281461043c5780639b40ab971461041f578063a59d17d114610402578063ae4708dc146103a8578063bff1f9e11461038b578063c216212a1461031d578063c8df2908146102f9578063c9ed0708146102dc578063ca8e9121146102bf578063d0a2fd7914610293578063e898fc3814610276578063e9e34a161461024e578063ebe0ff151461022b578063ec597e6f1461020e578063f5d74d93146101e6578063f63a6861146101c95763fddc806f146101a8575f80fd5b346101c5575f3660031901126101c5576020603754604051908152f35b5f80fd5b346101c5575f3660031901126101c55760206040516283d6008152f35b346101c5575f3660031901126101c5576004546040516001600160a01b039091168152602090f35b346101c5575f3660031901126101c5576020600554604051908152f35b346101c5575f3660031901126101c5576020604051683635c9adc5dea000008152f35b346101c5575f3660031901126101c5576003546040516001600160a01b039091168152602090f35b346101c5575f3660031901126101c5576020603e54604051908152f35b346101c55760203660031901126101c55760043560088110156101c557602090601c0154604051908152f35b346101c5575f3660031901126101c5576020603654604051908152f35b346101c5575f3660031901126101c5576020603d54604051908152f35b346101c5575f3660031901126101c557602060405169021e19e0c9bab24000008152f35b346101c55760203660031901126101c557600435600b548110156101c557600b5481101561037757600b5f527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b346101c5575f3660031901126101c5576020600654604051908152f35b346101c55760203660031901126101c5576004356013548110156101c5576013548110156103775760135f527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900154604051908152602090f35b346101c5575f3660031901126101c5576020603f54604051908152f35b346101c5575f3660031901126101c5576020604554604051908152f35b346101c55760203660031901126101c55760043560088110156101c55760209060240154604051908152f35b346101c5575f3660031901126101c557602060405163025143008152f35b346101c5575f3660031901126101c5576002546040516001600160a01b039091168152602090f35b346101c5575f3660031901126101c5576020600954604051908152f35b346101c5575f3660031901126101c557602060405162093a808152f35b346101c5575f3660031901126101c5576020604654604051908152f35b6106c7565b346101c5575f3660031901126101c5576020604454604051908152f35b346101c55760203660031901126101c5576004356007548110156101c5576007548110156103775760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b6106e2565b346101c5575f3660031901126101c5576020604051670de0b6b3a76400008152f35b346101c5575f3660031901126101c5576020604051620151808152f35b346101c5575f3660031901126101c5576020603854604051908152f35b346101c5575f3660031901126101c5576001546040516001600160a01b039091168152602090f35b346101c5575f3660031901126101c557602060405162278d008152f35b346101c55760203660031901126101c5576004356014548110156101c5576014548110156103775760145f527fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec0154604051908152602090f35b346101c55760203660031901126101c55760043560078110156101c55760209060150154604051908152f35b346101c5575f3660031901126101c5578061271060209252f35b346101c5575f3660031901126101c5576020604051600a8152f35b346101c5575f3660031901126101c5576020604051600f8152f3fea2646970667358221220fff7f822c84acb57db0b940879846d4dea7c9a388e34b0a78feed4ebc492b4b264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x52B JUMPI PUSH1 0x1 PUSH0 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x517 JUMPI PUSH1 0x40 MSTORE PUSH8 0xD02AB486CEDC0000 DUP2 MSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH2 0x100 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH2 0x120 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH2 0x140 DUP3 ADD MSTORE PUSH10 0x56BC75E2D6310000000 PUSH2 0x160 DUP3 ADD MSTORE PUSH10 0xAD78EBC5AC620000000 PUSH2 0x180 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C40000000 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B1880000000 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xB SLOAD PUSH1 0xF PUSH1 0xB SSTORE DUP1 PUSH1 0xF LT PUSH2 0x4C1 JUMPI JUMPDEST POP PUSH1 0xB PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0xF DUP2 LT PUSH2 0x4A4 JUMPI PUSH2 0x141 PUSH2 0x52F JUMP JUMPDEST PUSH9 0x410D586A20A4C0000 DUP2 MSTORE PUSH9 0x1043561A8829300000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x410D586A20A4C00000 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1043561A88293000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH10 0x1043561A882930000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C0000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH1 0x7 PUSH1 0x13 SSTORE DUP1 PUSH1 0x7 LT PUSH2 0x44E JUMPI JUMPDEST POP PUSH1 0x13 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x431 JUMPI PUSH2 0x1D8 PUSH2 0x54E JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x14 SLOAD PUSH1 0x8 PUSH1 0x14 SSTORE DUP1 PUSH1 0x8 LT PUSH2 0x3DB JUMPI JUMPDEST POP PUSH1 0x14 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x3BE JUMPI PUSH2 0x27C PUSH2 0x52F JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0xC0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x3A6 JUMPI PUSH2 0x2BC PUSH2 0x54E JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x38E JUMPI PUSH2 0x303 PUSH2 0x54E JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x376 JUMPI PUSH0 PUSH1 0x36 SSTORE PUSH0 PUSH1 0x37 SSTORE PUSH0 PUSH1 0x38 SSTORE PUSH1 0x1 PUSH1 0x3D SSTORE PUSH0 PUSH1 0x3E SSTORE PUSH0 PUSH1 0x3F SSTORE PUSH1 0x1 PUSH1 0x44 SSTORE PUSH0 PUSH1 0x45 SSTORE PUSH0 PUSH1 0x46 SSTORE PUSH1 0x40 MLOAD PUSH2 0x733 SWAP1 DUP2 PUSH2 0x585 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x24 ADD SSTORE ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x1C ADD SSTORE ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x15 ADD SSTORE ADD PUSH2 0x2AC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x26C JUMP JUMPDEST PUSH1 0x14 PUSH0 MSTORE PUSH2 0x42B SWAP1 PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4 PUSH2 0x56E JUMP JUMPDEST DUP2 PUSH2 0x260 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x13 PUSH0 MSTORE PUSH2 0x49E SWAP1 PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097 PUSH2 0x56E JUMP JUMPDEST DUP2 PUSH2 0x1BC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x131 JUMP JUMPDEST PUSH1 0xB PUSH0 MSTORE PUSH2 0x511 SWAP1 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8 PUSH2 0x56E JUMP JUMPDEST PUSH0 PUSH2 0x125 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x100 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x579 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x56E JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0x6AD JUMPI POP DUP1 PUSH4 0x2132D204 EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0x627 JUMPI DUP1 PUSH4 0x23FD338E EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0x2AE0EE0D EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x4B8CBF9B EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0x5B62D1D5 EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x7DD2B847 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x9B40AB97 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xF63A6861 EQ PUSH2 0x1C9 JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x1A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x83D600 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x3E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x3D SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x377 JUMPI PUSH1 0xB PUSH0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x377 JUMPI PUSH1 0x13 PUSH0 MSTORE PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x45 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2514300 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x46 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x44 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x377 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x377 JUMPI PUSH1 0x14 PUSH0 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xF7 EXTCALL 0x22 0xC8 BLOBBASEFEE 0xCB JUMPI 0xDB SIGNEXTEND SWAP5 ADDMOD PUSH26 0x846D4DEA7C9A388E34B0A78FEED4EBC492B4B264736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "292:17752:8:-:0;;;;;;1716:1:3;1821:22;292:17752:8;;;;;;-1:-1:-1;;;;;292:17752:8;;;;;;;;;;1544:9;292:17752;;1576:9;1533:515;;;292:17752;1608:9;292:17752;1533:515;;292:17752;1640:10;1533:515;;;292:17752;1673:10;1533:515;;;292:17752;1706:10;1533:515;;;292:17752;1739:10;1533:515;;;292:17752;1772:11;1533:515;;;292:17752;1806:11;1533:515;;;292:17752;1840:11;1533:515;;;292:17752;1874:12;1533:515;;;292:17752;1909:12;1533:515;;;292:17752;1944:12;1533:515;;;292:17752;1979:13;1533:515;;;292:17752;2015:13;1533:515;;;292:17752;1533:515;292:17752;1533:515;;292:17752;;1533:515;292:17752;;;-1:-1:-1;292:17752:8;1533:515;1821:22:3;292:17752:8;1533:515;1821:22:3;292:17752:8;;1821:22:3;292:17752:8;1533:515;292:17752;;;;;;:::i;:::-;6018:5;292:17752;;6025:6;1533:515;6017:64;;292:17752;6033:7;292:17752;6017:64;;292:17752;6042:7;1533:515;6017:64;;292:17752;6051:8;1533:515;6017:64;;292:17752;6061:8;1533:515;6017:64;;292:17752;6071:9;1533:515;6017:64;;292:17752;6017:64;292:17752;6017:64;;292:17752;;6017:64;292:17752;;;;;6017:64;1821:22:3;292:17752:8;1533:515;1821:22:3;292:17752:8;;1821:22:3;292:17752:8;6017:64;292:17752;;;;;;:::i;:::-;1640:10;292:17752;;1673:10;1533:515;6123:70;;292:17752;1706:10;292:17752;6123:70;;292:17752;1739:10;1533:515;6123:70;;292:17752;1772:11;1533:515;6123:70;;292:17752;1806:11;1533:515;6123:70;;292:17752;1840:11;1533:515;6123:70;;292:17752;1874:12;1533:515;6123:70;;292:17752;6123:70;292:17752;6123:70;;292:17752;;6123:70;292:17752;;;;;6123:70;1821:22:3;292:17752:8;1533:515;1821:22:3;292:17752:8;;1821:22:3;292:17752:8;6123:70;292:17752;;;;;;:::i;:::-;6234:1;292:17752;;;1533:515;6233:24;;292:17752;6017:64;292:17752;6233:24;;292:17752;6243:1;1533:515;6233:24;;292:17752;1533:515;;6233:24;;292:17752;6250:2;1533:515;6233:24;;292:17752;1533:515;;6233:24;;292:17752;1821:22:3;292:17752:8;6017:64;292:17752;;;;;;:::i;:::-;6304:1;292:17752;;;1533:515;6303:25;;292:17752;6310:1;292:17752;6303:25;;292:17752;6017:64;1533:515;6303:25;;292:17752;6123:70;1533:515;6303:25;;292:17752;6243:1;1533:515;6303:25;;292:17752;6322:2;1533:515;6303:25;;292:17752;1533:515;;6303:25;;292:17752;1821:22:3;292:17752:8;6123:70;292:17752;;;;;;:::i;:::-;1821:22:3;292:17752:8;;1716:1:3;1533:515:8;6373:23;;292:17752;1716:1:3;292:17752:8;6373:23;;292:17752;1716:1:3;1533:515:8;6373:23;;292:17752;1716:1:3;1533:515:8;6373:23;;292:17752;1716:1:3;1533:515:8;6373:23;;292:17752;1716:1:3;1533:515:8;6373:23;;292:17752;1716:1:3;1533:515:8;6373:23;;292:17752;1821:22:3;292:17752:8;6123:70;292:17752;;;;1821:22:3;7926:1:8;292:17752;1821:22:3;7971:1:8;292:17752;1821:22:3;8013:1:8;292:17752;1716:1:3;9375::8;292:17752;1821:22:3;9421:1:8;292:17752;1821:22:3;9462:1:8;292:17752;1716:1:3;10681::8;292:17752;1821:22:3;10723:1:8;292:17752;1821:22:3;10762:1:8;292:17752;;;;;;;;;;;1716:1:3;292:17752:8;1533:515;292:17752;;;;;;;;6373:23;292:17752;;;;;;1716:1:3;292:17752:8;1533:515;292:17752;;;;;;;;6303:25;292:17752;;;;;;1716:1:3;292:17752:8;1533:515;292:17752;;;;;;;;6233:24;292:17752;;;;;;;;-1:-1:-1;;;;;292:17752:8;;;;;1533:515;292:17752;;;;1716:1:3;292:17752:8;;;;6123:70;1821:22:3;292:17752:8;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;292:17752:8;;;;;1533:515;292:17752;;;;1716:1:3;292:17752:8;;;;6017:64;1821:22:3;292:17752:8;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;292:17752:8;;;;;1533:515;292:17752;;;;1716:1:3;292:17752:8;;;;1533:515;1821:22:3;292:17752:8;;;;;;;:::i;:::-;;;;;;;;1821:22:3;292:17752:8;;;;;1821:22:3;292:17752:8;;;;;;;;;;;;-1:-1:-1;;;;;292:17752:8;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;292:17752:8;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"external_fun_MONTHLY_ROYALTY_LEVEL": {
									"entryPoint": 1735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_TOP_ROYALTY_LEVEL": {
									"entryPoint": 1762,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a8146106ad575080632132d204146106815780632350268f1461062757806323fd338e146105055780632a8915341461060a5780632ae0ee0d146105815780632f48ab7d146105e25780633080b5bc146105c557806332bc298c146105a857806332fcd96614610586578063375b43b41461058157806339ab3603146105275780634b8cbf9b1461050a57806358c7d352146105055780635b62d1d5146104e857806376f5f700146104cb57806378f6ad6d146104ae5780637cdc65f2146104865780637dd2b84714610468578063956a32281461043c5780639b40ab971461041f578063a59d17d114610402578063ae4708dc146103a8578063bff1f9e11461038b578063c216212a1461031d578063c8df2908146102f9578063c9ed0708146102dc578063ca8e9121146102bf578063d0a2fd7914610293578063e898fc3814610276578063e9e34a161461024e578063ebe0ff151461022b578063ec597e6f1461020e578063f5d74d93146101e6578063f63a6861146101c95763fddc806f146101a8575f80fd5b346101c5575f3660031901126101c5576020603754604051908152f35b5f80fd5b346101c5575f3660031901126101c55760206040516283d6008152f35b346101c5575f3660031901126101c5576004546040516001600160a01b039091168152602090f35b346101c5575f3660031901126101c5576020600554604051908152f35b346101c5575f3660031901126101c5576020604051683635c9adc5dea000008152f35b346101c5575f3660031901126101c5576003546040516001600160a01b039091168152602090f35b346101c5575f3660031901126101c5576020603e54604051908152f35b346101c55760203660031901126101c55760043560088110156101c557602090601c0154604051908152f35b346101c5575f3660031901126101c5576020603654604051908152f35b346101c5575f3660031901126101c5576020603d54604051908152f35b346101c5575f3660031901126101c557602060405169021e19e0c9bab24000008152f35b346101c55760203660031901126101c557600435600b548110156101c557600b5481101561037757600b5f527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b346101c5575f3660031901126101c5576020600654604051908152f35b346101c55760203660031901126101c5576004356013548110156101c5576013548110156103775760135f527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900154604051908152602090f35b346101c5575f3660031901126101c5576020603f54604051908152f35b346101c5575f3660031901126101c5576020604554604051908152f35b346101c55760203660031901126101c55760043560088110156101c55760209060240154604051908152f35b346101c5575f3660031901126101c557602060405163025143008152f35b346101c5575f3660031901126101c5576002546040516001600160a01b039091168152602090f35b346101c5575f3660031901126101c5576020600954604051908152f35b346101c5575f3660031901126101c557602060405162093a808152f35b346101c5575f3660031901126101c5576020604654604051908152f35b6106c7565b346101c5575f3660031901126101c5576020604454604051908152f35b346101c55760203660031901126101c5576004356007548110156101c5576007548110156103775760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b6106e2565b346101c5575f3660031901126101c5576020604051670de0b6b3a76400008152f35b346101c5575f3660031901126101c5576020604051620151808152f35b346101c5575f3660031901126101c5576020603854604051908152f35b346101c5575f3660031901126101c5576001546040516001600160a01b039091168152602090f35b346101c5575f3660031901126101c557602060405162278d008152f35b346101c55760203660031901126101c5576004356014548110156101c5576014548110156103775760145f527fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec0154604051908152602090f35b346101c55760203660031901126101c55760043560078110156101c55760209060150154604051908152f35b346101c5575f3660031901126101c5578061271060209252f35b346101c5575f3660031901126101c5576020604051600a8152f35b346101c5575f3660031901126101c5576020604051600f8152f3fea2646970667358221220fff7f822c84acb57db0b940879846d4dea7c9a388e34b0a78feed4ebc492b4b264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0x6AD JUMPI POP DUP1 PUSH4 0x2132D204 EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0x627 JUMPI DUP1 PUSH4 0x23FD338E EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0x2AE0EE0D EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x4B8CBF9B EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0x5B62D1D5 EQ PUSH2 0x4E8 JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x7DD2B847 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x9B40AB97 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xF63A6861 EQ PUSH2 0x1C9 JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x1A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x83D600 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x3E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x3D SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x377 JUMPI PUSH1 0xB PUSH0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x377 JUMPI PUSH1 0x13 PUSH0 MSTORE PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x45 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2514300 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x46 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x44 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x377 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x377 JUMPI PUSH1 0x14 PUSH0 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x1C5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C5 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C5 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xF7 EXTCALL 0x22 0xC8 BLOBBASEFEE 0xCB JUMPI 0xDB SIGNEXTEND SWAP5 ADDMOD PUSH26 0x846D4DEA7C9A388E34B0A78FEED4EBC492B4B264736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "292:17752:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;7934:38;292:17752;;;;;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;;786:8;292:17752;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;;;-1:-1:-1;;;;;292:17752:8;;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;534:24;292:17752;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;;7874:7;292:17752;;;;;;;;;-1:-1:-1;;292:17752:8;;;;460:30;292:17752;;;-1:-1:-1;;;;;292:17752:8;;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;9383:39;292:17752;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;;6264:64;;;;;292:17752;;6264:64;292:17752;;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;7893:34;292:17752;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;9341:35;292:17752;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;;9320:8;292:17752;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;1508:540;292:17752;1508:540;;;;;;292:17752;;;;;;1508:540;292:17752;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;565:22;292:17752;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;5988:93;292:17752;5988:93;;;;;;292:17752;;;;;;5988:93;292:17752;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;9429:34;292:17752;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;10689:35;292:17752;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;;6335:61;;;;;292:17752;;6335:61;292:17752;;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;;839:8;292:17752;;;;;;;;;-1:-1:-1;;292:17752:8;;;;422:28;292:17752;;;-1:-1:-1;;;;;292:17752:8;;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;1351:34;292:17752;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;;7821:6;292:17752;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;10731:32;292:17752;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;292:17752:8;;;;;10651:31;292:17752;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;1084:31;292:17752;1084:31;;;;;;292:17752;;;;;;1084:31;292:17752;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;292:17752:8;;;;;;;1340:4;292:17752;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;;731:6;292:17752;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;7981:33;292:17752;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;;;-1:-1:-1;;;;;292:17752:8;;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;;9268:7;292:17752;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;6088:105;292:17752;6088:105;;;;;;292:17752;;;;;;6088:105;292:17752;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;;6200:57;;;;;292:17752;;6200:57;292:17752;;;;;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;683:5;292:17752;;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;;1015:2;292:17752;;;;;;;;;-1:-1:-1;;292:17752:8;;;;;;;1068:2;292:17752;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "368600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACC_PRECISION()": "351",
								"MONTHLY_ROYALTY()": "901",
								"MONTHLY_ROYALTY_LEVEL()": "231",
								"MONTH_DURATION()": "241",
								"PERCENTS_DIVIDER()": "148",
								"ROI_CAP_DIVIDER()": "451",
								"ROI_CAP_MULTIPLIER()": "385",
								"TIME_STEP()": "329",
								"TOP_ROYALTY()": "549",
								"TOP_ROYALTY_LEVEL()": "275",
								"WEEK_DURATION()": "483",
								"WeeklyCapping()": "835",
								"WeeklyTotalReward()": "2410",
								"communityAccPerUser()": "2608",
								"creatorWallet()": "2654",
								"currentMonthlyRound()": "2828",
								"currentMonthlyStartTime()": "2894",
								"currentWeeklyRound()": "2850",
								"currentWeeklyStartTime()": "3023",
								"defaultRefId()": "2960",
								"glbBoosterPackages(uint256)": "6571",
								"minLevelForGlbBooster(uint256)": "2910",
								"minLevelForPool(uint256)": "2316",
								"minPoolForGlbBooster(uint256)": "2712",
								"monthlyCapping()": "703",
								"monthlyTotalReward()": "2718",
								"packages(uint256)": "7055",
								"poolPackages(uint256)": "7011",
								"registeredUserIds(uint256)": "6769",
								"systemMaintance()": "2940",
								"teamDevelopment()": "3006",
								"topRoyaltyReward()": "2564",
								"topRoyaltyRound()": "2520",
								"topRoyaltyStartTime()": "2696",
								"totalUsers()": "2762",
								"usdt()": "2412"
							},
							"internal": {
								"_distributeIncome(uint256,uint256,uint256,uint256,enum Storage.IncomeType)": "infinite",
								"_monthlyRoyaltyQualifier(uint256,uint256)": "infinite",
								"_sendToCreator(uint256)": "infinite",
								"_tryMonthlyRoyaltyQualify(uint256,uint256)": "infinite",
								"_tryWeeklyContestQualify(uint256,uint256)": "infinite",
								"_weeklyContestQualifier(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "1E0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1544,
									"end": 1553,
									"name": "PUSH",
									"source": 8,
									"value": "D02AB486CEDC0000"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1576,
									"end": 1585,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1608,
									"end": 1617,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1640,
									"end": 1650,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1673,
									"end": 1683,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1706,
									"end": 1716,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1739,
									"end": 1749,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1806,
									"end": 1817,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1840,
									"end": 1851,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1886,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1909,
									"end": 1921,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D6310000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1944,
									"end": 1956,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC620000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1979,
									"end": 1992,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "1A0"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2015,
									"end": 2028,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "1C0"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 18044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6018,
									"end": 6023,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6025,
									"end": 6031,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A8829300000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6033,
									"end": 6040,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C00000"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6042,
									"end": 6049,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A88293000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6051,
									"end": 6059,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6061,
									"end": 6069,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A882930000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6071,
									"end": 6080,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 18044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1640,
									"end": 1650,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1673,
									"end": 1683,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1706,
									"end": 1716,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1739,
									"end": 1749,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1806,
									"end": 1817,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1840,
									"end": 1851,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1886,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 18044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6234,
									"end": 6235,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6243,
									"end": 6244,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6250,
									"end": 6252,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 18044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6304,
									"end": 6305,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6310,
									"end": 6311,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6243,
									"end": 6244,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6322,
									"end": 6324,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 18044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7926,
									"end": 7927,
									"name": "PUSH",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7971,
									"end": 7972,
									"name": "PUSH",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8013,
									"end": 8014,
									"name": "PUSH",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 9375,
									"end": 9376,
									"name": "PUSH",
									"source": 8,
									"value": "3D"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 9421,
									"end": 9422,
									"name": "PUSH",
									"source": 8,
									"value": "3E"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 9462,
									"end": 9463,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 10681,
									"end": 10682,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 10723,
									"end": 10724,
									"name": "PUSH",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 10762,
									"end": 10763,
									"name": "PUSH",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "RETURN",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6396,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6303,
									"end": 6328,
									"name": "PUSH",
									"source": 8,
									"value": "1C"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6257,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6123,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 18044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6017,
									"end": 6081,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 18044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 2048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 18044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 18044,
									"name": "JUMP",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fff7f822c84acb57db0b940879846d4dea7c9a388e34b0a78feed4ebc492b4b264736f6c634300081e0033",
									".code": [
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "1C234A8"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "2132D204"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "2350268F"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "23FD338E"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "2A891534"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "2AE0EE0D"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "2F48AB7D"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "3080B5BC"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "32BC298C"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "32FCD966"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "375B43B4"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "39AB3603"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "4B8CBF9B"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "58C7D352"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "5B62D1D5"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "76F5F700"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "78F6AD6D"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "7CDC65F2"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "7DD2B847"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "956A3228"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "9B40AB97"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "A59D17D1"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "AE4708DC"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "BFF1F9E1"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "C216212A"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "C8DF2908"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "C9ED0708"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "CA8E9121"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "D0A2FD79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "E898FC38"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "E9E34A16"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "EBE0FF15"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "EC597E6F"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "F5D74D93"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "F63A6861"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "FDDC806F"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7934,
											"end": 7972,
											"name": "PUSH",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 786,
											"end": 794,
											"name": "PUSH",
											"source": 8,
											"value": "83D600"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 534,
											"end": 558,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7874,
											"end": 7881,
											"name": "PUSH",
											"source": 8,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 490,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9383,
											"end": 9422,
											"name": "PUSH",
											"source": 8,
											"value": "3E"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6264,
											"end": 6328,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6264,
											"end": 6328,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6264,
											"end": 6328,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6264,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 6264,
											"end": 6328,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6264,
											"end": 6328,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7893,
											"end": 7927,
											"name": "PUSH",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9341,
											"end": 9376,
											"name": "PUSH",
											"source": 8,
											"value": "3D"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9320,
											"end": 9328,
											"name": "PUSH",
											"source": 8,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 2048,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6081,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9429,
											"end": 9463,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10689,
											"end": 10724,
											"name": "PUSH",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6335,
											"end": 6396,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6396,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6396,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 6335,
											"end": 6396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6335,
											"end": 6396,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 839,
											"end": 847,
											"name": "PUSH",
											"source": 8,
											"value": "2514300"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 422,
											"end": 450,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7821,
											"end": 7827,
											"name": "PUSH",
											"source": 8,
											"value": "93A80"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10731,
											"end": 10763,
											"name": "PUSH",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 18044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10651,
											"end": 10682,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 18044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1344,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 8014,
											"name": "PUSH",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9268,
											"end": 9275,
											"name": "PUSH",
											"source": 8,
											"value": "278D00"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6088,
											"end": 6193,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 6200,
											"end": 6257,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6257,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6257,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 6200,
											"end": 6257,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6257,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 683,
											"end": 688,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1015,
											"end": 1017,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 18044,
											"name": "RETURN",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/modules/ContestRoyalty.sol",
								"contracts/modules/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ACC_PRECISION()": "32fcd966",
							"MONTHLY_ROYALTY()": "f63a6861",
							"MONTHLY_ROYALTY_LEVEL()": "23fd338e",
							"MONTH_DURATION()": "2a891534",
							"PERCENTS_DIVIDER()": "01c234a8",
							"ROI_CAP_DIVIDER()": "58c7d352",
							"ROI_CAP_MULTIPLIER()": "375b43b4",
							"TIME_STEP()": "32bc298c",
							"TOP_ROYALTY()": "7dd2b847",
							"TOP_ROYALTY_LEVEL()": "2ae0ee0d",
							"WEEK_DURATION()": "76f5f700",
							"WeeklyCapping()": "ebe0ff15",
							"WeeklyTotalReward()": "3080b5bc",
							"communityAccPerUser()": "78f6ad6d",
							"creatorWallet()": "7cdc65f2",
							"currentMonthlyRound()": "c9ed0708",
							"currentMonthlyStartTime()": "e898fc38",
							"currentWeeklyRound()": "ca8e9121",
							"currentWeeklyStartTime()": "fddc806f",
							"defaultRefId()": "ec597e6f",
							"glbBoosterPackages(uint256)": "2350268f",
							"minLevelForGlbBooster(uint256)": "d0a2fd79",
							"minLevelForPool(uint256)": "2132d204",
							"minPoolForGlbBooster(uint256)": "956a3228",
							"monthlyCapping()": "c8df2908",
							"monthlyTotalReward()": "a59d17d1",
							"packages(uint256)": "c216212a",
							"poolPackages(uint256)": "ae4708dc",
							"registeredUserIds(uint256)": "39ab3603",
							"systemMaintance()": "e9e34a16",
							"teamDevelopment()": "f5d74d93",
							"topRoyaltyReward()": "5b62d1d5",
							"topRoyaltyRound()": "4b8cbf9b",
							"topRoyaltyStartTime()": "9b40ab97",
							"totalUsers()": "bff1f9e1",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUser\",\"type\":\"uint256\"}],\"name\":\"CommunityBonusDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"incomeType\",\"type\":\"uint256\"}],\"name\":\"IncomeDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Storage.IncomeType\",\"name\":\"incomeType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"IncomeDistribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromUserId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LotteryReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyRewardClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyRoyaltyQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uplineId\",\"type\":\"uint256\"}],\"name\":\"Registration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"level\",\"type\":\"string\"}],\"name\":\"RewardSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyRewardClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"depositType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upgradeTime\",\"type\":\"uint256\"}],\"name\":\"Upgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"matrixId\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"userId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"parentId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"}],\"name\":\"UserJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyContestQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyRewardClaim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACC_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTH_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEEK_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityAccPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultRefId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"glbBoosterPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minPoolForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"packages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredUserIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemMaintance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamDevelopment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/Storage.sol\":\"Storage\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/modules/Storage.sol\":{\"keccak256\":\"0xacae5da302f28de169d1cbda77be69425ebd20d5f6183b7571ba8b98beba6b08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96e0807d2dc0b6e3c4e42033aa9c22697441271e118a7f0a4a0ed1caa3103435\",\"dweb:/ipfs/QmYRA5p5wzuKoRLsHMCB78ziyguDQw3ntuuR6eERqyoH8U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1586,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "usdt",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)232"
							},
							{
								"astId": 1588,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "creatorWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1590,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "systemMaintance",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1592,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "teamDevelopment",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1594,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "defaultRefId",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1596,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "totalUsers",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1626,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "registeredUserIds",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1628,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "nonce",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1633,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "communityAccPerUser",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1637,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "communityDebt",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1686,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "packages",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1789,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "addressToId",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1794,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "users",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_struct(User)1738_storage)"
							},
							{
								"astId": 1799,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userIncomes",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint256,t_struct(UserIncome)1763_storage)"
							},
							{
								"astId": 1805,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "incomeHistory",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_array(t_struct(Income)1774_storage)dyn_storage)"
							},
							{
								"astId": 1812,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "teams",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 1816,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "matrixDirect",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1821,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "directReferrals",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1921,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "poolPackages",
								"offset": 0,
								"slot": "19",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1933,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "glbBoosterPackages",
								"offset": 0,
								"slot": "20",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1945,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "minLevelForPool",
								"offset": 0,
								"slot": "21",
								"type": "t_array(t_uint256)7_storage"
							},
							{
								"astId": 1958,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "minLevelForGlbBooster",
								"offset": 0,
								"slot": "28",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 1971,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "minPoolForGlbBooster",
								"offset": 0,
								"slot": "36",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 2005,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userPooltopup",
								"offset": 0,
								"slot": "44",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)1987_storage))"
							},
							{
								"astId": 2012,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userPooldtl",
								"offset": 0,
								"slot": "45",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)1982_storage))"
							},
							{
								"astId": 2019,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userChildren",
								"offset": 0,
								"slot": "46",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2026,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userIdPerPool",
								"offset": 0,
								"slot": "47",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2031,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "poolUsers",
								"offset": 0,
								"slot": "48",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2037,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userHasPool",
								"offset": 0,
								"slot": "49",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2044,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userBoosterdtl",
								"offset": 0,
								"slot": "50",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)1998_storage))"
							},
							{
								"astId": 2051,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userBoosterChildren",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2056,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "boosterUsers",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2062,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userHasbooster",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2071,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentWeeklyRound",
								"offset": 0,
								"slot": "54",
								"type": "t_uint256"
							},
							{
								"astId": 2074,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentWeeklyStartTime",
								"offset": 0,
								"slot": "55",
								"type": "t_uint256"
							},
							{
								"astId": 2077,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "WeeklyTotalReward",
								"offset": 0,
								"slot": "56",
								"type": "t_uint256"
							},
							{
								"astId": 2112,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyContestdtl",
								"offset": 0,
								"slot": "57",
								"type": "t_mapping(t_uint256,t_struct(WeeklyContest)2096_storage)"
							},
							{
								"astId": 2117,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyQualifiedUsers",
								"offset": 0,
								"slot": "58",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2124,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyUserdtl",
								"offset": 0,
								"slot": "59",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2107_storage))"
							},
							{
								"astId": 2131,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyUserDirects",
								"offset": 0,
								"slot": "60",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2174,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentMonthlyRound",
								"offset": 0,
								"slot": "61",
								"type": "t_uint256"
							},
							{
								"astId": 2177,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentMonthlyStartTime",
								"offset": 0,
								"slot": "62",
								"type": "t_uint256"
							},
							{
								"astId": 2180,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyTotalReward",
								"offset": 0,
								"slot": "63",
								"type": "t_uint256"
							},
							{
								"astId": 2217,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyRoyaltydtl",
								"offset": 0,
								"slot": "64",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyalty)2199_storage)"
							},
							{
								"astId": 2220,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyQualifiedUsers",
								"offset": 0,
								"slot": "65",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2225,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyRoyaltyUserdtl",
								"offset": 0,
								"slot": "66",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2212_storage)"
							},
							{
								"astId": 2230,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyUserDirects",
								"offset": 0,
								"slot": "67",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2267,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyRound",
								"offset": 0,
								"slot": "68",
								"type": "t_uint256"
							},
							{
								"astId": 2270,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyStartTime",
								"offset": 0,
								"slot": "69",
								"type": "t_uint256"
							},
							{
								"astId": 2273,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyReward",
								"offset": 0,
								"slot": "70",
								"type": "t_uint256"
							},
							{
								"astId": 2310,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltydtl",
								"offset": 0,
								"slot": "71",
								"type": "t_mapping(t_uint256,t_struct(topRoyalty)2292_storage)"
							},
							{
								"astId": 2313,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyQualifiedUsers",
								"offset": 0,
								"slot": "72",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2318,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyUserdtl",
								"offset": 0,
								"slot": "73",
								"type": "t_mapping(t_uint256,t_struct(topRoyaltyUser)2305_storage)"
							},
							{
								"astId": 2323,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyUserDirects",
								"offset": 0,
								"slot": "74",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Deposit)1695_storage)dyn_storage": {
								"base": "t_struct(Deposit)1695_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Deposit[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Income)1774_storage)dyn_storage": {
								"base": "t_struct(Income)1774_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Income[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)7_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[7]",
								"numberOfBytes": "224"
							},
							"t_array(t_uint256)8_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[8]",
								"numberOfBytes": "256"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)232": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_array(t_struct(Income)1774_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.Income[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Income)1774_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)1998_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserBooster)1998_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)1982_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPool)1982_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)1987_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPoolTopup)1987_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2107_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(weeklyUser)2107_storage)"
							},
							"t_mapping(t_uint256,t_struct(User)1738_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)1738_storage"
							},
							"t_mapping(t_uint256,t_struct(UserBooster)1998_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserBooster)",
								"numberOfBytes": "32",
								"value": "t_struct(UserBooster)1998_storage"
							},
							"t_mapping(t_uint256,t_struct(UserIncome)1763_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserIncome)",
								"numberOfBytes": "32",
								"value": "t_struct(UserIncome)1763_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPool)1982_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPool)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPool)1982_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPoolTopup)1987_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPoolTopup)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPoolTopup)1987_storage"
							},
							"t_mapping(t_uint256,t_struct(WeeklyContest)2096_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.WeeklyContest)",
								"numberOfBytes": "32",
								"value": "t_struct(WeeklyContest)2096_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyalty)2199_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyalty)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyalty)2199_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2212_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyaltyUser)2212_storage"
							},
							"t_mapping(t_uint256,t_struct(topRoyalty)2292_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.topRoyalty)",
								"numberOfBytes": "32",
								"value": "t_struct(topRoyalty)2292_storage"
							},
							"t_mapping(t_uint256,t_struct(topRoyaltyUser)2305_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.topRoyaltyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(topRoyaltyUser)2305_storage"
							},
							"t_mapping(t_uint256,t_struct(weeklyUser)2107_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.weeklyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(weeklyUser)2107_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Deposit)1695_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Deposit",
								"members": [
									{
										"astId": 1688,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1690,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "withdrawn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1692,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "start",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1694,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "depositType",
										"offset": 0,
										"slot": "3",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Income)1774_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Income",
								"members": [
									{
										"astId": 1765,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "fromUserId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1767,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1769,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "packageLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1771,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1773,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "incomeType",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(User)1738_storage": {
								"encoding": "inplace",
								"label": "struct Storage.User",
								"members": [
									{
										"astId": 1697,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "account",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1701,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "deposits",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Deposit)1695_storage)dyn_storage"
									},
									{
										"astId": 1703,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "checkpoint",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1705,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1707,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "sponsorId",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1709,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "uplineId",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1711,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "level",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1713,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "directTeam",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1715,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "directPoolQualified",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 1717,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalMatrixTeam",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 1719,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalDeposit",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 1721,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poollevel",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 1723,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolDeposit",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 1725,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "boosterlevel",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 1727,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "boosterDeposit",
										"offset": 0,
										"slot": "14",
										"type": "t_uint256"
									},
									{
										"astId": 1729,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "registrationTime",
										"offset": 0,
										"slot": "15",
										"type": "t_uint256"
									},
									{
										"astId": 1731,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "level10Time",
										"offset": 0,
										"slot": "16",
										"type": "t_uint256"
									},
									{
										"astId": 1733,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "level15Time",
										"offset": 0,
										"slot": "17",
										"type": "t_uint256"
									},
									{
										"astId": 1735,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "monthlyUserDirectCount",
										"offset": 0,
										"slot": "18",
										"type": "t_uint256"
									},
									{
										"astId": 1737,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "topRoyaltyDirectCount",
										"offset": 0,
										"slot": "19",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "640"
							},
							"t_struct(UserBooster)1998_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserBooster",
								"members": [
									{
										"astId": 1989,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1991,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1993,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "parentId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1995,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "bonusCount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1997,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserIncome)1763_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserIncome",
								"members": [
									{
										"astId": 1740,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalIncome",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1742,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "sponsorIncome",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1744,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "matrixIncome",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1746,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "levelBoosterIncome",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1748,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "royaltyIncome",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1750,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "royaltyIncomeClaimed",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1752,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "communityIncome",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1754,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolIncome",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1756,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "boosterIncome",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 1758,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "weeklyContestIncome",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 1760,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "monthlyRoyalty",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 1762,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "monthlyTopRoyalty",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "384"
							},
							"t_struct(UserPool)1982_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPool",
								"members": [
									{
										"astId": 1973,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1975,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "mainid",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1977,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1979,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "parentId",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1981,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "bonusCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserPoolTopup)1987_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPoolTopup",
								"members": [
									{
										"astId": 1984,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "nextPoolAmt",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1986,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "reTopupAmt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(WeeklyContest)2096_storage": {
								"encoding": "inplace",
								"label": "struct Storage.WeeklyContest",
								"members": [
									{
										"astId": 2079,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2081,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2083,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2085,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2087,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2089,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2091,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2093,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2095,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyalty)2199_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyalty",
								"members": [
									{
										"astId": 2182,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2184,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2186,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2188,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2190,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2192,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2194,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2196,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2198,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyaltyUser)2212_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyaltyUser",
								"members": [
									{
										"astId": 2201,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2203,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "qualifiedRoundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2205,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2209,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_uint256,t_bool)"
									},
									{
										"astId": 2211,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isQualified",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(topRoyalty)2292_storage": {
								"encoding": "inplace",
								"label": "struct Storage.topRoyalty",
								"members": [
									{
										"astId": 2275,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2277,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2279,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2281,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2283,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2285,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2287,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2289,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2291,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(topRoyaltyUser)2305_storage": {
								"encoding": "inplace",
								"label": "struct Storage.topRoyaltyUser",
								"members": [
									{
										"astId": 2294,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2296,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "qualifiedRoundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2298,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2302,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_uint256,t_bool)"
									},
									{
										"astId": 2304,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isQualified",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(weeklyUser)2107_storage": {
								"encoding": "inplace",
								"label": "struct Storage.weeklyUser",
								"members": [
									{
										"astId": 2098,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2100,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2102,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2104,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 2106,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isQualified",
										"offset": 1,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							708
						],
						"IERC20": [
							232
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								708,
								232
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 709,
							"src": "133:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 233,
							"src": "132:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "140:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							154
						]
					},
					"id": 155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 98,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 154,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 114,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 119,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 124,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 130,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 154,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 137,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 138,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 154,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 148,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 149,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 147,
												"id": 151,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 154,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 155,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 156,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 157,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 232,
							"linearizedBaseContracts": [
								232
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 166,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 175,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 232,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 232,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 232,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 232,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 232,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 232,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 233,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"SafeERC20": [
							696
						]
					},
					"id": 697,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 234,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 233,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 235,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 238,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 82,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 237,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 239,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 696,
							"linearizedBaseContracts": [
								696
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 244,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 253,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 265,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 268,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 270,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 271,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 272,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 266,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 264,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 696,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 294,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 296,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 297,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 292,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 290,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 279,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 696,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 318,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 321,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 323,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 310,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 324,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 325,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 319,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 317,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 316,
												"id": 328,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 306,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 696,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 349,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 351,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 352,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 353,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 354,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 347,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 345,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 357,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 333,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 332,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 232,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 696,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 376,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 372,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 383,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 385,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 361,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 232,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 696,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															402
														],
														"declarations": [
															{
																"constant": false,
																"id": 402,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 401,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 411,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 407,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 405,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 409,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 209,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 413,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 422,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 421,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 416,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 417,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 402,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 418,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 398,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 415,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 420,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 424,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 425,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 426,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 427,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 423,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 392,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 232,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 696,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 444,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 448,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 219,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 450,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 452,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 446,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 456,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 457,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 455,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 461,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 464,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 437,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$232",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 219,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 466,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 439,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 468,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 462,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 460,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 474,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 472,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 232,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 696,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 493,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 508,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 509,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 505,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 520,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 519,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 515,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 484,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 512,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 518,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 499,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 500,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 501,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 498,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 482,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 696,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 538,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 554,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 556,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 567,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 566,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 562,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 527,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 560,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 559,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 565,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 545,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 546,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 547,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 543,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 526,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 525,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 696,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 583,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 597,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 598,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 599,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 595,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 610,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 609,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 605,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 574,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 603,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 602,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 608,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 589,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 590,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 591,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 588,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 572,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 696,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 623,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 626,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 617,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 628,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 629,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 640,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 634,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 632,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 617,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 615,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 232,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 696,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 665,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 671,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 669,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 672,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 658,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 674,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 675,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 676,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 687,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 681,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 658,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 679,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 691,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 664,
												"id": 693,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 656,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 232,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 696,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 697,
							"src": "698:9376:5",
							"usedErrors": [
								244,
								253
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 698,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 699,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 708,
							"linearizedBaseContracts": [
								708
							],
							"name": "IERC165",
							"nameLocation": "433:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "819:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 701,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:6"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "862:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:6"
									},
									"scope": 708,
									"src": "792:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 709,
							"src": "423:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:6"
				},
				"id": 6
			},
			"contracts/modules/ContestRoyalty.sol": {
				"ast": {
					"absolutePath": "contracts/modules/ContestRoyalty.sol",
					"exportedSymbols": {
						"ContestRoyalty": [
							1572
						],
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"ReentrancyGuard": [
							154
						],
						"SafeERC20": [
							696
						],
						"Storage": [
							2864
						]
					},
					"id": 1573,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "contracts/modules/Storage.sol",
							"file": "./Storage.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1573,
							"sourceUnit": 2865,
							"src": "63:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 712,
										"name": "Storage",
										"nameLocations": [
											"117:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2864,
										"src": "117:7:7"
									},
									"id": 713,
									"nodeType": "InheritanceSpecifier",
									"src": "117:7:7"
								}
							],
							"canonicalName": "ContestRoyalty",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1572,
							"linearizedBaseContracts": [
								1572,
								2864,
								154
							],
							"name": "ContestRoyalty",
							"nameLocation": "99:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "155:362:7",
										"statements": [
											{
												"expression": {
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 716,
														"name": "currentWeeklyStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2074,
														"src": "166:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 717,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "191:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "197:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "191:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "166:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "166:40:7"
											},
											{
												"expression": {
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 721,
														"name": "currentMonthlyStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2177,
														"src": "217:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 722,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "243:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "249:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "243:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "217:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "217:41:7"
											},
											{
												"expression": {
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 726,
														"name": "topRoyaltyStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2270,
														"src": "269:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 727,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "291:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "297:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "291:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "269:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "269:37:7"
											},
											{
												"expression": {
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 731,
														"name": "WeeklyTotalReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2077,
														"src": "319:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "339:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "319:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "319:21:7"
											},
											{
												"expression": {
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 735,
														"name": "currentWeeklyRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2071,
														"src": "351:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "372:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "351:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "351:22:7"
											},
											{
												"expression": {
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 739,
														"name": "monthlyTotalReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2180,
														"src": "386:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "407:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "386:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "386:22:7"
											},
											{
												"expression": {
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 743,
														"name": "currentMonthlyRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "419:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "441:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "419:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "419:23:7"
											},
											{
												"expression": {
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 747,
														"name": "topRoyaltyReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2273,
														"src": "459:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "478:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "459:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "459:20:7"
											},
											{
												"expression": {
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 751,
														"name": "topRoyaltyRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2267,
														"src": "490:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "508:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "490:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "490:19:7"
											}
										]
									},
									"id": 756,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "152:2:7"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "155:0:7"
									},
									"scope": 1572,
									"src": "141:376:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "562:1884:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 759,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "587:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "593:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "587:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 761,
															"name": "topRoyaltyStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2270,
															"src": "605:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 762,
															"name": "MONTH_DURATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "627:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "605:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "587:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 766,
												"nodeType": "IfStatement",
												"src": "583:67:7",
												"trueBody": {
													"functionReturnParameters": 758,
													"id": 765,
													"nodeType": "Return",
													"src": "643:7:7"
												}
											},
											{
												"assignments": [
													768
												],
												"declarations": [
													{
														"constant": false,
														"id": 768,
														"mutability": "mutable",
														"name": "currentRound",
														"nameLocation": "665:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "660:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 767,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "660:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 770,
												"initialValue": {
													"id": 769,
													"name": "topRoyaltyRound",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2267,
													"src": "680:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "660:35:7"
											},
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "curentTopRoyalty",
														"nameLocation": "725:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "706:35:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_topRoyalty_$2292_storage_ptr",
															"typeString": "struct Storage.topRoyalty"
														},
														"typeName": {
															"id": 772,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 771,
																"name": "topRoyalty",
																"nameLocations": [
																	"706:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2292,
																"src": "706:10:7"
															},
															"referencedDeclaration": 2292,
															"src": "706:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyalty_$2292_storage_ptr",
																"typeString": "struct Storage.topRoyalty"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"baseExpression": {
														"id": 774,
														"name": "topRoyaltydtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "744:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyalty_$2292_storage_$",
															"typeString": "mapping(uint256 => struct Storage.topRoyalty storage ref)"
														}
													},
													"id": 776,
													"indexExpression": {
														"id": 775,
														"name": "currentRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "758:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "744:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_topRoyalty_$2292_storage",
														"typeString": "struct Storage.topRoyalty storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "706:65:7"
											},
											{
												"condition": {
													"expression": {
														"id": 778,
														"name": "curentTopRoyalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "959:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_topRoyalty_$2292_storage_ptr",
															"typeString": "struct Storage.topRoyalty storage pointer"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "976:6:7",
													"memberName": "closed",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2291,
													"src": "959:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "955:36:7",
												"trueBody": {
													"functionReturnParameters": 758,
													"id": 780,
													"nodeType": "Return",
													"src": "984:7:7"
												}
											},
											{
												"assignments": [
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "qualifiedCount",
														"nameLocation": "1006:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "1001:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 782,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1001:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 786,
												"initialValue": {
													"expression": {
														"id": 784,
														"name": "topRoyaltyQualifiedUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2313,
														"src": "1023:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1048:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1023:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1001:53:7"
											},
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "perUserReward",
														"nameLocation": "1070:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "1065:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 787,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1065:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 789,
												"nodeType": "VariableDeclarationStatement",
												"src": "1065:18:7"
											},
											{
												"assignments": [
													791
												],
												"declarations": [
													{
														"constant": false,
														"id": 791,
														"mutability": "mutable",
														"name": "distributedAmount",
														"nameLocation": "1099:17:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "1094:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 790,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1094:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 792,
												"nodeType": "VariableDeclarationStatement",
												"src": "1094:22:7"
											},
											{
												"assignments": [
													794
												],
												"declarations": [
													{
														"constant": false,
														"id": 794,
														"mutability": "mutable",
														"name": "leftover",
														"nameLocation": "1132:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "1127:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 793,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1127:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 795,
												"nodeType": "VariableDeclarationStatement",
												"src": "1127:13:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 796,
														"name": "qualifiedCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1157:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1174:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1157:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 830,
													"nodeType": "Block",
													"src": "1460:179:7",
													"statements": [
														{
															"expression": {
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 818,
																	"name": "leftover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "1532:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 819,
																	"name": "topRoyaltyReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2273,
																	"src": "1543:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1532:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "1532:27:7"
														},
														{
															"expression": {
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 822,
																	"name": "distributedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "1574:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1594:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1574:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 825,
															"nodeType": "ExpressionStatement",
															"src": "1574:21:7"
														},
														{
															"expression": {
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 826,
																	"name": "perUserReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "1610:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1626:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1610:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 829,
															"nodeType": "ExpressionStatement",
															"src": "1610:17:7"
														}
													]
												},
												"id": 831,
												"nodeType": "IfStatement",
												"src": "1153:486:7",
												"trueBody": {
													"id": 817,
													"nodeType": "Block",
													"src": "1177:277:7",
													"statements": [
														{
															"expression": {
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 799,
																	"name": "perUserReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "1266:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 800,
																		"name": "topRoyaltyReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2273,
																		"src": "1282:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 801,
																		"name": "qualifiedCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "1301:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1282:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1266:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 804,
															"nodeType": "ExpressionStatement",
															"src": "1266:49:7"
														},
														{
															"expression": {
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 805,
																	"name": "distributedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "1330:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 806,
																		"name": "perUserReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 788,
																		"src": "1350:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 807,
																		"name": "qualifiedCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "1366:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1350:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1330:50:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 810,
															"nodeType": "ExpressionStatement",
															"src": "1330:50:7"
														},
														{
															"expression": {
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 811,
																	"name": "leftover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "1395:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 812,
																		"name": "topRoyaltyReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2273,
																		"src": "1406:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 813,
																		"name": "distributedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "1425:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1406:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1395:47:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 816,
															"nodeType": "ExpressionStatement",
															"src": "1395:47:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 832,
															"name": "curentTopRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "1680:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyalty_$2292_storage_ptr",
																"typeString": "struct Storage.topRoyalty storage pointer"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1697:7:7",
														"memberName": "roundId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2275,
														"src": "1680:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 835,
														"name": "currentRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "1707:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1680:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "1680:39:7"
											},
											{
												"expression": {
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 838,
															"name": "curentTopRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "1730:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyalty_$2292_storage_ptr",
																"typeString": "struct Storage.topRoyalty storage pointer"
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1747:13:7",
														"memberName": "perUserReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2281,
														"src": "1730:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 841,
														"name": "perUserReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "1763:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1730:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "1730:46:7"
											},
											{
												"expression": {
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 844,
															"name": "curentTopRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "1787:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyalty_$2292_storage_ptr",
																"typeString": "struct Storage.topRoyalty storage pointer"
															}
														},
														"id": 846,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1804:10:7",
														"memberName": "totalUsers",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2279,
														"src": "1787:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 847,
														"name": "qualifiedCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1817:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1787:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "1787:44:7"
											},
											{
												"expression": {
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 850,
															"name": "curentTopRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "1842:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyalty_$2292_storage_ptr",
																"typeString": "struct Storage.topRoyalty storage pointer"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1859:11:7",
														"memberName": "totalReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2277,
														"src": "1842:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 853,
														"name": "topRoyaltyReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2273,
														"src": "1873:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1842:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "1842:47:7"
											},
											{
												"expression": {
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 856,
															"name": "curentTopRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "1920:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyalty_$2292_storage_ptr",
																"typeString": "struct Storage.topRoyalty storage pointer"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1937:12:7",
														"memberName": "carryForward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2289,
														"src": "1920:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 859,
														"name": "leftover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "1952:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1920:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "1920:40:7"
											},
											{
												"expression": {
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 862,
															"name": "curentTopRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "1971:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyalty_$2292_storage_ptr",
																"typeString": "struct Storage.topRoyalty storage pointer"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1988:7:7",
														"memberName": "endTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2287,
														"src": "1971:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 865,
															"name": "topRoyaltyStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2270,
															"src": "1998:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 866,
															"name": "MONTH_DURATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "2020:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1998:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1971:63:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "1971:63:7"
											},
											{
												"expression": {
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 870,
															"name": "curentTopRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "2045:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyalty_$2292_storage_ptr",
																"typeString": "struct Storage.topRoyalty storage pointer"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2062:6:7",
														"memberName": "closed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2291,
														"src": "2045:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2071:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2045:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "2045:30:7"
											},
											{
												"expression": {
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 876,
														"name": "topRoyaltyStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2270,
														"src": "2119:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 877,
															"name": "curentTopRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "2141:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyalty_$2292_storage_ptr",
																"typeString": "struct Storage.topRoyalty storage pointer"
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2158:7:7",
														"memberName": "endTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2287,
														"src": "2141:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2119:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "2119:46:7"
											},
											{
												"expression": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 881,
														"name": "topRoyaltyRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2267,
														"src": "2176:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 882,
															"name": "currentRound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "2194:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2209:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2194:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2176:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "2176:34:7"
											},
											{
												"expression": {
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 887,
														"name": "topRoyaltyReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2273,
														"src": "2221:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 888,
														"name": "leftover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "2240:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2221:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "2221:27:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 892,
															"name": "currentRound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "2300:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 893,
															"name": "qualifiedCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "2314:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 894,
															"name": "perUserReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "2330:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 895,
																"name": "distributedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "2346:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 896,
																"name": "leftover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "2364:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2346:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 898,
															"name": "distributedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "2374:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 899,
															"name": "leftover",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2393:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 900,
																"name": "curentTopRoyalty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "2403:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_topRoyalty_$2292_storage_ptr",
																	"typeString": "struct Storage.topRoyalty storage pointer"
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2420:7:7",
															"memberName": "endTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2287,
															"src": "2403:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 891,
														"name": "TopRoyaltyClosed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "2283:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2283:145:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "EmitStatement",
												"src": "2278:150:7"
											}
										]
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_closeTopRoyalty",
									"nameLocation": "534:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "550:2:7"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:0:7"
									},
									"scope": 1572,
									"src": "525:1921:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "2543:515:7",
										"statements": [
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "userRoyalty",
														"nameLocation": "2581:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 960,
														"src": "2554:38:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
															"typeString": "struct Storage.monthlyRoyaltyUser"
														},
														"typeName": {
															"id": 915,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 914,
																"name": "monthlyRoyaltyUser",
																"nameLocations": [
																	"2554:18:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2212,
																"src": "2554:18:7"
															},
															"referencedDeclaration": 2212,
															"src": "2554:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"baseExpression": {
														"id": 917,
														"name": "monthlyRoyaltyUserdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2225,
														"src": "2595:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2212_storage_$",
															"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser storage ref)"
														}
													},
													"id": 919,
													"indexExpression": {
														"id": 918,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "2617:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2595:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage",
														"typeString": "struct Storage.monthlyRoyaltyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2554:71:7"
											},
											{
												"assignments": [
													923
												],
												"declarations": [
													{
														"constant": false,
														"id": 923,
														"mutability": "mutable",
														"name": "royalty",
														"nameLocation": "2659:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 960,
														"src": "2636:30:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
															"typeString": "struct Storage.monthlyRoyalty"
														},
														"typeName": {
															"id": 922,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 921,
																"name": "monthlyRoyalty",
																"nameLocations": [
																	"2636:14:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2199,
																"src": "2636:14:7"
															},
															"referencedDeclaration": 2199,
															"src": "2636:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																"typeString": "struct Storage.monthlyRoyalty"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"initialValue": {
													"baseExpression": {
														"id": 924,
														"name": "monthlyRoyaltydtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2217,
														"src": "2669:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$2199_storage_$",
															"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty storage ref)"
														}
													},
													"id": 926,
													"indexExpression": {
														"id": 925,
														"name": "_roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "2687:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2669:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage",
														"typeString": "struct Storage.monthlyRoyalty storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2636:60:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "2727:15:7",
																		"subExpression": {
																			"expression": {
																				"id": 928,
																				"name": "royalty",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 923,
																				"src": "2728:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																					"typeString": "struct Storage.monthlyRoyalty storage pointer"
																				}
																			},
																			"id": 929,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2736:6:7",
																			"memberName": "closed",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2198,
																			"src": "2728:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 931,
																			"name": "_roundId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "2759:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 932,
																			"name": "currentMonthlyRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2174,
																			"src": "2771:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2759:31:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2727:63:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "2807:24:7",
																	"subExpression": {
																		"expression": {
																			"id": 935,
																			"name": "userRoyalty",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 916,
																			"src": "2808:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
																				"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																			}
																		},
																		"id": 936,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2820:11:7",
																		"memberName": "isQualified",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2211,
																		"src": "2808:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2727:104:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 939,
																		"name": "userRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "2848:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																		}
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2860:16:7",
																	"memberName": "qualifiedRoundId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2203,
																	"src": "2848:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 941,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "2879:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2848:39:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2727:160:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"baseExpression": {
																"expression": {
																	"id": 944,
																	"name": "userRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "2904:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2916:9:7",
																"memberName": "isClaimed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2209,
																"src": "2904:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																	"typeString": "mapping(uint256 => bool)"
																}
															},
															"id": 947,
															"indexExpression": {
																"id": 946,
																"name": "_roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "2926:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2904:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2727:208:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 949,
																"name": "royalty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "2952:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																	"typeString": "struct Storage.monthlyRoyalty storage pointer"
																}
															},
															"id": 950,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2960:13:7",
															"memberName": "perUserReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2188,
															"src": "2952:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2977:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2952:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2727:251:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 957,
												"nodeType": "IfStatement",
												"src": "2709:320:7",
												"trueBody": {
													"id": 956,
													"nodeType": "Block",
													"src": "2990:39:7",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3012:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 913,
															"id": 955,
															"nodeType": "Return",
															"src": "3005:12:7"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3046:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 913,
												"id": 959,
												"nodeType": "Return",
												"src": "3039:11:7"
											}
										]
									},
									"functionSelector": "7d846e38",
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canClaimMonthlyReward",
									"nameLocation": "2463:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "2490:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "2485:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2485:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "2504:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "2499:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2499:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2484:29:7"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "2537:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 911,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2537:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2536:6:7"
									},
									"scope": 1572,
									"src": "2454:604:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "3113:2188:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 964,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3138:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3144:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3138:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 966,
																	"name": "currentMonthlyStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "3158:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 967,
																	"name": "MONTH_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "3184:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3158:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 969,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3157:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3138:61:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1125,
												"nodeType": "IfStatement",
												"src": "3134:2160:7",
												"trueBody": {
													"id": 1124,
													"nodeType": "Block",
													"src": "3201:2093:7",
													"statements": [
														{
															"assignments": [
																972
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 972,
																	"mutability": "mutable",
																	"name": "currentRound",
																	"nameLocation": "3221:12:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1124,
																	"src": "3216:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 971,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3216:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 974,
															"initialValue": {
																"id": 973,
																"name": "currentMonthlyRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "3236:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3216:39:7"
														},
														{
															"assignments": [
																977
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 977,
																	"mutability": "mutable",
																	"name": "curentMonthRoyalty",
																	"nameLocation": "3293:18:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1124,
																	"src": "3270:41:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyalty"
																	},
																	"typeName": {
																		"id": 976,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 975,
																			"name": "monthlyRoyalty",
																			"nameLocations": [
																				"3270:14:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2199,
																			"src": "3270:14:7"
																		},
																		"referencedDeclaration": 2199,
																		"src": "3270:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 981,
															"initialValue": {
																"baseExpression": {
																	"id": 978,
																	"name": "monthlyRoyaltydtl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2217,
																	"src": "3314:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$2199_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty storage ref)"
																	}
																},
																"id": 980,
																"indexExpression": {
																	"id": 979,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "3332:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3314:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage",
																	"typeString": "struct Storage.monthlyRoyalty storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3270:75:7"
														},
														{
															"condition": {
																"expression": {
																	"id": 982,
																	"name": "curentMonthRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 977,
																	"src": "3553:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyalty storage pointer"
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:6:7",
																"memberName": "closed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2198,
																"src": "3553:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 985,
															"nodeType": "IfStatement",
															"src": "3549:38:7",
															"trueBody": {
																"functionReturnParameters": 963,
																"id": 984,
																"nodeType": "Return",
																"src": "3580:7:7"
															}
														},
														{
															"assignments": [
																987
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 987,
																	"mutability": "mutable",
																	"name": "qualifiedCount",
																	"nameLocation": "3606:14:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1124,
																	"src": "3601:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 986,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 990,
															"initialValue": {
																"expression": {
																	"id": 988,
																	"name": "monthlyQualifiedUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2220,
																	"src": "3623:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3645:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3623:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3601:50:7"
														},
														{
															"assignments": [
																992
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 992,
																	"mutability": "mutable",
																	"name": "perUserReward",
																	"nameLocation": "3671:13:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1124,
																	"src": "3666:18:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 991,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3666:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 993,
															"nodeType": "VariableDeclarationStatement",
															"src": "3666:18:7"
														},
														{
															"assignments": [
																995
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 995,
																	"mutability": "mutable",
																	"name": "distributedAmount",
																	"nameLocation": "3704:17:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1124,
																	"src": "3699:22:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 994,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 996,
															"nodeType": "VariableDeclarationStatement",
															"src": "3699:22:7"
														},
														{
															"assignments": [
																998
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 998,
																	"mutability": "mutable",
																	"name": "leftover",
																	"nameLocation": "3741:8:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1124,
																	"src": "3736:13:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 997,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3736:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 999,
															"nodeType": "VariableDeclarationStatement",
															"src": "3736:13:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1000,
																	"name": "qualifiedCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "3770:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3787:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3770:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1050,
																"nodeType": "Block",
																"src": "4209:201:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1038,
																				"name": "leftover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 998,
																				"src": "4289:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1039,
																				"name": "monthlyTotalReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2180,
																				"src": "4300:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4289:29:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1041,
																		"nodeType": "ExpressionStatement",
																		"src": "4289:29:7"
																	},
																	{
																		"expression": {
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1042,
																				"name": "distributedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 995,
																				"src": "4337:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4357:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "4337:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1045,
																		"nodeType": "ExpressionStatement",
																		"src": "4337:21:7"
																	},
																	{
																		"expression": {
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1046,
																				"name": "perUserReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 992,
																				"src": "4377:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1047,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4393:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "4377:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1049,
																		"nodeType": "ExpressionStatement",
																		"src": "4377:17:7"
																	}
																]
															},
															"id": 1051,
															"nodeType": "IfStatement",
															"src": "3766:644:7",
															"trueBody": {
																"id": 1037,
																"nodeType": "Block",
																"src": "3790:413:7",
																"statements": [
																	{
																		"assignments": [
																			1004
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1004,
																				"mutability": "mutable",
																				"name": "rawReward",
																				"nameLocation": "3864:9:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1037,
																				"src": "3859:14:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1003,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "3859:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1008,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1005,
																				"name": "monthlyTotalReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2180,
																				"src": "3876:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1006,
																				"name": "qualifiedCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 987,
																				"src": "3897:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3876:35:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3859:52:7"
																	},
																	{
																		"expression": {
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1009,
																				"name": "perUserReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 992,
																				"src": "3930:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"condition": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1012,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1010,
																								"name": "rawReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1004,
																								"src": "3947:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">",
																							"rightExpression": {
																								"id": 1011,
																								"name": "monthlyCapping",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2171,
																								"src": "3959:14:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3947:26:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"id": 1013,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3946:28:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"id": 1015,
																					"name": "rawReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1004,
																					"src": "3994:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1016,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "3946:57:7",
																				"trueExpression": {
																					"id": 1014,
																					"name": "monthlyCapping",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2171,
																					"src": "3977:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3930:73:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1018,
																		"nodeType": "ExpressionStatement",
																		"src": "3930:73:7"
																	},
																	{
																		"expression": {
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1019,
																				"name": "distributedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 995,
																				"src": "4022:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1020,
																					"name": "perUserReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "4042:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1021,
																					"name": "qualifiedCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 987,
																					"src": "4058:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4042:30:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4022:50:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1024,
																		"nodeType": "ExpressionStatement",
																		"src": "4022:50:7"
																	},
																	{
																		"expression": {
																			"id": 1035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1025,
																				"name": "leftover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 998,
																				"src": "4091:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"condition": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1028,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1026,
																								"name": "monthlyTotalReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2180,
																								"src": "4103:18:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">",
																							"rightExpression": {
																								"id": 1027,
																								"name": "distributedAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 995,
																								"src": "4124:17:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "4103:38:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"id": 1029,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4102:40:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"hexValue": "30",
																					"id": 1033,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4186:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"id": 1034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "4102:85:7",
																				"trueExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1032,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1030,
																						"name": "monthlyTotalReward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2180,
																						"src": "4145:18:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1031,
																						"name": "distributedAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 995,
																						"src": "4166:17:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4145:38:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4091:96:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1036,
																		"nodeType": "ExpressionStatement",
																		"src": "4091:96:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1052,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "4459:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4478:7:7",
																	"memberName": "roundId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2182,
																	"src": "4459:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1055,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "4488:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4459:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1057,
															"nodeType": "ExpressionStatement",
															"src": "4459:41:7"
														},
														{
															"expression": {
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1058,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "4515:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4534:13:7",
																	"memberName": "perUserReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2188,
																	"src": "4515:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1061,
																	"name": "perUserReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "4550:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4515:48:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1063,
															"nodeType": "ExpressionStatement",
															"src": "4515:48:7"
														},
														{
															"expression": {
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1064,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "4578:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4597:10:7",
																	"memberName": "totalUsers",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2186,
																	"src": "4578:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1067,
																	"name": "qualifiedCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "4610:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4578:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1069,
															"nodeType": "ExpressionStatement",
															"src": "4578:46:7"
														},
														{
															"expression": {
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1070,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "4639:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4658:11:7",
																	"memberName": "totalReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2184,
																	"src": "4639:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1073,
																	"name": "monthlyTotalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2180,
																	"src": "4672:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4639:51:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1075,
															"nodeType": "ExpressionStatement",
															"src": "4639:51:7"
														},
														{
															"expression": {
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1076,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "4725:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4744:12:7",
																	"memberName": "carryForward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2196,
																	"src": "4725:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1079,
																	"name": "leftover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "4759:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4725:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1081,
															"nodeType": "ExpressionStatement",
															"src": "4725:42:7"
														},
														{
															"expression": {
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1082,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "4782:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4801:7:7",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2194,
																	"src": "4782:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1085,
																		"name": "currentMonthlyStartTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2177,
																		"src": "4811:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1086,
																		"name": "MONTH_DURATION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "4837:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4811:40:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4782:69:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1089,
															"nodeType": "ExpressionStatement",
															"src": "4782:69:7"
														},
														{
															"expression": {
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1090,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "4866:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4885:6:7",
																	"memberName": "closed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2198,
																	"src": "4866:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4894:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4866:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1095,
															"nodeType": "ExpressionStatement",
															"src": "4866:32:7"
														},
														{
															"expression": {
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1096,
																	"name": "currentMonthlyStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "4950:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1097,
																		"name": "curentMonthRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "4976:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyalty storage pointer"
																		}
																	},
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4995:7:7",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2194,
																	"src": "4976:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4950:52:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1100,
															"nodeType": "ExpressionStatement",
															"src": "4950:52:7"
														},
														{
															"expression": {
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1101,
																	"name": "currentMonthlyRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "5017:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1102,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "5039:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5054:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "5039:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5017:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1106,
															"nodeType": "ExpressionStatement",
															"src": "5017:38:7"
														},
														{
															"expression": {
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1107,
																	"name": "monthlyTotalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2180,
																	"src": "5070:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1108,
																	"name": "leftover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "5091:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5070:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1110,
															"nodeType": "ExpressionStatement",
															"src": "5070:29:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1112,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "5152:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1113,
																		"name": "qualifiedCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "5166:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1114,
																		"name": "perUserReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "5182:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1115,
																			"name": "distributedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 995,
																			"src": "5198:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1116,
																			"name": "leftover",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 998,
																			"src": "5216:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5198:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1118,
																		"name": "distributedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "5226:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1119,
																		"name": "leftover",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "5245:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1120,
																			"name": "curentMonthRoyalty",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "5255:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																				"typeString": "struct Storage.monthlyRoyalty storage pointer"
																			}
																		},
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5274:7:7",
																		"memberName": "endTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2194,
																		"src": "5255:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1111,
																	"name": "MonthlyClosed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2246,
																	"src": "5138:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5138:144:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1123,
															"nodeType": "EmitStatement",
															"src": "5133:149:7"
														}
													]
												}
											}
										]
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_closeMonthlyRoyalty",
									"nameLocation": "3081:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3101:2:7"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:7"
									},
									"scope": 1572,
									"src": "3072:2229:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "5396:1294:7",
										"statements": [
											{
												"assignments": [
													1138
												],
												"declarations": [
													{
														"constant": false,
														"id": 1138,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "5430:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "5417:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 1137,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1136,
																"name": "User",
																"nameLocations": [
																	"5417:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1738,
																"src": "5417:4:7"
															},
															"referencedDeclaration": 1738,
															"src": "5417:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"initialValue": {
													"baseExpression": {
														"id": 1139,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "5437:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1738_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 1141,
													"indexExpression": {
														"id": 1140,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "5443:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5437:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1738_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5417:34:7"
											},
											{
												"assignments": [
													1144
												],
												"declarations": [
													{
														"constant": false,
														"id": 1144,
														"mutability": "mutable",
														"name": "userAddress",
														"nameLocation": "5470:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "5462:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1143,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5462:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1147,
												"initialValue": {
													"expression": {
														"id": 1145,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "5484:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5489:7:7",
													"memberName": "account",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1697,
													"src": "5484:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5462:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1149,
																"name": "userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "5516:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1150,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5531:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5535:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5531:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5516:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420796f7572206163636f756e74",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5543:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															},
															"value": "Not your account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															}
														],
														"id": 1148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5508:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5508:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "5508:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1157,
																			"name": "_userId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1129,
																			"src": "5581:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5591:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5581:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1160,
																			"name": "_roundId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "5596:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5607:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5596:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5581:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1164,
																				"name": "monthlyRoyaltydtl",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2217,
																				"src": "5612:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$2199_storage_$",
																					"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty storage ref)"
																				}
																			},
																			"id": 1166,
																			"indexExpression": {
																				"id": 1165,
																				"name": "_roundId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1131,
																				"src": "5630:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5612:27:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage",
																				"typeString": "struct Storage.monthlyRoyalty storage ref"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5640:6:7",
																		"memberName": "closed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2198,
																		"src": "5612:34:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "74727565",
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5650:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"src": "5612:42:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5581:73:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1171,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "5658:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1172,
																	"name": "currentMonthlyRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "5669:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5658:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5581:107:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420757365724964206f7220726f756e644964206f7220726f756e64206f72206e6f7420636c6f736564",
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5690:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1beb791ee1ae905f1be0eca33d1d067be754dc802f8b109cb5643c884132d67d",
																"typeString": "literal_string \"Invalid userId or roundId or round or not closed\""
															},
															"value": "Invalid userId or roundId or round or not closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1beb791ee1ae905f1be0eca33d1d067be754dc802f8b109cb5643c884132d67d",
																"typeString": "literal_string \"Invalid userId or roundId or round or not closed\""
															}
														],
														"id": 1156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5573:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5573:168:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "5573:168:7"
											},
											{
												"assignments": [
													1180
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "userRoyalty",
														"nameLocation": "5779:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "5752:38:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
															"typeString": "struct Storage.monthlyRoyaltyUser"
														},
														"typeName": {
															"id": 1179,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1178,
																"name": "monthlyRoyaltyUser",
																"nameLocations": [
																	"5752:18:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2212,
																"src": "5752:18:7"
															},
															"referencedDeclaration": 2212,
															"src": "5752:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1184,
												"initialValue": {
													"baseExpression": {
														"id": 1181,
														"name": "monthlyRoyaltyUserdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2225,
														"src": "5794:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2212_storage_$",
															"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser storage ref)"
														}
													},
													"id": 1183,
													"indexExpression": {
														"id": 1182,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "5816:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5794:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage",
														"typeString": "struct Storage.monthlyRoyaltyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5752:72:7"
											},
											{
												"assignments": [
													1187
												],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "currentMonthRoyalty",
														"nameLocation": "5858:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "5835:42:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
															"typeString": "struct Storage.monthlyRoyalty"
														},
														"typeName": {
															"id": 1186,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1185,
																"name": "monthlyRoyalty",
																"nameLocations": [
																	"5835:14:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2199,
																"src": "5835:14:7"
															},
															"referencedDeclaration": 2199,
															"src": "5835:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																"typeString": "struct Storage.monthlyRoyalty"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1191,
												"initialValue": {
													"baseExpression": {
														"id": 1188,
														"name": "monthlyRoyaltydtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2217,
														"src": "5880:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$2199_storage_$",
															"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty storage ref)"
														}
													},
													"id": 1190,
													"indexExpression": {
														"id": 1189,
														"name": "_roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "5898:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5880:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage",
														"typeString": "struct Storage.monthlyRoyalty storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5835:72:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1193,
																	"name": "userRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "5928:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																	}
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5940:11:7",
																"memberName": "isQualified",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2211,
																"src": "5928:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5955:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "5928:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207175616c696669656420",
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5961:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_461748ad29a5a7c695ada502a45a77e8ac1295ad80f822792c4b204b9bee592a",
																"typeString": "literal_string \"Not qualified \""
															},
															"value": "Not qualified "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_461748ad29a5a7c695ada502a45a77e8ac1295ad80f822792c4b204b9bee592a",
																"typeString": "literal_string \"Not qualified \""
															}
														],
														"id": 1192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5920:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5920:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "5920:58:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5997:32:7",
															"subExpression": {
																"baseExpression": {
																	"expression": {
																		"id": 1201,
																		"name": "userRoyalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "5998:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
																			"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																		}
																	},
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6010:9:7",
																	"memberName": "isClaimed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2209,
																	"src": "5998:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1204,
																"indexExpression": {
																	"id": 1203,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "6020:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5998:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920636c61696d656420666f72207468697320726f756e64",
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6031:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2a5c7175f7354064d630fe4d7a5a239d1a06d6c8e53b9e2e9a018bfe6118491",
																"typeString": "literal_string \"Already claimed for this round\""
															},
															"value": "Already claimed for this round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2a5c7175f7354064d630fe4d7a5a239d1a06d6c8e53b9e2e9a018bfe6118491",
																"typeString": "literal_string \"Already claimed for this round\""
															}
														],
														"id": 1200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5989:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5989:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "5989:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1210,
																	"name": "currentMonthRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "6083:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyalty storage pointer"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6103:13:7",
																"memberName": "perUserReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2188,
																"src": "6083:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6119:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6083:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072657761726420746f20636c61696d",
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6122:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																"typeString": "literal_string \"No reward to claim\""
															},
															"value": "No reward to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																"typeString": "literal_string \"No reward to claim\""
															}
														],
														"id": 1209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6075:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6075:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "6075:68:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1218,
																	"name": "currentMonthRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "6162:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyalty storage pointer"
																	}
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6182:12:7",
																"memberName": "claimedCount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2190,
																"src": "6162:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1220,
																	"name": "currentMonthRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "6197:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyalty storage pointer"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6217:10:7",
																"memberName": "totalUsers",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2186,
																"src": "6197:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6162:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20757365727320636c61696d6564",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6229:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef17ed6f30e35240a7d137e6d492d3e905f716720fe9e669bbd494e7ba4e07ad",
																"typeString": "literal_string \"All users claimed\""
															},
															"value": "All users claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef17ed6f30e35240a7d137e6d492d3e905f716720fe9e669bbd494e7ba4e07ad",
																"typeString": "literal_string \"All users claimed\""
															}
														],
														"id": 1217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6154:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6154:95:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "6154:95:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1227,
																	"name": "userRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "6268:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6280:16:7",
																"memberName": "qualifiedRoundId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2203,
																"src": "6268:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1229,
																"name": "_roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "6300:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6268:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656c696769626c6520746f20636c61696d",
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6310:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_669b7fe45e1e9e7bc7261fe252db70a0a899ef02751891899e94c786911b60aa",
																"typeString": "literal_string \"Not eligible to claim\""
															},
															"value": "Not eligible to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_669b7fe45e1e9e7bc7261fe252db70a0a899ef02751891899e94c786911b60aa",
																"typeString": "literal_string \"Not eligible to claim\""
															}
														],
														"id": 1226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6260:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6260:74:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "6260:74:7"
											},
											{
												"assignments": [
													1235
												],
												"declarations": [
													{
														"constant": false,
														"id": 1235,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "6350:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "6345:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1234,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6345:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1238,
												"initialValue": {
													"expression": {
														"id": 1236,
														"name": "currentMonthRoyalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "6359:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
															"typeString": "struct Storage.monthlyRoyalty storage pointer"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6379:13:7",
													"memberName": "perUserReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2188,
													"src": "6359:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6345:47:7"
											},
											{
												"expression": {
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1239,
															"name": "currentMonthRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "6407:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
																"typeString": "struct Storage.monthlyRoyalty storage pointer"
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6427:12:7",
														"memberName": "claimedCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2190,
														"src": "6407:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6443:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6407:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "6407:37:7"
											},
											{
												"expression": {
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1245,
																"name": "userRoyalty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "6455:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
																	"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6467:9:7",
															"memberName": "isClaimed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2209,
															"src": "6455:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1249,
														"indexExpression": {
															"id": 1247,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "6477:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6455:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6489:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6455:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "6455:38:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1254,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "6532:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1255,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "6541:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1256,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "6550:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6558:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 1258,
																"name": "IncomeType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "6561:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_IncomeType_$1785_$",
																	"typeString": "type(enum Storage.IncomeType)"
																}
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6572:14:7",
															"memberName": "MonthlyRoyalty",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1783,
															"src": "6561:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$1785",
																"typeString": "enum Storage.IncomeType"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_enum$_IncomeType_$1785",
																"typeString": "enum Storage.IncomeType"
															}
														],
														"id": 1253,
														"name": "_distributeIncome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2588,
														"src": "6514:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_IncomeType_$1785_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256,enum Storage.IncomeType)"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6514:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "6514:73:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1263,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "6638:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1264,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "6648:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1265,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "6657:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1266,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6666:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6672:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6666:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1262,
														"name": "MonthlyRewardClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2256,
														"src": "6619:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6619:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1269,
												"nodeType": "EmitStatement",
												"src": "6614:68:7"
											}
										]
									},
									"functionSelector": "4c2215e3",
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1133,
												"name": "nonReentrant",
												"nameLocations": [
													"5383:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "5383:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5383:12:7"
										}
									],
									"name": "claimMonthlyContestReward",
									"nameLocation": "5319:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "5350:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "5345:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5345:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "5364:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "5359:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5359:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5344:29:7"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5396:0:7"
									},
									"scope": 1572,
									"src": "5310:1380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "6739:2173:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1274,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6764:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6770:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6764:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1276,
																	"name": "currentWeeklyStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2074,
																	"src": "6784:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1277,
																	"name": "WEEK_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2065,
																	"src": "6809:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6784:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1279,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6783:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6764:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1437,
												"nodeType": "IfStatement",
												"src": "6760:2145:7",
												"trueBody": {
													"id": 1436,
													"nodeType": "Block",
													"src": "6825:2080:7",
													"statements": [
														{
															"assignments": [
																1282
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1282,
																	"mutability": "mutable",
																	"name": "currentRound",
																	"nameLocation": "6845:12:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1436,
																	"src": "6840:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1281,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "6840:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1284,
															"initialValue": {
																"id": 1283,
																"name": "currentWeeklyRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "6860:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6840:38:7"
														},
														{
															"assignments": [
																1287
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1287,
																	"mutability": "mutable",
																	"name": "curentWeekContest",
																	"nameLocation": "6915:17:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1436,
																	"src": "6893:39:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																		"typeString": "struct Storage.WeeklyContest"
																	},
																	"typeName": {
																		"id": 1286,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1285,
																			"name": "WeeklyContest",
																			"nameLocations": [
																				"6893:13:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2096,
																			"src": "6893:13:7"
																		},
																		"referencedDeclaration": 2096,
																		"src": "6893:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1291,
															"initialValue": {
																"baseExpression": {
																	"id": 1288,
																	"name": "weeklyContestdtl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2112,
																	"src": "6935:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$2096_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.WeeklyContest storage ref)"
																	}
																},
																"id": 1290,
																"indexExpression": {
																	"id": 1289,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "6952:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6935:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage",
																	"typeString": "struct Storage.WeeklyContest storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6893:72:7"
														},
														{
															"condition": {
																"expression": {
																	"id": 1292,
																	"name": "curentWeekContest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "7171:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																		"typeString": "struct Storage.WeeklyContest storage pointer"
																	}
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7189:6:7",
																"memberName": "closed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2095,
																"src": "7171:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1295,
															"nodeType": "IfStatement",
															"src": "7167:37:7",
															"trueBody": {
																"functionReturnParameters": 1273,
																"id": 1294,
																"nodeType": "Return",
																"src": "7197:7:7"
															}
														},
														{
															"assignments": [
																1297
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1297,
																	"mutability": "mutable",
																	"name": "qualifiedCount",
																	"nameLocation": "7225:14:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1436,
																	"src": "7220:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1296,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "7220:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1302,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1298,
																		"name": "weeklyQualifiedUsers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2117,
																		"src": "7242:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(uint256 => uint256[] storage ref)"
																		}
																	},
																	"id": 1300,
																	"indexExpression": {
																		"id": 1299,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "7263:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7242:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7277:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7242:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7220:63:7"
														},
														{
															"assignments": [
																1304
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1304,
																	"mutability": "mutable",
																	"name": "perUserReward",
																	"nameLocation": "7303:13:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1436,
																	"src": "7298:18:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1303,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "7298:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1305,
															"nodeType": "VariableDeclarationStatement",
															"src": "7298:18:7"
														},
														{
															"assignments": [
																1307
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1307,
																	"mutability": "mutable",
																	"name": "distributedAmount",
																	"nameLocation": "7336:17:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1436,
																	"src": "7331:22:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1306,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "7331:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1308,
															"nodeType": "VariableDeclarationStatement",
															"src": "7331:22:7"
														},
														{
															"assignments": [
																1310
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1310,
																	"mutability": "mutable",
																	"name": "leftover",
																	"nameLocation": "7373:8:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1436,
																	"src": "7368:13:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1309,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "7368:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1311,
															"nodeType": "VariableDeclarationStatement",
															"src": "7368:13:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1312,
																	"name": "qualifiedCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "7402:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7419:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7402:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1362,
																"nodeType": "Block",
																"src": "7836:200:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1350,
																				"name": "leftover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1310,
																				"src": "7916:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1351,
																				"name": "WeeklyTotalReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2077,
																				"src": "7927:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7916:28:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1353,
																		"nodeType": "ExpressionStatement",
																		"src": "7916:28:7"
																	},
																	{
																		"expression": {
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1354,
																				"name": "distributedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1307,
																				"src": "7963:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7983:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "7963:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1357,
																		"nodeType": "ExpressionStatement",
																		"src": "7963:21:7"
																	},
																	{
																		"expression": {
																			"id": 1360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1358,
																				"name": "perUserReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1304,
																				"src": "8003:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8019:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "8003:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1361,
																		"nodeType": "ExpressionStatement",
																		"src": "8003:17:7"
																	}
																]
															},
															"id": 1363,
															"nodeType": "IfStatement",
															"src": "7398:638:7",
															"trueBody": {
																"id": 1349,
																"nodeType": "Block",
																"src": "7422:408:7",
																"statements": [
																	{
																		"assignments": [
																			1316
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1316,
																				"mutability": "mutable",
																				"name": "rawReward",
																				"nameLocation": "7496:9:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1349,
																				"src": "7491:14:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1315,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "7491:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1320,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1317,
																				"name": "WeeklyTotalReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2077,
																				"src": "7508:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1318,
																				"name": "qualifiedCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1297,
																				"src": "7528:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7508:34:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7491:51:7"
																	},
																	{
																		"expression": {
																			"id": 1329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1321,
																				"name": "perUserReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1304,
																				"src": "7561:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"condition": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1324,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1322,
																								"name": "rawReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1316,
																								"src": "7578:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">",
																							"rightExpression": {
																								"id": 1323,
																								"name": "WeeklyCapping",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2068,
																								"src": "7590:13:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "7578:25:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"id": 1325,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7577:27:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"id": 1327,
																					"name": "rawReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1316,
																					"src": "7623:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "7577:55:7",
																				"trueExpression": {
																					"id": 1326,
																					"name": "WeeklyCapping",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2068,
																					"src": "7607:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7561:71:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1330,
																		"nodeType": "ExpressionStatement",
																		"src": "7561:71:7"
																	},
																	{
																		"expression": {
																			"id": 1335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1331,
																				"name": "distributedAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1307,
																				"src": "7651:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1332,
																					"name": "perUserReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1304,
																					"src": "7671:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1333,
																					"name": "qualifiedCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1297,
																					"src": "7687:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7671:30:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7651:50:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1336,
																		"nodeType": "ExpressionStatement",
																		"src": "7651:50:7"
																	},
																	{
																		"expression": {
																			"id": 1347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1337,
																				"name": "leftover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1310,
																				"src": "7720:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"condition": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1340,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1338,
																								"name": "WeeklyTotalReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2077,
																								"src": "7732:17:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">",
																							"rightExpression": {
																								"id": 1339,
																								"name": "distributedAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1307,
																								"src": "7752:17:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "7732:37:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"id": 1341,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7731:39:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"hexValue": "30",
																					"id": 1345,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7813:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"id": 1346,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "7731:83:7",
																				"trueExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1344,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1342,
																						"name": "WeeklyTotalReward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2077,
																						"src": "7773:17:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1343,
																						"name": "distributedAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1307,
																						"src": "7793:17:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7773:37:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7720:94:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1348,
																		"nodeType": "ExpressionStatement",
																		"src": "7720:94:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1364,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "8085:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8103:7:7",
																	"memberName": "roundId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2079,
																	"src": "8085:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1367,
																	"name": "currentRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "8113:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8085:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1369,
															"nodeType": "ExpressionStatement",
															"src": "8085:40:7"
														},
														{
															"expression": {
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1370,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "8140:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8158:13:7",
																	"memberName": "perUserReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2085,
																	"src": "8140:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1373,
																	"name": "perUserReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1304,
																	"src": "8174:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8140:47:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1375,
															"nodeType": "ExpressionStatement",
															"src": "8140:47:7"
														},
														{
															"expression": {
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1376,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "8202:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8220:10:7",
																	"memberName": "totalUsers",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2083,
																	"src": "8202:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1379,
																	"name": "qualifiedCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "8233:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8202:45:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1381,
															"nodeType": "ExpressionStatement",
															"src": "8202:45:7"
														},
														{
															"expression": {
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1382,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "8262:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8280:11:7",
																	"memberName": "totalReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2081,
																	"src": "8262:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1385,
																	"name": "WeeklyTotalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2077,
																	"src": "8294:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8262:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1387,
															"nodeType": "ExpressionStatement",
															"src": "8262:49:7"
														},
														{
															"expression": {
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1388,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "8346:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8364:12:7",
																	"memberName": "carryForward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2093,
																	"src": "8346:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1391,
																	"name": "leftover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "8379:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8346:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1393,
															"nodeType": "ExpressionStatement",
															"src": "8346:41:7"
														},
														{
															"expression": {
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1394,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "8402:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8420:7:7",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2091,
																	"src": "8402:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1397,
																		"name": "currentWeeklyStartTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2074,
																		"src": "8430:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1398,
																		"name": "WEEK_DURATION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2065,
																		"src": "8455:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8430:38:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8402:66:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1401,
															"nodeType": "ExpressionStatement",
															"src": "8402:66:7"
														},
														{
															"expression": {
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1402,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "8483:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8501:6:7",
																	"memberName": "closed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2095,
																	"src": "8483:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8510:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "8483:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1407,
															"nodeType": "ExpressionStatement",
															"src": "8483:31:7"
														},
														{
															"expression": {
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1408,
																	"name": "currentWeeklyStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2074,
																	"src": "8566:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1409,
																		"name": "curentWeekContest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "8591:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																			"typeString": "struct Storage.WeeklyContest storage pointer"
																		}
																	},
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8609:7:7",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2091,
																	"src": "8591:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8566:50:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1412,
															"nodeType": "ExpressionStatement",
															"src": "8566:50:7"
														},
														{
															"expression": {
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1413,
																	"name": "currentWeeklyRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "8631:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1414,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "8652:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8667:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8652:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8631:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1418,
															"nodeType": "ExpressionStatement",
															"src": "8631:37:7"
														},
														{
															"expression": {
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1419,
																	"name": "WeeklyTotalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2077,
																	"src": "8683:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1420,
																	"name": "leftover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "8703:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8683:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1422,
															"nodeType": "ExpressionStatement",
															"src": "8683:28:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1424,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "8764:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1425,
																		"name": "qualifiedCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1297,
																		"src": "8778:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1426,
																		"name": "perUserReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1304,
																		"src": "8794:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1427,
																			"name": "distributedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1307,
																			"src": "8810:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1428,
																			"name": "leftover",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1310,
																			"src": "8828:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8810:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1430,
																		"name": "distributedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "8838:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1431,
																		"name": "leftover",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "8857:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1432,
																			"name": "curentWeekContest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "8867:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																				"typeString": "struct Storage.WeeklyContest storage pointer"
																			}
																		},
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8885:7:7",
																		"memberName": "endTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2091,
																		"src": "8867:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1423,
																	"name": "WeeklyClosed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2147,
																	"src": "8751:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8751:142:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1435,
															"nodeType": "EmitStatement",
															"src": "8746:147:7"
														}
													]
												}
											}
										]
									},
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_closeWeeklyContest",
									"nameLocation": "6708:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6727:2:7"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6739:0:7"
									},
									"scope": 1572,
									"src": "6699:2213:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "9008:1148:7",
										"statements": [
											{
												"assignments": [
													1450
												],
												"declarations": [
													{
														"constant": false,
														"id": 1450,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "9042:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1570,
														"src": "9029:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 1449,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1448,
																"name": "User",
																"nameLocations": [
																	"9029:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1738,
																"src": "9029:4:7"
															},
															"referencedDeclaration": 1738,
															"src": "9029:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1454,
												"initialValue": {
													"baseExpression": {
														"id": 1451,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "9049:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1738_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 1453,
													"indexExpression": {
														"id": 1452,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "9055:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9049:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1738_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:34:7"
											},
											{
												"assignments": [
													1456
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "userAddress",
														"nameLocation": "9082:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1570,
														"src": "9074:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1455,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9074:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1459,
												"initialValue": {
													"expression": {
														"id": 1457,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "9096:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9101:7:7",
													"memberName": "account",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1697,
													"src": "9096:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9074:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1461,
																"name": "userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "9128:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1462,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9143:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9147:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9143:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9128:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420796f7572206163636f756e74",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9155:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															},
															"value": "Not your account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															}
														],
														"id": 1460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9120:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9120:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "9120:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1469,
																			"name": "_userId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1441,
																			"src": "9193:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9203:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "9193:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1472,
																			"name": "_roundId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1443,
																			"src": "9208:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9219:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "9208:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "9193:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1476,
																				"name": "weeklyContestdtl",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2112,
																				"src": "9224:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$2096_storage_$",
																					"typeString": "mapping(uint256 => struct Storage.WeeklyContest storage ref)"
																				}
																			},
																			"id": 1478,
																			"indexExpression": {
																				"id": 1477,
																				"name": "_roundId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1443,
																				"src": "9241:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9224:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage",
																				"typeString": "struct Storage.WeeklyContest storage ref"
																			}
																		},
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9251:6:7",
																		"memberName": "closed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2095,
																		"src": "9224:33:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "74727565",
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9261:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"src": "9224:41:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9193:72:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1483,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "9269:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1484,
																	"name": "currentWeeklyRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "9280:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9269:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9193:105:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420757365724964206f7220726f756e644964206f7220726f756e64206f72206e6f7420636c6f736564",
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9300:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1beb791ee1ae905f1be0eca33d1d067be754dc802f8b109cb5643c884132d67d",
																"typeString": "literal_string \"Invalid userId or roundId or round or not closed\""
															},
															"value": "Invalid userId or roundId or round or not closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1beb791ee1ae905f1be0eca33d1d067be754dc802f8b109cb5643c884132d67d",
																"typeString": "literal_string \"Invalid userId or roundId or round or not closed\""
															}
														],
														"id": 1468,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9185:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9185:166:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "9185:166:7"
											},
											{
												"assignments": [
													1492
												],
												"declarations": [
													{
														"constant": false,
														"id": 1492,
														"mutability": "mutable",
														"name": "weeklyuserdtl",
														"nameLocation": "9381:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1570,
														"src": "9362:32:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_weeklyUser_$2107_storage_ptr",
															"typeString": "struct Storage.weeklyUser"
														},
														"typeName": {
															"id": 1491,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1490,
																"name": "weeklyUser",
																"nameLocations": [
																	"9362:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2107,
																"src": "9362:10:7"
															},
															"referencedDeclaration": 2107,
															"src": "9362:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2107_storage_ptr",
																"typeString": "struct Storage.weeklyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1498,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1493,
															"name": "weeklyUserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2124,
															"src": "9397:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2107_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser storage ref))"
															}
														},
														"id": 1495,
														"indexExpression": {
															"id": 1494,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "9411:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9397:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2107_storage_$",
															"typeString": "mapping(uint256 => struct Storage.weeklyUser storage ref)"
														}
													},
													"id": 1497,
													"indexExpression": {
														"id": 1496,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "9421:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9397:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_weeklyUser_$2107_storage",
														"typeString": "struct Storage.weeklyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9362:67:7"
											},
											{
												"assignments": [
													1501
												],
												"declarations": [
													{
														"constant": false,
														"id": 1501,
														"mutability": "mutable",
														"name": "curentWeekContest",
														"nameLocation": "9462:17:7",
														"nodeType": "VariableDeclaration",
														"scope": 1570,
														"src": "9440:39:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
															"typeString": "struct Storage.WeeklyContest"
														},
														"typeName": {
															"id": 1500,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1499,
																"name": "WeeklyContest",
																"nameLocations": [
																	"9440:13:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2096,
																"src": "9440:13:7"
															},
															"referencedDeclaration": 2096,
															"src": "9440:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																"typeString": "struct Storage.WeeklyContest"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1505,
												"initialValue": {
													"baseExpression": {
														"id": 1502,
														"name": "weeklyContestdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2112,
														"src": "9482:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$2096_storage_$",
															"typeString": "mapping(uint256 => struct Storage.WeeklyContest storage ref)"
														}
													},
													"id": 1504,
													"indexExpression": {
														"id": 1503,
														"name": "_roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "9499:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9482:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage",
														"typeString": "struct Storage.WeeklyContest storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9440:68:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1507,
																		"name": "weeklyuserdtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1492,
																		"src": "9527:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_weeklyUser_$2107_storage_ptr",
																			"typeString": "struct Storage.weeklyUser storage pointer"
																		}
																	},
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9541:11:7",
																	"memberName": "isQualified",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2106,
																	"src": "9527:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9556:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "9527:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1511,
																		"name": "weeklyuserdtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1492,
																		"src": "9564:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_weeklyUser_$2107_storage_ptr",
																			"typeString": "struct Storage.weeklyUser storage pointer"
																		}
																	},
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9578:9:7",
																	"memberName": "isClaimed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2104,
																	"src": "9564:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9591:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "9564:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9527:69:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207175616c6966696564206f7220616c726561647920636c61696d6564",
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9598:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78f53726529d49fe01f6ac4390f0b3e3c092c1fd33b30397a6030a09dcedc25c",
																"typeString": "literal_string \"Not qualified or already claimed\""
															},
															"value": "Not qualified or already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78f53726529d49fe01f6ac4390f0b3e3c092c1fd33b30397a6030a09dcedc25c",
																"typeString": "literal_string \"Not qualified or already claimed\""
															}
														],
														"id": 1506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9519:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9519:114:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1518,
												"nodeType": "ExpressionStatement",
												"src": "9519:114:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1520,
																	"name": "curentWeekContest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1501,
																	"src": "9652:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																		"typeString": "struct Storage.WeeklyContest storage pointer"
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9670:13:7",
																"memberName": "perUserReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2085,
																"src": "9652:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9686:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9652:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072657761726420746f20636c61696d",
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9689:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																"typeString": "literal_string \"No reward to claim\""
															},
															"value": "No reward to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4c6423772e4e815437c30e816d55885e1c76b37e1b44511b4a9613c66858655",
																"typeString": "literal_string \"No reward to claim\""
															}
														],
														"id": 1519,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9644:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9644:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "9644:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1528,
																	"name": "curentWeekContest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1501,
																	"src": "9729:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																		"typeString": "struct Storage.WeeklyContest storage pointer"
																	}
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9747:12:7",
																"memberName": "claimedCount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2087,
																"src": "9729:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1530,
																	"name": "curentWeekContest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1501,
																	"src": "9762:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																		"typeString": "struct Storage.WeeklyContest storage pointer"
																	}
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9780:10:7",
																"memberName": "totalUsers",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2083,
																"src": "9762:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9729:61:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20757365727320636c61696d6564",
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9792:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef17ed6f30e35240a7d137e6d492d3e905f716720fe9e669bbd494e7ba4e07ad",
																"typeString": "literal_string \"All users claimed\""
															},
															"value": "All users claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef17ed6f30e35240a7d137e6d492d3e905f716720fe9e669bbd494e7ba4e07ad",
																"typeString": "literal_string \"All users claimed\""
															}
														],
														"id": 1527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9721:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9721:91:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "9721:91:7"
											},
											{
												"assignments": [
													1537
												],
												"declarations": [
													{
														"constant": false,
														"id": 1537,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "9830:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1570,
														"src": "9825:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1536,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9825:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1540,
												"initialValue": {
													"expression": {
														"id": 1538,
														"name": "curentWeekContest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "9839:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
															"typeString": "struct Storage.WeeklyContest storage pointer"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9857:13:7",
													"memberName": "perUserReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2085,
													"src": "9839:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9825:45:7"
											},
											{
												"expression": {
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1541,
															"name": "curentWeekContest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "9885:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
																"typeString": "struct Storage.WeeklyContest storage pointer"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9903:12:7",
														"memberName": "claimedCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2087,
														"src": "9885:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9919:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9885:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "9885:35:7"
											},
											{
												"expression": {
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1547,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "9931:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2107_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 1549,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9945:9:7",
														"memberName": "isClaimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2104,
														"src": "9931:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9957:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "9931:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "9931:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1554,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "10000:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1555,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "10009:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1556,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "10018:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10026:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 1558,
																"name": "IncomeType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "10029:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_IncomeType_$1785_$",
																	"typeString": "type(enum Storage.IncomeType)"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "10040:13:7",
															"memberName": "WeeklyContest",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1782,
															"src": "10029:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$1785",
																"typeString": "enum Storage.IncomeType"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_enum$_IncomeType_$1785",
																"typeString": "enum Storage.IncomeType"
															}
														],
														"id": 1553,
														"name": "_distributeIncome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2588,
														"src": "9982:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_IncomeType_$1785_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256,enum Storage.IncomeType)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9982:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "9982:72:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1563,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "10104:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1564,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "10114:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1565,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "10123:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1566,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10132:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10138:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "10132:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1562,
														"name": "WeeklyRewardClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2157,
														"src": "10086:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10086:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1569,
												"nodeType": "EmitStatement",
												"src": "10081:67:7"
											}
										]
									},
									"functionSelector": "16298056",
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1446,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1445,
												"name": "nonReentrant",
												"nameLocations": [
													"8995:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "8995:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8995:12:7"
										}
									],
									"name": "claimWeeklyContestReward",
									"nameLocation": "8932:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "8962:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "8957:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8957:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "8976:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "8971:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8971:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8956:29:7"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9008:0:7"
									},
									"scope": 1572,
									"src": "8923:1233:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1573,
							"src": "90:10200:7",
							"usedErrors": [
								244
							],
							"usedEvents": [
								1835,
								1843,
								1853,
								1865,
								1877,
								1887,
								1895,
								1910,
								2147,
								2157,
								2165,
								2246,
								2256,
								2264,
								2339,
								2349,
								2357
							]
						}
					],
					"src": "33:10259:7"
				},
				"id": 7
			},
			"contracts/modules/Storage.sol": {
				"ast": {
					"absolutePath": "contracts/modules/Storage.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"ReentrancyGuard": [
							154
						],
						"SafeERC20": [
							696
						],
						"Storage": [
							2864
						]
					},
					"id": 2865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1574,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1575,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2865,
							"sourceUnit": 155,
							"src": "99:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1576,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2865,
							"sourceUnit": 233,
							"src": "165:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1577,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2865,
							"sourceUnit": 697,
							"src": "223:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1578,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"312:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 154,
										"src": "312:15:8"
									},
									"id": 1579,
									"nodeType": "InheritanceSpecifier",
									"src": "312:15:8"
								}
							],
							"canonicalName": "Storage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2864,
							"linearizedBaseContracts": [
								2864,
								154
							],
							"name": "Storage",
							"nameLocation": "301:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1583,
									"libraryName": {
										"id": 1580,
										"name": "SafeERC20",
										"nameLocations": [
											"341:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 696,
										"src": "341:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "335:27:8",
									"typeName": {
										"id": 1582,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1581,
											"name": "IERC20",
											"nameLocations": [
												"355:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 232,
											"src": "355:6:8"
										},
										"referencedDeclaration": 232,
										"src": "355:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$232",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 1586,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "382:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "368:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$232",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1585,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1584,
											"name": "IERC20",
											"nameLocations": [
												"368:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 232,
											"src": "368:6:8"
										},
										"referencedDeclaration": 232,
										"src": "368:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$232",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cdc65f2",
									"id": 1588,
									"mutability": "mutable",
									"name": "creatorWallet",
									"nameLocation": "437:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "422:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1587,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "422:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e9e34a16",
									"id": 1590,
									"mutability": "mutable",
									"name": "systemMaintance",
									"nameLocation": "475:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "460:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1589,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "460:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f5d74d93",
									"id": 1592,
									"mutability": "mutable",
									"name": "teamDevelopment",
									"nameLocation": "512:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "497:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1591,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "497:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec597e6f",
									"id": 1594,
									"mutability": "mutable",
									"name": "defaultRefId",
									"nameLocation": "546:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "534:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1593,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "534:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bff1f9e1",
									"id": 1596,
									"mutability": "mutable",
									"name": "totalUsers",
									"nameLocation": "577:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "565:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1595,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "565:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1599,
									"mutability": "constant",
									"name": "maxLayers",
									"nameLocation": "617:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "594:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1597,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "594:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 1598,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "629:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "01c234a8",
									"id": 1602,
									"mutability": "constant",
									"name": "PERCENTS_DIVIDER",
									"nameLocation": "664:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "640:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1600,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "640:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 1601,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "683:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32bc298c",
									"id": 1605,
									"mutability": "constant",
									"name": "TIME_STEP",
									"nameLocation": "719:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "695:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1603,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1604,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "731:6:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f63a6861",
									"id": 1608,
									"mutability": "constant",
									"name": "MONTHLY_ROYALTY",
									"nameLocation": "768:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "744:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1606,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 1607,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "786:8:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8640000_by_1",
											"typeString": "int_const 8640000"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "7dd2b847",
									"id": 1611,
									"mutability": "constant",
									"name": "TOP_ROYALTY",
									"nameLocation": "825:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "801:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1609,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "801:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343530",
										"id": 1610,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "839:8:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_38880000_by_1",
											"typeString": "int_const 38880000"
										},
										"value": "450"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "375b43b4",
									"id": 1614,
									"mutability": "constant",
									"name": "ROI_CAP_MULTIPLIER",
									"nameLocation": "878:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "854:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1612,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "854:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 1613,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "899:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "58c7d352",
									"id": 1617,
									"mutability": "constant",
									"name": "ROI_CAP_DIVIDER",
									"nameLocation": "940:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "916:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1615,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "916:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1616,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "958:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "23fd338e",
									"id": 1620,
									"mutability": "constant",
									"name": "MONTHLY_ROYALTY_LEVEL",
									"nameLocation": "991:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "967:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1618,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "967:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1619,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1015:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ae0ee0d",
									"id": 1623,
									"mutability": "constant",
									"name": "TOP_ROYALTY_LEVEL",
									"nameLocation": "1048:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "1024:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1621,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1024:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 1622,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1068:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39ab3603",
									"id": 1626,
									"mutability": "mutable",
									"name": "registeredUserIds",
									"nameLocation": "1098:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "1084:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1624,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1084:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1625,
										"nodeType": "ArrayTypeName",
										"src": "1084:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1628,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "1135:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "1122:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1627,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1122:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "32fcd966",
									"id": 1631,
									"mutability": "constant",
									"name": "ACC_PRECISION",
									"nameLocation": "1324:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "1300:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1629,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1300:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1630,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1340:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78f6ad6d",
									"id": 1633,
									"mutability": "mutable",
									"name": "communityAccPerUser",
									"nameLocation": "1366:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "1351:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1632,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1351:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1637,
									"mutability": "mutable",
									"name": "communityDebt",
									"nameLocation": "1464:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "1430:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1636,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1634,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1438:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1430:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1635,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1446:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "c216212a",
									"id": 1686,
									"mutability": "mutable",
									"name": "packages",
									"nameLocation": "1522:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "1508:540:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1638,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1508:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1639,
										"nodeType": "ArrayTypeName",
										"src": "1508:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"commonType": {
													"typeIdentifier": "t_rational_15000000000000000000_by_1",
													"typeString": "int_const 15000000000000000000"
												},
												"id": 1642,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3135",
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1544:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_15_by_1",
														"typeString": "int_const 15"
													},
													"value": "15"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1549:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1544:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_15000000000000000000_by_1",
													"typeString": "int_const 15000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_25000000000000000000_by_1",
													"typeString": "int_const 25000000000000000000"
												},
												"id": 1645,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3235",
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1576:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_25_by_1",
														"typeString": "int_const 25"
													},
													"value": "25"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1581:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1576:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_25000000000000000000_by_1",
													"typeString": "int_const 25000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_50000000000000000000_by_1",
													"typeString": "int_const 50000000000000000000"
												},
												"id": 1648,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3530",
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1608:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_50_by_1",
														"typeString": "int_const 50"
													},
													"value": "50"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1613:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1608:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_50000000000000000000_by_1",
													"typeString": "int_const 50000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_100000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000"
												},
												"id": 1651,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "313030",
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1640:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"value": "100"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1646:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1640:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_200000000000000000000_by_1",
													"typeString": "int_const 200000000000000000000"
												},
												"id": 1654,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "323030",
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1673:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_200_by_1",
														"typeString": "int_const 200"
													},
													"value": "200"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1679:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1673:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_200000000000000000000_by_1",
													"typeString": "int_const 200000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_400000000000000000000_by_1",
													"typeString": "int_const 400000000000000000000"
												},
												"id": 1657,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "343030",
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1706:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_400_by_1",
														"typeString": "int_const 400"
													},
													"value": "400"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1712:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1706:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_400000000000000000000_by_1",
													"typeString": "int_const 400000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_800000000000000000000_by_1",
													"typeString": "int_const 800000000000000000000"
												},
												"id": 1660,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "383030",
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1739:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_800_by_1",
														"typeString": "int_const 800"
													},
													"value": "800"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1745:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1739:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_800000000000000000000_by_1",
													"typeString": "int_const 800000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_1600000000000000000000_by_1",
													"typeString": "int_const 1600000000000000000000"
												},
												"id": 1663,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "31363030",
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1772:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1600_by_1",
														"typeString": "int_const 1600"
													},
													"value": "1600"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1779:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1772:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1600000000000000000000_by_1",
													"typeString": "int_const 1600000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_3200000000000000000000_by_1",
													"typeString": "int_const 3200000000000000000000"
												},
												"id": 1666,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "33323030",
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1806:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3200_by_1",
														"typeString": "int_const 3200"
													},
													"value": "3200"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1813:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1806:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3200000000000000000000_by_1",
													"typeString": "int_const 3200000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_6400000000000000000000_by_1",
													"typeString": "int_const 6400000000000000000000"
												},
												"id": 1669,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "36343030",
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1840:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6400_by_1",
														"typeString": "int_const 6400"
													},
													"value": "6400"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1847:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1840:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6400000000000000000000_by_1",
													"typeString": "int_const 6400000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_12800000000000000000000_by_1",
													"typeString": "int_const 12800000000000000000000"
												},
												"id": 1672,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3132383030",
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1874:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_12800_by_1",
														"typeString": "int_const 12800"
													},
													"value": "12800"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1882:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1874:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_12800000000000000000000_by_1",
													"typeString": "int_const 12800000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_25600000000000000000000_by_1",
													"typeString": "int_const 25600000000000000000000"
												},
												"id": 1675,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3235363030",
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1909:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_25600_by_1",
														"typeString": "int_const 25600"
													},
													"value": "25600"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1917:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1909:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_25600000000000000000000_by_1",
													"typeString": "int_const 25600000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_51200000000000000000000_by_1",
													"typeString": "int_const 51200000000000000000000"
												},
												"id": 1678,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3531323030",
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1944:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_51200_by_1",
														"typeString": "int_const 51200"
													},
													"value": "51200"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1952:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1944:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_51200000000000000000000_by_1",
													"typeString": "int_const 51200000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_102400000000000000000000_by_1",
													"typeString": "int_const 102400000000000000000000"
												},
												"id": 1681,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "313032343030",
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1979:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_102400_by_1",
														"typeString": "int_const 102400"
													},
													"value": "102400"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1988:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1979:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_102400000000000000000000_by_1",
													"typeString": "int_const 102400000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_204800000000000000000000_by_1",
													"typeString": "int_const 204800000000000000000000"
												},
												"id": 1684,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "323034383030",
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2015:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_204800_by_1",
														"typeString": "int_const 204800"
													},
													"value": "204800"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2024:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2015:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_204800000000000000000000_by_1",
													"typeString": "int_const 204800000000000000000000"
												}
											}
										],
										"id": 1685,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "1533:515:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$15_memory_ptr",
											"typeString": "uint80[15] memory"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.Deposit",
									"id": 1695,
									"members": [
										{
											"constant": false,
											"id": 1688,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2195:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1695,
											"src": "2187:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1687,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2187:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1690,
											"mutability": "mutable",
											"name": "withdrawn",
											"nameLocation": "2220:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1695,
											"src": "2212:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1689,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1692,
											"mutability": "mutable",
											"name": "start",
											"nameLocation": "2248:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1695,
											"src": "2240:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1691,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2240:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1694,
											"mutability": "mutable",
											"name": "depositType",
											"nameLocation": "2271:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1695,
											"src": "2265:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1693,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2265:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deposit",
									"nameLocation": "2168:7:8",
									"nodeType": "StructDefinition",
									"scope": 2864,
									"src": "2161:131:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.User",
									"id": 1738,
									"members": [
										{
											"constant": false,
											"id": 1697,
											"mutability": "mutable",
											"name": "account",
											"nameLocation": "2331:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2323:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1696,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2323:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1701,
											"mutability": "mutable",
											"name": "deposits",
											"nameLocation": "2359:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2349:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Deposit_$1695_storage_$dyn_storage_ptr",
												"typeString": "struct Storage.Deposit[]"
											},
											"typeName": {
												"baseType": {
													"id": 1699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1698,
														"name": "Deposit",
														"nameLocations": [
															"2349:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1695,
														"src": "2349:7:8"
													},
													"referencedDeclaration": 1695,
													"src": "2349:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deposit_$1695_storage_ptr",
														"typeString": "struct Storage.Deposit"
													}
												},
												"id": 1700,
												"nodeType": "ArrayTypeName",
												"src": "2349:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Deposit_$1695_storage_$dyn_storage_ptr",
													"typeString": "struct Storage.Deposit[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1703,
											"mutability": "mutable",
											"name": "checkpoint",
											"nameLocation": "2386:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2378:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1702,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2378:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1705,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "2412:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2407:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1704,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2407:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1707,
											"mutability": "mutable",
											"name": "sponsorId",
											"nameLocation": "2430:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2425:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1706,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2425:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1709,
											"mutability": "mutable",
											"name": "uplineId",
											"nameLocation": "2468:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2463:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1708,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2463:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1711,
											"mutability": "mutable",
											"name": "level",
											"nameLocation": "2517:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2512:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1710,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2512:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1713,
											"mutability": "mutable",
											"name": "directTeam",
											"nameLocation": "2575:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2570:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1712,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2570:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1715,
											"mutability": "mutable",
											"name": "directPoolQualified",
											"nameLocation": "2627:19:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2622:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1714,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2622:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1717,
											"mutability": "mutable",
											"name": "totalMatrixTeam",
											"nameLocation": "2705:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2700:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1716,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2700:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1719,
											"mutability": "mutable",
											"name": "totalDeposit",
											"nameLocation": "2761:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2756:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1718,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2756:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1721,
											"mutability": "mutable",
											"name": "poollevel",
											"nameLocation": "2789:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2784:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1720,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2784:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1723,
											"mutability": "mutable",
											"name": "poolDeposit",
											"nameLocation": "2814:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2809:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1722,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2809:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1725,
											"mutability": "mutable",
											"name": "boosterlevel",
											"nameLocation": "2841:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2836:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1724,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2836:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1727,
											"mutability": "mutable",
											"name": "boosterDeposit",
											"nameLocation": "2869:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2864:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1726,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2864:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1729,
											"mutability": "mutable",
											"name": "registrationTime",
											"nameLocation": "2899:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2894:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1728,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2894:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1731,
											"mutability": "mutable",
											"name": "level10Time",
											"nameLocation": "2931:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2926:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1730,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2926:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1733,
											"mutability": "mutable",
											"name": "level15Time",
											"nameLocation": "2958:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2953:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1732,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2953:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1735,
											"mutability": "mutable",
											"name": "monthlyUserDirectCount",
											"nameLocation": "2985:22:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "2980:27:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1734,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2980:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1737,
											"mutability": "mutable",
											"name": "topRoyaltyDirectCount",
											"nameLocation": "3053:21:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "3048:26:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1736,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3048:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "2307:4:8",
									"nodeType": "StructDefinition",
									"scope": 2864,
									"src": "2300:819:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserIncome",
									"id": 1763,
									"members": [
										{
											"constant": false,
											"id": 1740,
											"mutability": "mutable",
											"name": "totalIncome",
											"nameLocation": "3190:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1763,
											"src": "3185:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1739,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3185:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1742,
											"mutability": "mutable",
											"name": "sponsorIncome",
											"nameLocation": "3217:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 1763,
											"src": "3212:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1741,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3212:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1744,
											"mutability": "mutable",
											"name": "matrixIncome",
											"nameLocation": "3246:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1763,
											"src": "3241:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1743,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3241:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1746,
											"mutability": "mutable",
											"name": "levelBoosterIncome",
											"nameLocation": "3274:18:8",
											"nodeType": "VariableDeclaration",
											"scope": 1763,
											"src": "3269:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1745,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3269:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1748,
											"mutability": "mutable",
											"name": "royaltyIncome",
											"nameLocation": "3337:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 1763,
											"src": "3332:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1747,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3332:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1750,
											"mutability": "mutable",
											"name": "royaltyIncomeClaimed",
											"nameLocation": "3366:20:8",
											"nodeType": "VariableDeclaration",
											"scope": 1763,
											"src": "3361:25:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1749,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3361:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1752,
											"mutability": "mutable",
											"name": "communityIncome",
											"nameLocation": "3439:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 1763,
											"src": "3434:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1751,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3434:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1754,
											"mutability": "mutable",
											"name": "poolIncome",
											"nameLocation": "3519:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1763,
											"src": "3514:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1753,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3514:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1756,
											"mutability": "mutable",
											"name": "boosterIncome",
											"nameLocation": "3580:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 1763,
											"src": "3575:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1755,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3575:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1758,
											"mutability": "mutable",
											"name": "weeklyContestIncome",
											"nameLocation": "3638:19:8",
											"nodeType": "VariableDeclaration",
											"scope": 1763,
											"src": "3633:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1757,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3633:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1760,
											"mutability": "mutable",
											"name": "monthlyRoyalty",
											"nameLocation": "3709:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 1763,
											"src": "3704:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1759,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3704:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1762,
											"mutability": "mutable",
											"name": "monthlyTopRoyalty",
											"nameLocation": "3775:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 1763,
											"src": "3770:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1761,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3770:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserIncome",
									"nameLocation": "3163:10:8",
									"nodeType": "StructDefinition",
									"scope": 2864,
									"src": "3156:680:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.Income",
									"id": 1774,
									"members": [
										{
											"constant": false,
											"id": 1765,
											"mutability": "mutable",
											"name": "fromUserId",
											"nameLocation": "3874:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1774,
											"src": "3869:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1764,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3869:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1767,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3900:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1774,
											"src": "3895:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1766,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3895:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1769,
											"mutability": "mutable",
											"name": "packageLevel",
											"nameLocation": "3922:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1774,
											"src": "3917:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1768,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3917:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1771,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "3950:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1774,
											"src": "3945:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1770,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3945:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1773,
											"mutability": "mutable",
											"name": "incomeType",
											"nameLocation": "3975:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1774,
											"src": "3970:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1772,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3970:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Income",
									"nameLocation": "3851:6:8",
									"nodeType": "StructDefinition",
									"scope": 2864,
									"src": "3844:309:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.IncomeType",
									"id": 1785,
									"members": [
										{
											"id": 1775,
											"name": "Creator",
											"nameLocation": "4186:7:8",
											"nodeType": "EnumValue",
											"src": "4186:7:8"
										},
										{
											"id": 1776,
											"name": "Sponsor",
											"nameLocation": "4220:7:8",
											"nodeType": "EnumValue",
											"src": "4220:7:8"
										},
										{
											"id": 1777,
											"name": "Matrix",
											"nameLocation": "4254:6:8",
											"nodeType": "EnumValue",
											"src": "4254:6:8"
										},
										{
											"id": 1778,
											"name": "LevelBooster",
											"nameLocation": "4288:12:8",
											"nodeType": "EnumValue",
											"src": "4288:12:8"
										},
										{
											"id": 1779,
											"name": "Community",
											"nameLocation": "4330:9:8",
											"nodeType": "EnumValue",
											"src": "4330:9:8"
										},
										{
											"id": 1780,
											"name": "Pool",
											"nameLocation": "4364:4:8",
											"nodeType": "EnumValue",
											"src": "4364:4:8"
										},
										{
											"id": 1781,
											"name": "Booster",
											"nameLocation": "4398:7:8",
											"nodeType": "EnumValue",
											"src": "4398:7:8"
										},
										{
											"id": 1782,
											"name": "WeeklyContest",
											"nameLocation": "4432:13:8",
											"nodeType": "EnumValue",
											"src": "4432:13:8"
										},
										{
											"id": 1783,
											"name": "MonthlyRoyalty",
											"nameLocation": "4466:14:8",
											"nodeType": "EnumValue",
											"src": "4466:14:8"
										},
										{
											"id": 1784,
											"name": "MonthlyTopRoyalty",
											"nameLocation": "4500:17:8",
											"nodeType": "EnumValue",
											"src": "4500:17:8"
										}
									],
									"name": "IncomeType",
									"nameLocation": "4164:10:8",
									"nodeType": "EnumDefinition",
									"src": "4159:372:8"
								},
								{
									"constant": false,
									"id": 1789,
									"mutability": "mutable",
									"name": "addressToId",
									"nameLocation": "4577:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "4543:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1788,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1786,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4551:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4543:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1787,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4562:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1794,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "4626:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "4595:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1738_storage_$",
										"typeString": "mapping(uint256 => struct Storage.User)"
									},
									"typeName": {
										"id": 1793,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1790,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4603:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4595:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1738_storage_$",
											"typeString": "mapping(uint256 => struct Storage.User)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1792,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1791,
												"name": "User",
												"nameLocations": [
													"4611:4:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1738,
												"src": "4611:4:8"
											},
											"referencedDeclaration": 1738,
											"src": "4611:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
												"typeString": "struct Storage.User"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1799,
									"mutability": "mutable",
									"name": "userIncomes",
									"nameLocation": "4675:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "4638:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$1763_storage_$",
										"typeString": "mapping(uint256 => struct Storage.UserIncome)"
									},
									"typeName": {
										"id": 1798,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1795,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4646:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4638:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$1763_storage_$",
											"typeString": "mapping(uint256 => struct Storage.UserIncome)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1797,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1796,
												"name": "UserIncome",
												"nameLocations": [
													"4654:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1763,
												"src": "4654:10:8"
											},
											"referencedDeclaration": 1763,
											"src": "4654:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
												"typeString": "struct Storage.UserIncome"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1805,
									"mutability": "mutable",
									"name": "incomeHistory",
									"nameLocation": "4759:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "4724:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$1774_storage_$dyn_storage_$",
										"typeString": "mapping(uint256 => struct Storage.Income[])"
									},
									"typeName": {
										"id": 1804,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1800,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4732:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4724:25:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$1774_storage_$dyn_storage_$",
											"typeString": "mapping(uint256 => struct Storage.Income[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1802,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1801,
													"name": "Income",
													"nameLocations": [
														"4740:6:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1774,
													"src": "4740:6:8"
												},
												"referencedDeclaration": 1774,
												"src": "4740:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Income_$1774_storage_ptr",
													"typeString": "struct Storage.Income"
												}
											},
											"id": 1803,
											"nodeType": "ArrayTypeName",
											"src": "4740:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Income_$1774_storage_$dyn_storage_ptr",
												"typeString": "struct Storage.Income[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1812,
									"mutability": "mutable",
									"name": "teams",
									"nameLocation": "4829:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "4779:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 1811,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1806,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4787:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4779:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1810,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1807,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4803:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "4795:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 1808,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4811:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1809,
												"nodeType": "ArrayTypeName",
												"src": "4811:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1816,
									"mutability": "mutable",
									"name": "matrixDirect",
									"nameLocation": "4906:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "4875:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1815,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1813,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4883:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4875:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1814,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4891:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1821,
									"mutability": "mutable",
									"name": "directReferrals",
									"nameLocation": "4994:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "4961:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 1820,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1817,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4969:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4961:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1818,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4977:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1819,
											"nodeType": "ArrayTypeName",
											"src": "4977:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "0c28361b1bd0a8a8cd2daf76b402a306e7c3ed3e7bb56820ba81a5edab4636e0",
									"id": 1835,
									"name": "UserJoined",
									"nameLocation": "5024:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"indexed": true,
												"mutability": "mutable",
												"name": "matrixId",
												"nameLocation": "5049:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "5035:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1822,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5035:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"indexed": true,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "5074:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "5059:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1824,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "5059:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5098:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "5082:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5082:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"indexed": false,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "5111:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "5104:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1828,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "5104:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"indexed": false,
												"mutability": "mutable",
												"name": "parentAddr",
												"nameLocation": "5129:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "5121:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"indexed": false,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "5147:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "5141:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1832,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5141:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5034:122:8"
									},
									"src": "5018:139:8"
								},
								{
									"anonymous": false,
									"eventSelector": "792af4ddd1dc413b17bea369ca90e7ae463cc96b773c936c70b33d8b08bc096f",
									"id": 1843,
									"name": "RewardSent",
									"nameLocation": "5169:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5196:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "5180:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5208:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "5200:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5200:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"indexed": false,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "5223:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "5216:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1840,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5216:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5179:50:8"
									},
									"src": "5163:67:8"
								},
								{
									"anonymous": false,
									"eventSelector": "309bb360e8b69c23937ccc5fb01f9aeeead1c95a99604e175113ff82f2b1723a",
									"id": 1853,
									"name": "Registration",
									"nameLocation": "5262:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5291:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "5275:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5275:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"indexed": true,
												"mutability": "mutable",
												"name": "sponsor",
												"nameLocation": "5313:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "5297:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5297:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"indexed": true,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "5335:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "5322:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5322:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"indexed": false,
												"mutability": "mutable",
												"name": "uplineId",
												"nameLocation": "5348:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "5343:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5343:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5274:83:8"
									},
									"src": "5256:102:8"
								},
								{
									"anonymous": false,
									"eventSelector": "ae1560e7d725caf8d266d531bf32f170b87264eca8d1265202c334cfeb5bc382",
									"id": 1865,
									"name": "Upgrade",
									"nameLocation": "5370:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5394:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "5378:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5378:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"indexed": true,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "5413:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "5400:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5400:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "5426:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "5421:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5421:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"indexed": false,
												"mutability": "mutable",
												"name": "depositType",
												"nameLocation": "5447:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "5440:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1860,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5440:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"indexed": false,
												"mutability": "mutable",
												"name": "upgradeTime",
												"nameLocation": "5465:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "5460:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5460:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5377:100:8"
									},
									"src": "5364:114:8"
								},
								{
									"anonymous": false,
									"eventSelector": "e17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e3",
									"id": 1877,
									"name": "IncomeDistributed",
									"nameLocation": "5490:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5524:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "5508:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5508:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5544:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "5528:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5528:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5555:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "5550:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5550:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "5568:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "5563:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5563:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"indexed": false,
												"mutability": "mutable",
												"name": "incomeType",
												"nameLocation": "5587:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "5582:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5582:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5507:91:8"
									},
									"src": "5484:115:8"
								},
								{
									"anonymous": false,
									"eventSelector": "5cbb4caf17c10875f33a7c303c1862bcd2fca5faed9a98d1f6e8f41bf720491f",
									"id": 1887,
									"name": "LotteryReward",
									"nameLocation": "5611:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "5641:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "5625:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5625:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1881,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromUserId",
												"nameLocation": "5662:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "5649:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5649:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5679:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "5674:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5674:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5692:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "5687:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5687:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5624:78:8"
									},
									"src": "5605:98:8"
								},
								{
									"anonymous": false,
									"eventSelector": "ed2ed4e697131e475ee1946b709d36d74793101a68ffaa7386f98886a32d8d9f",
									"id": 1895,
									"name": "CommunityBonusDistributed",
									"nameLocation": "5715:25:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5746:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "5741:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5741:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"indexed": false,
												"mutability": "mutable",
												"name": "usersCount",
												"nameLocation": "5759:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "5754:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5754:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUser",
												"nameLocation": "5776:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "5771:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5771:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5740:44:8"
									},
									"src": "5709:76:8"
								},
								{
									"anonymous": false,
									"eventSelector": "0f67c60bc8519c61563ac616d368a6df646202c88d10744d736438bc4fbe2816",
									"id": 1910,
									"name": "IncomeDistribution",
									"nameLocation": "5797:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5832:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "5816:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5851:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "5835:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5835:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5864:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "5856:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "5879:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "5871:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5871:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"indexed": false,
												"mutability": "mutable",
												"name": "incomeType",
												"nameLocation": "5903:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "5892:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_IncomeType_$1785",
													"typeString": "enum Storage.IncomeType"
												},
												"typeName": {
													"id": 1905,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1904,
														"name": "IncomeType",
														"nameLocations": [
															"5892:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1785,
														"src": "5892:10:8"
													},
													"referencedDeclaration": 1785,
													"src": "5892:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_IncomeType_$1785",
														"typeString": "enum Storage.IncomeType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1908,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5922:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "5914:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5914:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:117:8"
									},
									"src": "5791:142:8"
								},
								{
									"constant": false,
									"functionSelector": "ae4708dc",
									"id": 1921,
									"mutability": "mutable",
									"name": "poolPackages",
									"nameLocation": "6002:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "5988:93:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1911,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5988:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1912,
										"nodeType": "ArrayTypeName",
										"src": "5988:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "3735653138",
												"id": 1913,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6018:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_75000000000000000000_by_1",
													"typeString": "int_const 75000000000000000000"
												},
												"value": "75e18"
											},
											{
												"hexValue": "333030653138",
												"id": 1914,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6025:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_300000000000000000000_by_1",
													"typeString": "int_const 300000000000000000000"
												},
												"value": "300e18"
											},
											{
												"hexValue": "31323030653138",
												"id": 1915,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6033:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1200000000000000000000_by_1",
													"typeString": "int_const 1200000000000000000000"
												},
												"value": "1200e18"
											},
											{
												"hexValue": "34383030653138",
												"id": 1916,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6042:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_4800000000000000000000_by_1",
													"typeString": "int_const 4800000000000000000000"
												},
												"value": "4800e18"
											},
											{
												"hexValue": "3139323030653138",
												"id": 1917,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6051:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_19200000000000000000000_by_1",
													"typeString": "int_const 19200000000000000000000"
												},
												"value": "19200e18"
											},
											{
												"hexValue": "3736383030653138",
												"id": 1918,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6061:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_76800000000000000000000_by_1",
													"typeString": "int_const 76800000000000000000000"
												},
												"value": "76800e18"
											},
											{
												"hexValue": "333037323030653138",
												"id": 1919,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6071:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_307200000000000000000000_by_1",
													"typeString": "int_const 307200000000000000000000"
												},
												"value": "307200e18"
											}
										],
										"id": 1920,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "6017:64:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$7_memory_ptr",
											"typeString": "uint80[7] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2350268f",
									"id": 1933,
									"mutability": "mutable",
									"name": "glbBoosterPackages",
									"nameLocation": "6102:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "6088:105:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1922,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6088:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1923,
										"nodeType": "ArrayTypeName",
										"src": "6088:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "313030653138",
												"id": 1924,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6125:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000"
												},
												"value": "100e18"
											},
											{
												"hexValue": "323030653138",
												"id": 1925,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6133:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_200000000000000000000_by_1",
													"typeString": "int_const 200000000000000000000"
												},
												"value": "200e18"
											},
											{
												"hexValue": "343030653138",
												"id": 1926,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6141:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_400000000000000000000_by_1",
													"typeString": "int_const 400000000000000000000"
												},
												"value": "400e18"
											},
											{
												"hexValue": "383030653138",
												"id": 1927,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6149:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_800000000000000000000_by_1",
													"typeString": "int_const 800000000000000000000"
												},
												"value": "800e18"
											},
											{
												"hexValue": "31363030653138",
												"id": 1928,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6157:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1600000000000000000000_by_1",
													"typeString": "int_const 1600000000000000000000"
												},
												"value": "1600e18"
											},
											{
												"hexValue": "33323030653138",
												"id": 1929,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6166:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3200000000000000000000_by_1",
													"typeString": "int_const 3200000000000000000000"
												},
												"value": "3200e18"
											},
											{
												"hexValue": "36343030653138",
												"id": 1930,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6175:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6400000000000000000000_by_1",
													"typeString": "int_const 6400000000000000000000"
												},
												"value": "6400e18"
											},
											{
												"hexValue": "3132383030653138",
												"id": 1931,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6184:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_12800000000000000000000_by_1",
													"typeString": "int_const 12800000000000000000000"
												},
												"value": "12800e18"
											}
										],
										"id": 1932,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "6123:70:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$8_memory_ptr",
											"typeString": "uint80[8] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2132d204",
									"id": 1945,
									"mutability": "mutable",
									"name": "minLevelForPool",
									"nameLocation": "6215:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "6200:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$7_storage",
										"typeString": "uint256[7]"
									},
									"typeName": {
										"baseType": {
											"id": 1934,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6200:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1936,
										"length": {
											"hexValue": "37",
											"id": 1935,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6205:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_7_by_1",
												"typeString": "int_const 7"
											},
											"value": "7"
										},
										"nodeType": "ArrayTypeName",
										"src": "6200:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$7_storage_ptr",
											"typeString": "uint256[7]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "33",
												"id": 1937,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6234:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											},
											{
												"hexValue": "35",
												"id": 1938,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6237:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												},
												"value": "5"
											},
											{
												"hexValue": "37",
												"id": 1939,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6240:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_7_by_1",
													"typeString": "int_const 7"
												},
												"value": "7"
											},
											{
												"hexValue": "39",
												"id": 1940,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6243:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											{
												"hexValue": "3131",
												"id": 1941,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6246:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_11_by_1",
													"typeString": "int_const 11"
												},
												"value": "11"
											},
											{
												"hexValue": "3133",
												"id": 1942,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6250:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_13_by_1",
													"typeString": "int_const 13"
												},
												"value": "13"
											},
											{
												"hexValue": "3135",
												"id": 1943,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6254:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_15_by_1",
													"typeString": "int_const 15"
												},
												"value": "15"
											}
										],
										"id": 1944,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "6233:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$7_memory_ptr",
											"typeString": "uint8[7] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0a2fd79",
									"id": 1958,
									"mutability": "mutable",
									"name": "minLevelForGlbBooster",
									"nameLocation": "6279:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "6264:64:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$8_storage",
										"typeString": "uint256[8]"
									},
									"typeName": {
										"baseType": {
											"id": 1946,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6264:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1948,
										"length": {
											"hexValue": "38",
											"id": 1947,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6269:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_8_by_1",
												"typeString": "int_const 8"
											},
											"value": "8"
										},
										"nodeType": "ArrayTypeName",
										"src": "6264:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
											"typeString": "uint256[8]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "34",
												"id": 1949,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6304:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_4_by_1",
													"typeString": "int_const 4"
												},
												"value": "4"
											},
											{
												"hexValue": "35",
												"id": 1950,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6307:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												},
												"value": "5"
											},
											{
												"hexValue": "36",
												"id": 1951,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6310:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6_by_1",
													"typeString": "int_const 6"
												},
												"value": "6"
											},
											{
												"hexValue": "37",
												"id": 1952,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6313:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_7_by_1",
													"typeString": "int_const 7"
												},
												"value": "7"
											},
											{
												"hexValue": "38",
												"id": 1953,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6316:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_8_by_1",
													"typeString": "int_const 8"
												},
												"value": "8"
											},
											{
												"hexValue": "39",
												"id": 1954,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6319:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											{
												"hexValue": "3130",
												"id": 1955,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6322:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											{
												"hexValue": "3131",
												"id": 1956,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6325:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_11_by_1",
													"typeString": "int_const 11"
												},
												"value": "11"
											}
										],
										"id": 1957,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "6303:25:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$8_memory_ptr",
											"typeString": "uint8[8] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "956a3228",
									"id": 1971,
									"mutability": "mutable",
									"name": "minPoolForGlbBooster",
									"nameLocation": "6350:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "6335:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$8_storage",
										"typeString": "uint256[8]"
									},
									"typeName": {
										"baseType": {
											"id": 1959,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6335:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1961,
										"length": {
											"hexValue": "38",
											"id": 1960,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6340:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_8_by_1",
												"typeString": "int_const 8"
											},
											"value": "8"
										},
										"nodeType": "ArrayTypeName",
										"src": "6335:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
											"typeString": "uint256[8]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "30",
												"id": 1962,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6374:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											{
												"hexValue": "31",
												"id": 1963,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6377:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 1964,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6380:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 1965,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6383:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 1966,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6386:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 1967,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6389:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 1968,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6392:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 1969,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6394:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											}
										],
										"id": 1970,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "6373:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$8_memory_ptr",
											"typeString": "uint8[8] memory"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserPool",
									"id": 1982,
									"members": [
										{
											"constant": false,
											"id": 1973,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "6439:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 1982,
											"src": "6434:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1972,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6434:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1975,
											"mutability": "mutable",
											"name": "mainid",
											"nameLocation": "6472:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1982,
											"src": "6467:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1974,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6467:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1977,
											"mutability": "mutable",
											"name": "poolId",
											"nameLocation": "6494:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1982,
											"src": "6489:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1976,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6489:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1979,
											"mutability": "mutable",
											"name": "parentId",
											"nameLocation": "6516:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1982,
											"src": "6511:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1978,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6511:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1981,
											"mutability": "mutable",
											"name": "bonusCount",
											"nameLocation": "6542:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1982,
											"src": "6537:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1980,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6537:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserPool",
									"nameLocation": "6414:8:8",
									"nodeType": "StructDefinition",
									"scope": 2864,
									"src": "6407:165:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserPoolTopup",
									"id": 1987,
									"members": [
										{
											"constant": false,
											"id": 1984,
											"mutability": "mutable",
											"name": "nextPoolAmt",
											"nameLocation": "6621:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "6616:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1983,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6616:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1986,
											"mutability": "mutable",
											"name": "reTopupAmt",
											"nameLocation": "6655:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "6650:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1985,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6650:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserPoolTopup",
									"nameLocation": "6591:13:8",
									"nodeType": "StructDefinition",
									"scope": 2864,
									"src": "6584:94:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserBooster",
									"id": 1998,
									"members": [
										{
											"constant": false,
											"id": 1989,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "6746:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 1998,
											"src": "6741:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1988,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6741:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1991,
											"mutability": "mutable",
											"name": "poolId",
											"nameLocation": "6765:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1998,
											"src": "6760:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1990,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6760:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1993,
											"mutability": "mutable",
											"name": "parentId",
											"nameLocation": "6787:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1998,
											"src": "6782:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1992,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6782:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1995,
											"mutability": "mutable",
											"name": "bonusCount",
											"nameLocation": "6813:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 1998,
											"src": "6808:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1994,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6808:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1997,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "6840:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1998,
											"src": "6835:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1996,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6835:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserBooster",
									"nameLocation": "6718:11:8",
									"nodeType": "StructDefinition",
									"scope": 2864,
									"src": "6711:157:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2005,
									"mutability": "mutable",
									"name": "userPooltopup",
									"nameLocation": "6970:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "6912:71:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$1987_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))"
									},
									"typeName": {
										"id": 2004,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1999,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6920:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6912:48:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$1987_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2003,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2000,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6937:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6929:30:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$1987_storage_$",
												"typeString": "mapping(uint256 => struct Storage.UserPoolTopup)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2002,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2001,
													"name": "UserPoolTopup",
													"nameLocations": [
														"6945:13:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1987,
													"src": "6945:13:8"
												},
												"referencedDeclaration": 1987,
												"src": "6945:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserPoolTopup_$1987_storage_ptr",
													"typeString": "struct Storage.UserPoolTopup"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2012,
									"mutability": "mutable",
									"name": "userPooldtl",
									"nameLocation": "7045:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "6992:64:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPool_$1982_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))"
									},
									"typeName": {
										"id": 2011,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2006,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7000:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6992:43:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPool_$1982_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2010,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2007,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7017:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7009:25:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPool_$1982_storage_$",
												"typeString": "mapping(uint256 => struct Storage.UserPool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2009,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2008,
													"name": "UserPool",
													"nameLocations": [
														"7025:8:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1982,
													"src": "7025:8:8"
												},
												"referencedDeclaration": 1982,
												"src": "7025:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserPool_$1982_storage_ptr",
													"typeString": "struct Storage.UserPool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2019,
									"mutability": "mutable",
									"name": "userChildren",
									"nameLocation": "7113:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "7063:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2018,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2013,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7071:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7063:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2017,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2014,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7087:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7079:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2015,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7095:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2016,
												"nodeType": "ArrayTypeName",
												"src": "7095:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2026,
									"mutability": "mutable",
									"name": "userIdPerPool",
									"nameLocation": "7205:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "7155:63:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2025,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2020,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7163:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7155:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2024,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2021,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7179:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7171:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2022,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7187:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2023,
												"nodeType": "ArrayTypeName",
												"src": "7187:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2031,
									"mutability": "mutable",
									"name": "poolUsers",
									"nameLocation": "7290:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "7257:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2030,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2027,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7265:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7257:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2028,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7273:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2029,
											"nodeType": "ArrayTypeName",
											"src": "7273:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2037,
									"mutability": "mutable",
									"name": "userHasPool",
									"nameLocation": "7384:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "7336:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 2036,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2032,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7344:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7336:38:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2035,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2033,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7360:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7352:21:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2034,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "7368:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2044,
									"mutability": "mutable",
									"name": "userBoosterdtl",
									"nameLocation": "7499:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "7443:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$1998_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))"
									},
									"typeName": {
										"id": 2043,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2038,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7451:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7443:46:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$1998_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2042,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2039,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7468:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7460:28:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBooster_$1998_storage_$",
												"typeString": "mapping(uint256 => struct Storage.UserBooster)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2041,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2040,
													"name": "UserBooster",
													"nameLocations": [
														"7476:11:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1998,
													"src": "7476:11:8"
												},
												"referencedDeclaration": 1998,
												"src": "7476:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserBooster_$1998_storage_ptr",
													"typeString": "struct Storage.UserBooster"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2051,
									"mutability": "mutable",
									"name": "userBoosterChildren",
									"nameLocation": "7571:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "7520:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2050,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2045,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7528:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7520:41:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2049,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2046,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7545:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7537:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2047,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7553:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2048,
												"nodeType": "ArrayTypeName",
												"src": "7553:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2056,
									"mutability": "mutable",
									"name": "boosterUsers",
									"nameLocation": "7630:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "7597:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2055,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2052,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7605:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7597:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2053,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7613:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2054,
											"nodeType": "ArrayTypeName",
											"src": "7613:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2062,
									"mutability": "mutable",
									"name": "userHasbooster",
									"nameLocation": "7730:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "7682:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 2061,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2057,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7690:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7682:38:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2060,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2058,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7706:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7698:21:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2059,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "7714:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "76f5f700",
									"id": 2065,
									"mutability": "constant",
									"name": "WEEK_DURATION",
									"nameLocation": "7805:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "7784:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2063,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7784:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 2064,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7821:6:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ebe0ff15",
									"id": 2068,
									"mutability": "constant",
									"name": "WeeklyCapping",
									"nameLocation": "7858:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "7837:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2066,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7837:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030653138",
										"id": 2067,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7874:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										},
										"value": "1000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ca8e9121",
									"id": 2071,
									"mutability": "mutable",
									"name": "currentWeeklyRound",
									"nameLocation": "7905:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "7893:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2069,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7893:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2070,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7926:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fddc806f",
									"id": 2074,
									"mutability": "mutable",
									"name": "currentWeeklyStartTime",
									"nameLocation": "7946:22:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "7934:38:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2072,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7934:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2073,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7971:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3080b5bc",
									"id": 2077,
									"mutability": "mutable",
									"name": "WeeklyTotalReward",
									"nameLocation": "7993:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "7981:33:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2075,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7981:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2076,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8013:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.WeeklyContest",
									"id": 2096,
									"members": [
										{
											"constant": false,
											"id": 2079,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "8067:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2096,
											"src": "8062:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2078,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8062:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2081,
											"mutability": "mutable",
											"name": "totalReward",
											"nameLocation": "8094:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2096,
											"src": "8089:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2080,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8089:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2083,
											"mutability": "mutable",
											"name": "totalUsers",
											"nameLocation": "8121:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2096,
											"src": "8116:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2082,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8116:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2085,
											"mutability": "mutable",
											"name": "perUserReward",
											"nameLocation": "8147:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2096,
											"src": "8142:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2084,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8142:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2087,
											"mutability": "mutable",
											"name": "claimedCount",
											"nameLocation": "8176:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2096,
											"src": "8171:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2086,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8171:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2089,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "8204:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2096,
											"src": "8199:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2088,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8199:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2091,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "8229:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2096,
											"src": "8224:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2090,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8224:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2093,
											"mutability": "mutable",
											"name": "carryForward",
											"nameLocation": "8252:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2096,
											"src": "8247:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2092,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8247:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2095,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "8280:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2096,
											"src": "8275:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2094,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8275:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WeeklyContest",
									"nameLocation": "8037:13:8",
									"nodeType": "StructDefinition",
									"scope": 2864,
									"src": "8030:264:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.weeklyUser",
									"id": 2107,
									"members": [
										{
											"constant": false,
											"id": 2098,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "8346:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2107,
											"src": "8341:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2097,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8341:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2100,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "8370:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2107,
											"src": "8365:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2099,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8365:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2102,
											"mutability": "mutable",
											"name": "claimTime",
											"nameLocation": "8394:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2107,
											"src": "8389:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2101,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8389:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2104,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "8419:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2107,
											"src": "8414:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2103,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8414:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2106,
											"mutability": "mutable",
											"name": "isQualified",
											"nameLocation": "8445:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2107,
											"src": "8440:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2105,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8440:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "weeklyUser",
									"nameLocation": "8312:10:8",
									"nodeType": "StructDefinition",
									"scope": 2864,
									"src": "8305:159:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2112,
									"mutability": "mutable",
									"name": "weeklyContestdtl",
									"nameLocation": "8511:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "8470:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$2096_storage_$",
										"typeString": "mapping(uint256 => struct Storage.WeeklyContest)"
									},
									"typeName": {
										"id": 2111,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2108,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8479:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8470:31:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$2096_storage_$",
											"typeString": "mapping(uint256 => struct Storage.WeeklyContest)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2110,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2109,
												"name": "WeeklyContest",
												"nameLocations": [
													"8487:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2096,
												"src": "8487:13:8"
											},
											"referencedDeclaration": 2096,
											"src": "8487:13:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage_ptr",
												"typeString": "struct Storage.WeeklyContest"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2117,
									"mutability": "mutable",
									"name": "weeklyQualifiedUsers",
									"nameLocation": "8585:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "8562:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2116,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2113,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8570:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8562:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2114,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8577:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2115,
											"nodeType": "ArrayTypeName",
											"src": "8577:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2124,
									"mutability": "mutable",
									"name": "weeklyUserdtl",
									"nameLocation": "8689:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "8635:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2107_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))"
									},
									"typeName": {
										"id": 2123,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2118,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8643:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8635:44:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2107_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2122,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2119,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8659:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "8651:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2107_storage_$",
												"typeString": "mapping(uint256 => struct Storage.weeklyUser)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2121,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2120,
													"name": "weeklyUser",
													"nameLocations": [
														"8667:10:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2107,
													"src": "8667:10:8"
												},
												"referencedDeclaration": 2107,
												"src": "8667:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_weeklyUser_$2107_storage_ptr",
													"typeString": "struct Storage.weeklyUser"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2131,
									"mutability": "mutable",
									"name": "weeklyUserDirects",
									"nameLocation": "8786:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "8736:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2130,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2125,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8744:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8736:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2129,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2126,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8760:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "8752:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2127,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8768:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2128,
												"nodeType": "ArrayTypeName",
												"src": "8768:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "ca8a78d1841a8dafbb8ff53c869b3fa9a69abd051022178024f84b680ffd2e3c",
									"id": 2147,
									"name": "WeeklyClosed",
									"nameLocation": "8862:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "8880:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "8875:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2132,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8875:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2135,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalUsers",
												"nameLocation": "8894:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "8889:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8889:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "8911:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "8906:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2136,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8906:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2139,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReward",
												"nameLocation": "8931:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "8926:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2138,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8926:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2141,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDistributed",
												"nameLocation": "8949:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "8944:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2140,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8944:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"indexed": false,
												"mutability": "mutable",
												"name": "leftoverReward",
												"nameLocation": "8972:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "8967:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2142,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8967:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "8993:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "8988:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2144,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8988:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8874:127:8"
									},
									"src": "8856:146:8"
								},
								{
									"anonymous": false,
									"eventSelector": "96ee4f374d0394c5383b347dc3b7ec04a1eceddcd2e25521157bce21c42b24d5",
									"id": 2157,
									"name": "WeeklyRewardClaim",
									"nameLocation": "9014:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2149,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "9037:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "9032:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2148,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9032:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "9051:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "9046:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9046:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "9064:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "9059:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9059:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTime",
												"nameLocation": "9085:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "9080:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2154,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9080:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9031:64:8"
									},
									"src": "9008:88:8"
								},
								{
									"anonymous": false,
									"eventSelector": "360cb96d3e85b4fc299ddfa9a572850fc70961c86f0f1703f033143b0e5a82cf",
									"id": 2165,
									"name": "WeeklyContestQualified",
									"nameLocation": "9108:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "9136:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "9131:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2158,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9131:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2161,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "9150:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "9145:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9145:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"indexed": false,
												"mutability": "mutable",
												"name": "joinTime",
												"nameLocation": "9163:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "9158:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9158:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9130:42:8"
									},
									"src": "9102:71:8"
								},
								{
									"constant": true,
									"functionSelector": "2a891534",
									"id": 2168,
									"mutability": "constant",
									"name": "MONTH_DURATION",
									"nameLocation": "9251:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "9230:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2166,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "9230:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 2167,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9268:7:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c8df2908",
									"id": 2171,
									"mutability": "constant",
									"name": "monthlyCapping",
									"nameLocation": "9303:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "9282:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2169,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "9282:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030653138",
										"id": 2170,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9320:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000"
										},
										"value": "10000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c9ed0708",
									"id": 2174,
									"mutability": "mutable",
									"name": "currentMonthlyRound",
									"nameLocation": "9353:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "9341:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2172,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "9341:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2173,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9375:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e898fc38",
									"id": 2177,
									"mutability": "mutable",
									"name": "currentMonthlyStartTime",
									"nameLocation": "9395:23:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "9383:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2175,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "9383:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2176,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9421:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a59d17d1",
									"id": 2180,
									"mutability": "mutable",
									"name": "monthlyTotalReward",
									"nameLocation": "9441:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "9429:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2178,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "9429:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2179,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9462:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.monthlyRoyalty",
									"id": 2199,
									"members": [
										{
											"constant": false,
											"id": 2182,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "9510:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2199,
											"src": "9505:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2181,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9505:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2184,
											"mutability": "mutable",
											"name": "totalReward",
											"nameLocation": "9537:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2199,
											"src": "9532:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2183,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9532:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2186,
											"mutability": "mutable",
											"name": "totalUsers",
											"nameLocation": "9564:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2199,
											"src": "9559:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2185,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9559:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2188,
											"mutability": "mutable",
											"name": "perUserReward",
											"nameLocation": "9590:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2199,
											"src": "9585:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2187,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9585:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2190,
											"mutability": "mutable",
											"name": "claimedCount",
											"nameLocation": "9619:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2199,
											"src": "9614:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2189,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9614:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2192,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "9647:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2199,
											"src": "9642:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2191,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9642:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2194,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "9672:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2199,
											"src": "9667:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2193,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9667:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2196,
											"mutability": "mutable",
											"name": "carryForward",
											"nameLocation": "9695:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2199,
											"src": "9690:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2195,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9690:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2198,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "9723:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2199,
											"src": "9718:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2197,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "9718:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "monthlyRoyalty",
									"nameLocation": "9479:14:8",
									"nodeType": "StructDefinition",
									"scope": 2864,
									"src": "9472:265:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.monthlyRoyaltyUser",
									"id": 2212,
									"members": [
										{
											"constant": false,
											"id": 2201,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "9794:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2212,
											"src": "9789:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2200,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9789:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2203,
											"mutability": "mutable",
											"name": "qualifiedRoundId",
											"nameLocation": "9818:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 2212,
											"src": "9813:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2202,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9813:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2205,
											"mutability": "mutable",
											"name": "claimTime",
											"nameLocation": "9851:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2212,
											"src": "9846:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2204,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9846:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2209,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "9893:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2212,
											"src": "9871:31:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 2208,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 2206,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9879:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "9871:21:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9887:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2211,
											"mutability": "mutable",
											"name": "isQualified",
											"nameLocation": "9919:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2212,
											"src": "9914:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2210,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "9914:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "monthlyRoyaltyUser",
									"nameLocation": "9752:18:8",
									"nodeType": "StructDefinition",
									"scope": 2864,
									"src": "9745:193:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2217,
									"mutability": "mutable",
									"name": "monthlyRoyaltydtl",
									"nameLocation": "9986:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "9944:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$2199_storage_$",
										"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty)"
									},
									"typeName": {
										"id": 2216,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2213,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "9953:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "9944:32:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$2199_storage_$",
											"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2215,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2214,
												"name": "monthlyRoyalty",
												"nameLocations": [
													"9961:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2199,
												"src": "9961:14:8"
											},
											"referencedDeclaration": 2199,
											"src": "9961:14:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage_ptr",
												"typeString": "struct Storage.monthlyRoyalty"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2220,
									"mutability": "mutable",
									"name": "monthlyQualifiedUsers",
									"nameLocation": "10046:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "10039:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2218,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "10039:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2219,
										"nodeType": "ArrayTypeName",
										"src": "10039:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2225,
									"mutability": "mutable",
									"name": "monthlyRoyaltyUserdtl",
									"nameLocation": "10153:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "10108:66:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2212_storage_$",
										"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)"
									},
									"typeName": {
										"id": 2224,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2221,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "10116:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "10108:35:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2212_storage_$",
											"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2223,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2222,
												"name": "monthlyRoyaltyUser",
												"nameLocations": [
													"10124:18:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2212,
												"src": "10124:18:8"
											},
											"referencedDeclaration": 2212,
											"src": "10124:18:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
												"typeString": "struct Storage.monthlyRoyaltyUser"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2230,
									"mutability": "mutable",
									"name": "monthlyUserDirects",
									"nameLocation": "10214:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "10181:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2229,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2226,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "10189:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "10181:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2227,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10197:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2228,
											"nodeType": "ArrayTypeName",
											"src": "10197:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "1b674071adfa65db18518e4868ae7d5f54dd365c69e0babe9b704cbade8fe4bb",
									"id": 2246,
									"name": "MonthlyClosed",
									"nameLocation": "10302:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "10321:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "10316:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2231,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10316:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalUsers",
												"nameLocation": "10335:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "10330:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10330:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "10352:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "10347:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10347:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReward",
												"nameLocation": "10372:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "10367:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10367:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDistributed",
												"nameLocation": "10390:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "10385:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10385:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"indexed": false,
												"mutability": "mutable",
												"name": "leftoverReward",
												"nameLocation": "10413:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "10408:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10408:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "10434:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "10429:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10429:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10315:127:8"
									},
									"src": "10296:147:8"
								},
								{
									"anonymous": false,
									"eventSelector": "8211032682f8fd8be8ff252e0a106cdb6ad4b10427152b4d93c2bc9a1f11c3c2",
									"id": 2256,
									"name": "MonthlyRewardClaim",
									"nameLocation": "10455:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "10479:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "10474:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2247,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10474:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2250,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "10493:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "10488:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2249,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10488:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2252,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "10506:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "10501:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10501:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTime",
												"nameLocation": "10527:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "10522:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2253,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10522:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10473:64:8"
									},
									"src": "10449:89:8"
								},
								{
									"anonymous": false,
									"eventSelector": "42ee5ef523a95c6fb3ffdd2e9b34955b83ea8c2b11ff268c87ae6ea25556eaac",
									"id": 2264,
									"name": "MonthlyRoyaltyQualified",
									"nameLocation": "10550:23:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "10579:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "10574:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2257,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10574:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2260,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "10593:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "10588:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10588:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"indexed": false,
												"mutability": "mutable",
												"name": "joinTime",
												"nameLocation": "10606:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "10601:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10601:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10573:42:8"
									},
									"src": "10544:72:8"
								},
								{
									"constant": false,
									"functionSelector": "4b8cbf9b",
									"id": 2267,
									"mutability": "mutable",
									"name": "topRoyaltyRound",
									"nameLocation": "10663:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "10651:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2265,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "10651:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2266,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10681:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b40ab97",
									"id": 2270,
									"mutability": "mutable",
									"name": "topRoyaltyStartTime",
									"nameLocation": "10701:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "10689:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2268,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "10689:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2269,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10723:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5b62d1d5",
									"id": 2273,
									"mutability": "mutable",
									"name": "topRoyaltyReward",
									"nameLocation": "10743:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "10731:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2271,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "10731:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2272,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10762:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.topRoyalty",
									"id": 2292,
									"members": [
										{
											"constant": false,
											"id": 2275,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "10806:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2292,
											"src": "10801:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2274,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10801:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2277,
											"mutability": "mutable",
											"name": "totalReward",
											"nameLocation": "10833:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2292,
											"src": "10828:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2276,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10828:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2279,
											"mutability": "mutable",
											"name": "totalUsers",
											"nameLocation": "10860:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2292,
											"src": "10855:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2278,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10855:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2281,
											"mutability": "mutable",
											"name": "perUserReward",
											"nameLocation": "10886:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2292,
											"src": "10881:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2280,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10881:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2283,
											"mutability": "mutable",
											"name": "claimedCount",
											"nameLocation": "10915:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2292,
											"src": "10910:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2282,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10910:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2285,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "10943:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2292,
											"src": "10938:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2284,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10938:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2287,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "10968:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2292,
											"src": "10963:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2286,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10963:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2289,
											"mutability": "mutable",
											"name": "carryForward",
											"nameLocation": "10991:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2292,
											"src": "10986:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2288,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10986:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2291,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "11019:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2292,
											"src": "11014:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2290,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "11014:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "topRoyalty",
									"nameLocation": "10779:10:8",
									"nodeType": "StructDefinition",
									"scope": 2864,
									"src": "10772:261:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.topRoyaltyUser",
									"id": 2305,
									"members": [
										{
											"constant": false,
											"id": 2294,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "11086:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2305,
											"src": "11081:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2293,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11081:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2296,
											"mutability": "mutable",
											"name": "qualifiedRoundId",
											"nameLocation": "11110:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 2305,
											"src": "11105:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2295,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11105:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2298,
											"mutability": "mutable",
											"name": "claimTime",
											"nameLocation": "11143:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2305,
											"src": "11138:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2297,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11138:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2302,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "11185:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2305,
											"src": "11163:31:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 2301,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 2299,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11171:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "11163:21:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2300,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11179:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2304,
											"mutability": "mutable",
											"name": "isQualified",
											"nameLocation": "11211:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2305,
											"src": "11206:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2303,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "11206:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "topRoyaltyUser",
									"nameLocation": "11048:14:8",
									"nodeType": "StructDefinition",
									"scope": 2864,
									"src": "11041:189:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2310,
									"mutability": "mutable",
									"name": "topRoyaltydtl",
									"nameLocation": "11274:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "11236:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyalty_$2292_storage_$",
										"typeString": "mapping(uint256 => struct Storage.topRoyalty)"
									},
									"typeName": {
										"id": 2309,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2306,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "11245:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "11236:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyalty_$2292_storage_$",
											"typeString": "mapping(uint256 => struct Storage.topRoyalty)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2308,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2307,
												"name": "topRoyalty",
												"nameLocations": [
													"11253:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2292,
												"src": "11253:10:8"
											},
											"referencedDeclaration": 2292,
											"src": "11253:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_topRoyalty_$2292_storage_ptr",
												"typeString": "struct Storage.topRoyalty"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2313,
									"mutability": "mutable",
									"name": "topRoyaltyQualifiedUsers",
									"nameLocation": "11334:24:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "11327:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2311,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "11327:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2312,
										"nodeType": "ArrayTypeName",
										"src": "11327:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2318,
									"mutability": "mutable",
									"name": "topRoyaltyUserdtl",
									"nameLocation": "11436:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "11395:58:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyaltyUser_$2305_storage_$",
										"typeString": "mapping(uint256 => struct Storage.topRoyaltyUser)"
									},
									"typeName": {
										"id": 2317,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2314,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "11403:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "11395:31:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyaltyUser_$2305_storage_$",
											"typeString": "mapping(uint256 => struct Storage.topRoyaltyUser)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2316,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2315,
												"name": "topRoyaltyUser",
												"nameLocations": [
													"11411:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2305,
												"src": "11411:14:8"
											},
											"referencedDeclaration": 2305,
											"src": "11411:14:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_topRoyaltyUser_$2305_storage_ptr",
												"typeString": "struct Storage.topRoyaltyUser"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2323,
									"mutability": "mutable",
									"name": "topRoyaltyUserDirects",
									"nameLocation": "11493:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 2864,
									"src": "11460:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2322,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2319,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "11468:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "11460:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2320,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11476:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2321,
											"nodeType": "ArrayTypeName",
											"src": "11476:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "3e2269a22c7571b51c53565ece51da09613519b306c6dde588beea1f5fd3cfd3",
									"id": 2339,
									"name": "TopRoyaltyClosed",
									"nameLocation": "11580:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "11602:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "11597:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2324,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11597:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2327,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalUsers",
												"nameLocation": "11616:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "11611:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2326,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11611:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2329,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "11633:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "11628:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11628:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2331,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReward",
												"nameLocation": "11653:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "11648:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2330,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11648:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2333,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDistributed",
												"nameLocation": "11671:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "11666:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2332,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11666:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2335,
												"indexed": false,
												"mutability": "mutable",
												"name": "leftoverReward",
												"nameLocation": "11694:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "11689:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2334,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11689:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "11715:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "11710:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11710:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11596:127:8"
									},
									"src": "11574:150:8"
								},
								{
									"anonymous": false,
									"eventSelector": "6ac5dc27fbf1276a5db7faad992ea92a268d34b18f81922f747d9d3beb5f9c55",
									"id": 2349,
									"name": "TopRoyaltyRewardClaim",
									"nameLocation": "11736:21:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "11763:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "11758:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2340,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11758:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2343,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "11777:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "11772:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2342,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11772:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "11790:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "11785:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2344,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11785:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTime",
												"nameLocation": "11811:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "11806:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2346,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11806:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11757:64:8"
									},
									"src": "11730:92:8"
								},
								{
									"anonymous": false,
									"eventSelector": "e0adb9e294d1c73aeabf8e4f0d778fcf5f718aac0cd3c7527f920e520ec9aff2",
									"id": 2357,
									"name": "TopRoyaltyQualified",
									"nameLocation": "11834:19:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2351,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "11859:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "11854:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11854:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "11873:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "11868:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2352,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11868:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2355,
												"indexed": false,
												"mutability": "mutable",
												"name": "joinTime",
												"nameLocation": "11886:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "11881:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2354,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11881:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11853:42:8"
									},
									"src": "11828:68:8"
								},
								{
									"body": {
										"id": 2360,
										"nodeType": "Block",
										"src": "11927:17:8",
										"statements": []
									},
									"id": 2361,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11924:2:8"
									},
									"returnParameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11927:0:8"
									},
									"scope": 2864,
									"src": "11913:31:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2407,
										"nodeType": "Block",
										"src": "12013:695:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2367,
																"name": "creatorWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "12028:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12053:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12045:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2368,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12045:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12045:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12028:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "666565206164647273206e6f7420736574",
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12056:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24633079efecc28c5aede41112c3990abdd9e7b0bb26db3b9a203d1a67268b03",
																"typeString": "literal_string \"fee addrs not set\""
															},
															"value": "fee addrs not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24633079efecc28c5aede41112c3990abdd9e7b0bb26db3b9a203d1a67268b03",
																"typeString": "literal_string \"fee addrs not set\""
															}
														],
														"id": 2366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12020:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12020:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2375,
												"nodeType": "ExpressionStatement",
												"src": "12020:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2379,
															"name": "creatorWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "12192:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2380,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "12207:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2376,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "12174:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 2378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12179:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "12174:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12174:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2382,
												"nodeType": "ExpressionStatement",
												"src": "12174:41:8"
											},
											{
												"assignments": [
													2385
												],
												"declarations": [
													{
														"constant": false,
														"id": 2385,
														"mutability": "mutable",
														"name": "creatorIncome",
														"nameLocation": "12294:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 2407,
														"src": "12275:32:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
															"typeString": "struct Storage.UserIncome"
														},
														"typeName": {
															"id": 2384,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2383,
																"name": "UserIncome",
																"nameLocations": [
																	"12275:10:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1763,
																"src": "12275:10:8"
															},
															"referencedDeclaration": 1763,
															"src": "12275:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
																"typeString": "struct Storage.UserIncome"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2389,
												"initialValue": {
													"baseExpression": {
														"id": 2386,
														"name": "userIncomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "12310:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$1763_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
														}
													},
													"id": 2388,
													"indexExpression": {
														"id": 2387,
														"name": "defaultRefId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "12322:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12310:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIncome_$1763_storage",
														"typeString": "struct Storage.UserIncome storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12275:60:8"
											},
											{
												"expression": {
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2390,
															"name": "creatorIncome",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "12342:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 2392,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12356:11:8",
														"memberName": "totalIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1740,
														"src": "12342:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2393,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2363,
														"src": "12371:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12342:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2395,
												"nodeType": "ExpressionStatement",
												"src": "12342:36:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2397,
															"name": "creatorWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "12625:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2398,
															"name": "creatorWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "12640:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2399,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "12655:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12664:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 2401,
																"name": "IncomeType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "12667:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_IncomeType_$1785_$",
																	"typeString": "type(enum Storage.IncomeType)"
																}
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "12678:7:8",
															"memberName": "Creator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1775,
															"src": "12667:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$1785",
																"typeString": "enum Storage.IncomeType"
															}
														},
														{
															"expression": {
																"id": 2403,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12687:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12693:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "12687:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_enum$_IncomeType_$1785",
																"typeString": "enum Storage.IncomeType"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2396,
														"name": "IncomeDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1910,
														"src": "12606:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_enum$_IncomeType_$1785_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,enum Storage.IncomeType,uint256)"
														}
													},
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12606:98:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2406,
												"nodeType": "EmitStatement",
												"src": "12601:103:8"
											}
										]
									},
									"id": 2408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sendToCreator",
									"nameLocation": "11975:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "11995:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "11990:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2362,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11990:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11989:14:8"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12013:0:8"
									},
									"scope": 2864,
									"src": "11966:742:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2587,
										"nodeType": "Block",
										"src": "12842:2086:8",
										"statements": [
											{
												"assignments": [
													2424
												],
												"declarations": [
													{
														"constant": false,
														"id": 2424,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "12866:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2587,
														"src": "12853:17:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 2423,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2422,
																"name": "User",
																"nameLocations": [
																	"12853:4:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1738,
																"src": "12853:4:8"
															},
															"referencedDeclaration": 1738,
															"src": "12853:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2428,
												"initialValue": {
													"baseExpression": {
														"id": 2425,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "12873:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1738_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 2427,
													"indexExpression": {
														"id": 2426,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2410,
														"src": "12879:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12873:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1738_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12853:34:8"
											},
											{
												"assignments": [
													2430
												],
												"declarations": [
													{
														"constant": false,
														"id": 2430,
														"mutability": "mutable",
														"name": "userAddress",
														"nameLocation": "12906:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 2587,
														"src": "12898:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2429,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12898:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2433,
												"initialValue": {
													"expression": {
														"id": 2431,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2424,
														"src": "12920:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 2432,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12925:7:8",
													"memberName": "account",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1697,
													"src": "12920:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12898:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2435,
																"name": "userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2430,
																"src": "12951:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12974:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12966:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2436,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12966:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12966:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12951:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642075736572",
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12978:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34e7942b50fb081b1a15c529d5017673bd90fd52cb4962fa3d50206a7121a1b",
																"typeString": "literal_string \"Invalid user\""
															},
															"value": "Invalid user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34e7942b50fb081b1a15c529d5017673bd90fd52cb4962fa3d50206a7121a1b",
																"typeString": "literal_string \"Invalid user\""
															}
														],
														"id": 2434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12943:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12943:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2443,
												"nodeType": "ExpressionStatement",
												"src": "12943:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2445,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2414,
																"src": "13012:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13022:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13012:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616d6f756e74",
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13025:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															},
															"value": "Zero amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															}
														],
														"id": 2444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13004:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13004:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2450,
												"nodeType": "ExpressionStatement",
												"src": "13004:35:8"
											},
											{
												"assignments": [
													2453
												],
												"declarations": [
													{
														"constant": false,
														"id": 2453,
														"mutability": "mutable",
														"name": "income",
														"nameLocation": "13187:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2587,
														"src": "13168:25:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
															"typeString": "struct Storage.UserIncome"
														},
														"typeName": {
															"id": 2452,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2451,
																"name": "UserIncome",
																"nameLocations": [
																	"13168:10:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1763,
																"src": "13168:10:8"
															},
															"referencedDeclaration": 1763,
															"src": "13168:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
																"typeString": "struct Storage.UserIncome"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2457,
												"initialValue": {
													"baseExpression": {
														"id": 2454,
														"name": "userIncomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "13196:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$1763_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
														}
													},
													"id": 2456,
													"indexExpression": {
														"id": 2455,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2410,
														"src": "13208:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13196:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIncome_$1763_storage",
														"typeString": "struct Storage.UserIncome storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13168:48:8"
											},
											{
												"expression": {
													"id": 2462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2458,
															"name": "income",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2453,
															"src": "13227:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 2460,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13234:11:8",
														"memberName": "totalIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1740,
														"src": "13227:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2461,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2414,
														"src": "13249:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13227:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2463,
												"nodeType": "ExpressionStatement",
												"src": "13227:29:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_IncomeType_$1785",
														"typeString": "enum Storage.IncomeType"
													},
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2464,
														"name": "_incomeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2419,
														"src": "13343:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_IncomeType_$1785",
															"typeString": "enum Storage.IncomeType"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2465,
															"name": "IncomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "13358:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_IncomeType_$1785_$",
																"typeString": "type(enum Storage.IncomeType)"
															}
														},
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13369:7:8",
														"memberName": "Sponsor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1776,
														"src": "13358:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_IncomeType_$1785",
															"typeString": "enum Storage.IncomeType"
														}
													},
													"src": "13343:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_IncomeType_$1785",
															"typeString": "enum Storage.IncomeType"
														},
														"id": 2477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2474,
															"name": "_incomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "13429:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$1785",
																"typeString": "enum Storage.IncomeType"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2475,
																"name": "IncomeType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "13444:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_IncomeType_$1785_$",
																	"typeString": "type(enum Storage.IncomeType)"
																}
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "13455:6:8",
															"memberName": "Matrix",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1777,
															"src": "13444:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$1785",
																"typeString": "enum Storage.IncomeType"
															}
														},
														"src": "13429:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_IncomeType_$1785",
																"typeString": "enum Storage.IncomeType"
															},
															"id": 2487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2484,
																"name": "_incomeType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2419,
																"src": "13513:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_IncomeType_$1785",
																	"typeString": "enum Storage.IncomeType"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2485,
																	"name": "IncomeType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1785,
																	"src": "13528:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_IncomeType_$1785_$",
																		"typeString": "type(enum Storage.IncomeType)"
																	}
																},
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "13539:12:8",
																"memberName": "LevelBooster",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1778,
																"src": "13528:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_IncomeType_$1785",
																	"typeString": "enum Storage.IncomeType"
																}
															},
															"src": "13513:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_IncomeType_$1785",
																	"typeString": "enum Storage.IncomeType"
																},
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2494,
																	"name": "_incomeType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2419,
																	"src": "13611:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_IncomeType_$1785",
																		"typeString": "enum Storage.IncomeType"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2495,
																		"name": "IncomeType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1785,
																		"src": "13626:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_IncomeType_$1785_$",
																			"typeString": "type(enum Storage.IncomeType)"
																		}
																	},
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "13637:9:8",
																	"memberName": "Community",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1779,
																	"src": "13626:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_IncomeType_$1785",
																		"typeString": "enum Storage.IncomeType"
																	}
																},
																"src": "13611:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_IncomeType_$1785",
																		"typeString": "enum Storage.IncomeType"
																	},
																	"id": 2507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2504,
																		"name": "_incomeType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2419,
																		"src": "13704:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_IncomeType_$1785",
																			"typeString": "enum Storage.IncomeType"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 2505,
																			"name": "IncomeType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1785,
																			"src": "13719:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_IncomeType_$1785_$",
																				"typeString": "type(enum Storage.IncomeType)"
																			}
																		},
																		"id": 2506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "13730:4:8",
																		"memberName": "Pool",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1780,
																		"src": "13719:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_IncomeType_$1785",
																			"typeString": "enum Storage.IncomeType"
																		}
																	},
																	"src": "13704:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_IncomeType_$1785",
																			"typeString": "enum Storage.IncomeType"
																		},
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2514,
																			"name": "_incomeType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2419,
																			"src": "13784:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_IncomeType_$1785",
																				"typeString": "enum Storage.IncomeType"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 2515,
																				"name": "IncomeType",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1785,
																				"src": "13799:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_IncomeType_$1785_$",
																					"typeString": "type(enum Storage.IncomeType)"
																				}
																			},
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "13810:7:8",
																			"memberName": "Booster",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1781,
																			"src": "13799:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_IncomeType_$1785",
																				"typeString": "enum Storage.IncomeType"
																			}
																		},
																		"src": "13784:33:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_enum$_IncomeType_$1785",
																				"typeString": "enum Storage.IncomeType"
																			},
																			"id": 2527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2524,
																				"name": "_incomeType",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2419,
																				"src": "13870:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_IncomeType_$1785",
																					"typeString": "enum Storage.IncomeType"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"expression": {
																					"id": 2525,
																					"name": "IncomeType",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1785,
																					"src": "13885:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_IncomeType_$1785_$",
																						"typeString": "type(enum Storage.IncomeType)"
																					}
																				},
																				"id": 2526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "13896:13:8",
																				"memberName": "WeeklyContest",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1782,
																				"src": "13885:24:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_IncomeType_$1785",
																					"typeString": "enum Storage.IncomeType"
																				}
																			},
																			"src": "13870:39:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_IncomeType_$1785",
																					"typeString": "enum Storage.IncomeType"
																				},
																				"id": 2537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2534,
																					"name": "_incomeType",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2419,
																					"src": "13968:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_IncomeType_$1785",
																						"typeString": "enum Storage.IncomeType"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2535,
																						"name": "IncomeType",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1785,
																						"src": "13983:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_IncomeType_$1785_$",
																							"typeString": "type(enum Storage.IncomeType)"
																						}
																					},
																					"id": 2536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "13994:14:8",
																					"memberName": "MonthlyRoyalty",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1783,
																					"src": "13983:25:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_IncomeType_$1785",
																						"typeString": "enum Storage.IncomeType"
																					}
																				},
																				"src": "13968:40:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_enum$_IncomeType_$1785",
																						"typeString": "enum Storage.IncomeType"
																					},
																					"id": 2547,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2544,
																						"name": "_incomeType",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2419,
																						"src": "14062:11:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_IncomeType_$1785",
																							"typeString": "enum Storage.IncomeType"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"id": 2545,
																							"name": "IncomeType",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1785,
																							"src": "14077:10:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_enum$_IncomeType_$1785_$",
																								"typeString": "type(enum Storage.IncomeType)"
																							}
																						},
																						"id": 2546,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14088:17:8",
																						"memberName": "MonthlyTopRoyalty",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1784,
																						"src": "14077:28:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_IncomeType_$1785",
																							"typeString": "enum Storage.IncomeType"
																						}
																					},
																					"src": "14062:43:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"expression": {
																						"arguments": [
																							{
																								"hexValue": "556e6b6e6f776e20696e636f6d652074797065",
																								"id": 2555,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "14179:21:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_362cd1cd93870aa625050dba699b71f0dd1830454709724c3f6a93954bf62033",
																									"typeString": "literal_string \"Unknown income type\""
																								},
																								"value": "Unknown income type"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_362cd1cd93870aa625050dba699b71f0dd1830454709724c3f6a93954bf62033",
																									"typeString": "literal_string \"Unknown income type\""
																								}
																							],
																							"id": 2554,
																							"name": "revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967277,
																								4294967277
																							],
																							"referencedDeclaration": 4294967277,
																							"src": "14172:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (string memory) pure"
																							}
																						},
																						"id": 2556,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14172:29:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2557,
																					"nodeType": "ExpressionStatement",
																					"src": "14172:29:8"
																				},
																				"id": 2558,
																				"nodeType": "IfStatement",
																				"src": "14058:143:8",
																				"trueBody": {
																					"expression": {
																						"id": 2552,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 2548,
																								"name": "income",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2453,
																								"src": "14107:6:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
																									"typeString": "struct Storage.UserIncome storage pointer"
																								}
																							},
																							"id": 2550,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberLocation": "14114:17:8",
																							"memberName": "monthlyTopRoyalty",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1762,
																							"src": "14107:24:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 2551,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2414,
																							"src": "14135:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "14107:35:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2553,
																					"nodeType": "ExpressionStatement",
																					"src": "14107:35:8"
																				}
																			},
																			"id": 2559,
																			"nodeType": "IfStatement",
																			"src": "13964:237:8",
																			"trueBody": {
																				"expression": {
																					"id": 2542,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2538,
																							"name": "income",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2453,
																							"src": "14010:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
																								"typeString": "struct Storage.UserIncome storage pointer"
																							}
																						},
																						"id": 2540,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "14017:14:8",
																						"memberName": "monthlyRoyalty",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1760,
																						"src": "14010:21:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"id": 2541,
																						"name": "_amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2414,
																						"src": "14035:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14010:32:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2543,
																				"nodeType": "ExpressionStatement",
																				"src": "14010:32:8"
																			}
																		},
																		"id": 2560,
																		"nodeType": "IfStatement",
																		"src": "13866:335:8",
																		"trueBody": {
																			"expression": {
																				"id": 2532,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"id": 2528,
																						"name": "income",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2453,
																						"src": "13911:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
																							"typeString": "struct Storage.UserIncome storage pointer"
																						}
																					},
																					"id": 2530,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberLocation": "13918:19:8",
																					"memberName": "weeklyContestIncome",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1758,
																					"src": "13911:26:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"id": 2531,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2414,
																					"src": "13941:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13911:37:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2533,
																			"nodeType": "ExpressionStatement",
																			"src": "13911:37:8"
																		}
																	},
																	"id": 2561,
																	"nodeType": "IfStatement",
																	"src": "13780:421:8",
																	"trueBody": {
																		"expression": {
																			"id": 2522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2518,
																					"name": "income",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2453,
																					"src": "13819:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
																						"typeString": "struct Storage.UserIncome storage pointer"
																					}
																				},
																				"id": 2520,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "13826:13:8",
																				"memberName": "boosterIncome",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1756,
																				"src": "13819:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2521,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2414,
																				"src": "13843:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13819:31:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2523,
																		"nodeType": "ExpressionStatement",
																		"src": "13819:31:8"
																	}
																},
																"id": 2562,
																"nodeType": "IfStatement",
																"src": "13700:501:8",
																"trueBody": {
																	"expression": {
																		"id": 2512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 2508,
																				"name": "income",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2453,
																				"src": "13736:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
																					"typeString": "struct Storage.UserIncome storage pointer"
																				}
																			},
																			"id": 2510,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "13743:10:8",
																			"memberName": "poolIncome",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1754,
																			"src": "13736:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 2511,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2414,
																			"src": "13757:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13736:28:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2513,
																	"nodeType": "ExpressionStatement",
																	"src": "13736:28:8"
																}
															},
															"id": 2563,
															"nodeType": "IfStatement",
															"src": "13607:594:8",
															"trueBody": {
																"expression": {
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 2498,
																			"name": "income",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2453,
																			"src": "13648:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
																				"typeString": "struct Storage.UserIncome storage pointer"
																			}
																		},
																		"id": 2500,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "13655:15:8",
																		"memberName": "communityIncome",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1752,
																		"src": "13648:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 2501,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2414,
																		"src": "13674:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13648:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2503,
																"nodeType": "ExpressionStatement",
																"src": "13648:33:8"
															}
														},
														"id": 2564,
														"nodeType": "IfStatement",
														"src": "13509:692:8",
														"trueBody": {
															"expression": {
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2488,
																		"name": "income",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2453,
																		"src": "13553:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
																			"typeString": "struct Storage.UserIncome storage pointer"
																		}
																	},
																	"id": 2490,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "13560:18:8",
																	"memberName": "levelBoosterIncome",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1746,
																	"src": "13553:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2491,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2414,
																	"src": "13582:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13553:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2493,
															"nodeType": "ExpressionStatement",
															"src": "13553:36:8"
														}
													},
													"id": 2565,
													"nodeType": "IfStatement",
													"src": "13425:776:8",
													"trueBody": {
														"expression": {
															"id": 2482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2478,
																	"name": "income",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2453,
																	"src": "13463:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
																		"typeString": "struct Storage.UserIncome storage pointer"
																	}
																},
																"id": 2480,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "13470:12:8",
																"memberName": "matrixIncome",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1744,
																"src": "13463:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2481,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2414,
																"src": "13486:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13463:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2483,
														"nodeType": "ExpressionStatement",
														"src": "13463:30:8"
													}
												},
												"id": 2566,
												"nodeType": "IfStatement",
												"src": "13334:867:8",
												"trueBody": {
													"expression": {
														"id": 2472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"id": 2468,
																"name": "income",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2453,
																"src": "13378:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserIncome_$1763_storage_ptr",
																	"typeString": "struct Storage.UserIncome storage pointer"
																}
															},
															"id": 2470,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberLocation": "13385:13:8",
															"memberName": "sponsorIncome",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1742,
															"src": "13378:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"id": 2471,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "13402:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13378:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2473,
													"nodeType": "ExpressionStatement",
													"src": "13378:31:8"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2570,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2430,
															"src": "14657:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2571,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "14670:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2567,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "14639:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 2569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14644:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "14639:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14639:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2573,
												"nodeType": "ExpressionStatement",
												"src": "14639:39:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2575,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2430,
															"src": "14713:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 2576,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1794,
																	"src": "14726:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1738_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 2578,
																"indexExpression": {
																	"id": 2577,
																	"name": "_fromUserId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2412,
																	"src": "14732:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14726:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1738_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14745:7:8",
															"memberName": "account",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1697,
															"src": "14726:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2580,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "14754:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2581,
															"name": "_packageLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2416,
															"src": "14762:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2582,
															"name": "_incomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "14777:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$1785",
																"typeString": "enum Storage.IncomeType"
															}
														},
														{
															"expression": {
																"id": 2583,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "14790:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14796:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "14790:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_IncomeType_$1785",
																"typeString": "enum Storage.IncomeType"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2574,
														"name": "IncomeDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1910,
														"src": "14694:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_enum$_IncomeType_$1785_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,enum Storage.IncomeType,uint256)"
														}
													},
													"id": 2585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14694:113:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2586,
												"nodeType": "EmitStatement",
												"src": "14689:118:8"
											}
										]
									},
									"id": 2588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributeIncome",
									"nameLocation": "12727:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "12750:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "12745:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12745:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "_fromUserId",
												"nameLocation": "12763:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "12758:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12758:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12780:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "12775:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2413,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12775:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "_packageLevel",
												"nameLocation": "12794:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "12789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12789:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "_incomeType",
												"nameLocation": "12820:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "12809:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_IncomeType_$1785",
													"typeString": "enum Storage.IncomeType"
												},
												"typeName": {
													"id": 2418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2417,
														"name": "IncomeType",
														"nameLocations": [
															"12809:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1785,
														"src": "12809:10:8"
													},
													"referencedDeclaration": 1785,
													"src": "12809:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_IncomeType_$1785",
														"typeString": "enum Storage.IncomeType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12744:88:8"
									},
									"returnParameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12842:0:8"
									},
									"scope": 2864,
									"src": "12718:2210:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2609,
										"nodeType": "Block",
										"src": "15007:154:8",
										"statements": [
											{
												"condition": {
													"id": 2601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "15026:45:8",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2595,
																	"name": "weeklyUserdtl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2124,
																	"src": "15027:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2107_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser storage ref))"
																	}
																},
																"id": 2597,
																"indexExpression": {
																	"id": 2596,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2592,
																	"src": "15041:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15027:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2107_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.weeklyUser storage ref)"
																}
															},
															"id": 2599,
															"indexExpression": {
																"id": 2598,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2590,
																"src": "15051:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15027:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2107_storage",
																"typeString": "struct Storage.weeklyUser storage ref"
															}
														},
														"id": 2600,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15060:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2106,
														"src": "15027:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2608,
												"nodeType": "IfStatement",
												"src": "15022:132:8",
												"trueBody": {
													"id": 2607,
													"nodeType": "Block",
													"src": "15073:81:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2603,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2590,
																		"src": "15120:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2604,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2592,
																		"src": "15129:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2602,
																	"name": "_weeklyContestQualifier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2728,
																	"src": "15096:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 2605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15096:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2606,
															"nodeType": "ExpressionStatement",
															"src": "15096:42:8"
														}
													]
												}
											}
										]
									},
									"id": 2610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryWeeklyContestQualify",
									"nameLocation": "14945:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "14975:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "14970:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14970:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "14989:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "14984:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14984:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14969:29:8"
									},
									"returnParameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15007:0:8"
									},
									"scope": 2864,
									"src": "14936:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2727,
										"nodeType": "Block",
										"src": "15239:1408:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2618,
																"name": "_roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2614,
																"src": "15326:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2619,
																"name": "currentWeeklyRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "15338:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15326:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726f756e64",
															"id": 2621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15358:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															},
															"value": "Invalid round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															}
														],
														"id": 2617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15318:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15318:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2623,
												"nodeType": "ExpressionStatement",
												"src": "15318:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "15393:34:8",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2625,
																		"name": "weeklyContestdtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2112,
																		"src": "15394:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$2096_storage_$",
																			"typeString": "mapping(uint256 => struct Storage.WeeklyContest storage ref)"
																		}
																	},
																	"id": 2627,
																	"indexExpression": {
																		"id": 2626,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2614,
																		"src": "15411:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15394:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeeklyContest_$2096_storage",
																		"typeString": "struct Storage.WeeklyContest storage ref"
																	}
																},
																"id": 2628,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15421:6:8",
																"memberName": "closed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2095,
																"src": "15394:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e6420636c6f736564",
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15429:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															},
															"value": "Round closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															}
														],
														"id": 2624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15385:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15385:59:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2632,
												"nodeType": "ExpressionStatement",
												"src": "15385:59:8"
											},
											{
												"assignments": [
													2635
												],
												"declarations": [
													{
														"constant": false,
														"id": 2635,
														"mutability": "mutable",
														"name": "userBoosterJoinDtl",
														"nameLocation": "15474:18:8",
														"nodeType": "VariableDeclaration",
														"scope": 2727,
														"src": "15455:37:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserBooster_$1998_memory_ptr",
															"typeString": "struct Storage.UserBooster"
														},
														"typeName": {
															"id": 2634,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2633,
																"name": "UserBooster",
																"nameLocations": [
																	"15455:11:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1998,
																"src": "15455:11:8"
															},
															"referencedDeclaration": 1998,
															"src": "15455:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserBooster_$1998_storage_ptr",
																"typeString": "struct Storage.UserBooster"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2641,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2636,
															"name": "userBoosterdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "15495:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$1998_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster storage ref))"
															}
														},
														"id": 2638,
														"indexExpression": {
															"hexValue": "31",
															"id": 2637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15510:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15495:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBooster_$1998_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserBooster storage ref)"
														}
													},
													"id": 2640,
													"indexExpression": {
														"id": 2639,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2612,
														"src": "15513:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15495:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserBooster_$1998_storage",
														"typeString": "struct Storage.UserBooster storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15455:66:8"
											},
											{
												"assignments": [
													2643
												],
												"declarations": [
													{
														"constant": false,
														"id": 2643,
														"mutability": "mutable",
														"name": "hasEnoughDirects",
														"nameLocation": "15539:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 2727,
														"src": "15534:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2642,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15534:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2652,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 2644,
																	"name": "weeklyUserDirects",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "15558:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																	}
																},
																"id": 2646,
																"indexExpression": {
																	"id": 2645,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2614,
																	"src": "15576:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15558:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 2648,
															"indexExpression": {
																"id": 2647,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2612,
																"src": "15586:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15558:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15595:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15558:43:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "35",
														"id": 2650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15605:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "15558:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15534:72:8"
											},
											{
												"assignments": [
													2654
												],
												"declarations": [
													{
														"constant": false,
														"id": 2654,
														"mutability": "mutable",
														"name": "boosterEarlyJoin",
														"nameLocation": "15622:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 2727,
														"src": "15617:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2653,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15617:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2670,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2655,
																		"name": "userBoosterJoinDtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2635,
																		"src": "15656:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserBooster_$1998_memory_ptr",
																			"typeString": "struct Storage.UserBooster memory"
																		}
																	},
																	"id": 2656,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15675:2:8",
																	"memberName": "id",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1989,
																	"src": "15656:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2657,
																	"name": "_userId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2612,
																	"src": "15681:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15656:32:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2659,
																		"name": "userBoosterJoinDtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2635,
																		"src": "15706:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserBooster_$1998_memory_ptr",
																			"typeString": "struct Storage.UserBooster memory"
																		}
																	},
																	"id": 2660,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15725:8:8",
																	"memberName": "joinTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1997,
																	"src": "15706:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2661,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1794,
																				"src": "15737:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1738_storage_$",
																					"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																				}
																			},
																			"id": 2663,
																			"indexExpression": {
																				"id": 2662,
																				"name": "_userId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2612,
																				"src": "15743:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15737:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$1738_storage",
																				"typeString": "struct Storage.User storage ref"
																			}
																		},
																		"id": 2664,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15752:16:8",
																		"memberName": "registrationTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1729,
																		"src": "15737:31:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2665,
																		"name": "TIME_STEP",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1605,
																		"src": "15771:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15737:43:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15706:74:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15656:124:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2669,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "15641:150:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15617:174:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2672,
																"name": "hasEnoughDirects",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2643,
																"src": "15810:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 2673,
																"name": "boosterEarlyJoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2654,
																"src": "15830:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15810:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656c696769626c6520666f72207765656b6c7920636f6e74657374",
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15848:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_118c80ebb328a86f89c9abb7dbb00582133be73c782846c45c96fae9ea1c5087",
																"typeString": "literal_string \"Not eligible for weekly contest\""
															},
															"value": "Not eligible for weekly contest"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_118c80ebb328a86f89c9abb7dbb00582133be73c782846c45c96fae9ea1c5087",
																"typeString": "literal_string \"Not eligible for weekly contest\""
															}
														],
														"id": 2671,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15802:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15802:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2677,
												"nodeType": "ExpressionStatement",
												"src": "15802:80:8"
											},
											{
												"assignments": [
													2680
												],
												"declarations": [
													{
														"constant": false,
														"id": 2680,
														"mutability": "mutable",
														"name": "weeklyuserdtl",
														"nameLocation": "16231:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 2727,
														"src": "16212:32:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_weeklyUser_$2107_storage_ptr",
															"typeString": "struct Storage.weeklyUser"
														},
														"typeName": {
															"id": 2679,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2678,
																"name": "weeklyUser",
																"nameLocations": [
																	"16212:10:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2107,
																"src": "16212:10:8"
															},
															"referencedDeclaration": 2107,
															"src": "16212:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2107_storage_ptr",
																"typeString": "struct Storage.weeklyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2686,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2681,
															"name": "weeklyUserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2124,
															"src": "16247:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2107_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser storage ref))"
															}
														},
														"id": 2683,
														"indexExpression": {
															"id": 2682,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2614,
															"src": "16261:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16247:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2107_storage_$",
															"typeString": "mapping(uint256 => struct Storage.weeklyUser storage ref)"
														}
													},
													"id": 2685,
													"indexExpression": {
														"id": 2684,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2612,
														"src": "16271:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16247:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_weeklyUser_$2107_storage",
														"typeString": "struct Storage.weeklyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16212:67:8"
											},
											{
												"condition": {
													"expression": {
														"id": 2687,
														"name": "weeklyuserdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "16294:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_weeklyUser_$2107_storage_ptr",
															"typeString": "struct Storage.weeklyUser storage pointer"
														}
													},
													"id": 2688,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16308:11:8",
													"memberName": "isQualified",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2106,
													"src": "16294:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2690,
												"nodeType": "IfStatement",
												"src": "16290:38:8",
												"trueBody": {
													"functionReturnParameters": 2616,
													"id": 2689,
													"nodeType": "Return",
													"src": "16321:7:8"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "16346:26:8",
															"subExpression": {
																"expression": {
																	"id": 2692,
																	"name": "weeklyuserdtl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2680,
																	"src": "16347:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_weeklyUser_$2107_storage_ptr",
																		"typeString": "struct Storage.weeklyUser storage pointer"
																	}
																},
																"id": 2693,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16361:11:8",
																"memberName": "isQualified",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2106,
																"src": "16347:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c7265616479205175616c6966696564",
															"id": 2695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16374:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															},
															"value": "already Qualified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															}
														],
														"id": 2691,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16338:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16338:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2697,
												"nodeType": "ExpressionStatement",
												"src": "16338:56:8"
											},
											{
												"assignments": [
													2699
												],
												"declarations": [
													{
														"constant": false,
														"id": 2699,
														"mutability": "mutable",
														"name": "nowTime",
														"nameLocation": "16412:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2727,
														"src": "16407:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2698,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16407:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2702,
												"initialValue": {
													"expression": {
														"id": 2700,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "16422:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 2701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16428:9:8",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "16422:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16407:30:8"
											},
											{
												"expression": {
													"id": 2707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2703,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2680,
															"src": "16450:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2107_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 2705,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16464:8:8",
														"memberName": "joinTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2098,
														"src": "16450:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2706,
														"name": "nowTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2699,
														"src": "16475:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16450:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2708,
												"nodeType": "ExpressionStatement",
												"src": "16450:32:8"
											},
											{
												"expression": {
													"id": 2713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2709,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2680,
															"src": "16493:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2107_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 2711,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16507:7:8",
														"memberName": "roundId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2100,
														"src": "16493:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2712,
														"name": "_roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2614,
														"src": "16517:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16493:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2714,
												"nodeType": "ExpressionStatement",
												"src": "16493:32:8"
											},
											{
												"expression": {
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2715,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2680,
															"src": "16536:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2107_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 2717,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16550:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2106,
														"src": "16536:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16564:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "16536:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2720,
												"nodeType": "ExpressionStatement",
												"src": "16536:32:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2722,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2614,
															"src": "16612:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2723,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2612,
															"src": "16622:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2724,
															"name": "nowTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "16631:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2721,
														"name": "WeeklyContestQualified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2165,
														"src": "16589:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 2725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16589:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2726,
												"nodeType": "EmitStatement",
												"src": "16584:55:8"
											}
										]
									},
									"id": 2728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_weeklyContestQualifier",
									"nameLocation": "15178:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2612,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "15207:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "15202:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2611,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15202:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "15221:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "15216:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2613,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15216:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15201:29:8"
									},
									"returnParameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15239:0:8"
									},
									"scope": 2864,
									"src": "15169:1478:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2747,
										"nodeType": "Block",
										"src": "16727:153:8",
										"statements": [
											{
												"condition": {
													"id": 2739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16746:43:8",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 2735,
																"name": "monthlyRoyaltyUserdtl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2225,
																"src": "16747:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2212_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser storage ref)"
																}
															},
															"id": 2737,
															"indexExpression": {
																"id": 2736,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2730,
																"src": "16769:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16747:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage",
																"typeString": "struct Storage.monthlyRoyaltyUser storage ref"
															}
														},
														"id": 2738,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16778:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2211,
														"src": "16747:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2746,
												"nodeType": "IfStatement",
												"src": "16742:131:8",
												"trueBody": {
													"id": 2745,
													"nodeType": "Block",
													"src": "16791:82:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2741,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2730,
																		"src": "16839:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2742,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2732,
																		"src": "16848:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2740,
																	"name": "_monthlyRoyaltyQualifier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2863,
																	"src": "16814:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 2743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16814:43:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2744,
															"nodeType": "ExpressionStatement",
															"src": "16814:43:8"
														}
													]
												}
											}
										]
									},
									"id": 2748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryMonthlyRoyaltyQualify",
									"nameLocation": "16664:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "16695:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "16690:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2729,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16690:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2732,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "16709:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2748,
												"src": "16704:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2731,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16704:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16689:29:8"
									},
									"returnParameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16727:0:8"
									},
									"scope": 2864,
									"src": "16655:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2862,
										"nodeType": "Block",
										"src": "16959:1082:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2756,
																"name": "_roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2752,
																"src": "16993:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2757,
																"name": "currentMonthlyRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2174,
																"src": "17005:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16993:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726f756e64",
															"id": 2759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17026:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															},
															"value": "Invalid round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															}
														],
														"id": 2755,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16985:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16985:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2761,
												"nodeType": "ExpressionStatement",
												"src": "16985:57:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "17061:35:8",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2763,
																		"name": "monthlyRoyaltydtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2217,
																		"src": "17062:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$2199_storage_$",
																			"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty storage ref)"
																		}
																	},
																	"id": 2765,
																	"indexExpression": {
																		"id": 2764,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2752,
																		"src": "17080:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17062:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyalty_$2199_storage",
																		"typeString": "struct Storage.monthlyRoyalty storage ref"
																	}
																},
																"id": 2766,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17090:6:8",
																"memberName": "closed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2198,
																"src": "17062:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e6420636c6f736564",
															"id": 2768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17098:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															},
															"value": "Round closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															}
														],
														"id": 2762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17053:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17053:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2770,
												"nodeType": "ExpressionStatement",
												"src": "17053:60:8"
											},
											{
												"assignments": [
													2773
												],
												"declarations": [
													{
														"constant": false,
														"id": 2773,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "17146:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2862,
														"src": "17133:17:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 2772,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2771,
																"name": "User",
																"nameLocations": [
																	"17133:4:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1738,
																"src": "17133:4:8"
															},
															"referencedDeclaration": 1738,
															"src": "17133:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2777,
												"initialValue": {
													"baseExpression": {
														"id": 2774,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "17153:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$1738_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 2776,
													"indexExpression": {
														"id": 2775,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2750,
														"src": "17159:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17153:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1738_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17133:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2779,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2773,
																	"src": "17196:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 2780,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17201:11:8",
																"memberName": "level10Time",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1731,
																"src": "17196:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17215:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17196:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206e6f74206c6576656c203130",
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17218:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef95fffa9aa32a0d69f6c9a3b04b835c4c32f66e357dd62871407cd72c03d7be",
																"typeString": "literal_string \"User not level 10\""
															},
															"value": "User not level 10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef95fffa9aa32a0d69f6c9a3b04b835c4c32f66e357dd62871407cd72c03d7be",
																"typeString": "literal_string \"User not level 10\""
															}
														],
														"id": 2778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17188:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17188:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2785,
												"nodeType": "ExpressionStatement",
												"src": "17188:50:8"
											},
											{
												"assignments": [
													2787
												],
												"declarations": [
													{
														"constant": false,
														"id": 2787,
														"mutability": "mutable",
														"name": "withinTime",
														"nameLocation": "17254:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2862,
														"src": "17249:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2786,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17249:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2795,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2788,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "17267:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 2789,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17272:11:8",
														"memberName": "level10Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1731,
														"src": "17267:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2790,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2773,
																"src": "17287:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 2791,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17292:16:8",
															"memberName": "registrationTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1729,
															"src": "17287:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2792,
															"name": "MONTHLY_ROYALTY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "17311:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "17287:39:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17267:59:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17249:77:8"
											},
											{
												"assignments": [
													2797
												],
												"declarations": [
													{
														"constant": false,
														"id": 2797,
														"mutability": "mutable",
														"name": "qualifiedByLevel",
														"nameLocation": "17342:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 2862,
														"src": "17337:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2796,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17337:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2802,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2798,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "17361:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 2799,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17366:5:8",
														"memberName": "level",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1711,
														"src": "17361:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3130",
														"id": 2800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17375:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "17361:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17337:40:8"
											},
											{
												"assignments": [
													2804
												],
												"declarations": [
													{
														"constant": false,
														"id": 2804,
														"mutability": "mutable",
														"name": "qualifiedByDirects",
														"nameLocation": "17393:18:8",
														"nodeType": "VariableDeclaration",
														"scope": 2862,
														"src": "17388:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2803,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17388:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2809,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2805,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "17414:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1738_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 2806,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17419:22:8",
														"memberName": "monthlyUserDirectCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1735,
														"src": "17414:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "35",
														"id": 2807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17445:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "17414:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17388:58:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2811,
																	"name": "withinTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "17465:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 2812,
																	"name": "qualifiedByLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2797,
																	"src": "17479:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "17465:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 2814,
																"name": "qualifiedByDirects",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2804,
																"src": "17499:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17465:52:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656c696769626c65",
															"id": 2816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17519:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61a1e089173dfc78ca2944058dfe526d4bbfefdc58d29e3f537021afcab20284",
																"typeString": "literal_string \"Not eligible\""
															},
															"value": "Not eligible"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61a1e089173dfc78ca2944058dfe526d4bbfefdc58d29e3f537021afcab20284",
																"typeString": "literal_string \"Not eligible\""
															}
														],
														"id": 2810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17457:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17457:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2818,
												"nodeType": "ExpressionStatement",
												"src": "17457:77:8"
											},
											{
												"assignments": [
													2821
												],
												"declarations": [
													{
														"constant": false,
														"id": 2821,
														"mutability": "mutable",
														"name": "userRoyalty",
														"nameLocation": "17582:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 2862,
														"src": "17555:38:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
															"typeString": "struct Storage.monthlyRoyaltyUser"
														},
														"typeName": {
															"id": 2820,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2819,
																"name": "monthlyRoyaltyUser",
																"nameLocations": [
																	"17555:18:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2212,
																"src": "17555:18:8"
															},
															"referencedDeclaration": 2212,
															"src": "17555:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2825,
												"initialValue": {
													"baseExpression": {
														"id": 2822,
														"name": "monthlyRoyaltyUserdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2225,
														"src": "17597:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2212_storage_$",
															"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser storage ref)"
														}
													},
													"id": 2824,
													"indexExpression": {
														"id": 2823,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2750,
														"src": "17619:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17597:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage",
														"typeString": "struct Storage.monthlyRoyaltyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17555:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "17703:24:8",
															"subExpression": {
																"expression": {
																	"id": 2827,
																	"name": "userRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2821,
																	"src": "17704:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																	}
																},
																"id": 2828,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17716:11:8",
																"memberName": "isQualified",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2211,
																"src": "17704:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c7265616479205175616c6966696564",
															"id": 2830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17729:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															},
															"value": "already Qualified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															}
														],
														"id": 2826,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17695:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17695:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2832,
												"nodeType": "ExpressionStatement",
												"src": "17695:54:8"
											},
											{
												"assignments": [
													2834
												],
												"declarations": [
													{
														"constant": false,
														"id": 2834,
														"mutability": "mutable",
														"name": "nowTime",
														"nameLocation": "17767:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2862,
														"src": "17762:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2833,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17762:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2837,
												"initialValue": {
													"expression": {
														"id": 2835,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "17777:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 2836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "17783:9:8",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "17777:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17762:30:8"
											},
											{
												"expression": {
													"id": 2842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2838,
															"name": "userRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2821,
															"src": "17840:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
															}
														},
														"id": 2840,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17852:8:8",
														"memberName": "joinTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2201,
														"src": "17840:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2841,
														"name": "nowTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2834,
														"src": "17863:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17840:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2843,
												"nodeType": "ExpressionStatement",
												"src": "17840:30:8"
											},
											{
												"expression": {
													"id": 2848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2844,
															"name": "userRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2821,
															"src": "17881:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
															}
														},
														"id": 2846,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17893:16:8",
														"memberName": "qualifiedRoundId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2203,
														"src": "17881:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2847,
														"name": "_roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2752,
														"src": "17912:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17881:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2849,
												"nodeType": "ExpressionStatement",
												"src": "17881:39:8"
											},
											{
												"expression": {
													"id": 2854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2850,
															"name": "userRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2821,
															"src": "17931:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2212_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
															}
														},
														"id": 2852,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17943:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2211,
														"src": "17931:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17957:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "17931:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2855,
												"nodeType": "ExpressionStatement",
												"src": "17931:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2857,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2752,
															"src": "18006:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2858,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2750,
															"src": "18016:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2859,
															"name": "nowTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2834,
															"src": "18025:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2856,
														"name": "MonthlyRoyaltyQualified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2264,
														"src": "17982:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 2860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17982:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2861,
												"nodeType": "EmitStatement",
												"src": "17977:56:8"
											}
										]
									},
									"id": 2863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_monthlyRoyaltyQualifier",
									"nameLocation": "16897:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "16927:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "16922:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2749,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16922:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "16941:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2863,
												"src": "16936:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16936:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16921:29:8"
									},
									"returnParameters": {
										"id": 2754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16959:0:8"
									},
									"scope": 2864,
									"src": "16888:1153:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2865,
							"src": "292:17752:8",
							"usedErrors": [],
							"usedEvents": [
								1835,
								1843,
								1853,
								1865,
								1877,
								1887,
								1895,
								1910,
								2147,
								2157,
								2165,
								2246,
								2256,
								2264,
								2339,
								2349,
								2357
							]
						}
					],
					"src": "33:18011:8"
				},
				"id": 8
			}
		}
	}
}