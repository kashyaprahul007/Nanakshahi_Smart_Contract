{
	"id": "e2191e89bcd95ac7d0473eebb8dacfff",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/modules/SponsorMatrix.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.30;\r\n//import \"../interfaces/IERC20.sol\";\r\nimport \"./Storage.sol\";\r\n\r\ncontract Nanakshahi is Storage{\r\n   \r\n    \r\n    constructor() {\r\n       \r\n    }\r\n\r\n    \r\n   \r\n     function register(uint _sponsorId) external {\r\n        require(addressToId[msg.sender] == 0, \"Already registered\");\r\n        require(users[_sponsorId].id > 0, \"Invalid sponsor\");\r\n        \r\n        // Transfer USDT for the first package\r\n        usdt.transferFrom(msg.sender, address(this), packages[0]);\r\n        \r\n        \r\n        // Create new user\r\n        uint newUserId = defaultRefId + totalUsers ;\r\n        totalUsers += 1;\r\n        addressToId[msg.sender] = newUserId;\r\n        \r\n        User storage user = users[newUserId];\r\n        user.account = msg.sender;\r\n        user.checkpoint = block.timestamp;\r\n        user.id = newUserId;\r\n        user.sponsorId = _sponsorId;\r\n        user.level = 1;\r\n        user.totalDeposit = packages[0];\r\n        user.registrationTime = block.timestamp;\r\n        \r\n        // Update sponsor direct team count\r\n        users[_sponsorId].directTeam += 1;\r\n        directReferrals[_sponsorId].push(newUserId);\r\n        registeredUserIds.push(newUserId);\r\n        communityDebt[newUserId] = communityAccPerUser;\r\n        // Find placement in 2x2 matrix\r\n        _placeInMatrix(newUserId, _sponsorId);\r\n        // add in Deposit \r\n        user.deposits.push(Deposit({\r\n            amount: packages[0],\r\n            withdrawn: 0,\r\n            start: block.timestamp,\r\n            depositType:1\r\n        }));\r\n        // Distribute income\r\n        uint totalPackagePrice = packages[0];\r\n        uint creatorShare = totalPackagePrice * 5 / 100; // 5% to creator\r\n        uint remainingAmount = totalPackagePrice * 60 / 100;    // 60% distributable\r\n        /*5 %  for weekly Contest and Roaylty */\r\n      \r\n        uint communityShare = totalPackagePrice * 25 / 100;\r\n            // 9) accrue community bonus (no O(N) loop; users claim via claimCommunity)\r\n        _accrueCommunityBonus(communityShare);\r\n          \r\n        // Send creator share\r\n        _sendToCreator(creatorShare);\r\n        \r\n        // 60% to sponsor as first level income\r\n        _distributeSponsorIncome(user.sponsorId, newUserId, remainingAmount, 1);\r\n        \r\n      \r\n        \r\n        emit Registration(msg.sender, users[_sponsorId].account, newUserId, user.uplineId);\r\n    }\r\n    \r\n    function upgrade(uint _userId) external {\r\n        User storage user = users[_userId];\r\n        require(user.account == msg.sender, \"Not your account\");\r\n        require(user.level < 15, \"Already at max level\");\r\n        \r\n        uint nextLevel = user.level;\r\n        uint packagePrice = packages[nextLevel];\r\n        uint nowTime = block.timestamp;\r\n        \r\n        // Transfer USDT for the next package\r\n        usdt.transferFrom(msg.sender, address(this), packagePrice);\r\n        \r\n        user.level += 1;\r\n        user.totalDeposit += packagePrice;\r\n            // add in Deposit \r\n          user.deposits.push(Deposit({\r\n            amount: packagePrice,\r\n            withdrawn: 0,\r\n            start: nowTime,\r\n            depositType:1\r\n        }));// SHOULD BE REMOVE AND REPLACE WITH EVENT THAT WIL BE COST EFFECTIVE\r\n   \r\n        // Distribute income\r\n        uint creatorShare = packagePrice * 5 / 100; // 5% to creator\r\n        // lotteryPool += packagePrice * 5 / 100;\r\n        //_autoTriggerLottery();\r\n\r\n         uint communityShare = packagePrice * 25 / 100;\r\n        _accrueCommunityBonus(communityShare);\r\n\r\n        // Send creator share\r\n        _sendToCreator(creatorShare);\r\n\r\n        // sponsor income 15% for all package so call it once\r\n        // nextLevel is package, when 1 then its mean 2nd package\r\n        uint sponsorIncome = packagePrice * 20 / 100;\r\n        _distributeSponsorIncome(user.sponsorId, _userId, sponsorIncome, nextLevel + 1);\r\n\r\n        uint uplineIncome = packagePrice * 20 / 100;\r\n        _distributeMatrixIncome(user.uplineId, _userId, uplineIncome, nextLevel + 1);\r\n\r\n        uint boosterIncome = packagePrice * 20 / 100;\r\n        _distributeLevelBoosterIncome(user.uplineId, _userId, boosterIncome, nextLevel + 1, nextLevel);\r\n\r\n       // check for monthly royalty\r\n        if((nextLevel+1) == MONTHLY_ROYALTY_LEVEL){\r\n            \r\n            user.level10Time = nowTime;\r\n            User storage _user = users[_userId];\r\n           // monthlyUserDirects[_user.sponsorId].push(_userId);\r\n\r\n            User storage _sponsor = users[user.sponsorId];\r\n            _sponsor.monthlyUserDirectCount +=1;\r\n            if((_sponsor.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + MONTHLY_ROYALTY_TIME) && (_sponsor.level >= MONTHLY_ROYALTY_LEVEL)){\r\n                _tryMonthlyRoyaltyQualify( _user.sponsorId, currentMonthlyRound);\r\n            }\r\n\r\n\r\n            if((_user.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (_user.level10Time <= _user.registrationTime + MONTHLY_ROYALTY_TIME) && (_user.level == MONTHLY_ROYALTY_LEVEL)  ){\r\n                _tryMonthlyRoyaltyQualify( _userId, currentMonthlyRound);            \r\n            }\r\n        }\r\n\r\n\r\n        // check for top royalty\r\n        if((nextLevel+1) == TOP_ROYALTY_LEVEL){\r\n            \r\n            user.level15Time = nowTime;\r\n            User storage _user = users[_userId];\r\n           // monthlyUserDirects[_user.sponsorId].push(_userId);\r\n\r\n            User storage _sponsor = users[user.sponsorId];\r\n            _sponsor.topRoyaltyDirectCount +=1;\r\n            if((_sponsor.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + TOP_ROYALTY_TIME) && (_sponsor.level >= TOP_ROYALTY_LEVEL)){\r\n                _tryTopRoyaltyQualify( _user.sponsorId, topRoyaltyRound);\r\n            }\r\n\r\n\r\n            if((_user.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) &&(_user.level15Time <= _user.registrationTime + TOP_ROYALTY_TIME) && (_user.level == TOP_ROYALTY_LEVEL)  ){\r\n                _tryTopRoyaltyQualify( _userId, topRoyaltyRound);            \r\n            }\r\n        }\r\n        \r\n        emit Upgrade(msg.sender, _userId, nextLevel + 1, \"Sponsorship structure\", nowTime);\r\n    }\r\n    \r\n    function _applyGlobalCapping(uint _userId, uint _amount) internal view returns (uint) {\r\n    User storage user = users[_userId];\r\n    UserIncome storage income = userIncomes[_userId];\r\n\r\n    // If user has last package, allow unlimited non-ROI income\r\n    // if (user.level == packages.length) {\r\n    //     return _amount;\r\n    // }\r\n   // uint256 public constant ROI_CAP_MULTIPLIER = 15;\r\n   uint _ROI_CAP_MULTIPLIER = ROI_CAP_MULTIPLIER;\r\n   if(user.directPoolQualified>1){\r\n      _ROI_CAP_MULTIPLIER = 20;\r\n   }\r\n   uint maxIncome = (user.totalDeposit * _ROI_CAP_MULTIPLIER) / ROI_CAP_DIVIDER;\r\n\r\n    if (income.totalIncome >= maxIncome) return 0;\r\n\r\n    uint remaining = maxIncome - income.totalIncome;\r\n    return (_amount > remaining) ? remaining : _amount;\r\n}\r\n\r\n    function _accrueCommunityBonus(uint _totalAmount) internal {\r\n        uint n = registeredUserIds.length;\r\n        if (n == 0 || _totalAmount == 0) {\r\n            if (_totalAmount > 0) { _sendToCreator(_totalAmount); }\r\n            return;\r\n        }\r\n        communityAccPerUser += (_totalAmount * ACC_PRECISION) / n;\r\n    }\r\n\r\n\r\n    function claimCommunity(uint _userId) external {\r\n            User storage u = users[_userId];\r\n            require(u.id != 0, \"User not found\");\r\n            require(u.account == msg.sender, \"Not your account\");\r\n\r\n            // pending = (accumulator delta) scaled down\r\n            uint256 accumulated = communityAccPerUser;\r\n            uint256 debt = communityDebt[_userId];\r\n\r\n            if (accumulated == debt) {\r\n                return; // nothing to claim\r\n            }\r\n\r\n            uint256 accrued = (accumulated - debt) / ACC_PRECISION;\r\n            if (accrued == 0) {\r\n                communityDebt[_userId] = accumulated; // still sync debt\r\n                return;\r\n            }\r\n\r\n            // apply global cap at claim time\r\n            uint256 pay = _applyGlobalCapping(_userId, accrued);\r\n\r\n            // effects (update debt first: checks-effects-interactions)\r\n            communityDebt[_userId] = accumulated;\r\n\r\n            if (pay > 0) {\r\n                UserIncome storage inc = userIncomes[_userId];\r\n                inc.totalIncome += pay;\r\n                inc.communityIncome += pay;  // track claimed community bonus\r\n                incomeHistory[_userId].push(Income({\r\n                    fromUserId: _userId,\r\n                    amount: pay,\r\n                    packageLevel: 1,\r\n                    timestamp: block.timestamp,\r\n                    incomeType: 9 // Community Bonus\r\n                }));\r\n\r\n                // interaction\r\n                require(usdt.transfer(u.account, pay), \"USDT transfer failed\");\r\n            }\r\n\r\n            // route any capped-away remainder to creator\r\n            if (accrued > pay) {\r\n                _sendToCreator(accrued - pay);\r\n            }\r\n        }\r\n\r\n\r\n    function pendingCommunity(uint _userId) external view returns (uint pendingGross, uint pendingAfterCap) {\r\n        if (users[_userId].id == 0) return (0, 0);\r\n        uint256 acc = communityAccPerUser;\r\n        uint256 debt = communityDebt[_userId];\r\n        if (acc <= debt) return (0, 0);\r\n        uint gross = (acc - debt) / ACC_PRECISION;\r\n        uint net = _applyGlobalCapping(_userId, gross);\r\n        return (gross, net);\r\n    }\r\n    function _placeInMatrix(uint _newUserId, uint _sponsorId) private {\r\n        bool isFound;\r\n        uint uplineId;\r\n\r\n        // First check if sponsor has less than 2 matrix direct referrals\r\n        if(matrixDirect[_sponsorId] < 2) {\r\n            users[_newUserId].uplineId = _sponsorId;\r\n            matrixDirect[_sponsorId] += 1;\r\n            uplineId = _sponsorId;\r\n        } else {\r\n            // If sponsor already has 2 direct referrals, find a place in the team\r\n            for(uint i=0; i<maxLayers; i++) { // Use a reasonable max depth for 2x2 matrix\r\n                if(isFound) break;\r\n                if(teams[_sponsorId][i+1].length < 2 ** (i+2)) {\r\n                    for(uint j=0; j<teams[_sponsorId][i].length; j++) {\r\n                      if(isFound) break;\r\n                        uint temp = teams[_sponsorId][i][j];\r\n                        if(matrixDirect[temp] < 2) {\r\n                            users[_newUserId].uplineId = temp;\r\n                            matrixDirect[temp] += 1;\r\n                            uplineId = temp;\r\n                            isFound = true;\r\n                        } \r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Update team structure for all uplines\r\n        for(uint k=0; k<maxLayers; k++) {\r\n            if(uplineId == 0) break;\r\n            users[uplineId].totalMatrixTeam += 1;\r\n            teams[uplineId][k].push(_newUserId);\r\n            uplineId = users[uplineId].uplineId;\r\n        }\r\n    }\r\n    \r\n    function _distributeSponsorIncome(uint _sponsorId, uint _fromId, uint _amount, uint _packageLevel) private {\r\n        if (_sponsorId == 0 || _sponsorId == defaultRefId) {\r\n            _sendToCreator(_amount);\r\n            return;\r\n        }\r\n        \r\n        User storage sponsor = users[_sponsorId];\r\n        \r\n        // if (_packageLevel != 1)\r\n        // {\r\n        //     if(sponsor.directTeam < 2)\r\n        //     {\r\n        //             _sendToCreator(_amount);\r\n        //             return;\r\n        //     }\r\n        // }\r\n    \r\n\r\n        \r\n        \r\n        // Update income in separate mapping\r\n        UserIncome storage sponsorIncome = userIncomes[_sponsorId];\r\n        sponsorIncome.totalIncome += _amount;\r\n        sponsorIncome.sponsorIncome += _amount;\r\n        usdt.transfer(sponsor.account, _amount);\r\n\r\n        // Record income\r\n        incomeHistory[_sponsorId].push(Income({\r\n            fromUserId: _fromId,\r\n            amount: _amount,\r\n            packageLevel: _packageLevel,\r\n            timestamp: block.timestamp,\r\n            incomeType: 1 // Sponsor income\r\n        }));\r\n        \r\n        emit IncomeDistributed(sponsor.account, users[_fromId].account, _amount, _packageLevel, 1);\r\n       \r\n    }\r\n    \r\n\r\n    function _distributeMatrixIncome(uint _uplineId,uint _fromId,uint _amount, uint _packageLevel) private {\r\n        // walk up the matrix chain looking for the first eligible ancestor\r\n\r\n        // first need to get correct upline\r\n   \r\n        //)\r\n        //uint depth = 1;\r\n        if(_uplineId == defaultRefId || _uplineId == 0)\r\n        {\r\n            _sendToCreator(_amount);\r\n            return;\r\n        }       \r\n        uint targetId = _uplineId;\r\n        for (uint i = 1; i < _packageLevel; ++i) {\r\n            targetId = users[targetId].uplineId;\r\n            if (targetId == 0 || targetId == defaultRefId) {\r\n                // No ancestor at that depth\r\n                _sendToCreator(_amount);\r\n                return;\r\n            }\r\n        }\r\n        uint currentId = targetId;\r\n        uint layer = 0;\r\n        while (currentId != 0 && currentId != defaultRefId && layer < maxLayers) {\r\n            User storage up = users[currentId];\r\n\r\n            // eligibility: at least 2 directs AND level >= purchased level\r\n            if (up.level >= _packageLevel) // up.directTeam >= 2 && \r\n            {\r\n                // pay and record as Matrix income (type 2)\r\n                usdt.transfer(up.account, _amount);\r\n\r\n                UserIncome storage inc = userIncomes[currentId];\r\n                inc.totalIncome += _amount;\r\n                inc.matrixIncome += _amount;\r\n\r\n                incomeHistory[currentId].push(Income({\r\n                    fromUserId: _fromId,\r\n                    amount: _amount,\r\n                    packageLevel: _packageLevel,\r\n                    timestamp: block.timestamp,\r\n                    incomeType: 2 // matrix income\r\n                }));\r\n\r\n                emit IncomeDistributed(up.account, users[_fromId].account, _amount, _packageLevel, 2);\r\n                return;\r\n            }\r\n\r\n            // move up one level in the matrix\r\n            currentId = up.uplineId;\r\n            layer++;\r\n        }\r\n        // nobody in the matrix chain qualified → send to creator/fees\r\n        _sendToCreator(_amount);\r\n    }\r\n        \r\n    // function _distributeLevelIncome(uint _startId,uint _fromId,uint _amount,uint _packageLevel,uint _targetLevel) private {\r\n    //     if (_startId == 0 || _startId == defaultRefId) {\r\n    //         _sendToCreator(_amount);\r\n    //         return;\r\n    //     }\r\n\r\n    //     // Step 1: move up to the target (n-th) upline\r\n    //     uint currentId = _startId;\r\n    //     uint hops = 1;\r\n    //     while (hops < _targetLevel) {\r\n    //         currentId = users[currentId].uplineId;\r\n    //         hops++;\r\n    //         if (currentId == 0 || currentId == defaultRefId) {\r\n    //             _sendToCreator(_amount);\r\n    //             return;\r\n    //         }\r\n    //     }\r\n\r\n    //     // Step 2: from the target upline, roll upward until someone qualifies\r\n    //     uint depth = 0;\r\n    //     while (currentId != 0 && currentId != defaultRefId && depth < maxLayers) {\r\n    //         User storage u = users[currentId];\r\n\r\n    //         // eligibility: at least 2 directs AND level >= purchased level\r\n    //         if (u.level >= _packageLevel) //u.directTeam >= 2 && \r\n    //         {\r\n    //             usdt.transfer(u.account, _amount);\r\n    //             // bookkeeping\r\n    //             UserIncome storage inc = userIncomes[currentId];\r\n    //             inc.totalIncome += _amount;\r\n    //             inc.levelIncome += _amount;\r\n\r\n    //             incomeHistory[currentId].push(Income({\r\n    //                 fromUserId: _fromId,\r\n    //                 amount: _amount,\r\n    //                 packageLevel: _packageLevel,\r\n    //                 timestamp: block.timestamp,\r\n    //                 incomeType: 3 // Level income\r\n    //             }));\r\n\r\n    //             emit IncomeDistributed(u.account, users[_fromId].account, _amount, _packageLevel, 3);\r\n    //             return;\r\n    //         }\r\n\r\n    //         // not eligible → try the next sponsor up\r\n    //         currentId = u.uplineId;\r\n    //         depth++;\r\n    //     }\r\n\r\n    //     // nobody eligible up the chain\r\n    //     _sendToCreator(_amount);\r\n    // }\r\n\r\n    \r\n    function _distributeLevelBoosterIncome(uint _startId, uint _fromId, uint _amount,uint _packageLevel,uint _maxLevel) private {\r\n        if (_startId == 0 || _startId == defaultRefId || _maxLevel == 0) {\r\n            _sendToCreator(_amount);\r\n            return;\r\n        }\r\n\r\n        //uint levelsToDistribute = _maxLevel; \r\n        uint amountPerLevel = _amount / _maxLevel;\r\n        uint remainder = _amount - (amountPerLevel * _maxLevel);\r\n        //uint spillover = 1;\r\n       // uint baselineId = _startId;\r\n\r\n        uint currentId = _startId;\r\n        uint totalDistributed = 0;\r\n        uint PaidCount = 0;\r\n        uint accumulatedShares = 1; // starts with 1x share\r\n\r\n        for (uint i = 0; i < 30; i++) // _maxLevel\r\n        {\r\n              // If we run out of uplines\r\n            if (currentId == 0 || currentId == defaultRefId) {\r\n                // Send any undistributed shares to creator\r\n                uint remaining = _amount - totalDistributed;\r\n                if (remaining > 0) _sendToCreator(remaining);\r\n                return;\r\n            }\r\n\r\n            User storage up = users[currentId];\r\n\r\n            if (up.level >= _packageLevel) {\r\n                // Qualified: give all accumulated shares to this person\r\n                uint payout = amountPerLevel * accumulatedShares;\r\n\r\n                _payLevelBooster(currentId, _fromId, payout, _packageLevel);\r\n\r\n                totalDistributed += payout;\r\n                PaidCount += accumulatedShares;\r\n                accumulatedShares = 1; // reset spillover\r\n            } else {\r\n                // Not qualified → roll share upward\r\n                if(accumulatedShares<_maxLevel){\r\n                     accumulatedShares++;\r\n                }\r\n               \r\n            }\r\n             // If we distributed all _maxLevel shares, stop\r\n            if (PaidCount >= _maxLevel) break;\r\n           \r\n            //if (totalDistributed >= (_amount - remainder)) break;\r\n           \r\n\r\n            // Move to next upline\r\n            currentId = up.uplineId;\r\n        }\r\n\r\n        // If loop finished but still some unassigned shares, send to creator\r\n        uint remainingAfterLoop = _amount - totalDistributed;\r\n        if (remainingAfterLoop > 0) {\r\n            _sendToCreator(remainingAfterLoop);\r\n        }\r\n\r\n        // Add remainder (due to division rounding)\r\n        if (remainder > 0) {\r\n            _sendToCreator(remainder);\r\n        }\r\n       \r\n    }\r\n   \r\n   // Pay a booster slice and record bookkeeping.\r\n    function _payLevelBooster(uint receiverId, uint fromId, uint amount, uint packageLevel) private {\r\n        address to = users[receiverId].account;\r\n        usdt.transfer(to, amount);\r\n\r\n        UserIncome storage inc = userIncomes[receiverId];\r\n        inc.totalIncome += amount;\r\n        inc.levelBoosterIncome += amount;\r\n\r\n        incomeHistory[receiverId].push(Income({\r\n            fromUserId: fromId,\r\n            amount: amount,\r\n            packageLevel: packageLevel,\r\n            timestamp: block.timestamp,\r\n            incomeType: 4 // Level booster income\r\n        }));\r\n\r\n        emit IncomeDistributed(to, users[fromId].account, amount, packageLevel, 4);\r\n    }\r\n\r\n    function _findEligibleSponsor(uint startId, uint packageLevel) private view returns (uint) {\r\n        uint searchId = startId;\r\n        uint hops = 0;\r\n        while (searchId != 0 && searchId != defaultRefId && hops < maxLayers) {\r\n            User storage u = users[searchId];\r\n            if ( u.level >= packageLevel) // u.directTeam >= 2 &&\r\n            {\r\n                return searchId;\r\n            }\r\n            searchId = u.uplineId;\r\n            hops++;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n\r\n}"
			},
			"contracts/modules/Storage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.30;\r\n\r\n//import \"../interfaces/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract Storage is ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n    IERC20 public usdt;\r\n    //address public owner;\r\n    address public creatorWallet;   \r\n    address public systemMaintance;\r\n    address public teamDevelopment;\r\n    uint public defaultRefId;\r\n    uint public totalUsers;\r\n    uint internal constant maxLayers = 15;\r\n\r\n    uint256 public constant PERCENTS_DIVIDER = 10000;\r\n    uint256 public constant TIME_STEP = 1 days;\r\n    uint256 public constant MONTHLY_ROYALTY_TIME = 100 days;\r\n    uint256 public constant TOP_ROYALTY_TIME = 450 days;\r\n    uint256 public constant ROI_CAP_MULTIPLIER = 15; // 1.5x\r\n    uint256 public constant ROI_CAP_DIVIDER = 10;\r\n    uint256 public constant MONTHLY_ROYALTY_LEVEL = 10;\r\n    uint256 public constant TOP_ROYALTY_LEVEL = 15;\r\n    uint256 public constant MONTHLY_ROYALTY_DIRECT = 5;\r\n    uint256 public constant TOP_ROYALTY_DIRECT = 2;\r\n\r\n\r\n\r\n \r\n    uint[] public registeredUserIds;\r\n    uint private nonce; // add this at the top of your contract\r\n  \r\n    // Package prices in USDT (with 18 decimals)\r\n\r\n        // --- Community bonus accrual (pull-based) ---\r\n    uint256 public constant ACC_PRECISION = 1e18;\r\n    uint256 public communityAccPerUser;                 // global accumulator\r\n    mapping(uint => uint256) internal communityDebt;      // user snapshot\r\n\r\n    uint[] public packages = [\r\n        15 * 1e18,      // 15$\r\n        25 * 1e18,      // 25$\r\n        50 * 1e18,      // 50$\r\n        100 * 1e18,     // 100$\r\n        200 * 1e18,     // 200$\r\n        400 * 1e18,     // 400$\r\n        800 * 1e18,     // 800$\r\n        1600 * 1e18,    // 1600$\r\n        3200 * 1e18,    // 3200$\r\n        6400 * 1e18,    // 6400$\r\n        12800 * 1e18,   // 12800$\r\n        25600 * 1e18,   // 25600$\r\n        51200 * 1e18,   // 51200$\r\n        102400 * 1e18,  // 102400$\r\n        204800 * 1e18   // 204800$\r\n    ];\r\n\r\n        //  User struct into basic info and relationships\r\n\r\n        /*User main struct and mappings*/\r\n    struct Deposit {\r\n        uint256 amount;\r\n        uint256 withdrawn;\r\n        uint256 start; \r\n        uint8 depositType;  \r\n    }\r\n\r\n    struct User {\r\n        address account;\r\n        Deposit[] deposits;\r\n        uint256 checkpoint;\r\n        uint id;\r\n        uint sponsorId;  // Referrer\r\n        uint uplineId;   // Placement in matrix\r\n        uint level;      // Current package level (1-15)\r\n        uint directTeam; // Direct referrals count\r\n        uint directPoolQualified; // Direct referrals count in infinity pool\r\n        uint totalMatrixTeam; // Total users in matrix\r\n        uint totalDeposit;\r\n        uint poollevel;\r\n        uint poolDeposit;\r\n        uint boosterlevel;\r\n        uint boosterDeposit;\r\n        uint registrationTime;\r\n        uint level10Time;\r\n        uint level15Time;\r\n        uint monthlyUserDirectCount; // at 10 th level in 100 days\r\n        uint topRoyaltyDirectCount; // // at 15 th level in 450 days\r\n    }\r\n     // struct for bonus calc\r\n    struct UserIncome {\r\n        uint totalIncome;\r\n        uint sponsorIncome;\r\n        uint matrixIncome;\r\n        uint levelBoosterIncome;\r\n        //uint levelIncome;\r\n        uint royaltyIncome;\r\n        uint royaltyIncomeClaimed; // Track claimed royalty for capping\r\n        uint communityIncome;        // <-- NEW: total community bonus claimed\r\n        uint poolIncome;        // <-- Infinity Pool Income\r\n        uint boosterIncome;        // <-- booster Income\r\n        uint weeklyContestIncome;        // <-- weekly contest Income\r\n        uint monthlyRoyalty;        // <-- weekly contest Income\r\n        uint topRoyalty;        // <-- weekly contest Income\r\n    }\r\n\r\n    struct Income {\r\n        uint fromUserId;\r\n        uint amount;\r\n        uint packageLevel;\r\n        uint timestamp;\r\n        uint incomeType; // 1: Sponsor, 2: Matrix, 3: Level, 4: Level Booster, 5: Creator, 6: Royalty , 7 Lottery  , 8 Roi Income, 10 Infintiy Pool, 11 Booster Income,12 weekly contest\r\n    }\r\n    enum IncomeType {\r\n        Creator,            // 0\r\n        Sponsor,            // 1\r\n        Matrix,             // 2\r\n        LevelBooster,       // 3        \r\n        Community,          // 4\r\n        Pool,               // 5\r\n        Booster,            // 6\r\n        WeeklyContest,      // 7\r\n        MonthlyRoyalty,     // 8\r\n        TopRoyalty   // 9\r\n    }\r\n\r\n\r\n\r\n    mapping(address => uint) internal addressToId;\r\n    mapping(uint => User) internal users;\r\n    mapping(uint => UserIncome) internal userIncomes; // New mapping for income data\r\n    mapping(uint => Income[]) internal incomeHistory;\r\n    mapping(uint => mapping(uint => uint[])) internal teams; // Matrix team structure by level\r\n    mapping(uint => uint) internal matrixDirect; // Count of direct matrix referrals\r\n    mapping(uint => uint[]) internal directReferrals;\r\n\r\n    event UserJoined(uint8 indexed matrixId, uint32 indexed userId, address indexed user, uint32 parentId, address parentAddr, uint8 position);\r\n    event RewardSent(address indexed to, uint256 amount, string level);\r\n\r\n\r\n     // Events\r\n    event Registration(address indexed user, address indexed sponsor, uint indexed userId, uint uplineId);\r\n    event Upgrade(address indexed user, uint indexed userId, uint packageLevel, string depositType, uint upgradeTime);\r\n    event IncomeDistributed(address indexed to, address indexed from, uint amount, uint packageLevel, uint incomeType);\r\n    event LotteryReward(address indexed winner, uint indexed fromUserId, uint amount, uint timestamp);\r\n    event CommunityBonusDistributed(uint amount, uint usersCount, uint perUser);\r\n    event IncomeDistribution(address indexed to,address indexed from,uint256 amount,uint256 packageLevel,IncomeType incomeType,uint256 timestamp);\r\n  \r\n    // Infinity Pool and booster bonus \r\n\r\n\r\n    uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18];\r\n    uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18];\r\n    uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15];\r\n    uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11];\r\n    uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1];\r\n\r\n\r\n    struct UserPool {\r\n        uint id;               \r\n        uint mainid;\r\n        uint poolId;\r\n        uint parentId;  \r\n        uint bonusCount;            \r\n    }\r\n    \r\n    struct UserPoolTopup{\r\n         uint nextPoolAmt;       \r\n        uint reTopupAmt;     \r\n    }\r\n\r\n      // Golbal Booster\r\n    struct UserBooster {\r\n        uint id; \r\n        uint poolId;\r\n        uint parentId;  \r\n        uint bonusCount;\r\n         uint joinTime;            \r\n    }\r\n\r\n    /* mapping for Infinity Pool*/\r\n    mapping(uint =>  mapping(uint => UserPoolTopup)) internal userPooltopup;\r\n\r\n    mapping(uint =>  mapping(uint => UserPool)) internal userPooldtl;\r\n    mapping(uint => mapping(uint => uint[])) internal userChildren;// in each pool id wise\r\n    mapping(uint => mapping(uint => uint[])) internal userIdPerPool;// will store user ids pool wise\r\n    mapping(uint => uint[]) internal poolUsers; // store all users  pool wise\r\n    mapping(uint => mapping(uint => bool)) internal userHasPool; \r\n\r\n    /* mapping for Global Booster */\r\n    mapping(uint =>  mapping(uint => UserBooster)) internal userBoosterdtl;\r\n    mapping(uint =>  mapping(uint => uint[])) internal userBoosterChildren;\r\n    mapping(uint => uint[]) internal boosterUsers;  // store all users booster wise\r\n    mapping(uint => mapping(uint => bool)) internal userHasbooster; \r\n\r\n   \r\n    // weekly contest\r\n\r\n    uint public constant WEEK_DURATION = 7 days;   \r\n    uint public constant WeeklyCapping = 1000e18;\r\n \r\n\r\n    uint public currentWeeklyRound = 0;\r\n    uint public currentWeeklyStartTime = 0;  \r\n    uint public WeeklyTotalReward = 0;\r\n   \r\n\r\n\r\n    struct WeeklyContest {\r\n        uint roundId;    \r\n        uint totalReward;\r\n        uint totalUsers;\r\n        uint perUserReward;\r\n        uint claimedCount;\r\n        uint startTime;\r\n        uint endTime;\r\n        uint carryForward;\r\n        bool closed;\r\n    }\r\n   \r\n    struct weeklyUser{\r\n      \r\n        uint joinTime;\r\n        uint roundId ;\r\n        uint claimTime;\r\n        bool isClaimed; \r\n        bool isQualified;\r\n    }\r\n    mapping (uint => WeeklyContest) internal weeklyContestdtl;// details of weekly contest\r\n    mapping(uint=> uint[]) weeklyQualifiedUsers; // qualifieduserweekly\r\n    mapping(uint => mapping(uint => weeklyUser)) internal weeklyUserdtl;// details of weekly user))\r\n    mapping(uint => mapping(uint => uint[])) internal weeklyUserDirects;//details users direct in current weekly round\r\n    event WeeklyClosed(uint roundId, uint totalUsers, uint perUserReward, uint totalReward, uint totalDistributed, uint leftoverReward, uint endTime);\r\n    event WeeklyRewardClaim(uint roundId, uint userId, uint perUserReward,  uint claimTime);\r\n    event WeeklyContestQualified(uint roundId, uint userId, uint joinTime);\r\n\r\n    //, monthly royalty and top royalty\r\n\r\n    \r\n    uint public constant MONTH_DURATION = 30 days;\r\n    uint public constant monthlyCapping = 10000e18;\r\n\r\n  \r\n    uint public currentMonthlyRound = 1;\r\n    uint public currentMonthlyStartTime = 0;\r\n    uint public monthlyTotalReward = 0;\r\n\r\n    struct monthlyRoyalty {\r\n        uint roundId;    \r\n        uint totalReward;\r\n        uint totalUsers;\r\n        uint perUserReward;\r\n        uint claimedCount;\r\n        uint startTime;\r\n        uint endTime;\r\n        uint carryForward;\r\n        bool closed;\r\n    }\r\n\r\n    struct monthlyRoyaltyUser{\r\n      \r\n        uint joinTime;\r\n        uint qualifiedRoundId ;\r\n        uint claimTime;\r\n        mapping(uint => bool) isClaimed; \r\n        bool isQualified;\r\n    }\r\n    mapping (uint => monthlyRoyalty) internal monthlyRoyaltydtl;// details of monthly royalty\r\n    uint[] monthlyQualifiedUsers; // qualified user monthly royalty\r\n    mapping(uint => monthlyRoyaltyUser) internal monthlyRoyaltyUserdtl;\r\n    mapping(uint => uint[]) internal monthlyUserDirects;//details users direct in monthly Royalty at 10th level\r\n\r\n    event MonthlyClosed(uint roundId, uint totalUsers, uint perUserReward, uint totalReward, uint totalDistributed, uint leftoverReward, uint endTime);\r\n    event MonthlyRewardClaim(uint roundId, uint userId, uint perUserReward,  uint claimTime);\r\n    event MonthlyRoyaltyQualified(uint roundId, uint userId, uint joinTime);\r\n\r\n      //, Top royalty\r\n  \r\n    uint public topRoyaltyRound = 1;\r\n    uint public topRoyaltyStartTime = 0;\r\n    uint public topRoyaltyReward = 0;\r\n\r\n    struct topRoyalty {\r\n        uint roundId;    \r\n        uint totalReward;\r\n        uint totalUsers;\r\n        uint perUserReward;\r\n        uint claimedCount;\r\n        uint startTime;\r\n        uint endTime;\r\n        uint carryForward;\r\n        bool closed;\r\n    }\r\n\r\n    struct topRoyaltyUser{\r\n      \r\n        uint joinTime;\r\n        uint qualifiedRoundId ;\r\n        uint claimTime;\r\n        mapping(uint => bool) isClaimed; \r\n        bool isQualified;\r\n    }\r\n    mapping (uint => topRoyalty) internal topRoyaltydtl;// details of top royalty contest\r\n    uint[] topRoyaltyQualifiedUsers; // qualified user top royalty\r\n    mapping(uint => topRoyaltyUser) internal topRoyaltyUserdtl;\r\n    mapping(uint => uint[]) internal topRoyaltyUserDirects;//details users direct in top Royalty at 15th level\r\n\r\n    event TopRoyaltyClosed(uint roundId, uint totalUsers, uint perUserReward, uint totalReward, uint totalDistributed, uint leftoverReward, uint endTime);\r\n    event TopRoyaltyRewardClaim(uint roundId, uint userId, uint perUserReward,  uint claimTime);\r\n    event TopRoyaltyQualified(uint roundId, uint userId, uint joinTime);\r\n\r\n\r\n\r\n   \r\n    constructor() {\r\n       \r\n    }\r\n      \r\n    \r\n\r\n    function _sendToCreator(uint _amount) internal {\r\n    require(creatorWallet != address(0),\"fee addrs not set\");\r\n    // 100% split to creator\r\n    \r\n    // Send dust to creator (you can pick any bucket)\r\n    usdt.safeTransfer(creatorWallet, _amount);\r\n  \r\n\r\n    // Bookkeeping for the full routed amount\r\n    UserIncome storage creatorIncome = userIncomes[defaultRefId];\r\n    creatorIncome.totalIncome += _amount;\r\n\r\n    // incomeHistory[defaultRefId].push(Income({\r\n    //     fromUserId: 0,\r\n    //     amount: _amount,\r\n    //     packageLevel: 0,\r\n    //     timestamp: block.timestamp,\r\n    //     incomeType: 5\r\n    // }));\r\n    emit IncomeDistribution(creatorWallet, creatorWallet, _amount, 0, IncomeType.Creator, block.timestamp );\r\n}\r\n\r\n\r\n    function _distributeIncome(uint _userId,uint _fromUserId,uint _amount, uint _packageLevel, IncomeType _incomeType) internal {\r\n        User storage user = users[_userId];\r\n        address userAddress = user.account;\r\n        require(userAddress != address(0), \"Invalid user\");\r\n        require(_amount > 0, \"Zero amount\");\r\n\r\n\r\n        // Transfer tokens\r\n        //usdt.safeTransfer(userAddress, _amount);\r\n    //( userAddress, _amount);\r\n\r\n        UserIncome storage income = userIncomes[_userId];\r\n        income.totalIncome += _amount;\r\n            // --- Update specific income field based on type ---\r\n        if      (_incomeType == IncomeType.Sponsor) income.sponsorIncome += _amount;\r\n        else if (_incomeType == IncomeType.Matrix) income.matrixIncome += _amount;\r\n        else if (_incomeType == IncomeType.LevelBooster) income.levelBoosterIncome += _amount;  \r\n        else if (_incomeType == IncomeType.Community) income.communityIncome += _amount;   \r\n        else if (_incomeType == IncomeType.Pool) income.poolIncome += _amount;\r\n        else if (_incomeType == IncomeType.Booster) income.boosterIncome += _amount;\r\n        else if (_incomeType == IncomeType.WeeklyContest) income.weeklyContestIncome += _amount;\r\n        else if (_incomeType == IncomeType.MonthlyRoyalty) income.monthlyRoyalty += _amount;\r\n        else if (_incomeType == IncomeType.TopRoyalty) income.topRoyalty += _amount;\r\n\r\n        \r\n\r\n        else revert(\"Unknown income type\");\r\n    \r\n            // --- Update total income ---\r\n        \r\n\r\n        // Record income in user history\r\n        // incomeHistory[_userId].push(Income({\r\n        //     fromUserId: _fromUserId,\r\n        //     amount: _amount,\r\n        //     packageLevel: _packageLevel,\r\n        //     timestamp: block.timestamp,\r\n        //     incomeType: _incomeType\r\n        // }));\r\n        //usdt.transfer(userAddress, _amount);\r\n    \r\n        usdt.safeTransfer(userAddress, _amount);\r\n        emit IncomeDistribution(userAddress, users[_fromUserId].account, _amount,_packageLevel, _incomeType, block.timestamp );\r\n        //emit IncomeDistributed(userAddress, users[_fromUserId].account, _amount, _packageLevel, _incomeType);\r\n    }\r\n\r\n    function _tryWeeklyContestQualify(uint _userId, uint _roundId)internal {\r\n            if (!weeklyUserdtl[_roundId][_userId].isQualified) {\r\n                    _weeklyContestQualifier(_userId, _roundId);\r\n            }\r\n    }\r\n\r\n    function _weeklyContestQualifier(uint _userId, uint _roundId)internal {\r\n       \r\n       // uint currentRound = currentWeeklyRound;        \r\n        require(_roundId == currentWeeklyRound, \"Invalid round\");\r\n        require(!weeklyContestdtl[_roundId].closed, \"Round closed\");\r\n        UserBooster memory userBoosterJoinDtl = userBoosterdtl[1][_userId];\r\n\r\n        bool hasEnoughDirects = weeklyUserDirects[_roundId][_userId].length >= 5;\r\n        bool boosterEarlyJoin = (\r\n            userBoosterJoinDtl.id == _userId && \r\n            userBoosterJoinDtl.joinTime <= users[_userId].registrationTime + TIME_STEP\r\n        );\r\n        require(hasEnoughDirects || boosterEarlyJoin, \"Not eligible for weekly contest\");\r\n        //require(weeklyUserDirects[currentRound][_userId].length >=5 ||  (userBoosterJoinDtl.id == _userId && userBoosterJoinDtl.joinTime <= users[_userId].registrationTime + TIME_STEP), \"not eligible\"); // (userBoosterJoinDtl.id = _userId && userBoosterJoinDtl.joinTime <= users[_userId].registrationTime)\r\n        \r\n        weeklyUser storage weeklyuserdtl = weeklyUserdtl[_roundId][_userId];\r\n        if (weeklyuserdtl.isQualified) return;\r\n        require(!weeklyuserdtl.isQualified, \"already Qualified\");\r\n\r\n        uint nowTime = block.timestamp;\r\n\r\n        weeklyuserdtl.joinTime = nowTime;\r\n        weeklyuserdtl.roundId = _roundId;\r\n        weeklyuserdtl.isQualified = true;\r\n   \r\n        emit WeeklyContestQualified(_roundId, _userId, nowTime);\r\n    }\r\n\r\n    function _tryMonthlyRoyaltyQualify(uint _userId, uint _roundId)internal {\r\n            if (!monthlyRoyaltyUserdtl[_userId].isQualified) {\r\n                    _monthlyRoyaltyQualifier(_userId, _roundId);\r\n            }\r\n    }\r\n\r\n    function _monthlyRoyaltyQualifier(uint _userId, uint _roundId)internal {      \r\n       \r\n        require(_roundId == currentMonthlyRound, \"Invalid round\");\r\n        require(!monthlyRoyaltydtl[_roundId].closed, \"Round closed\");\r\n       \r\n        User storage user = users[_userId];        \r\n\r\n        require(user.level10Time > 0, \"User not level 10\");\r\n        bool withinTime = user.level10Time <= user.registrationTime + MONTHLY_ROYALTY_TIME;\r\n        bool qualifiedByLevel = user.level >= MONTHLY_ROYALTY_LEVEL;\r\n        bool qualifiedByDirects = user.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT;\r\n        require(withinTime && qualifiedByLevel && qualifiedByDirects, \"Not eligible\");\r\n        \r\n        monthlyRoyaltyUser storage userRoyalty  = monthlyRoyaltyUserdtl[_userId];\r\n       \r\n        //if (userRoyalty.isQualified) return;\r\n        require(!userRoyalty.isQualified, \"already Qualified\");\r\n\r\n        uint nowTime = block.timestamp;\r\n        //userRoyalty.id = _userId;\r\n        userRoyalty.joinTime = nowTime;\r\n        userRoyalty.qualifiedRoundId = _roundId;\r\n        userRoyalty.isQualified = true;\r\n   \r\n        emit MonthlyRoyaltyQualified(_roundId, _userId, nowTime);\r\n    }\r\n\r\n    \r\n\r\n    function _tryTopRoyaltyQualify(uint _userId, uint _roundId)internal {\r\n            if (!topRoyaltyUserdtl[_userId].isQualified) {\r\n                    _topRoyaltyQualifier(_userId, _roundId);\r\n            }\r\n    }\r\n\r\n    function _topRoyaltyQualifier(uint _userId, uint _roundId)internal {      \r\n       \r\n        require(_roundId == topRoyaltyRound, \"Invalid round\");\r\n        require(!topRoyaltydtl[_roundId].closed, \"Round closed\");\r\n       \r\n        User storage user = users[_userId];        \r\n\r\n        require(user.level15Time > 0, \"User not level 15\");\r\n        bool withinTime = user.level15Time <= user.registrationTime + TOP_ROYALTY_TIME;\r\n        bool qualifiedByLevel = user.level >= TOP_ROYALTY_LEVEL;\r\n        bool qualifiedByDirects = user.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT;\r\n        require(withinTime && qualifiedByLevel && qualifiedByDirects, \"Not eligible\");\r\n        \r\n        topRoyaltyUser storage userRoyalty  = topRoyaltyUserdtl[_userId];\r\n       \r\n        //if (userRoyalty.isQualified) return;\r\n        require(!userRoyalty.isQualified, \"already Qualified\");\r\n\r\n        uint nowTime = block.timestamp;\r\n        //userRoyalty.id = _userId;\r\n        userRoyalty.joinTime = nowTime;\r\n        userRoyalty.qualifiedRoundId = _roundId;\r\n        userRoyalty.isQualified = true;\r\n   \r\n        emit MonthlyRoyaltyQualified(_roundId, _userId, nowTime);\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x1E 0x1F JUMPI REVERT PUSH27 0x408F714C9BCBFCFA134ECF359ACED058BF4DF923CAED95D0DDF564 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x1E 0x1F JUMPI REVERT PUSH27 0x408F714C9BCBFCFA134ECF359ACED058BF4DF923CAED95D0DDF564 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "698:9376:5:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "library_deploy_address"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f1e1f57fd7a408f714c9bcbfcfa134ecf359aced058bf4df923caed95d0ddf564736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/modules/SponsorMatrix.sol",
								"contracts/modules/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/SponsorMatrix.sol": {
				"Nanakshahi": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usersCount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUser",
									"type": "uint256"
								}
							],
							"name": "CommunityBonusDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "incomeType",
									"type": "uint256"
								}
							],
							"name": "IncomeDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum Storage.IncomeType",
									"name": "incomeType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "IncomeDistribution",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromUserId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LotteryReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyRewardClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyRoyaltyQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sponsor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "uplineId",
									"type": "uint256"
								}
							],
							"name": "Registration",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "level",
									"type": "string"
								}
							],
							"name": "RewardSent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyRewardClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "depositType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "upgradeTime",
									"type": "uint256"
								}
							],
							"name": "Upgrade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint8",
									"name": "matrixId",
									"type": "uint8"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "userId",
									"type": "uint32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "parentId",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "parentAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "position",
									"type": "uint8"
								}
							],
							"name": "UserJoined",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyContestQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyRewardClaim",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACC_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY_DIRECT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY_LEVEL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY_TIME",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTH_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERCENTS_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TIME_STEP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY_DIRECT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY_LEVEL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY_TIME",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WEEK_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								}
							],
							"name": "claimCommunity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "communityAccPerUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creatorWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultRefId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "glbBoosterPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minPoolForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "packages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								}
							],
							"name": "pendingCommunity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "pendingGross",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "pendingAfterCap",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_sponsorId",
									"type": "uint256"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "registeredUserIds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "systemMaintance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamDevelopment",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_userId",
									"type": "uint256"
								}
							],
							"name": "upgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore(0x40, 0x80)\n  jumpi(tag_4, callvalue)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sstore\n  mload(0x40)\n  0x01e0\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup3\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n    /* \"contracts/modules/Storage.sol\":1666:1675  15 * 1e18 */\n  0xd02ab486cedc0000\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1698:1707  25 * 1e18 */\n  0x015af1d78b58c40000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1730:1739  50 * 1e18 */\n  0x02b5e3af16b1880000\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1762:1772  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x60\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1795:1805  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x80\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1828:1838  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xa0\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1861:1871  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xc0\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1894:1905  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xe0\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1928:1939  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0100\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1962:1973  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0120\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1996:2008  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0140\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2031:2043  25600 * 1e18 */\n  0x056bc75e2d6310000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0160\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2066:2078  51200 * 1e18 */\n  0x0ad78ebc5ac620000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0180\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2101:2114  102400 * 1e18 */\n  0x15af1d78b58c40000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x01a0\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2137:2150  204800 * 1e18 */\n  0x2b5e3af16b1880000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x01c0\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0b\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sload\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0f\n  0x0b\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0f\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  lt\n  tag_8\n  jumpi\ntag_9:\n  pop\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\ntag_10:\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0f\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  dup2\n  lt\n  tag_11\n  jumpi\n  tag_13\n  tag_1\n  jump\t// in\ntag_13:\n    /* \"contracts/modules/Storage.sol\":6122:6127  75e18 */\n  0x0410d586a20a4c0000\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":6129:6135  300e18 */\n  0x1043561a8829300000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6137:6144  1200e18 */\n  0x410d586a20a4c00000\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6146:6153  4800e18 */\n  0x01043561a88293000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6155:6163  19200e18 */\n  0x0410d586a20a4c000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6165:6173  76800e18 */\n  0x1043561a882930000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6175:6184  307200e18 */\n  0x410d586a20a4c0000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sload\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n  0x13\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  lt\n  tag_14\n  jumpi\ntag_15:\n  pop\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\ntag_16:\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  dup2\n  lt\n  tag_17\n  jumpi\n  tag_19\n  tag_2\n  jump\t// in\ntag_19:\n    /* \"contracts/modules/Storage.sol\":1762:1772  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1795:1805  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1828:1838  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1861:1871  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1894:1905  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1928:1939  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1962:1973  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1996:2008  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sload\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n  0x14\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  lt\n  tag_20\n  jumpi\ntag_21:\n  pop\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\ntag_22:\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  dup2\n  lt\n  tag_23\n  jumpi\n  tag_25\n  tag_1\n  jump\t// in\ntag_25:\n    /* \"contracts/modules/Storage.sol\":6338:6339  3 */\n  0x03\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6337:6361  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6337:6361  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6347:6348  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6337:6361  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0b\n  0x80\n    /* \"contracts/modules/Storage.sol\":6337:6361  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6354:6356  13 */\n  0x0d\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6337:6361  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0f\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6337:6361  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\ntag_26:\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  dup2\n  lt\n  tag_27\n  jumpi\n  tag_29\n  tag_2\n  jump\t// in\ntag_29:\n    /* \"contracts/modules/Storage.sol\":6408:6409  4 */\n  0x04\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6414:6415  6 */\n  0x06\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6347:6348  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6426:6428  10 */\n  0x0a\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0b\n  0xe0\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\ntag_30:\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  dup2\n  lt\n  tag_31\n  jumpi\n  tag_33\n  tag_2\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\ntag_34:\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  dup2\n  lt\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8030:8031  0 */\n  0x36\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8075:8076  0 */\n  0x37\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8117:8118  0 */\n  0x38\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":9479:9480  1 */\n  0x3d\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":9525:9526  0 */\n  0x3e\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":9566:9567  0 */\n  0x3f\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":10785:10786  1 */\n  0x44\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":10827:10828  0 */\n  0x45\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":10866:10867  0 */\n  0x46\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_35:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  0x24\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  add\n  sstore\n  add\n  jump(tag_34)\ntag_31:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  0x1c\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  add\n  sstore\n  add\n  jump(tag_30)\ntag_27:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":6337:6361  [3, 5, 7, 9, 11, 13, 15] */\n  0x15\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  add\n  sstore\n  add\n  jump(tag_26)\ntag_23:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  add\n  jump(tag_22)\ntag_20:\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n  tag_37\n  swap1\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec\n  add\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f4\n  tag_3\n  jump\t// in\ntag_37:\n  dup2\n  jump(tag_21)\ntag_17:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  add\n  jump(tag_16)\ntag_14:\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n  tag_38\n  swap1\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090\n  add\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a097\n  tag_3\n  jump\t// in\ntag_38:\n  dup2\n  jump(tag_15)\ntag_11:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  add\n  jump(tag_10)\ntag_8:\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n  tag_39\n  swap1\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n  add\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc8\n  tag_3\n  jump\t// in\ntag_39:\n  0x00\n  jump(tag_9)\ntag_6:\n  shl(0xe0, 0x4e487b71)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  mstore\n  mstore(0x04, 0x41)\n  0x24\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n  revert\ntag_4:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap1\n  0xe0\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  mload(0x40)\n  swap1\n  0x0100\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_3:\n  dup2\n  dup2\n  lt\n  tag_45\n  jumpi\n  pop\n  pop\n  jump\t// out\ntag_45:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_3)\nstop\n\nsub_0: assembly {\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_37, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_37:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01c234a8\n      eq\n      tag_39\n      jumpi\n      pop\n      dup1\n      0x2132d204\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x2350268f\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x23fd338e\n      eq\n      tag_71\n      jumpi\n      dup1\n      0x24513088\n      eq\n      tag_47\n      jumpi\n      dup1\n      0x2a891534\n      eq\n      tag_49\n      jumpi\n      dup1\n      0x2ae0ee0d\n      eq\n      tag_63\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_53\n      jumpi\n      dup1\n      0x3080b5bc\n      eq\n      tag_55\n      jumpi\n      dup1\n      0x31bb6a30\n      eq\n      tag_57\n      jumpi\n      dup1\n      0x32bc298c\n      eq\n      tag_59\n      jumpi\n      dup1\n      0x32fcd966\n      eq\n      tag_61\n      jumpi\n      dup1\n      0x375b43b4\n      eq\n      tag_63\n      jumpi\n      dup1\n      0x39ab3603\n      eq\n      tag_65\n      jumpi\n      dup1\n      0x45977d03\n      eq\n      tag_67\n      jumpi\n      dup1\n      0x4b8cbf9b\n      eq\n      tag_69\n      jumpi\n      dup1\n      0x58c7d352\n      eq\n      tag_71\n      jumpi\n      dup1\n      0x5b62d1d5\n      eq\n      tag_73\n      jumpi\n      dup1\n      0x705fee2d\n      eq\n      tag_75\n      jumpi\n      dup1\n      0x76f5f700\n      eq\n      tag_77\n      jumpi\n      dup1\n      0x78f6ad6d\n      eq\n      tag_79\n      jumpi\n      dup1\n      0x7cdc65f2\n      eq\n      tag_81\n      jumpi\n      dup1\n      0x956a3228\n      eq\n      tag_83\n      jumpi\n      dup1\n      0x9b40ab97\n      eq\n      tag_85\n      jumpi\n      dup1\n      0xa59d17d1\n      eq\n      tag_87\n      jumpi\n      dup1\n      0xa5e52b99\n      eq\n      tag_89\n      jumpi\n      dup1\n      0xae4708dc\n      eq\n      tag_91\n      jumpi\n      dup1\n      0xbff1f9e1\n      eq\n      tag_93\n      jumpi\n      dup1\n      0xc216212a\n      eq\n      tag_95\n      jumpi\n      dup1\n      0xc8df2908\n      eq\n      tag_97\n      jumpi\n      dup1\n      0xc9ed0708\n      eq\n      tag_99\n      jumpi\n      dup1\n      0xca8e9121\n      eq\n      tag_101\n      jumpi\n      dup1\n      0xd0a2fd79\n      eq\n      tag_103\n      jumpi\n      dup1\n      0xd2f0490d\n      eq\n      tag_105\n      jumpi\n      dup1\n      0xd54d6ddb\n      eq\n      tag_107\n      jumpi\n      dup1\n      0xe898fc38\n      eq\n      tag_109\n      jumpi\n      dup1\n      0xe9e34a16\n      eq\n      tag_111\n      jumpi\n      dup1\n      0xebe0ff15\n      eq\n      tag_113\n      jumpi\n      dup1\n      0xec597e6f\n      eq\n      tag_115\n      jumpi\n      dup1\n      0xf207564e\n      eq\n      tag_117\n      jumpi\n      dup1\n      0xf5d74d93\n      eq\n      tag_119\n      jumpi\n      0xfddc806f\n      eq\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8038:8076  uint public currentWeeklyStartTime = 0 */\n      0x37\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_125:\n      0x00\n      dup1\n      revert\n    tag_119:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x04)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_117:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/SponsorMatrix.sol\":298:308  msg.sender */\n      caller\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":286:297  addressToId */\n      0x0c\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      jumpi(tag_135, sload(keccak256(0x00, 0x40)))\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":356:361  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":356:376  users[_sponsorId].id */\n      0x03\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":356:376  users[_sponsorId].id */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":356:380  users[_sponsorId].id > 0 */\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      tag_137\n      jumpi\n      sload(0x01)\n      0x00\n      swap1\n      0x20\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":469:526  usdt.transferFrom(msg.sender, address(this), packages[0]) */\n      tag_139\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      and\n        /* \"contracts/modules/SponsorMatrix.sol\":514:525  packages[0] */\n      tag_140\n      tag_2\n      jump\t// in\n    tag_140:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      sload\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/modules/SponsorMatrix.sol\":469:526  usdt.transferFrom(msg.sender, address(this), packages[0]) */\n      dup2\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":298:308  msg.sender */\n      caller\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x04\n        /* \"contracts/modules/SponsorMatrix.sol\":469:526  usdt.transferFrom(msg.sender, address(this), packages[0]) */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":507:511  this */\n      address\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x24\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":356:376  users[_sponsorId].id */\n      0x03\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap3\n      swap1\n      swap3\n      shl\n      shr\n      0x44\n      dup3\n      add\n      mstore\n      swap4\n      dup5\n      swap3\n      dup4\n      swap2\n      swap1\n      dup3\n      swap1\n      0x64\n      dup3\n      add\n      swap1\n      jump\n        /* \"contracts/modules/SponsorMatrix.sol\":469:526  usdt.transferFrom(msg.sender, address(this), packages[0]) */\n    tag_139:\n      sub\n      swap3\n      gas\n      call\n      dup1\n      iszero\n      tag_141\n      jumpi\n      tag_143\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n    tag_144:\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":602:614  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":602:627  defaultRefId + totalUsers */\n      tag_145\n        /* \"contracts/modules/SponsorMatrix.sol\":617:627  totalUsers */\n      0x06\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":602:627  defaultRefId + totalUsers */\n      dup1\n      swap4\n      tag_15\n      jump\t// in\n    tag_145:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap2\n      0x01\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_171\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":617:627  totalUsers */\n      0x06\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":298:308  msg.sender */\n      caller\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":286:297  addressToId */\n      0x0c\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      dup2\n      keccak256(0x00, 0x40)\n      sstore\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":356:361  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":298:308  msg.sender */\n      swap1\n      caller\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      dup4\n      sload\n      and\n      or\n      dup3\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":822:837  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":804:819  user.checkpoint */\n      0x02\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":848:855  user.id */\n      dup3\n        /* \"contracts/modules/SponsorMatrix.sol\":356:376  users[_sponsorId].id */\n      0x03\n        /* \"contracts/modules/SponsorMatrix.sol\":848:855  user.id */\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sstore\n      0x04\n        /* \"contracts/modules/SponsorMatrix.sol\":878:892  user.sponsorId */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      dup2\n      sstore\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":617:627  totalUsers */\n      0x06\n        /* \"contracts/modules/SponsorMatrix.sol\":916:926  user.level */\n      dup5\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":961:972  packages[0] */\n      tag_148\n      tag_2\n      jump\t// in\n    tag_148:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      sload\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":356:376  users[_sponsorId].id */\n      0x03\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      shl\n      shr\n        /* \"contracts/modules/SponsorMatrix.sol\":941:958  user.totalDeposit */\n      0x0a\n      dup5\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":822:837  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":983:1004  user.registrationTime */\n      0x0f\n      dup5\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sstore\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":356:361  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":1088:1116  users[_sponsorId].directTeam */\n      0x07\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":1088:1116  users[_sponsorId].directTeam */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup1\n      sload\n      swap1\n      0x01\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_171\n      jumpi\n      sstore\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":1132:1147  directReferrals */\n      0x12\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":1132:1175  directReferrals[_sponsorId].push(newUserId) */\n      tag_151\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup5\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":1132:1175  directReferrals[_sponsorId].push(newUserId) */\n      tag_21\n      jump\t// in\n    tag_151:\n        /* \"contracts/modules/SponsorMatrix.sol\":1088:1116  users[_sponsorId].directTeam */\n      0x07\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      shl(0x40, 0x01)\n      dup2\n      lt\n      iszero\n      tag_152\n      jumpi\n      dup1\n      0x01\n      tag_154\n      swap3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":1088:1116  users[_sponsorId].directTeam */\n      0x07\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":1088:1116  users[_sponsorId].directTeam */\n      0x07\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      tag_3\n      jump\t// in\n    tag_154:\n      dup2\n      sload\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":356:376  users[_sponsorId].id */\n      0x03\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      shl\n      swap1\n      dup7\n      dup3\n      shl\n      swap2\n      not(0x00)\n      swap1\n      shl\n      not\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":1257:1276  communityAccPerUser */\n      0x09\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      dup5\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":941:958  user.totalDeposit */\n      0x0a\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      sstore\n      0x00\n      0x00\n      swap1\n      dup4\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":9731:9743  matrixDirect */\n      0x11\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":804:819  user.checkpoint */\n      0x02\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/modules/SponsorMatrix.sol\":9731:9759  matrixDirect[_sponsorId] < 2 */\n      lt\n        /* \"contracts/modules/SponsorMatrix.sol\":9728:10728  if(matrixDirect[_sponsorId] < 2) {... */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":804:819  user.checkpoint */\n      eq\n      tag_155\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      pop\n      pop\n      dup4\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":356:361  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      dup2\n        /* \"contracts/modules/SponsorMatrix.sol\":602:614  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":9776:9802  users[_newUserId].uplineId */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sstore\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":9731:9743  matrixDirect */\n      0x11\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n      swap1\n      0x01\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_171\n      jumpi\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":9874:9895  uplineId = _sponsorId */\n      dup2\n        /* \"contracts/modules/SponsorMatrix.sol\":9728:10728  if(matrixDirect[_sponsorId] < 2) {... */\n    tag_159:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":10790:11023  for(uint k=0; k<maxLayers; k++) {... */\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":10804:10815  k<maxLayers */\n    tag_160:\n        /* \"contracts/modules/SponsorMatrix.sol\":983:1004  user.registrationTime */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":10804:10815  k<maxLayers */\n      dup3\n      lt\n      tag_161\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":10790:11023  for(uint k=0; k<maxLayers; k++) {... */\n    tag_162:\n        /* \"contracts/modules/SponsorMatrix.sol\":1454:1465  packages[0] */\n      pop\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":1404:1570  user.deposits.push(Deposit({... */\n      tag_163\n        /* \"contracts/modules/SponsorMatrix.sol\":1454:1465  packages[0] */\n      tag_164\n      tag_2\n      jump\t// in\n    tag_164:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      sload\n      mload(0x40)\n      swap2\n        /* \"contracts/modules/SponsorMatrix.sol\":356:376  users[_sponsorId].id */\n      0x03\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      shl\n      shr\n      tag_165\n      dup3\n      tag_10\n      jump\t// in\n    tag_165:\n      dup2\n      mstore\n      0x00\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":1423:1569  Deposit({... */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":822:837  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":1423:1569  Deposit({... */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":1423:1569  Deposit({... */\n      0x60\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":1404:1417  user.deposits */\n      dup6\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":1404:1570  user.deposits.push(Deposit({... */\n      tag_16\n      jump\t// in\n    tag_163:\n        /* \"contracts/modules/SponsorMatrix.sol\":1636:1647  packages[0] */\n      tag_166\n      tag_2\n      jump\t// in\n    tag_166:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      sload\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":356:376  users[_sponsorId].id */\n      0x03\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      shl\n      shr\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":602:614  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      mul\n      dup3\n      iszero\n      swap3\n      dup1\n      dup3\n      div\n        /* \"contracts/modules/SponsorMatrix.sol\":602:614  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      eq\n      dup5\n      or\n      iszero\n      tag_171\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":1776:1778  60 */\n      0x3c\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      mul\n      swap4\n      dup2\n      dup6\n      div\n        /* \"contracts/modules/SponsorMatrix.sol\":1776:1778  60 */\n      0x3c\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      eq\n      dup2\n      or\n      iszero\n      tag_171\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":1919:1921  25 */\n      0x19\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      mul\n      swap2\n      dup3\n      div\n        /* \"contracts/modules/SponsorMatrix.sol\":1919:1921  25 */\n      0x19\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      eq\n      or\n      iszero\n      tag_171\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":2216:2287  _distributeSponsorIncome(user.sponsorId, newUserId, remainingAmount, 1) */\n      tag_173\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap4\n        /* \"contracts/modules/SponsorMatrix.sol\":2133:2145  creatorShare */\n      tag_174\n        /* \"contracts/modules/SponsorMatrix.sol\":1702:1705  100 */\n      0x64\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup10\n      swap5\n        /* \"contracts/modules/SponsorMatrix.sol\":2049:2063  communityShare */\n      tag_175\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      dup1\n      swap7\n      div\n        /* \"contracts/modules/SponsorMatrix.sol\":2049:2063  communityShare */\n      tag_23\n      jump\t// in\n    tag_175:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      div\n        /* \"contracts/modules/SponsorMatrix.sol\":2133:2145  creatorShare */\n      tag_24\n      jump\t// in\n    tag_174:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      div\n      swap2\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":2216:2287  _distributeSponsorIncome(user.sponsorId, newUserId, remainingAmount, 1) */\n      tag_25\n      jump\t// in\n    tag_173:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":356:361  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":602:614  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(keccak256(0x00, 0x40))\n      and\n        /* \"contracts/modules/SponsorMatrix.sol\":2394:2407  user.uplineId */\n      swap2\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":2331:2408  Registration(msg.sender, users[_sponsorId].account, newUserId, user.uplineId) */\n      0x309bb360e8b69c23937ccc5fb01f9aeeead1c95a99604e175113ff82f2b1723a\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":298:308  msg.sender */\n      caller\n        /* \"contracts/modules/SponsorMatrix.sol\":2331:2408  Registration(msg.sender, users[_sponsorId].account, newUserId, user.uplineId) */\n      swap3\n      log4\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      stop\n    tag_171:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n        /* \"contracts/modules/SponsorMatrix.sol\":9731:9743  matrixDirect */\n      0x11\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x04\n      mstore\n      revert(0x00, 0x24)\n        /* \"contracts/modules/SponsorMatrix.sol\":10817:10820  k++ */\n    tag_161:\n        /* \"contracts/modules/SponsorMatrix.sol\":10840:10853  uplineId == 0 */\n      dup1\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":10837:10860  if(uplineId == 0) break */\n      tag_176\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":356:361  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":1257:1276  communityAccPerUser */\n      0x09\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":10875:10906  users[uplineId].totalMatrixTeam */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup1\n      sload\n      swap1\n      0x01\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_171\n      jumpi\n      sstore\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":10926:10931  teams */\n      0x10\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup3\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":10926:10961  teams[uplineId][k].push(_newUserId) */\n      tag_180\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup7\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":10926:10961  teams[uplineId][k].push(_newUserId) */\n      tag_21\n      jump\t// in\n    tag_180:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":356:361  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":602:614  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":10987:11011  users[uplineId].uplineId */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":10817:10820  k++ */\n      swap2\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":10794:10802  uint k=0 */\n      swap1\n      jump(tag_160)\n        /* \"contracts/modules/SponsorMatrix.sol\":10837:10860  if(uplineId == 0) break */\n    tag_176:\n        /* \"contracts/modules/SponsorMatrix.sol\":10855:10860  break */\n      jump(tag_162)\n        /* \"contracts/modules/SponsorMatrix.sol\":9728:10728  if(matrixDirect[_sponsorId] < 2) {... */\n    tag_155:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":10026:10037  i<maxLayers */\n    tag_181:\n        /* \"contracts/modules/SponsorMatrix.sol\":983:1004  user.registrationTime */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":10026:10037  i<maxLayers */\n      dup2\n      lt\n      tag_182\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":10012:10717  for(uint i=0; i<maxLayers; i++) { // Use a reasonable max depth for 2x2 matrix... */\n    tag_183:\n        /* \"contracts/modules/SponsorMatrix.sol\":9728:10728  if(matrixDirect[_sponsorId] < 2) {... */\n      pop\n      pop\n      jump(tag_159)\n        /* \"contracts/modules/SponsorMatrix.sol\":10039:10042  i++ */\n    tag_182:\n        /* \"contracts/modules/SponsorMatrix.sol\":10108:10125  if(isFound) break */\n      dup2\n      tag_184\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup5\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":10147:10152  teams */\n      0x10\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0x01\n      dup3\n      add\n      dup1\n      dup4\n      gt\n      tag_171\n      jumpi\n      0x00\n      mstore\n      0x20\n      mstore\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/modules/SponsorMatrix.sol\":804:819  user.checkpoint */\n      0x02\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      add\n      dup1\n      dup4\n      gt\n      tag_171\n      jumpi\n      0xff\n      dup2\n      gt\n      tag_171\n      jumpi\n      0x01\n      swap1\n      shl\n      gt\n        /* \"contracts/modules/SponsorMatrix.sol\":10144:10702  if(teams[_sponsorId][i+1].length < 2 ** (i+2)) {... */\n      tag_192\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":10039:10042  i++ */\n    tag_193:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x01\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":10016:10024  uint i=0 */\n      jump(tag_181)\n        /* \"contracts/modules/SponsorMatrix.sol\":10144:10702  if(teams[_sponsorId][i+1].length < 2 ** (i+2)) {... */\n    tag_192:\n        /* \"contracts/modules/SponsorMatrix.sol\":10218:10226  uint j=0 */\n      swap4\n      swap3\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":10218:10226  uint j=0 */\n      swap6\n      swap2\n      swap6\n        /* \"contracts/modules/SponsorMatrix.sol\":10259:10262  j++ */\n    tag_194:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup5\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":10147:10152  teams */\n      0x10\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup7\n      0x00\n      mstore\n      0x20\n      mstore\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/modules/SponsorMatrix.sol\":10228:10257  j<teams[_sponsorId][i].length */\n      dup2\n      lt\n      iszero\n      tag_195\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":10289:10306  if(isFound) break */\n      dup7\n      tag_197\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup5\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":10147:10152  teams */\n      0x10\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup7\n      0x00\n      mstore\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":10345:10368  teams[_sponsorId][i][j] */\n      tag_199\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":10345:10368  teams[_sponsorId][i][j] */\n      tag_3\n      jump\t// in\n    tag_199:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      sload\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":356:376  users[_sponsorId].id */\n      0x03\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      shl\n      shr\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":9731:9743  matrixDirect */\n      0x11\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":804:819  user.checkpoint */\n      0x02\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/modules/SponsorMatrix.sol\":10398:10420  matrixDirect[temp] < 2 */\n      lt\n        /* \"contracts/modules/SponsorMatrix.sol\":10395:10659  if(matrixDirect[temp] < 2) {... */\n      tag_200\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":10259:10262  j++ */\n    tag_201:\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x01\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":10218:10226  uint j=0 */\n      jump(tag_194)\n        /* \"contracts/modules/SponsorMatrix.sol\":10395:10659  if(matrixDirect[temp] < 2) {... */\n    tag_200:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap2\n      swap4\n      pop\n      swap6\n      pop\n      dup7\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":356:361  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      dup1\n        /* \"contracts/modules/SponsorMatrix.sol\":602:614  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":10453:10479  users[_newUserId].uplineId */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sstore\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":9731:9743  matrixDirect */\n      0x11\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n      swap1\n      0x01\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_171\n      jumpi\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":10617:10631  isFound = true */\n      swap2\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":10617:10631  isFound = true */\n      dup1\n        /* \"contracts/modules/SponsorMatrix.sol\":10395:10659  if(matrixDirect[temp] < 2) {... */\n      swap7\n      swap1\n      jump(tag_201)\n        /* \"contracts/modules/SponsorMatrix.sol\":10289:10306  if(isFound) break */\n    tag_197:\n        /* \"contracts/modules/SponsorMatrix.sol\":10301:10306  break */\n      pop\n      swap3\n      swap4\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":10301:10306  break */\n      swap1\n      swap6\n      swap2\n      swap6\n        /* \"contracts/modules/SponsorMatrix.sol\":10214:10683  for(uint j=0; j<teams[_sponsorId][i].length; j++) {... */\n    tag_204:\n        /* \"contracts/modules/SponsorMatrix.sol\":10144:10702  if(teams[_sponsorId][i+1].length < 2 ** (i+2)) {... */\n      swap1\n      pop\n      jump(tag_193)\n        /* \"contracts/modules/SponsorMatrix.sol\":10228:10257  j<teams[_sponsorId][i].length */\n    tag_195:\n      pop\n      swap3\n      swap4\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":10228:10257  j<teams[_sponsorId][i].length */\n      swap1\n      swap6\n      swap2\n      swap6\n      jump(tag_204)\n        /* \"contracts/modules/SponsorMatrix.sol\":10108:10125  if(isFound) break */\n    tag_184:\n        /* \"contracts/modules/SponsorMatrix.sol\":10120:10125  break */\n      jump(tag_183)\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n    tag_152:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n        /* \"contracts/modules/SponsorMatrix.sol\":469:526  usdt.transferFrom(msg.sender, address(this), packages[0]) */\n    tag_143:\n      tag_205\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":469:526  usdt.transferFrom(msg.sender, address(this), packages[0]) */\n      returndatasize\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":469:526  usdt.transferFrom(msg.sender, address(this), packages[0]) */\n      gt\n      tag_206\n      jumpi\n    tag_207:\n      tag_208\n      dup2\n      dup4\n      tag_12\n      jump\t// in\n    tag_208:\n      dup2\n      add\n      swap1\n      tag_13\n      jump\t// in\n    tag_205:\n      jump(tag_144)\n    tag_206:\n      pop\n      returndatasize\n      jump(tag_207)\n    tag_141:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_137:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x89, 0x24b73b30b634b21039b837b739b7b9)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_135:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x105b1c9958591e481c9959da5cdd195c9959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_115:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":534:558  uint public defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_113:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":7978:7985  1000e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      mstore\n      return\n    tag_111:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":460:490  address public systemMaintance */\n      0x03\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_109:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":9487:9526  uint public currentMonthlyStartTime = 0 */\n      0x3e\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_107:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x20))\n      tag_229\n      calldataload(0x04)\n      tag_20\n      jump\t// in\n    tag_229:\n      stop\n    tag_105:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1136:1137  5 */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      mstore\n      return\n    tag_103:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":6368:6432  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      dup2\n      lt\n      iszero\n      tag_125\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":6368:6432  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      0x1c\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_101:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7997:8031  uint public currentWeeklyRound = 0 */\n      0x36\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_99:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":9445:9480  uint public currentMonthlyRound = 1 */\n      0x3d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_97:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":9424:9432  10000e18 */\n      0x021e19e0c9bab2400000\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      mstore\n      return\n    tag_95:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":1630:2170  uint[] public packages = [... */\n      0x0b\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/Storage.sol\":1630:2170  uint[] public packages = [... */\n      dup2\n      lt\n      iszero\n      tag_125\n      jumpi\n      tag_258\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/Storage.sol\":1630:2170  uint[] public packages = [... */\n      swap2\n      tag_1\n      jump\t// in\n    tag_258:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_93:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":565:587  uint public totalUsers */\n      0x06\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_91:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":6092:6185  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x13\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/Storage.sol\":6092:6185  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      dup2\n      lt\n      iszero\n      tag_125\n      jumpi\n      0x13\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_269\n      jumpi\n        /* \"contracts/modules/Storage.sol\":6092:6185  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x13\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x00\n      mstore\n      0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_269:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_89:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":791:799  100 days */\n      0x83d600\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      mstore\n      return\n    tag_87:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":9533:9567  uint public monthlyTotalReward = 0 */\n      0x3f\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_85:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":10793:10828  uint public topRoyaltyStartTime = 0 */\n      0x45\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_83:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":6439:6500  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      dup2\n      lt\n      iszero\n      tag_125\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":6439:6500  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      0x24\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_81:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":422:450  address public creatorWallet */\n      0x02\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_79:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":1473:1507  uint256 public communityAccPerUser */\n      0x09\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_77:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":7925:7931  7 days */\n      0x093a80\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      mstore\n      return\n    tag_75:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":849:857  450 days */\n      0x02514300\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      mstore\n      return\n    tag_73:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":10835:10867  uint public topRoyaltyReward = 0 */\n      0x46\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_71:\n      tag_4\n      jump\t// in\n    tag_69:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":10755:10786  uint public topRoyaltyRound = 1 */\n      0x44\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_67:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":2499:2504  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":2524:2579  require(user.account == msg.sender, \"Not your account\") */\n      tag_317\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      sload\n      and\n        /* \"contracts/modules/SponsorMatrix.sol\":2548:2558  msg.sender */\n      caller\n        /* \"contracts/modules/SponsorMatrix.sol\":2532:2558  user.account == msg.sender */\n      eq\n        /* \"contracts/modules/SponsorMatrix.sol\":2524:2579  require(user.account == msg.sender, \"Not your account\") */\n      tag_9\n      jump\t// in\n    tag_317:\n        /* \"contracts/modules/SponsorMatrix.sol\":2598:2608  user.level */\n      0x06\n      dup2\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      dup2\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":2598:2613  user.level < 15 */\n      swap2\n        /* \"contracts/modules/SponsorMatrix.sol\":2611:2613  15 */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":2598:2613  user.level < 15 */\n      dup4\n      lt\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      iszero\n      tag_318\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":2717:2736  packages[nextLevel] */\n      tag_320\n      dup4\n      tag_1\n      jump\t// in\n    tag_320:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      sload\n      sload(0x01)\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/modules/SponsorMatrix.sol\":2845:2903  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      dup2\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":2548:2558  msg.sender */\n      caller\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x04\n        /* \"contracts/modules/SponsorMatrix.sol\":2845:2903  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":2883:2887  this */\n      address\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x24\n      dup3\n      add\n      mstore\n      0x03\n      swap4\n      swap1\n      swap4\n      shl\n      swap2\n      swap1\n      swap2\n      shr\n      0x44\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      swap3\n      swap2\n      swap1\n      0x20\n      swap1\n      dup3\n      swap1\n      0x64\n      swap1\n      dup3\n      swap1\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/modules/SponsorMatrix.sol\":2845:2903  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      gas\n      call\n      dup1\n      iszero\n      tag_141\n      jumpi\n      tag_324\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n    tag_325:\n      pop\n      dup1\n      sload\n      swap1\n      0x01\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_171\n      jumpi\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":2950:2967  user.totalDeposit */\n      0x0a\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":2950:2983  user.totalDeposit += packagePrice */\n      tag_328\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      dup3\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":2950:2983  user.totalDeposit += packagePrice */\n      tag_15\n      jump\t// in\n    tag_328:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":3028:3187  user.deposits.push(Deposit({... */\n      tag_329\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mload(0x40)\n      tag_330\n      dup2\n      tag_10\n      jump\t// in\n    tag_330:\n      dup3\n      dup2\n      mstore\n      0x00\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":3047:3186  Deposit({... */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":2762:2777  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":3047:3186  Deposit({... */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":3047:3186  Deposit({... */\n      0x60\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":3028:3041  user.deposits */\n      dup5\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":3028:3187  user.deposits.push(Deposit({... */\n      tag_16\n      jump\t// in\n    tag_329:\n        /* \"contracts/modules/SponsorMatrix.sol\":3337:3338  5 */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      mul\n      dup2\n      iszero\n      swap1\n      dup3\n      dup2\n      div\n        /* \"contracts/modules/SponsorMatrix.sol\":3337:3338  5 */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      eq\n      dup3\n      or\n      iszero\n      tag_171\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":3497:3499  25 */\n      0x19\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup4\n      mul\n      dup4\n      dup2\n      div\n        /* \"contracts/modules/SponsorMatrix.sol\":3497:3499  25 */\n      0x19\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      eq\n      dup4\n      or\n      iszero\n      tag_171\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":3612:3624  creatorShare */\n      tag_335\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap2\n        /* \"contracts/modules/SponsorMatrix.sol\":3538:3552  communityShare */\n      tag_175\n        /* \"contracts/modules/SponsorMatrix.sol\":3341:3344  100 */\n      0x64\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup1\n      swap4\n      div\n        /* \"contracts/modules/SponsorMatrix.sol\":3538:3552  communityShare */\n      tag_23\n      jump\t// in\n        /* \"contracts/modules/SponsorMatrix.sol\":3612:3624  creatorShare */\n    tag_335:\n        /* \"contracts/modules/SponsorMatrix.sol\":3804:3806  20 */\n      0x14\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      mul\n      swap2\n      dup3\n      div\n        /* \"contracts/modules/SponsorMatrix.sol\":3804:3806  20 */\n      0x14\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      eq\n      or\n      iszero\n      tag_171\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":3341:3344  100 */\n      0x64\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      div\n        /* \"contracts/modules/SponsorMatrix.sol\":3848:3862  user.sponsorId */\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x04\n        /* \"contracts/modules/SponsorMatrix.sol\":3848:3862  user.sponsorId */\n      dup2\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap2\n      dup3\n      sload\n      swap4\n      0x01\n      dup2\n      add\n      swap5\n      dup6\n      dup3\n      gt\n      tag_171\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":3888:3901  nextLevel + 1 */\n      dup3\n      tag_341\n      dup8\n        /* \"contracts/modules/SponsorMatrix.sol\":4197:4206  nextLevel */\n      tag_342\n        /* \"contracts/modules/SponsorMatrix.sol\":3888:3901  nextLevel + 1 */\n      swap6\n      dup11\n      dup3\n      swap6\n      tag_26\n      jump\t// in\n    tag_341:\n        /* \"contracts/modules/SponsorMatrix.sol\":3993:4006  user.uplineId */\n      dup8\n        /* \"contracts/modules/SponsorMatrix.sol\":3337:3338  5 */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":3993:4006  user.uplineId */\n      dup7\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":4031:4044  nextLevel + 1 */\n      tag_343\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup5\n      dup5\n      dup5\n      dup5\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":4031:4044  nextLevel + 1 */\n      tag_28\n      jump\t// in\n    tag_343:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":4197:4206  nextLevel */\n      tag_29\n      jump\t// in\n    tag_342:\n        /* \"contracts/modules/SponsorMatrix.sol\":2950:2967  user.totalDeposit */\n      0x0a\n        /* \"contracts/modules/SponsorMatrix.sol\":4260:4298  (nextLevel+1) == MONTHLY_ROYALTY_LEVEL */\n      dup4\n      eq\n        /* \"contracts/modules/SponsorMatrix.sol\":4257:5177  if((nextLevel+1) == MONTHLY_ROYALTY_LEVEL){... */\n      tag_344\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n    tag_345:\n        /* \"contracts/modules/SponsorMatrix.sol\":2611:2613  15 */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":5228:5262  (nextLevel+1) == TOP_ROYALTY_LEVEL */\n      dup4\n      eq\n        /* \"contracts/modules/SponsorMatrix.sol\":5225:6097  if((nextLevel+1) == TOP_ROYALTY_LEVEL){... */\n      tag_346\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n    tag_347:\n      pop\n      pop\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":3047:3186  Deposit({... */\n      0x60\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      dup3\n      add\n      mstore\n      0x15\n        /* \"contracts/modules/SponsorMatrix.sol\":3047:3186  Deposit({... */\n      0x60\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      add\n      mstore\n      shl(0x58, 0x53706f6e736f727368697020737472756374757265)\n      0x80\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":2762:2777  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":6122:6199  Upgrade(msg.sender, _userId, nextLevel + 1, \"Sponsorship structure\", nowTime) */\n      0xae1560e7d725caf8d266d531bf32f170b87264eca8d1265202c334cfeb5bc382\n      0xa0\n        /* \"contracts/modules/SponsorMatrix.sol\":2548:2558  msg.sender */\n      caller\n        /* \"contracts/modules/SponsorMatrix.sol\":6122:6199  Upgrade(msg.sender, _userId, nextLevel + 1, \"Sponsorship structure\", nowTime) */\n      swap3\n      log3\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      stop\n        /* \"contracts/modules/SponsorMatrix.sol\":5225:6097  if((nextLevel+1) == TOP_ROYALTY_LEVEL){... */\n    tag_346:\n        /* \"contracts/modules/SponsorMatrix.sol\":5292:5308  user.level15Time */\n      0x11\n        /* \"contracts/modules/SponsorMatrix.sol\":2762:2777  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":5292:5308  user.level15Time */\n      swap2\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sstore\n      dup3\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":2499:2504  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      sload\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":2499:2504  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":5511:5541  _sponsor.topRoyaltyDirectCount */\n      0x13\n      dup2\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_171\n      jumpi\n      dup1\n        /* \"contracts/modules/Storage.sol\":1189:1190  2 */\n      0x02\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap3\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":5564:5616  _sponsor.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT */\n      lt\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":5563:5678  (_sponsor.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + TOP_ROYALTY_TIME) */\n      swap1\n      dup2\n      tag_350\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":5225:6097  if((nextLevel+1) == TOP_ROYALTY_LEVEL){... */\n    tag_351:\n        /* \"contracts/modules/SponsorMatrix.sol\":5563:5719  (_sponsor.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + TOP_ROYALTY_TIME) && (_sponsor.level >= TOP_ROYALTY_LEVEL) */\n      dup2\n      tag_352\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":5225:6097  if((nextLevel+1) == TOP_ROYALTY_LEVEL){... */\n    tag_353:\n        /* \"contracts/modules/SponsorMatrix.sol\":5560:5811  if((_sponsor.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + TOP_ROYALTY_TIME) && (_sponsor.level >= TOP_ROYALTY_LEVEL)){... */\n      pop\n      tag_354\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":5225:6097  if((nextLevel+1) == TOP_ROYALTY_LEVEL){... */\n    tag_355:\n        /* \"contracts/modules/Storage.sol\":1189:1190  2 */\n      0x02\n        /* \"contracts/modules/SponsorMatrix.sol\":5511:5541  _sponsor.topRoyaltyDirectCount */\n      0x13\n        /* \"contracts/modules/SponsorMatrix.sol\":5833:5860  _user.topRoyaltyDirectCount */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":5833:5882  _user.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT */\n      lt\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":5832:5950  (_user.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) &&(_user.level15Time <= _user.registrationTime + TOP_ROYALTY_TIME) */\n      swap1\n      dup2\n      tag_356\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":5225:6097  if((nextLevel+1) == TOP_ROYALTY_LEVEL){... */\n    tag_357:\n        /* \"contracts/modules/SponsorMatrix.sol\":5832:5988  (_user.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) &&(_user.level15Time <= _user.registrationTime + TOP_ROYALTY_TIME) && (_user.level == TOP_ROYALTY_LEVEL) */\n      dup2\n      tag_358\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":5225:6097  if((nextLevel+1) == TOP_ROYALTY_LEVEL){... */\n    tag_359:\n        /* \"contracts/modules/SponsorMatrix.sol\":5829:6086  if((_user.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) &&(_user.level15Time <= _user.registrationTime + TOP_ROYALTY_TIME) && (_user.level == TOP_ROYALTY_LEVEL)  ){... */\n      pop\n      tag_360\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":5225:6097  if((nextLevel+1) == TOP_ROYALTY_LEVEL){... */\n    tag_361:\n      dup3\n      dup1\n      jump(tag_347)\n        /* \"contracts/modules/SponsorMatrix.sol\":5829:6086  if((_user.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) &&(_user.level15Time <= _user.registrationTime + TOP_ROYALTY_TIME) && (_user.level == TOP_ROYALTY_LEVEL)  ){... */\n    tag_360:\n        /* \"contracts/modules/SponsorMatrix.sol\":6042:6057  topRoyaltyRound */\n      tag_362\n      0x44\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":6042:6057  topRoyaltyRound */\n      dup4\n      tag_31\n      jump\t// in\n    tag_362:\n        /* \"contracts/modules/SponsorMatrix.sol\":5829:6086  if((_user.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) &&(_user.level15Time <= _user.registrationTime + TOP_ROYALTY_TIME) && (_user.level == TOP_ROYALTY_LEVEL)  ){... */\n      jump(tag_361)\n        /* \"contracts/modules/SponsorMatrix.sol\":5832:5988  (_user.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) &&(_user.level15Time <= _user.registrationTime + TOP_ROYALTY_TIME) && (_user.level == TOP_ROYALTY_LEVEL) */\n    tag_358:\n        /* \"contracts/modules/SponsorMatrix.sol\":2611:2613  15 */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":5955:5966  _user.level */\n      swap2\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":2598:2608  user.level */\n      0x06\n        /* \"contracts/modules/SponsorMatrix.sol\":5955:5966  _user.level */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":5955:5987  _user.level == TOP_ROYALTY_LEVEL */\n      eq\n        /* \"contracts/modules/SponsorMatrix.sol\":5832:5988  (_user.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) &&(_user.level15Time <= _user.registrationTime + TOP_ROYALTY_TIME) && (_user.level == TOP_ROYALTY_LEVEL) */\n      dup4\n      jump(tag_359)\n        /* \"contracts/modules/SponsorMatrix.sol\":5832:5950  (_user.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) &&(_user.level15Time <= _user.registrationTime + TOP_ROYALTY_TIME) */\n    tag_356:\n        /* \"contracts/modules/SponsorMatrix.sol\":5887:5904  _user.level15Time */\n      swap1\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":5292:5308  user.level15Time */\n      0x11\n        /* \"contracts/modules/SponsorMatrix.sol\":5887:5904  _user.level15Time */\n      dup2\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":2611:2613  15 */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":5908:5930  _user.registrationTime */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      swap1\n        /* \"contracts/modules/Storage.sol\":849:857  450 days */\n      0x02514300\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_171\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":5887:5949  _user.level15Time <= _user.registrationTime + TOP_ROYALTY_TIME */\n      gt\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":5832:5950  (_user.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) &&(_user.level15Time <= _user.registrationTime + TOP_ROYALTY_TIME) */\n      swap1\n      jump(tag_357)\n        /* \"contracts/modules/SponsorMatrix.sol\":5560:5811  if((_sponsor.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + TOP_ROYALTY_TIME) && (_sponsor.level >= TOP_ROYALTY_LEVEL)){... */\n    tag_354:\n        /* \"contracts/modules/SponsorMatrix.sol\":5779:5794  topRoyaltyRound */\n      tag_365\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x04\n        /* \"contracts/modules/SponsorMatrix.sol\":5762:5777  _user.sponsorId */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":5779:5794  topRoyaltyRound */\n      0x44\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":5779:5794  topRoyaltyRound */\n      swap1\n      tag_31\n      jump\t// in\n    tag_365:\n        /* \"contracts/modules/SponsorMatrix.sol\":5560:5811  if((_sponsor.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + TOP_ROYALTY_TIME) && (_sponsor.level >= TOP_ROYALTY_LEVEL)){... */\n      jump(tag_355)\n        /* \"contracts/modules/SponsorMatrix.sol\":5563:5719  (_sponsor.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + TOP_ROYALTY_TIME) && (_sponsor.level >= TOP_ROYALTY_LEVEL) */\n    tag_352:\n        /* \"contracts/modules/SponsorMatrix.sol\":2611:2613  15 */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":5683:5697  _sponsor.level */\n      swap2\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":2598:2608  user.level */\n      0x06\n        /* \"contracts/modules/SponsorMatrix.sol\":5683:5697  _sponsor.level */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":5683:5718  _sponsor.level >= TOP_ROYALTY_LEVEL */\n      lt\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":5563:5719  (_sponsor.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + TOP_ROYALTY_TIME) && (_sponsor.level >= TOP_ROYALTY_LEVEL) */\n      dup5\n      jump(tag_353)\n        /* \"contracts/modules/SponsorMatrix.sol\":5563:5678  (_sponsor.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + TOP_ROYALTY_TIME) */\n    tag_350:\n        /* \"contracts/modules/SponsorMatrix.sol\":5633:5658  _sponsor.registrationTime */\n      swap1\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":2611:2613  15 */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":5633:5658  _sponsor.registrationTime */\n      dup2\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/Storage.sol\":849:857  450 days */\n      0x02514300\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_171\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":2762:2777  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":5622:5677  nowTime <= _sponsor.registrationTime + TOP_ROYALTY_TIME */\n      gt\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":5563:5678  (_sponsor.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + TOP_ROYALTY_TIME) */\n      swap1\n      jump(tag_351)\n        /* \"contracts/modules/SponsorMatrix.sol\":4257:5177  if((nextLevel+1) == MONTHLY_ROYALTY_LEVEL){... */\n    tag_344:\n        /* \"contracts/modules/SponsorMatrix.sol\":2762:2777  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":4328:4344  user.level10Time */\n      0x10\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sstore\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":2499:2504  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      dup5\n      sload\n      dup4\n      mstore\n      swap2\n      keccak256\n        /* \"contracts/modules/SponsorMatrix.sol\":4547:4578  _sponsor.monthlyUserDirectCount */\n      0x12\n      dup2\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      tag_171\n      jumpi\n      dup1\n        /* \"contracts/modules/SponsorMatrix.sol\":3337:3338  5 */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap3\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":4601:4658  _sponsor.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT */\n      lt\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":4600:4724  (_sponsor.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + MONTHLY_ROYALTY_TIME) */\n      swap1\n      dup2\n      tag_370\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":4257:5177  if((nextLevel+1) == MONTHLY_ROYALTY_LEVEL){... */\n    tag_371:\n        /* \"contracts/modules/SponsorMatrix.sol\":4600:4769  (_sponsor.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + MONTHLY_ROYALTY_TIME) && (_sponsor.level >= MONTHLY_ROYALTY_LEVEL) */\n      dup2\n      tag_372\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":4257:5177  if((nextLevel+1) == MONTHLY_ROYALTY_LEVEL){... */\n    tag_373:\n        /* \"contracts/modules/SponsorMatrix.sol\":4597:4869  if((_sponsor.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + MONTHLY_ROYALTY_TIME) && (_sponsor.level >= MONTHLY_ROYALTY_LEVEL)){... */\n      pop\n      tag_374\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":4257:5177  if((nextLevel+1) == MONTHLY_ROYALTY_LEVEL){... */\n    tag_375:\n        /* \"contracts/modules/SponsorMatrix.sol\":3337:3338  5 */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":4547:4578  _sponsor.monthlyUserDirectCount */\n      0x12\n        /* \"contracts/modules/SponsorMatrix.sol\":4891:4919  _user.monthlyUserDirectCount */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":4891:4945  _user.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT */\n      lt\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":4890:5018  (_user.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (_user.level10Time <= _user.registrationTime + MONTHLY_ROYALTY_TIME) */\n      swap1\n      dup2\n      tag_376\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":4257:5177  if((nextLevel+1) == MONTHLY_ROYALTY_LEVEL){... */\n    tag_377:\n        /* \"contracts/modules/SponsorMatrix.sol\":4890:5060  (_user.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (_user.level10Time <= _user.registrationTime + MONTHLY_ROYALTY_TIME) && (_user.level == MONTHLY_ROYALTY_LEVEL) */\n      dup2\n      tag_378\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":4257:5177  if((nextLevel+1) == MONTHLY_ROYALTY_LEVEL){... */\n    tag_379:\n        /* \"contracts/modules/SponsorMatrix.sol\":4887:5166  if((_user.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (_user.level10Time <= _user.registrationTime + MONTHLY_ROYALTY_TIME) && (_user.level == MONTHLY_ROYALTY_LEVEL)  ){... */\n      pop\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":4257:5177  if((nextLevel+1) == MONTHLY_ROYALTY_LEVEL){... */\n      tag_345\n        /* \"contracts/modules/SponsorMatrix.sol\":4887:5166  if((_user.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (_user.level10Time <= _user.registrationTime + MONTHLY_ROYALTY_TIME) && (_user.level == MONTHLY_ROYALTY_LEVEL)  ){... */\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":5118:5137  currentMonthlyRound */\n      tag_382\n      0x3d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":5118:5137  currentMonthlyRound */\n      dup6\n      tag_30\n      jump\t// in\n    tag_382:\n        /* \"contracts/modules/SponsorMatrix.sol\":4257:5177  if((nextLevel+1) == MONTHLY_ROYALTY_LEVEL){... */\n      jump(tag_345)\n        /* \"contracts/modules/SponsorMatrix.sol\":4890:5060  (_user.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (_user.level10Time <= _user.registrationTime + MONTHLY_ROYALTY_TIME) && (_user.level == MONTHLY_ROYALTY_LEVEL) */\n    tag_378:\n        /* \"contracts/modules/SponsorMatrix.sol\":2950:2967  user.totalDeposit */\n      0x0a\n        /* \"contracts/modules/SponsorMatrix.sol\":5023:5034  _user.level */\n      swap2\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":2598:2608  user.level */\n      0x06\n        /* \"contracts/modules/SponsorMatrix.sol\":5023:5034  _user.level */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":5023:5059  _user.level == MONTHLY_ROYALTY_LEVEL */\n      eq\n        /* \"contracts/modules/SponsorMatrix.sol\":4890:5060  (_user.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (_user.level10Time <= _user.registrationTime + MONTHLY_ROYALTY_TIME) && (_user.level == MONTHLY_ROYALTY_LEVEL) */\n      dup6\n      jump(tag_379)\n        /* \"contracts/modules/SponsorMatrix.sol\":4890:5018  (_user.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (_user.level10Time <= _user.registrationTime + MONTHLY_ROYALTY_TIME) */\n    tag_376:\n        /* \"contracts/modules/SponsorMatrix.sol\":4951:4968  _user.level10Time */\n      swap1\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":4328:4344  user.level10Time */\n      0x10\n        /* \"contracts/modules/SponsorMatrix.sol\":4951:4968  _user.level10Time */\n      dup2\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":2611:2613  15 */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":4972:4994  _user.registrationTime */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      swap1\n        /* \"contracts/modules/Storage.sol\":791:799  100 days */\n      0x83d600\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_171\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":4951:5017  _user.level10Time <= _user.registrationTime + MONTHLY_ROYALTY_TIME */\n      gt\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":4890:5018  (_user.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (_user.level10Time <= _user.registrationTime + MONTHLY_ROYALTY_TIME) */\n      swap1\n      jump(tag_377)\n        /* \"contracts/modules/SponsorMatrix.sol\":4597:4869  if((_sponsor.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + MONTHLY_ROYALTY_TIME) && (_sponsor.level >= MONTHLY_ROYALTY_LEVEL)){... */\n    tag_374:\n        /* \"contracts/modules/SponsorMatrix.sol\":4833:4852  currentMonthlyRound */\n      tag_385\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x04\n        /* \"contracts/modules/SponsorMatrix.sol\":4816:4831  _user.sponsorId */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":4833:4852  currentMonthlyRound */\n      0x3d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":4833:4852  currentMonthlyRound */\n      swap1\n      tag_30\n      jump\t// in\n    tag_385:\n        /* \"contracts/modules/SponsorMatrix.sol\":4597:4869  if((_sponsor.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + MONTHLY_ROYALTY_TIME) && (_sponsor.level >= MONTHLY_ROYALTY_LEVEL)){... */\n      jump(tag_375)\n        /* \"contracts/modules/SponsorMatrix.sol\":4600:4769  (_sponsor.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + MONTHLY_ROYALTY_TIME) && (_sponsor.level >= MONTHLY_ROYALTY_LEVEL) */\n    tag_372:\n        /* \"contracts/modules/SponsorMatrix.sol\":2950:2967  user.totalDeposit */\n      0x0a\n        /* \"contracts/modules/SponsorMatrix.sol\":4729:4743  _sponsor.level */\n      swap2\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":2598:2608  user.level */\n      0x06\n        /* \"contracts/modules/SponsorMatrix.sol\":4729:4743  _sponsor.level */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":4729:4768  _sponsor.level >= MONTHLY_ROYALTY_LEVEL */\n      lt\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":4600:4769  (_sponsor.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + MONTHLY_ROYALTY_TIME) && (_sponsor.level >= MONTHLY_ROYALTY_LEVEL) */\n      dup7\n      jump(tag_373)\n        /* \"contracts/modules/SponsorMatrix.sol\":4600:4724  (_sponsor.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + MONTHLY_ROYALTY_TIME) */\n    tag_370:\n        /* \"contracts/modules/SponsorMatrix.sol\":4675:4700  _sponsor.registrationTime */\n      swap1\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":2611:2613  15 */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":4675:4700  _sponsor.registrationTime */\n      dup2\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/Storage.sol\":791:799  100 days */\n      0x83d600\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_171\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":2762:2777  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":4664:4723  nowTime <= _sponsor.registrationTime + MONTHLY_ROYALTY_TIME */\n      gt\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":4600:4724  (_sponsor.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT) && (nowTime <= _sponsor.registrationTime + MONTHLY_ROYALTY_TIME) */\n      swap1\n      jump(tag_371)\n        /* \"contracts/modules/SponsorMatrix.sol\":2845:2903  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n    tag_324:\n      tag_388\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":2845:2903  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      returndatasize\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":2845:2903  usdt.transferFrom(msg.sender, address(this), packagePrice) */\n      gt\n      tag_206\n      jumpi\n      tag_208\n      dup2\n      dup4\n      tag_12\n      jump\t// in\n    tag_388:\n      jump(tag_325)\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n    tag_318:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x105b1c9958591e48185d081b585e081b195d995b)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_65:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":1206:1237  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/Storage.sol\":1206:1237  uint[] public registeredUserIds */\n      dup2\n      lt\n      iszero\n      tag_125\n      jumpi\n      0x07\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_269\n      jumpi\n        /* \"contracts/modules/Storage.sol\":1206:1237  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x00\n      mstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_63:\n      tag_5\n      jump\t// in\n    tag_61:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1462:1466  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      mstore\n      return\n    tag_59:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":731:737  1 days */\n      0x015180\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      mstore\n      return\n    tag_57:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1189:1190  2 */\n      0x02\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      mstore\n      return\n    tag_55:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8085:8118  uint public WeeklyTotalReward = 0 */\n      0x38\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_53:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x01)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_49:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":9372:9379  30 days */\n      0x278d00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      mstore\n      return\n    tag_47:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x20))\n      0x40\n      tag_428\n      calldataload(0x04)\n      tag_8\n      jump\t// in\n    tag_428:\n      dup3\n      mload\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      return\n    tag_43:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":6192:6297  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/Storage.sol\":6192:6297  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      dup2\n      lt\n      iszero\n      tag_125\n      jumpi\n      0x14\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_269\n      jumpi\n        /* \"contracts/modules/Storage.sol\":6192:6297  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x00\n      mstore\n      0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_41:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x07\n        /* \"contracts/modules/Storage.sol\":6304:6361  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      dup2\n      lt\n      iszero\n      tag_125\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":6304:6361  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      0x15\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_39:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      dup1\n        /* \"contracts/modules/Storage.sol\":683:688  10000 */\n      0x2710\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      swap3\n      mstore\n      return\n    tag_1:\n        /* \"contracts/modules/SponsorMatrix.sol\":2717:2725  packages */\n      0x0b\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_269\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":2717:2725  packages */\n      0x0b\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_2:\n        /* \"contracts/modules/SponsorMatrix.sol\":514:522  packages */\n      0x0b\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      iszero\n      tag_269\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":514:522  packages */\n      0x0b\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x00\n      swap1\n      dup2\n      mstore\n      0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n      swap2\n      jump\t// out\n    tag_3:\n      dup1\n      sload\n      dup3\n      lt\n      iszero\n      tag_269\n      jumpi\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_4:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1025:1027  10 */\n      0x0a\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      mstore\n      return\n    tag_5:\n      jumpi(tag_125, callvalue)\n      jumpi(tag_125, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1078:1080  15 */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      mstore\n      return\n    tag_6:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_171\n      jumpi\n      jump\t// out\n    tag_7:\n      dup2\n      iszero\n      tag_463\n      jumpi\n      div\n      swap1\n      jump\t// out\n    tag_463:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x12)\n      revert(0x00, 0x24)\n        /* \"contracts/modules/SponsorMatrix.sol\":9085:9521  function pendingCommunity(uint _userId) external view returns (uint pendingGross, uint pendingAfterCap) {... */\n    tag_8:\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":9204:9209  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":9204:9221  users[_userId].id */\n      0x03\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":9204:9221  users[_userId].id */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":9204:9226  users[_userId].id == 0 */\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":9200:9241  if (users[_userId].id == 0) return (0, 0) */\n      tag_465\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":9266:9285  communityAccPerUser */\n      0x09\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      dup3\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":9311:9324  communityDebt */\n      0x0a\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/modules/SponsorMatrix.sol\":9348:9359  acc <= debt */\n      swap1\n      dup2\n      dup2\n      gt\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":9344:9374  if (acc <= debt) return (0, 0) */\n      tag_467\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":9399:9409  acc - debt */\n      tag_469\n        /* \"contracts/modules/SponsorMatrix.sol\":9448:9483  _applyGlobalCapping(_userId, gross) */\n      tag_470\n        /* \"contracts/modules/SponsorMatrix.sol\":9399:9409  acc - debt */\n      swap3\n        /* \"contracts/modules/Storage.sol\":1462:1466  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/modules/SponsorMatrix.sol\":9399:9409  acc - debt */\n      swap3\n      tag_6\n      jump\t// in\n    tag_469:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      div\n        /* \"contracts/modules/SponsorMatrix.sol\":9448:9483  _applyGlobalCapping(_userId, gross) */\n      dup1\n      swap4\n      tag_22\n      jump\t// in\n    tag_470:\n        /* \"contracts/modules/SponsorMatrix.sol\":9085:9521  function pendingCommunity(uint _userId) external view returns (uint pendingGross, uint pendingAfterCap) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":9344:9374  if (acc <= debt) return (0, 0) */\n    tag_467:\n        /* \"contracts/modules/SponsorMatrix.sol\":9361:9374  return (0, 0) */\n      pop\n      pop\n      swap1\n      pop\n      0x00\n      swap1\n      0x00\n      swap1\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":9200:9241  if (users[_userId].id == 0) return (0, 0) */\n    tag_465:\n      0x00\n      swap2\n      pop\n      dup2\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":9228:9241  return (0, 0) */\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n    tag_9:\n      iszero\n      tag_471\n      jumpi\n      jump\t// out\n    tag_471:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x139bdd081e5bdd5c881858d8dbdd5b9d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_10:\n      0x80\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_152\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_11:\n      0xa0\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_152\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_12:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_152\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_13:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_125\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_125\n      jumpi\n      swap1\n      jump\t// out\n    tag_15:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_171\n      jumpi\n      jump\t// out\n    tag_16:\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      lt\n      iszero\n      tag_152\n      jumpi\n      0x01\n      dup2\n      add\n      dup1\n      dup4\n      sstore\n      dup2\n      lt\n      iszero\n      tag_269\n      jumpi\n      0x03\n      0x60\n      swap2\n      0xff\n      swap4\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      shl\n      add\n      dup5\n      mload\n      dup2\n      sstore\n      0x20\n      dup6\n      add\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      0x40\n      dup6\n      add\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      add\n      swap3\n      add\n      mload\n      and\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      jump\t// out\n    tag_17:\n      dup2\n      dup2\n      mul\n      swap3\n      swap2\n      dup2\n      iszero\n      swap2\n      dup5\n      div\n      eq\n      or\n      iszero\n      tag_171\n      jumpi\n      jump\t// out\n    tag_18:\n      dup1\n      sload\n      swap1\n      shl(0x40, 0x01)\n      dup3\n      lt\n      iszero\n      tag_152\n      jumpi\n      0x01\n      dup3\n      add\n      dup1\n      dup3\n      sstore\n      dup3\n      lt\n      iszero\n      tag_269\n      jumpi\n      0x04\n      swap2\n      0x80\n      swap2\n      0x00\n      mstore\n      0x05\n      keccak256(0x00, 0x20)\n      swap2\n      mul\n      add\n      swap3\n      dup1\n      mload\n      dup5\n      sstore\n      0x20\n      dup2\n      add\n      mload\n      0x01\n      dup6\n      add\n      sstore\n      0x40\n      dup2\n      add\n      mload\n      0x02\n      dup6\n      add\n      sstore\n      0x60\n      dup2\n      add\n      mload\n      0x03\n      dup6\n      add\n      sstore\n      add\n      mload\n      swap2\n      add\n      sstore\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":7328:9075  function claimCommunity(uint _userId) external {... */\n    tag_20:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":7407:7412  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":7444:7448  u.id */\n      swap1\n      0x03\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":7444:7453  u.id != 0 */\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      tag_495\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":7487:7539  require(u.account == msg.sender, \"Not your account\") */\n      tag_497\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup4\n      sload\n      and\n        /* \"contracts/modules/SponsorMatrix.sol\":7508:7518  msg.sender */\n      caller\n        /* \"contracts/modules/SponsorMatrix.sol\":7495:7518  u.account == msg.sender */\n      eq\n        /* \"contracts/modules/SponsorMatrix.sol\":7487:7539  require(u.account == msg.sender, \"Not your account\") */\n      tag_9\n      jump\t// in\n    tag_497:\n        /* \"contracts/modules/SponsorMatrix.sol\":7636:7655  communityAccPerUser */\n      0x09\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      swap2\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":7685:7698  communityDebt */\n      0x0a\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/modules/SponsorMatrix.sol\":7728:7747  accumulated == debt */\n      dup1\n      dup5\n      eq\n        /* \"contracts/modules/SponsorMatrix.sol\":7724:7810  if (accumulated == debt) {... */\n      tag_498\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":7845:7863  accumulated - debt */\n      tag_500\n        /* \"contracts/modules/Storage.sol\":1462:1466  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/modules/SponsorMatrix.sol\":7845:7863  accumulated - debt */\n      swap2\n      dup6\n      tag_6\n      jump\t// in\n    tag_500:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      div\n        /* \"contracts/modules/SponsorMatrix.sol\":7899:7911  accrued == 0 */\n      swap2\n      dup3\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":7895:8028  if (accrued == 0) {... */\n      tag_501\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":8105:8142  _applyGlobalCapping(_userId, accrued) */\n      tag_503\n      dup4\n      dup3\n      tag_22\n      jump\t// in\n    tag_503:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap4\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":7685:7698  communityDebt */\n      0x0a\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":8289:8296  pay > 0 */\n      dup4\n      dup1\n        /* \"contracts/modules/SponsorMatrix.sol\":8285:8906  if (pay > 0) {... */\n      tag_504\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":7328:9075  function claimCommunity(uint _userId) external {... */\n    tag_505:\n        /* \"contracts/modules/SponsorMatrix.sol\":8985:8998  accrued > pay */\n      swap2\n      pop\n      pop\n      dup2\n      gt\n        /* \"contracts/modules/SponsorMatrix.sol\":8981:9064  if (accrued > pay) {... */\n      tag_506\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":7328:9075  function claimCommunity(uint _userId) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":8981:9064  if (accrued > pay) {... */\n    tag_506:\n        /* \"contracts/modules/SponsorMatrix.sol\":9034:9047  accrued - pay */\n      tag_508\n      swap2\n      tag_509\n      swap2\n      tag_6\n      jump\t// in\n    tag_509:\n      tag_24\n      jump\t// in\n    tag_508:\n        /* \"contracts/modules/SponsorMatrix.sol\":7328:9075  function claimCommunity(uint _userId) external {... */\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":8285:8906  if (pay > 0) {... */\n    tag_504:\n        /* \"contracts/modules/SponsorMatrix.sol\":8836:8865  usdt.transfer(u.account, pay) */\n      tag_510\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap3\n        /* \"contracts/modules/SponsorMatrix.sol\":8501:8775  incomeHistory[_userId].push(Income({... */\n      tag_511\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup4\n      0x20\n      swap5\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":8342:8353  userIncomes */\n      0x0e\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup6\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":8422:8441  inc.communityIncome */\n      0x06\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":8381:8403  inc.totalIncome += pay */\n      tag_512\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup7\n      dup3\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":8381:8403  inc.totalIncome += pay */\n      tag_15\n      jump\t// in\n    tag_512:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":8422:8441  inc.communityIncome */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":8422:8448  inc.communityIncome += pay */\n      tag_513\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup6\n      dup3\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":8422:8448  inc.communityIncome += pay */\n      tag_15\n      jump\t// in\n    tag_513:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      sstore\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":8501:8514  incomeHistory */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup6\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap2\n      tag_514\n      dup4\n      tag_11\n      jump\t// in\n    tag_514:\n      dup3\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":8529:8774  Income({... */\n      dup5\n      dup7\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":8649:8650  1 */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":8529:8774  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":8684:8699  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":8529:8774  Income({... */\n      0x60\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":7636:7655  communityAccPerUser */\n      0x09\n        /* \"contracts/modules/SponsorMatrix.sol\":8529:8774  Income({... */\n      0x80\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":8501:8775  incomeHistory[_userId].push(Income({... */\n      tag_18\n      jump\t// in\n    tag_511:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload(0x01)\n      swap1\n      sload\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/modules/SponsorMatrix.sol\":8836:8865  usdt.transfer(u.account, pay) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap2\n      dup3\n      and\n        /* \"contracts/modules/SponsorMatrix.sol\":8836:8865  usdt.transfer(u.account, pay) */\n      0x04\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n      0x24\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      swap2\n      swap4\n      dup5\n      swap3\n      swap1\n      swap2\n      and\n      swap1\n      dup3\n      swap1\n      0x00\n      swap1\n      dup3\n      swap1\n      0x44\n      dup3\n      add\n      swap1\n      jump\n        /* \"contracts/modules/SponsorMatrix.sol\":8836:8865  usdt.transfer(u.account, pay) */\n    tag_510:\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_141\n      jumpi\n      0x00\n      swap2\n      tag_517\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":8285:8906  if (pay > 0) {... */\n    tag_518:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      pop\n      iszero\n      tag_519\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":8285:8906  if (pay > 0) {... */\n      0x00\n      dup1\n      dup4\n      jump(tag_505)\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n    tag_519:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":8836:8865  usdt.transfer(u.account, pay) */\n      0x04\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x1554d115081d1c985b9cd9995c8819985a5b1959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/modules/SponsorMatrix.sol\":8836:8865  usdt.transfer(u.account, pay) */\n    tag_517:\n      tag_521\n      swap2\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":8836:8865  usdt.transfer(u.account, pay) */\n      returndatasize\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":8836:8865  usdt.transfer(u.account, pay) */\n      gt\n      tag_206\n      jumpi\n      tag_208\n      dup2\n      dup4\n      tag_12\n      jump\t// in\n    tag_521:\n      0x00\n      jump(tag_518)\n        /* \"contracts/modules/SponsorMatrix.sol\":7895:8028  if (accrued == 0) {... */\n    tag_501:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap2\n      pop\n      pop\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":7685:7698  communityDebt */\n      0x0a\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":8006:8013  return; */\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":7724:7810  if (accumulated == debt) {... */\n    tag_498:\n        /* \"contracts/modules/SponsorMatrix.sol\":7768:7775  return; */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n    tag_495:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x92, 0x155cd95c881b9bdd08199bdd5b99)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_21:\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      lt\n      iszero\n      tag_152\n      jumpi\n      tag_527\n      swap2\n      0x01\n      dup3\n      add\n      dup2\n      sstore\n      tag_3\n      jump\t// in\n    tag_527:\n      dup2\n      swap3\n      swap2\n      sload\n      swap1\n      0x03\n      shl\n      swap2\n      dup3\n      shl\n      swap2\n      not(0x00)\n      swap1\n      shl\n      not\n      and\n      or\n      swap1\n      sstore\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":6219:6986  function _applyGlobalCapping(uint _userId, uint _amount) internal view returns (uint) {... */\n    tag_22:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":6332:6337  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":6381:6392  userIncomes */\n      0x0e\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":6757:6774  user.totalDeposit */\n      0x0a\n        /* \"contracts/modules/SponsorMatrix.sol\":6757:6796  user.totalDeposit * _ROI_CAP_MULTIPLIER */\n      tag_528\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":6613:6658  uint _ROI_CAP_MULTIPLIER = ROI_CAP_MULTIPLIER */\n      swap3\n        /* \"contracts/modules/Storage.sol\":1078:1080  15 */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":6667:6691  user.directPoolQualified */\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":6692:6693  1 */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":6667:6691  user.directPoolQualified */\n      0x08\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":6667:6693  user.directPoolQualified>1 */\n      gt\n        /* \"contracts/modules/SponsorMatrix.sol\":6664:6734  if(user.directPoolQualified>1){... */\n      tag_529\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":6219:6986  function _applyGlobalCapping(uint _userId, uint _amount) internal view returns (uint) {... */\n    tag_530:\n        /* \"contracts/modules/SponsorMatrix.sol\":6757:6774  user.totalDeposit */\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":6757:6796  user.totalDeposit * _ROI_CAP_MULTIPLIER */\n      tag_17\n      jump\t// in\n    tag_528:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      div\n      swap1\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":6828:6859  income.totalIncome >= maxIncome */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":6824:6869  if (income.totalIncome >= maxIncome) return 0 */\n      tag_531\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":6895:6925  maxIncome - income.totalIncome */\n      tag_533\n      swap2\n      tag_6\n      jump\t// in\n    tag_533:\n        /* \"contracts/modules/SponsorMatrix.sol\":6939:6982  (_amount > remaining) ? remaining : _amount */\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":6940:6959  _amount > remaining */\n      dup2\n      dup2\n      gt\n      iszero\n      tag_534\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":6939:6982  (_amount > remaining) ? remaining : _amount */\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":6219:6986  function _applyGlobalCapping(uint _userId, uint _amount) internal view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":6939:6982  (_amount > remaining) ? remaining : _amount */\n    tag_534:\n      swap1\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":6219:6986  function _applyGlobalCapping(uint _userId, uint _amount) internal view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":6824:6869  if (income.totalIncome >= maxIncome) return 0 */\n    tag_531:\n        /* \"contracts/modules/SponsorMatrix.sol\":6861:6869  return 0 */\n      pop\n      pop\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":6861:6869  return 0 */\n      swap1\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":6664:6734  if(user.directPoolQualified>1){... */\n    tag_529:\n        /* \"contracts/modules/SponsorMatrix.sol\":6725:6727  20 */\n      0x14\n      swap2\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":6664:6734  if(user.directPoolQualified>1){... */\n      jump(tag_530)\n        /* \"contracts/modules/SponsorMatrix.sol\":6994:7318  function _accrueCommunityBonus(uint _totalAmount) internal {... */\n    tag_23:\n        /* \"contracts/modules/SponsorMatrix.sol\":7073:7090  registeredUserIds */\n      0x07\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":7112:7118  n == 0 */\n      swap1\n      dup2\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":7112:7139  n == 0 || _totalAmount == 0 */\n      dup1\n      iszero\n      tag_537\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":6994:7318  function _accrueCommunityBonus(uint _totalAmount) internal {... */\n    tag_538:\n        /* \"contracts/modules/SponsorMatrix.sol\":7108:7243  if (n == 0 || _totalAmount == 0) {... */\n      tag_539\n      jumpi\n        /* \"contracts/modules/Storage.sol\":1462:1466  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      mul\n      swap1\n      dup1\n      dup3\n      div\n        /* \"contracts/modules/Storage.sol\":1462:1466  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_171\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":7253:7310  communityAccPerUser += (_totalAmount * ACC_PRECISION) / n */\n      tag_543\n        /* \"contracts/modules/SponsorMatrix.sol\":7276:7310  (_totalAmount * ACC_PRECISION) / n */\n      swap2\n      tag_544\n      swap2\n      tag_7\n      jump\t// in\n    tag_544:\n        /* \"contracts/modules/SponsorMatrix.sol\":7253:7310  communityAccPerUser += (_totalAmount * ACC_PRECISION) / n */\n      0x09\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":7253:7310  communityAccPerUser += (_totalAmount * ACC_PRECISION) / n */\n      tag_15\n      jump\t// in\n    tag_543:\n      0x09\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":6994:7318  function _accrueCommunityBonus(uint _totalAmount) internal {... */\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":7108:7243  if (n == 0 || _totalAmount == 0) {... */\n    tag_539:\n        /* \"contracts/modules/SponsorMatrix.sol\":7160:7176  _totalAmount > 0 */\n      dup1\n      swap2\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":7156:7211  if (_totalAmount > 0) { _sendToCreator(_totalAmount); } */\n      tag_545\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":7225:7232  return; */\n      pop\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":7156:7211  if (_totalAmount > 0) { _sendToCreator(_totalAmount); } */\n    tag_545:\n        /* \"contracts/modules/SponsorMatrix.sol\":7195:7207  _totalAmount */\n      tag_508\n      swap1\n      tag_24\n      jump\t// in\n        /* \"contracts/modules/SponsorMatrix.sol\":7112:7139  n == 0 || _totalAmount == 0 */\n    tag_537:\n        /* \"contracts/modules/SponsorMatrix.sol\":7122:7139  _totalAmount == 0 */\n      pop\n      dup1\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":7112:7139  n == 0 || _totalAmount == 0 */\n      jump(tag_538)\n        /* \"contracts/modules/Storage.sol\":12070:12812  function _sendToCreator(uint _amount) internal {... */\n    tag_24:\n        /* \"contracts/modules/Storage.sol\":12132:12145  creatorWallet */\n      0x02\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/modules/Storage.sol\":12132:12159  creatorWallet != address(0) */\n      dup1\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      tag_548\n      jumpi\n      sload(0x01)\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap5\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup5\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n      0x44\n      dup1\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup4\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap4\n      swap1\n      swap3\n      and\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      swap2\n      0x00\n      swap2\n      tag_550\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x64\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      tag_12\n      jump\t// in\n    tag_550:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8507:8928  assembly (\"memory-safe\") {... */\n      mload\n      swap1\n      dup3\n      dup6\n      gas\n      call\n      iszero\n      tag_141\n      jumpi\n      mload(0x00)\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      tag_554\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      pop\n      dup1\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_556:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      tag_557\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      pop\n      0x80\n      swap1\n        /* \"contracts/modules/Storage.sol\":12426:12438  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":12414:12425  userIncomes */\n      0x0e\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":12446:12482  creatorIncome.totalIncome += _amount */\n      tag_559\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      dup3\n      sload\n        /* \"contracts/modules/Storage.sol\":12446:12482  creatorIncome.totalIncome += _amount */\n      tag_15\n      jump\t// in\n    tag_559:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      sstore\n        /* \"contracts/modules/Storage.sol\":12710:12808  IncomeDistribution(creatorWallet, creatorWallet, _amount, 0, IncomeType.Creator, block.timestamp ) */\n      0x0f67c60bc8519c61563ac616d368a6df646202c88d10744d736438bc4fbe2816\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"contracts/modules/Storage.sol\":12132:12145  creatorWallet */\n      0x02\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      and\n      swap3\n      dup4\n      swap3\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      add\n      mstore\n      0x00\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":12791:12806  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":12710:12808  IncomeDistribution(creatorWallet, creatorWallet, _amount, 0, IncomeType.Creator, block.timestamp ) */\n      log3\n        /* \"contracts/modules/Storage.sol\":12070:12812  function _sendToCreator(uint _amount) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_557:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mstore(0x00, shl(0xe0, 0x5274afe7))\n      0x04\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_554:\n        /* \"contracts/modules/Storage.sol\":12278:12282  usdt */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_556)\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n    tag_548:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x199959481859191c9cc81b9bdd081cd95d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/modules/SponsorMatrix.sol\":11042:12276  function _distributeSponsorIncome(uint _sponsorId, uint _fromId, uint _amount, uint _packageLevel) private {... */\n    tag_25:\n        /* \"contracts/modules/SponsorMatrix.sol\":11164:11179  _sponsorId == 0 */\n      dup1\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":11164:11209  _sponsorId == 0 || _sponsorId == defaultRefId */\n      dup1\n      iszero\n      tag_560\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":11042:12276  function _distributeSponsorIncome(uint _sponsorId, uint _fromId, uint _amount, uint _packageLevel) private {... */\n    tag_561:\n        /* \"contracts/modules/SponsorMatrix.sol\":11160:11282  if (_sponsorId == 0 || _sponsorId == defaultRefId) {... */\n      tag_562\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup1\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11325:11330  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256\n      swap1\n      dup1\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11696:11707  userIncomes */\n      0x0e\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":469:473  usdt */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256\n        /* \"contracts/modules/SponsorMatrix.sol\":11730:11766  sponsorIncome.totalIncome += _amount */\n      tag_564\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup7\n      dup3\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":11730:11766  sponsorIncome.totalIncome += _amount */\n      tag_15\n      jump\t// in\n    tag_564:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11777:11804  sponsorIncome.sponsorIncome */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":11777:11815  sponsorIncome.sponsorIncome += _amount */\n      tag_565\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup6\n      dup3\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":11777:11815  sponsorIncome.sponsorIncome += _amount */\n      tag_15\n      jump\t// in\n    tag_565:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      sstore\n      sload(0x01)\n      dup3\n      sload\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/modules/SponsorMatrix.sol\":11826:11865  usdt.transfer(sponsor.account, _amount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap2\n      dup3\n      and\n        /* \"contracts/modules/SponsorMatrix.sol\":11826:11865  usdt.transfer(sponsor.account, _amount) */\n      0x04\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n      0x24\n      dup2\n      add\n      dup8\n      swap1\n      mstore\n      swap2\n      0x20\n      swap2\n      dup4\n      swap2\n      0x44\n      swap2\n      dup4\n      swap2\n      0x00\n      swap2\n      and\n        /* \"contracts/modules/SponsorMatrix.sol\":11826:11865  usdt.transfer(sponsor.account, _amount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_141\n      jumpi\n      tag_569\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":11042:12276  function _distributeSponsorIncome(uint _sponsorId, uint _fromId, uint _amount, uint _packageLevel) private {... */\n    tag_570:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11904:11917  incomeHistory */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11904:12148  incomeHistory[_sponsorId].push(Income({... */\n      tag_571\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256\n      mload(0x40)\n      swap1\n      tag_572\n      dup3\n      tag_11\n      jump\t// in\n    tag_572:\n      dup5\n      dup3\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11935:12147  Income({... */\n      dup6\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":11935:12147  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":469:473  usdt */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":11935:12147  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":12074:12089  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":11935:12147  Income({... */\n      0x60\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":469:473  usdt */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":11935:12147  Income({... */\n      0x80\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11904:12148  incomeHistory[_sponsorId].push(Income({... */\n      tag_18\n      jump\t// in\n    tag_571:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      sload\n      and\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11325:11330  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      mload(0x00)\n      codecopy(0x00, data_51678340555b44277c2bba9423d75ebead61331b9cde789c13d0820d4f537e29, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11935:12147  Income({... */\n      0x60\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256\n      sload\n      and\n      swap4\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":469:473  usdt */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":469:473  usdt */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":12174:12259  IncomeDistributed(sponsor.account, users[_fromId].account, _amount, _packageLevel, 1) */\n      log3\n        /* \"contracts/modules/SponsorMatrix.sol\":11042:12276  function _distributeSponsorIncome(uint _sponsorId, uint _fromId, uint _amount, uint _packageLevel) private {... */\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":11826:11865  usdt.transfer(sponsor.account, _amount) */\n    tag_569:\n      tag_573\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":11826:11865  usdt.transfer(sponsor.account, _amount) */\n      returndatasize\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":11826:11865  usdt.transfer(sponsor.account, _amount) */\n      gt\n      tag_206\n      jumpi\n      tag_208\n      dup2\n      dup4\n      tag_12\n      jump\t// in\n    tag_573:\n      jump(tag_570)\n        /* \"contracts/modules/SponsorMatrix.sol\":11160:11282  if (_sponsorId == 0 || _sponsorId == defaultRefId) {... */\n    tag_562:\n        /* \"contracts/modules/SponsorMatrix.sol\":11241:11248  _amount */\n      pop\n      pop\n      tag_508\n      swap1\n      tag_24\n      jump\t// in\n        /* \"contracts/modules/SponsorMatrix.sol\":11164:11209  _sponsorId == 0 || _sponsorId == defaultRefId */\n    tag_560:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":11197:11209  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":11183:11209  _sponsorId == defaultRefId */\n      dup2\n      eq\n        /* \"contracts/modules/SponsorMatrix.sol\":11164:11209  _sponsorId == 0 || _sponsorId == defaultRefId */\n      jump(tag_561)\n        /* \"contracts/modules/SponsorMatrix.sol\":11042:12276  function _distributeSponsorIncome(uint _sponsorId, uint _fromId, uint _amount, uint _packageLevel) private {... */\n    tag_26:\n      swap1\n      swap2\n        /* \"contracts/modules/SponsorMatrix.sol\":11164:11179  _sponsorId == 0 */\n      dup2\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":11164:11209  _sponsorId == 0 || _sponsorId == defaultRefId */\n      dup1\n      iszero\n      tag_578\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":11042:12276  function _distributeSponsorIncome(uint _sponsorId, uint _fromId, uint _amount, uint _packageLevel) private {... */\n    tag_579:\n        /* \"contracts/modules/SponsorMatrix.sol\":11160:11282  if (_sponsorId == 0 || _sponsorId == defaultRefId) {... */\n      tag_580\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":11826:11865  usdt.transfer(sponsor.account, _amount) */\n      tag_582\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap2\n      dup2\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11325:11330  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256\n      dup3\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11696:11707  userIncomes */\n      0x0e\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11777:11804  sponsorIncome.sponsorIncome */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256\n        /* \"contracts/modules/SponsorMatrix.sol\":11730:11766  sponsorIncome.totalIncome += _amount */\n      tag_583\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup5\n      dup3\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":11730:11766  sponsorIncome.totalIncome += _amount */\n      tag_15\n      jump\t// in\n    tag_583:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11777:11804  sponsorIncome.sponsorIncome */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":11777:11815  sponsorIncome.sponsorIncome += _amount */\n      tag_584\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup4\n      dup3\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":11777:11815  sponsorIncome.sponsorIncome += _amount */\n      tag_15\n      jump\t// in\n    tag_584:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      sstore\n      sload(0x01)\n      dup2\n      sload\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/modules/SponsorMatrix.sol\":11826:11865  usdt.transfer(sponsor.account, _amount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap2\n      dup3\n      and\n        /* \"contracts/modules/SponsorMatrix.sol\":11826:11865  usdt.transfer(sponsor.account, _amount) */\n      0x04\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n      0x24\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      swap6\n      0x20\n      swap3\n      dup8\n      swap3\n      and\n      swap1\n      dup3\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      swap1\n      0x44\n      dup3\n      add\n      swap1\n      jump\n        /* \"contracts/modules/SponsorMatrix.sol\":11826:11865  usdt.transfer(sponsor.account, _amount) */\n    tag_582:\n      sub\n      swap3\n      gas\n      call\n      swap3\n      dup4\n      iszero\n      tag_141\n      jumpi\n      mload(0x00)\n      codecopy(0x00, data_51678340555b44277c2bba9423d75ebead61331b9cde789c13d0820d4f537e29, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      swap5\n        /* \"contracts/modules/SponsorMatrix.sol\":11935:12147  Income({... */\n      0x60\n        /* \"contracts/modules/SponsorMatrix.sol\":11826:11865  usdt.transfer(sponsor.account, _amount) */\n      swap5\n      tag_587\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":11042:12276  function _distributeSponsorIncome(uint _sponsorId, uint _fromId, uint _amount, uint _packageLevel) private {... */\n    tag_588:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11904:11917  incomeHistory */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11904:12148  incomeHistory[_sponsorId].push(Income({... */\n      tag_589\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256\n      mload(0x40)\n      swap1\n      tag_590\n      dup3\n      tag_11\n      jump\t// in\n    tag_590:\n      dup8\n      dup3\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11935:12147  Income({... */\n      dup5\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":11935:12147  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11935:12147  Income({... */\n      dup9\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":11935:12147  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":12074:12089  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":11935:12147  Income({... */\n      dup7\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11777:11804  sponsorIncome.sponsorIncome */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":11935:12147  Income({... */\n      0x80\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11904:12148  incomeHistory[_sponsorId].push(Income({... */\n      tag_18\n      jump\t// in\n    tag_589:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      sload\n      and\n      swap4\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11325:11330  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":11178:11179  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256\n      sload\n      and\n      swap5\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":11777:11804  sponsorIncome.sponsorIncome */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":12174:12259  IncomeDistributed(sponsor.account, users[_fromId].account, _amount, _packageLevel, 1) */\n      log3\n        /* \"contracts/modules/SponsorMatrix.sol\":11042:12276  function _distributeSponsorIncome(uint _sponsorId, uint _fromId, uint _amount, uint _packageLevel) private {... */\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":11826:11865  usdt.transfer(sponsor.account, _amount) */\n    tag_587:\n      tag_591\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":11826:11865  usdt.transfer(sponsor.account, _amount) */\n      returndatasize\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":11826:11865  usdt.transfer(sponsor.account, _amount) */\n      gt\n      tag_206\n      jumpi\n      tag_208\n      dup2\n      dup4\n      tag_12\n      jump\t// in\n    tag_591:\n      jump(tag_588)\n        /* \"contracts/modules/SponsorMatrix.sol\":11160:11282  if (_sponsorId == 0 || _sponsorId == defaultRefId) {... */\n    tag_580:\n        /* \"contracts/modules/SponsorMatrix.sol\":11241:11248  _amount */\n      swap2\n      pop\n      pop\n      tag_508\n      swap2\n      pop\n      tag_24\n      jump\t// in\n        /* \"contracts/modules/SponsorMatrix.sol\":11164:11209  _sponsorId == 0 || _sponsorId == defaultRefId */\n    tag_578:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":11197:11209  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":11183:11209  _sponsorId == defaultRefId */\n      dup3\n      eq\n        /* \"contracts/modules/SponsorMatrix.sol\":11164:11209  _sponsorId == 0 || _sponsorId == defaultRefId */\n      jump(tag_579)\n        /* \"contracts/modules/Storage.sol\":629:631  15 */\n    tag_27:\n      not(0x00)\n      dup2\n      eq\n      tag_171\n      jumpi\n      0x01\n      add\n      swap1\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":12290:14371  function _distributeMatrixIncome(uint _uplineId,uint _fromId,uint _amount, uint _packageLevel) private {... */\n    tag_28:\n      swap4\n      swap2\n      swap4\n      swap3\n      swap1\n      swap3\n        /* \"contracts/modules/SponsorMatrix.sol\":12589:12601  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":12576:12601  _uplineId == defaultRefId */\n      dup2\n      eq\n        /* \"contracts/modules/SponsorMatrix.sol\":12576:12619  _uplineId == defaultRefId || _uplineId == 0 */\n      dup1\n      iszero\n      tag_598\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":12290:14371  function _distributeMatrixIncome(uint _uplineId,uint _fromId,uint _amount, uint _packageLevel) private {... */\n    tag_599:\n        /* \"contracts/modules/SponsorMatrix.sol\":12573:12701  if(_uplineId == defaultRefId || _uplineId == 0)... */\n      tag_600\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":12768:12769  1 */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":12771:12788  i < _packageLevel */\n    tag_602:\n      dup3\n      dup2\n      lt\n      tag_603\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":13057:13082  uint currentId = targetId */\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":13093:13107  uint layer = 0 */\n      swap3\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":13118:14256  while (currentId != 0 && currentId != defaultRefId && layer < maxLayers) {... */\n      swap4\n    tag_605:\n        /* \"contracts/modules/SponsorMatrix.sol\":13125:13139  currentId != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":13125:13168  currentId != 0 && currentId != defaultRefId */\n      dup1\n      tag_606\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":13118:14256  while (currentId != 0 && currentId != defaultRefId && layer < maxLayers) {... */\n    tag_607:\n        /* \"contracts/modules/SponsorMatrix.sol\":13125:13189  currentId != 0 && currentId != defaultRefId && layer < maxLayers */\n      dup1\n      tag_608\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":13118:14256  while (currentId != 0 && currentId != defaultRefId && layer < maxLayers) {... */\n    tag_609:\n        /* \"contracts/modules/SponsorMatrix.sol\":13125:13189  currentId != 0 && currentId != defaultRefId && layer < maxLayers */\n      iszero\n      tag_610\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":12821:12826  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":13338:13346  up.level */\n      swap1\n      dup4\n      0x06\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":13338:13363  up.level >= _packageLevel */\n      lt\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":13334:14135  if (up.level >= _packageLevel) // up.directTeam >= 2 && ... */\n      tag_612\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":14211:14222  up.uplineId */\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":12589:12601  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":14237:14244  layer++ */\n      tag_614\n        /* \"contracts/modules/SponsorMatrix.sol\":14211:14222  up.uplineId */\n      swap2\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":14237:14244  layer++ */\n      swap5\n      tag_27\n      jump\t// in\n    tag_614:\n        /* \"contracts/modules/SponsorMatrix.sol\":13118:14256  while (currentId != 0 && currentId != defaultRefId && layer < maxLayers) {... */\n      swap4\n      jump(tag_605)\n        /* \"contracts/modules/SponsorMatrix.sol\":13334:14135  if (up.level >= _packageLevel) // up.directTeam >= 2 && ... */\n    tag_612:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload(0x01)\n      dup3\n      sload\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/modules/SponsorMatrix.sol\":13484:13518  usdt.transfer(up.account, _amount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap2\n      dup3\n      and\n        /* \"contracts/modules/SponsorMatrix.sol\":13484:13518  usdt.transfer(up.account, _amount) */\n      0x04\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n      0x24\n      dup2\n      add\n      dup11\n      swap1\n      mstore\n      swap7\n      swap9\n      swap6\n      swap8\n      pop\n      swap4\n      swap6\n      swap5\n      swap2\n      swap4\n      swap2\n      swap3\n      swap2\n      0x20\n      swap2\n      dup7\n      swap2\n      0x44\n      swap2\n      dup4\n      swap2\n      0x00\n      swap2\n      and\n        /* \"contracts/modules/SponsorMatrix.sol\":13484:13518  usdt.transfer(up.account, _amount) */\n      gas\n      call\n      swap3\n      dup4\n      iszero\n      tag_141\n      jumpi\n      mload(0x00)\n      codecopy(0x00, data_51678340555b44277c2bba9423d75ebead61331b9cde789c13d0820d4f537e29, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n      swap5\n        /* \"contracts/modules/SponsorMatrix.sol\":13728:13987  Income({... */\n      0x60\n        /* \"contracts/modules/SponsorMatrix.sol\":13484:13518  usdt.transfer(up.account, _amount) */\n      swap5\n      tag_618\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":13334:14135  if (up.level >= _packageLevel) // up.directTeam >= 2 && ... */\n    tag_619:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      pop\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":13564:13575  userIncomes */\n      0x0e\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":13650:13666  inc.matrixIncome */\n      0x02\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":13605:13631  inc.totalIncome += _amount */\n      tag_620\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup6\n      dup3\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":13605:13631  inc.totalIncome += _amount */\n      tag_15\n      jump\t// in\n    tag_620:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":13650:13666  inc.matrixIncome */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":13650:13677  inc.matrixIncome += _amount */\n      tag_621\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup5\n      dup3\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":13650:13677  inc.matrixIncome += _amount */\n      tag_15\n      jump\t// in\n    tag_621:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      sstore\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":13698:13711  incomeHistory */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":13698:13988  incomeHistory[currentId].push(Income({... */\n      tag_622\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap1\n      tag_623\n      dup3\n      tag_11\n      jump\t// in\n    tag_623:\n      dup8\n      dup3\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":13728:13987  Income({... */\n      dup5\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":13728:13987  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":13728:13987  Income({... */\n      dup9\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":13728:13987  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":13899:13914  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":13728:13987  Income({... */\n      dup7\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":13650:13666  inc.matrixIncome */\n      0x02\n        /* \"contracts/modules/SponsorMatrix.sol\":13728:13987  Income({... */\n      0x80\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":13698:13988  incomeHistory[currentId].push(Income({... */\n      tag_18\n      jump\t// in\n    tag_622:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      sload\n      and\n      swap4\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":12821:12826  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      sload(keccak256(0x00, 0x40))\n      and\n      swap5\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n      0x20\n        /* \"contracts/modules/Storage.sol\":629:631  15 */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":13650:13666  inc.matrixIncome */\n      0x02\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n        /* \"contracts/modules/Storage.sol\":629:631  15 */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":14014:14094  IncomeDistributed(up.account, users[_fromId].account, _amount, _packageLevel, 2) */\n      log3\n        /* \"contracts/modules/SponsorMatrix.sol\":14113:14120  return; */\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":13484:13518  usdt.transfer(up.account, _amount) */\n    tag_618:\n      tag_624\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":13484:13518  usdt.transfer(up.account, _amount) */\n      returndatasize\n      dup2\n      gt\n      tag_206\n      jumpi\n      tag_208\n      dup2\n      dup4\n      tag_12\n      jump\t// in\n    tag_624:\n      jump(tag_619)\n        /* \"contracts/modules/SponsorMatrix.sol\":13125:13189  currentId != 0 && currentId != defaultRefId && layer < maxLayers */\n    tag_610:\n      pop\n      pop\n      pop\n      swap2\n        /* \"contracts/modules/SponsorMatrix.sol\":14355:14362  _amount */\n      tag_508\n        /* \"contracts/modules/SponsorMatrix.sol\":13125:13189  currentId != 0 && currentId != defaultRefId && layer < maxLayers */\n      swap2\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":14355:14362  _amount */\n      tag_24\n      jump\t// in\n        /* \"contracts/modules/SponsorMatrix.sol\":13125:13189  currentId != 0 && currentId != defaultRefId && layer < maxLayers */\n    tag_608:\n        /* \"contracts/modules/SponsorMatrix.sol\":13172:13189  layer < maxLayers */\n      pop\n        /* \"contracts/modules/Storage.sol\":1078:1080  15 */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":13172:13189  layer < maxLayers */\n      dup6\n      lt\n        /* \"contracts/modules/SponsorMatrix.sol\":13125:13189  currentId != 0 && currentId != defaultRefId && layer < maxLayers */\n      jump(tag_609)\n        /* \"contracts/modules/SponsorMatrix.sol\":13125:13168  currentId != 0 && currentId != defaultRefId */\n    tag_606:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":12589:12601  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":13143:13168  currentId != defaultRefId */\n      dup2\n      eq\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":13125:13168  currentId != 0 && currentId != defaultRefId */\n      jump(tag_607)\n        /* \"contracts/modules/SponsorMatrix.sol\":12790:12793  ++i */\n    tag_603:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":12821:12826  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":12589:12601  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/SponsorMatrix.sol\":12821:12845  users[targetId].uplineId */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":12864:12877  targetId == 0 */\n      swap1\n      dup2\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":12864:12905  targetId == 0 || targetId == defaultRefId */\n      dup1\n      iszero\n      tag_629\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":12790:12793  ++i */\n    tag_630:\n        /* \"contracts/modules/SponsorMatrix.sol\":12860:13036  if (targetId == 0 || targetId == defaultRefId) {... */\n      tag_610\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":12768:12769  1 */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":12759:12769  uint i = 1 */\n      jump(tag_602)\n        /* \"contracts/modules/SponsorMatrix.sol\":12864:12905  targetId == 0 || targetId == defaultRefId */\n    tag_629:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":12589:12601  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":12881:12905  targetId == defaultRefId */\n      dup3\n      eq\n        /* \"contracts/modules/SponsorMatrix.sol\":12864:12905  targetId == 0 || targetId == defaultRefId */\n      jump(tag_630)\n        /* \"contracts/modules/SponsorMatrix.sol\":12573:12701  if(_uplineId == defaultRefId || _uplineId == 0)... */\n    tag_600:\n        /* \"contracts/modules/SponsorMatrix.sol\":12660:12667  _amount */\n      pop\n      pop\n      swap2\n      tag_508\n      swap2\n      pop\n      tag_24\n      jump\t// in\n        /* \"contracts/modules/SponsorMatrix.sol\":12576:12619  _uplineId == defaultRefId || _uplineId == 0 */\n    tag_598:\n        /* \"contracts/modules/SponsorMatrix.sol\":12605:12619  _uplineId == 0 */\n      pop\n      dup1\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":12576:12619  _uplineId == defaultRefId || _uplineId == 0 */\n      jump(tag_599)\n        /* \"contracts/modules/SponsorMatrix.sol\":16478:18934  function _distributeLevelBoosterIncome(uint _startId, uint _fromId, uint _amount,uint _packageLevel,uint _maxLevel) private {... */\n    tag_29:\n      swap3\n      swap5\n      swap4\n      swap5\n      swap2\n      swap1\n      swap2\n        /* \"contracts/modules/SponsorMatrix.sol\":16617:16630  _startId == 0 */\n      dup4\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":16617:16658  _startId == 0 || _startId == defaultRefId */\n      dup1\n      iszero\n      tag_635\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":16478:18934  function _distributeLevelBoosterIncome(uint _startId, uint _fromId, uint _amount,uint _packageLevel,uint _maxLevel) private {... */\n    tag_636:\n        /* \"contracts/modules/SponsorMatrix.sol\":16617:16676  _startId == 0 || _startId == defaultRefId || _maxLevel == 0 */\n      dup1\n      iszero\n      tag_637\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":16478:18934  function _distributeLevelBoosterIncome(uint _startId, uint _fromId, uint _amount,uint _packageLevel,uint _maxLevel) private {... */\n    tag_638:\n        /* \"contracts/modules/SponsorMatrix.sol\":16613:16749  if (_startId == 0 || _startId == defaultRefId || _maxLevel == 0) {... */\n      tag_639\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":16832:16851  _amount / _maxLevel */\n      swap5\n      swap2\n      tag_641\n      dup4\n      dup4\n      tag_7\n      jump\t// in\n    tag_641:\n        /* \"contracts/modules/SponsorMatrix.sol\":16890:16916  amountPerLevel * _maxLevel */\n      swap6\n        /* \"contracts/modules/SponsorMatrix.sol\":16879:16917  _amount - (amountPerLevel * _maxLevel) */\n      tag_642\n        /* \"contracts/modules/SponsorMatrix.sol\":16890:16916  amountPerLevel * _maxLevel */\n      tag_643\n      dup6\n      dup10\n      tag_17\n      jump\t// in\n    tag_643:\n        /* \"contracts/modules/SponsorMatrix.sol\":16879:16917  _amount - (amountPerLevel * _maxLevel) */\n      dup5\n      tag_6\n      jump\t// in\n    tag_642:\n        /* \"contracts/modules/SponsorMatrix.sol\":17000:17025  uint currentId = _startId */\n      swap5\n        /* \"contracts/modules/SponsorMatrix.sol\":16629:16630  0 */\n      0x00\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n        /* \"contracts/modules/SponsorMatrix.sol\":17126:17127  1 */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":17181:17187  i < 30 */\n    tag_644:\n        /* \"contracts/modules/SponsorMatrix.sol\":17185:17187  30 */\n      0x1e\n        /* \"contracts/modules/SponsorMatrix.sol\":17181:17187  i < 30 */\n      dup6\n      lt\n      tag_645\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":17164:18539  for (uint i = 0; i < 30; i++) // _maxLevel... */\n    tag_646:\n        /* \"contracts/modules/SponsorMatrix.sol\":18656:18682  _amount - totalDistributed */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      tag_647\n      swap3\n      swap4\n      swap5\n      pop\n      tag_6\n      jump\t// in\n    tag_647:\n        /* \"contracts/modules/SponsorMatrix.sol\":18697:18719  remainingAfterLoop > 0 */\n      dup1\n        /* \"contracts/modules/SponsorMatrix.sol\":18693:18782  if (remainingAfterLoop > 0) {... */\n      tag_648\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":17164:18539  for (uint i = 0; i < 30; i++) // _maxLevel... */\n    tag_649:\n        /* \"contracts/modules/SponsorMatrix.sol\":18851:18864  remainder > 0 */\n      pop\n      dup1\n        /* \"contracts/modules/SponsorMatrix.sol\":18847:18918  if (remainder > 0) {... */\n      tag_545\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":16478:18934  function _distributeLevelBoosterIncome(uint _startId, uint _fromId, uint _amount,uint _packageLevel,uint _maxLevel) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":18693:18782  if (remainingAfterLoop > 0) {... */\n    tag_648:\n        /* \"contracts/modules/SponsorMatrix.sol\":18751:18769  remainingAfterLoop */\n      tag_653\n      swap1\n      tag_24\n      jump\t// in\n    tag_653:\n        /* \"contracts/modules/SponsorMatrix.sol\":18693:18782  if (remainingAfterLoop > 0) {... */\n      0x00\n      jump(tag_649)\n        /* \"contracts/modules/SponsorMatrix.sol\":17189:17192  i++ */\n    tag_645:\n        /* \"contracts/modules/SponsorMatrix.sol\":17278:17292  currentId == 0 */\n      dup2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      swap9\n      swap2\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":17278:17321  currentId == 0 || currentId == defaultRefId */\n      dup1\n      iszero\n      tag_654\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":17189:17192  i++ */\n    tag_655:\n        /* \"contracts/modules/SponsorMatrix.sol\":17274:17550  if (currentId == 0 || currentId == defaultRefId) {... */\n      tag_656\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n        /* \"contracts/modules/SponsorMatrix.sol\":16629:16630  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":17584:17589  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":16629:16630  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256\n        /* \"contracts/modules/SponsorMatrix.sol\":17621:17629  up.level */\n      swap3\n      dup13\n      dup9\n      0x06\n      dup7\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":17621:17646  up.level >= _packageLevel */\n      lt\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":17617:18247  if (up.level >= _packageLevel) {... */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":17621:17646  up.level >= _packageLevel */\n      eq\n      tag_658\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":17755:17789  amountPerLevel * accumulatedShares */\n      dup3\n      tag_660\n      swap2\n      tag_17\n      jump\t// in\n    tag_660:\n        /* \"contracts/modules/SponsorMatrix.sol\":16629:16630  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":17584:17589  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sload(0x01)\n      swap2\n      mload\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/modules/SponsorMatrix.sol\":19152:19177  usdt.transfer(to, amount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap2\n      dup3\n      and\n        /* \"contracts/modules/SponsorMatrix.sol\":19152:19177  usdt.transfer(to, amount) */\n      0x04\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      dup8\n      swap1\n      mstore\n      swap1\n      swap9\n      swap5\n      swap1\n      swap4\n      swap3\n      dup10\n      swap3\n      0x44\n      swap3\n      dup5\n      swap3\n        /* \"contracts/modules/SponsorMatrix.sol\":16629:16630  0 */\n      swap1\n      swap2\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      and\n        /* \"contracts/modules/SponsorMatrix.sol\":19152:19177  usdt.transfer(to, amount) */\n      gas\n      call\n      swap4\n      dup5\n      iszero\n      tag_141\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":17935:17965  PaidCount += accumulatedShares */\n      tag_664\n        /* \"contracts/modules/SponsorMatrix.sol\":19152:19177  usdt.transfer(to, amount) */\n      swap7\n        /* \"contracts/modules/SponsorMatrix.sol\":17890:17916  totalDistributed += payout */\n      tag_665\n        /* \"contracts/modules/SponsorMatrix.sol\":19152:19177  usdt.transfer(to, amount) */\n      swap6\n      tag_666\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":17617:18247  if (up.level >= _packageLevel) {... */\n    tag_667:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      pop\n      dup1\n        /* \"contracts/modules/SponsorMatrix.sol\":16629:16630  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":19215:19226  userIncomes */\n      0x0e\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":19285:19307  inc.levelBoosterIncome */\n      0x03\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":16629:16630  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256\n        /* \"contracts/modules/SponsorMatrix.sol\":19249:19274  inc.totalIncome += amount */\n      tag_668\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup7\n      dup3\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":19249:19274  inc.totalIncome += amount */\n      tag_15\n      jump\t// in\n    tag_668:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":19285:19307  inc.levelBoosterIncome */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":19285:19317  inc.levelBoosterIncome += amount */\n      tag_669\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup6\n      dup3\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":19285:19317  inc.levelBoosterIncome += amount */\n      tag_15\n      jump\t// in\n    tag_669:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap1\n      sstore\n        /* \"contracts/modules/SponsorMatrix.sol\":16629:16630  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":19330:19343  incomeHistory */\n      0x0f\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":19330:19577  incomeHistory[receiverId].push(Income({... */\n      tag_670\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":16629:16630  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256\n      mload(0x40)\n      swap1\n      tag_671\n      dup3\n      tag_11\n      jump\t// in\n    tag_671:\n      dup11\n      dup3\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":19361:19576  Income({... */\n      dup6\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":19361:19576  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":19361:19576  Income({... */\n      dup14\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":19361:19576  Income({... */\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":19497:19512  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":19361:19576  Income({... */\n      0x60\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":19152:19177  usdt.transfer(to, amount) */\n      0x04\n        /* \"contracts/modules/SponsorMatrix.sol\":19361:19576  Income({... */\n      0x80\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":19330:19577  incomeHistory[receiverId].push(Income({... */\n      tag_18\n      jump\t// in\n    tag_670:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup8\n        /* \"contracts/modules/SponsorMatrix.sol\":16629:16630  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":17584:17589  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x40\n        /* \"contracts/modules/SponsorMatrix.sol\":16629:16630  0 */\n      0x00\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256\n      sload\n      and\n      swap1\n      mload(0x00)\n      codecopy(0x00, data_51678340555b44277c2bba9423d75ebead61331b9cde789c13d0820d4f537e29, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":19361:19576  Income({... */\n      0x60\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup14\n      mload(0x40)\n      swap1\n      dup8\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":19152:19177  usdt.transfer(to, amount) */\n      0x04\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/SponsorMatrix.sol\":19595:19664  IncomeDistributed(to, users[fromId].account, amount, packageLevel, 4) */\n      log3\n        /* \"contracts/modules/SponsorMatrix.sol\":17890:17916  totalDistributed += payout */\n      tag_15\n      jump\t// in\n    tag_665:\n        /* \"contracts/modules/SponsorMatrix.sol\":17935:17965  PaidCount += accumulatedShares */\n      swap9\n      tag_15\n      jump\t// in\n    tag_664:\n        /* \"contracts/modules/SponsorMatrix.sol\":17984:18005  accumulatedShares = 1 */\n      swap4\n        /* \"contracts/modules/SponsorMatrix.sol\":17126:17127  1 */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":17617:18247  if (up.level >= _packageLevel) {... */\n      swap2\n    tag_672:\n        /* \"contracts/modules/SponsorMatrix.sol\":18327:18349  PaidCount >= _maxLevel */\n      dup5\n      dup7\n      lt\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":18323:18356  if (PaidCount >= _maxLevel) break */\n      tag_673\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":18516:18527  up.uplineId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":17126:17127  1 */\n      0x01\n        /* \"contracts/modules/SponsorMatrix.sol\":18516:18527  up.uplineId */\n      swap2\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":17189:17192  i++ */\n      swap2\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":17169:17179  uint i = 0 */\n      swap4\n      swap3\n      swap2\n      swap6\n      swap5\n      swap6\n      jump(tag_644)\n        /* \"contracts/modules/SponsorMatrix.sol\":18323:18356  if (PaidCount >= _maxLevel) break */\n    tag_673:\n        /* \"contracts/modules/SponsorMatrix.sol\":18351:18356  break */\n      jump(tag_646)\n        /* \"contracts/modules/SponsorMatrix.sol\":19152:19177  usdt.transfer(to, amount) */\n    tag_666:\n      tag_675\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n        /* \"contracts/modules/SponsorMatrix.sol\":19152:19177  usdt.transfer(to, amount) */\n      returndatasize\n      dup2\n      gt\n      tag_206\n      jumpi\n      tag_208\n      dup2\n      dup4\n      tag_12\n      jump\t// in\n    tag_675:\n      jump(tag_667)\n        /* \"contracts/modules/SponsorMatrix.sol\":17617:18247  if (up.level >= _packageLevel) {... */\n    tag_658:\n        /* \"contracts/modules/SponsorMatrix.sol\":18124:18151  accumulatedShares<_maxLevel */\n      pop\n      pop\n      swap2\n      dup5\n      dup4\n      swap10\n      swap7\n      swap3\n      swap10\n      lt\n        /* \"contracts/modules/SponsorMatrix.sol\":18121:18215  if(accumulatedShares<_maxLevel){... */\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":17617:18247  if (up.level >= _packageLevel) {... */\n      tag_672\n        /* \"contracts/modules/SponsorMatrix.sol\":18121:18215  if(accumulatedShares<_maxLevel){... */\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":18176:18195  accumulatedShares++ */\n      swap2\n      tag_681\n      swap1\n      tag_27\n      jump\t// in\n    tag_681:\n        /* \"contracts/modules/SponsorMatrix.sol\":18121:18215  if(accumulatedShares<_maxLevel){... */\n      swap2\n        /* \"contracts/modules/SponsorMatrix.sol\":17617:18247  if (up.level >= _packageLevel) {... */\n      jump(tag_672)\n        /* \"contracts/modules/SponsorMatrix.sol\":17274:17550  if (currentId == 0 || currentId == defaultRefId) {... */\n    tag_656:\n        /* \"contracts/modules/SponsorMatrix.sol\":17420:17446  _amount - totalDistributed */\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      tag_682\n      swap3\n      swap4\n      pop\n      tag_6\n      jump\t// in\n    tag_682:\n        /* \"contracts/modules/SponsorMatrix.sol\":17469:17482  remaining > 0 */\n      dup1\n        /* \"contracts/modules/SponsorMatrix.sol\":17465:17509  if (remaining > 0) _sendToCreator(remaining) */\n      tag_545\n      jumpi\n        /* \"contracts/modules/SponsorMatrix.sol\":17528:17535  return; */\n      pop\n      jump\t// out\n        /* \"contracts/modules/SponsorMatrix.sol\":17278:17321  currentId == 0 || currentId == defaultRefId */\n    tag_654:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":18516:18527  up.uplineId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":17296:17321  currentId == defaultRefId */\n      dup4\n      eq\n        /* \"contracts/modules/SponsorMatrix.sol\":17278:17321  currentId == 0 || currentId == defaultRefId */\n      jump(tag_655)\n        /* \"contracts/modules/SponsorMatrix.sol\":16613:16749  if (_startId == 0 || _startId == defaultRefId || _maxLevel == 0) {... */\n    tag_639:\n        /* \"contracts/modules/SponsorMatrix.sol\":16708:16715  _amount */\n      pop\n      swap2\n      pop\n      pop\n      tag_508\n      swap2\n      swap3\n      pop\n      tag_24\n      jump\t// in\n        /* \"contracts/modules/SponsorMatrix.sol\":16617:16676  _startId == 0 || _startId == defaultRefId || _maxLevel == 0 */\n    tag_637:\n        /* \"contracts/modules/SponsorMatrix.sol\":16662:16676  _maxLevel == 0 */\n      pop\n      dup6\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":16617:16676  _startId == 0 || _startId == defaultRefId || _maxLevel == 0 */\n      jump(tag_638)\n        /* \"contracts/modules/SponsorMatrix.sol\":16617:16658  _startId == 0 || _startId == defaultRefId */\n    tag_635:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      pop\n        /* \"contracts/modules/SponsorMatrix.sol\":16646:16658  defaultRefId */\n      0x05\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/SponsorMatrix.sol\":16634:16658  _startId == defaultRefId */\n      dup5\n      eq\n        /* \"contracts/modules/SponsorMatrix.sol\":16617:16658  _startId == 0 || _startId == defaultRefId */\n      jump(tag_636)\n        /* \"contracts/modules/Storage.sol\":16745:16970  function _tryMonthlyRoyaltyQualify(uint _userId, uint _roundId)internal {... */\n    tag_30:\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":16837:16858  monthlyRoyaltyUserdtl */\n      0x42\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      0xff\n        /* \"contracts/modules/Storage.sol\":16837:16879  monthlyRoyaltyUserdtl[_userId].isQualified */\n      0x04\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":16837:16879  monthlyRoyaltyUserdtl[_userId].isQualified */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      and\n        /* \"contracts/modules/Storage.sol\":16836:16879  !monthlyRoyaltyUserdtl[_userId].isQualified */\n      iszero\n        /* \"contracts/modules/Storage.sol\":16832:16963  if (!monthlyRoyaltyUserdtl[_userId].isQualified) {... */\n      tag_687\n      jumpi\n        /* \"contracts/modules/Storage.sol\":16745:16970  function _tryMonthlyRoyaltyQualify(uint _userId, uint _roundId)internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/modules/Storage.sol\":16832:16963  if (!monthlyRoyaltyUserdtl[_userId].isQualified) {... */\n    tag_687:\n        /* \"contracts/modules/Storage.sol\":17075:17132  require(_roundId == currentMonthlyRound, \"Invalid round\") */\n      tag_689\n        /* \"contracts/modules/Storage.sol\":17095:17114  currentMonthlyRound */\n      0x3d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/Storage.sol\":17083:17114  _roundId == currentMonthlyRound */\n      dup3\n      eq\n        /* \"contracts/modules/Storage.sol\":17075:17132  require(_roundId == currentMonthlyRound, \"Invalid round\") */\n      tag_32\n      jump\t// in\n    tag_689:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup1\n      0x00\n      mstore\n      mstore(0x20, 0x40)\n        /* \"contracts/modules/Storage.sol\":17143:17203  require(!monthlyRoyaltydtl[_roundId].closed, \"Round closed\") */\n      tag_690\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0xff\n        /* \"contracts/modules/Storage.sol\":17152:17186  monthlyRoyaltydtl[_roundId].closed */\n      0x08\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":17152:17186  monthlyRoyaltydtl[_roundId].closed */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      and\n        /* \"contracts/modules/Storage.sol\":17151:17186  !monthlyRoyaltydtl[_roundId].closed */\n      iszero\n        /* \"contracts/modules/Storage.sol\":17143:17203  require(!monthlyRoyaltydtl[_roundId].closed, \"Round closed\") */\n      tag_33\n      jump\t// in\n    tag_690:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":17243:17248  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":17286:17302  user.level10Time */\n      swap2\n      0x10\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/Storage.sol\":17286:17306  user.level10Time > 0 */\n      dup1\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      tag_691\n      jumpi\n        /* \"contracts/modules/Storage.sol\":17377:17398  user.registrationTime */\n      0x0f\n      dup5\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      swap4\n        /* \"contracts/modules/Storage.sol\":791:799  100 days */\n      0x83d600\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup6\n      add\n      dup1\n      swap6\n      gt\n      tag_171\n      jumpi\n        /* \"contracts/modules/Storage.sol\":18117:18168  MonthlyRoyaltyQualified(_roundId, _userId, nowTime) */\n      0x42ee5ef523a95c6fb3ffdd2e9b34955b83ea8c2b11ff268c87ae6ea25556eaac\n        /* \"contracts/modules/Storage.sol\":17357:17421  user.level10Time <= user.registrationTime + MONTHLY_ROYALTY_TIME */\n      swap5\n        /* \"contracts/modules/Storage.sol\":17592:17669  require(withinTime && qualifiedByLevel && qualifiedByDirects, \"Not eligible\") */\n      tag_695\n        /* \"contracts/modules/Storage.sol\":17357:17421  user.level10Time <= user.registrationTime + MONTHLY_ROYALTY_TIME */\n      swap3\n      gt\n      iszero\n        /* \"contracts/modules/Storage.sol\":17456:17466  user.level */\n      swap1\n        /* \"contracts/modules/Storage.sol\":1136:1137  5 */\n      0x05\n        /* \"contracts/modules/Storage.sol\":17528:17555  user.monthlyUserDirectCount */\n      0x12\n        /* \"contracts/modules/Storage.sol\":1025:1027  10 */\n      0x0a\n        /* \"contracts/modules/Storage.sol\":17456:17466  user.level */\n      0x06\n      dup5\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/Storage.sol\":17456:17491  user.level >= MONTHLY_ROYALTY_LEVEL */\n      lt\n      iszero\n        /* \"contracts/modules/Storage.sol\":17528:17555  user.monthlyUserDirectCount */\n      swap3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/Storage.sol\":17528:17581  user.monthlyUserDirectCount >= MONTHLY_ROYALTY_DIRECT */\n      lt\n      iszero\n        /* \"contracts/modules/Storage.sol\":17600:17630  withinTime && qualifiedByLevel */\n      swap1\n      dup3\n      tag_696\n      jumpi\n        /* \"contracts/modules/Storage.sol\":16832:16963  if (!monthlyRoyaltyUserdtl[_userId].isQualified) {... */\n    tag_697:\n        /* \"contracts/modules/Storage.sol\":17600:17652  withinTime && qualifiedByLevel && qualifiedByDirects */\n      pop\n      dup2\n      tag_698\n      jumpi\n        /* \"contracts/modules/Storage.sol\":16832:16963  if (!monthlyRoyaltyUserdtl[_userId].isQualified) {... */\n    tag_699:\n        /* \"contracts/modules/Storage.sol\":17592:17669  require(withinTime && qualifiedByLevel && qualifiedByDirects, \"Not eligible\") */\n      pop\n      tag_34\n      jump\t// in\n    tag_695:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":16837:16858  monthlyRoyaltyUserdtl */\n      0x42\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":18016:18044  userRoyalty.qualifiedRoundId */\n      0x01\n        /* \"contracts/modules/Storage.sol\":16837:16879  monthlyRoyaltyUserdtl[_userId].isQualified */\n      0x04\n        /* \"contracts/modules/Storage.sol\":17839:17862  userRoyalty.isQualified */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap2\n      dup5\n      dup3\n      dup5\n      sload\n      swap3\n        /* \"contracts/modules/Storage.sol\":17830:17884  require(!userRoyalty.isQualified, \"already Qualified\") */\n      tag_700\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0xff\n      dup6\n      and\n        /* \"contracts/modules/Storage.sol\":17838:17862  !userRoyalty.isQualified */\n      iszero\n        /* \"contracts/modules/Storage.sol\":17830:17884  require(!userRoyalty.isQualified, \"already Qualified\") */\n      tag_35\n      jump\t// in\n    tag_700:\n        /* \"contracts/modules/Storage.sol\":17912:17927  block.timestamp */\n      timestamp\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      sstore\n        /* \"contracts/modules/Storage.sol\":18016:18044  userRoyalty.qualifiedRoundId */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sstore\n      not(0xff)\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/modules/Storage.sol\":18117:18168  MonthlyRoyaltyQualified(_roundId, _userId, nowTime) */\n      tag_701\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":17912:17927  block.timestamp */\n      swap3\n      dup4\n      swap3\n      timestamp\n        /* \"contracts/modules/Storage.sol\":18117:18168  MonthlyRoyaltyQualified(_roundId, _userId, nowTime) */\n      swap2\n      dup5\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x40\n      swap2\n      swap5\n      swap4\n      swap3\n      0x60\n      dup3\n      add\n      swap6\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"contracts/modules/Storage.sol\":18117:18168  MonthlyRoyaltyQualified(_roundId, _userId, nowTime) */\n    tag_701:\n      sub\n      swap1\n      log1\n        /* \"contracts/modules/Storage.sol\":16745:16970  function _tryMonthlyRoyaltyQualify(uint _userId, uint _roundId)internal {... */\n      jump\t// out\n        /* \"contracts/modules/Storage.sol\":17600:17652  withinTime && qualifiedByLevel && qualifiedByDirects */\n    tag_698:\n      swap1\n      pop\n      0x00\n      jump(tag_699)\n        /* \"contracts/modules/Storage.sol\":17600:17630  withinTime && qualifiedByLevel */\n    tag_696:\n      swap2\n      pop\n      0x00\n      jump(tag_697)\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n    tag_691:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n        /* \"contracts/modules/Storage.sol\":16837:16879  monthlyRoyaltyUserdtl[_userId].isQualified */\n      0x04\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7c, 0x055736572206e6f74206c6576656c20313)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/modules/Storage.sol\":18192:18405  function _tryTopRoyaltyQualify(uint _userId, uint _roundId)internal {... */\n    tag_31:\n      swap1\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":18280:18297  topRoyaltyUserdtl */\n      0x49\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      0xff\n        /* \"contracts/modules/Storage.sol\":18280:18318  topRoyaltyUserdtl[_userId].isQualified */\n      0x04\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":18280:18318  topRoyaltyUserdtl[_userId].isQualified */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      and\n        /* \"contracts/modules/Storage.sol\":18279:18318  !topRoyaltyUserdtl[_userId].isQualified */\n      iszero\n        /* \"contracts/modules/Storage.sol\":18275:18398  if (!topRoyaltyUserdtl[_userId].isQualified) {... */\n      tag_702\n      jumpi\n        /* \"contracts/modules/Storage.sol\":18192:18405  function _tryTopRoyaltyQualify(uint _userId, uint _roundId)internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/modules/Storage.sol\":18275:18398  if (!topRoyaltyUserdtl[_userId].isQualified) {... */\n    tag_702:\n        /* \"contracts/modules/Storage.sol\":18506:18559  require(_roundId == topRoyaltyRound, \"Invalid round\") */\n      tag_704\n        /* \"contracts/modules/Storage.sol\":18526:18541  topRoyaltyRound */\n      0x44\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/Storage.sol\":18514:18541  _roundId == topRoyaltyRound */\n      dup3\n      eq\n        /* \"contracts/modules/Storage.sol\":18506:18559  require(_roundId == topRoyaltyRound, \"Invalid round\") */\n      tag_32\n      jump\t// in\n    tag_704:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":18579:18592  topRoyaltydtl */\n      0x47\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n        /* \"contracts/modules/Storage.sol\":18570:18626  require(!topRoyaltydtl[_roundId].closed, \"Round closed\") */\n      tag_705\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0xff\n        /* \"contracts/modules/Storage.sol\":18579:18609  topRoyaltydtl[_roundId].closed */\n      0x08\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":18579:18609  topRoyaltydtl[_roundId].closed */\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      and\n        /* \"contracts/modules/Storage.sol\":18578:18609  !topRoyaltydtl[_roundId].closed */\n      iszero\n        /* \"contracts/modules/Storage.sol\":18570:18626  require(!topRoyaltydtl[_roundId].closed, \"Round closed\") */\n      tag_33\n      jump\t// in\n    tag_705:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup2\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":18666:18671  users */\n      0x0d\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":18709:18725  user.level15Time */\n      swap2\n      0x11\n      dup4\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/Storage.sol\":18709:18729  user.level15Time > 0 */\n      dup1\n      iszero\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      tag_706\n      jumpi\n        /* \"contracts/modules/Storage.sol\":18800:18821  user.registrationTime */\n      0x0f\n      dup5\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n      swap4\n        /* \"contracts/modules/Storage.sol\":849:857  450 days */\n      0x02514300\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup6\n      add\n      dup1\n      swap6\n      gt\n      tag_171\n      jumpi\n        /* \"contracts/modules/Storage.sol\":19519:19570  MonthlyRoyaltyQualified(_roundId, _userId, nowTime) */\n      0x42ee5ef523a95c6fb3ffdd2e9b34955b83ea8c2b11ff268c87ae6ea25556eaac\n        /* \"contracts/modules/Storage.sol\":18780:18840  user.level15Time <= user.registrationTime + TOP_ROYALTY_TIME */\n      swap5\n        /* \"contracts/modules/Storage.sol\":19002:19079  require(withinTime && qualifiedByLevel && qualifiedByDirects, \"Not eligible\") */\n      tag_710\n        /* \"contracts/modules/Storage.sol\":18780:18840  user.level15Time <= user.registrationTime + TOP_ROYALTY_TIME */\n      swap3\n      gt\n      iszero\n        /* \"contracts/modules/Storage.sol\":18875:18885  user.level */\n      swap1\n        /* \"contracts/modules/Storage.sol\":1189:1190  2 */\n      0x02\n        /* \"contracts/modules/Storage.sol\":18943:18969  user.topRoyaltyDirectCount */\n      0x13\n        /* \"contracts/modules/Storage.sol\":18800:18821  user.registrationTime */\n      0x0f\n        /* \"contracts/modules/Storage.sol\":18875:18885  user.level */\n      0x06\n      dup5\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/Storage.sol\":18875:18906  user.level >= TOP_ROYALTY_LEVEL */\n      lt\n      iszero\n        /* \"contracts/modules/Storage.sol\":18943:18969  user.topRoyaltyDirectCount */\n      swap3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      sload\n        /* \"contracts/modules/Storage.sol\":18943:18991  user.topRoyaltyDirectCount >= TOP_ROYALTY_DIRECT */\n      lt\n      iszero\n        /* \"contracts/modules/Storage.sol\":19010:19040  withinTime && qualifiedByLevel */\n      swap1\n      dup3\n      tag_696\n      jumpi\n        /* \"contracts/modules/Storage.sol\":19010:19062  withinTime && qualifiedByLevel && qualifiedByDirects */\n      pop\n      dup2\n      tag_698\n      jumpi\n        /* \"contracts/modules/Storage.sol\":19002:19079  require(withinTime && qualifiedByLevel && qualifiedByDirects, \"Not eligible\") */\n      pop\n      tag_34\n      jump\t// in\n    tag_710:\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/modules/Storage.sol\":18280:18297  topRoyaltyUserdtl */\n      0x49\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/modules/Storage.sol\":19418:19446  userRoyalty.qualifiedRoundId */\n      0x01\n        /* \"contracts/modules/Storage.sol\":18280:18318  topRoyaltyUserdtl[_userId].isQualified */\n      0x04\n        /* \"contracts/modules/Storage.sol\":19241:19264  userRoyalty.isQualified */\n      dup3\n      add\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      swap2\n      dup5\n      dup3\n      dup5\n      sload\n      swap3\n        /* \"contracts/modules/Storage.sol\":19232:19286  require(!userRoyalty.isQualified, \"already Qualified\") */\n      tag_700\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0xff\n      dup6\n      and\n        /* \"contracts/modules/Storage.sol\":19240:19264  !userRoyalty.isQualified */\n      iszero\n        /* \"contracts/modules/Storage.sol\":19232:19286  require(!userRoyalty.isQualified, \"already Qualified\") */\n      tag_35\n      jump\t// in\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n    tag_706:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n        /* \"contracts/modules/Storage.sol\":18280:18318  topRoyaltyUserdtl[_userId].isQualified */\n      0x04\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      add\n      mstore\n        /* \"contracts/modules/Storage.sol\":18709:18725  user.level15Time */\n      0x11\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x78, 0x55736572206e6f74206c6576656c203135)\n        /* \"contracts/modules/Storage.sol\":18526:18541  topRoyaltyRound */\n      0x44\n        /* \"contracts/modules/SponsorMatrix.sol\":124:20190  contract Nanakshahi is Storage{... */\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_32:\n      iszero\n      tag_717\n      jumpi\n      jump\t// out\n    tag_717:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x9a, 0x125b9d985b1a59081c9bdd5b99)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_33:\n      iszero\n      tag_719\n      jumpi\n      jump\t// out\n    tag_719:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa2, 0x149bdd5b990818db1bdcd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_34:\n      iszero\n      tag_721\n      jumpi\n      jump\t// out\n    tag_721:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa0, 0x4e6f7420656c696769626c65)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_35:\n      iszero\n      tag_723\n      jumpi\n      jump\t// out\n    tag_723:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x185b1c9958591e48145d585b1a599a5959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    stop\n    data_51678340555b44277c2bba9423d75ebead61331b9cde789c13d0820d4f537e29 e17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e3\n\n    auxdata: 0xa264697066735822122084a58ff3a9a9de9170510864ecde57625647ce5dc97e145bc75e121fce72195964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"allocate_memory": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_4536": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"clear_storage_range_uint256": {
									"entryPoint": 1390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523461052b5760015f556040516101e081016001600160401b038111828210176105175760405267d02ab486cedc0000815268015af1d78b58c4000060208201526802b5e3af16b1880000604082015268056bc75e2d631000006060820152680ad78ebc5ac620000060808201526815af1d78b58c40000060a0820152682b5e3af16b1880000060c08201526856bc75e2d63100000060e082015268ad78ebc5ac6200000061010082015269015af1d78b58c40000006101208201526902b5e3af16b18800000061014082015269056bc75e2d6310000000610160820152690ad78ebc5ac6200000006101808201526915af1d78b58c400000006101a0820152692b5e3af16b18800000006101c0820152600b54600f600b5580600f106104c1575b50600b5f5260205f20905f5b600f81106104a45761014161052f565b680410d586a20a4c00008152681043561a8829300000602082015268410d586a20a4c0000060408201526901043561a882930000006060820152690410d586a20a4c0000006080820152691043561a88293000000060a082015269410d586a20a4c000000060c082015260135460076013558060071061044e575b5060135f5260205f20905f5b60078110610431576101d861054e565b68056bc75e2d631000008152680ad78ebc5ac620000060208201526815af1d78b58c4000006040820152682b5e3af16b1880000060608201526856bc75e2d631000000608082015268ad78ebc5ac6200000060a082015269015af1d78b58c400000060c08201526902b5e3af16b18800000060e08201526014546008601455806008106103db575b5060145f5260205f20905f5b600881106103be5761027c61052f565b60038152600560208201526007604082015260096060820152600b6080820152600d60a0820152600f60c08201525f5b600781106103a6576102bc61054e565b6004815260056020820152600660408201526007606082015260086080820152600960a0820152600a60c0820152600b60e08201525f5b6008811061038e5761030361054e565b5f815260016020820152600160408201526001606082015260016080820152600160a0820152600160c0820152600160e08201525f5b60088110610376575f6036555f6037555f6038556001603d555f603e555f603f5560016044555f6045555f60465560405161226190816105858239f35b600190602060ff845116930192816024015501610339565b600190602060ff84511693019281601c0155016102f3565b600190602060ff8451169301928160150155016102ac565b81516001600160501b03168184015560209091019060010161026c565b60145f5261042b907fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec017fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f461056e565b81610260565b81516001600160501b0316818401556020909101906001016101c8565b60135f5261049e907f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090017f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09761056e565b816101bc565b81516001600160501b031681840155602090910190600101610131565b600b5f52610511907f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9017f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc861056e565b5f610125565b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b6040519060e082016001600160401b0381118382101761051757604052565b6040519061010082016001600160401b0381118382101761051757604052565b818110610579575050565b5f815560010161056e56fe6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a8146110a8575080632132d2041461107c5780632350268f1461102257806323fd338e14610a9b5780632451308814610ff85780632a89153414610fdb5780632ae0ee0d14610f375780632f48ab7d14610fb35780633080b5bc14610f9657806331bb6a3014610f7b57806332bc298c14610f5e57806332fcd96614610f3c578063375b43b414610f3757806339ab360314610edd57806345977d0314610abd5780634b8cbf9b14610aa057806358c7d35214610a9b5780635b62d1d514610a7e578063705fee2d14610a6057806376f5f70014610a4357806378f6ad6d14610a265780637cdc65f2146109fe578063956a3228146109d25780639b40ab97146109b5578063a59d17d114610998578063a5e52b991461097b578063ae4708dc1461090d578063bff1f9e1146108f0578063c216212a146108b8578063c8df290814610894578063c9ed070814610877578063ca8e91211461085a578063d0a2fd791461082e578063d2f0490d14610813578063d54d6ddb146107f5578063e898fc38146107d8578063e9e34a16146107b0578063ebe0ff151461078d578063ec597e6f14610770578063f207564e14610233578063f5d74d931461020b5763fddc806f146101ea575f80fd5b34610207575f366003190112610207576020603754604051908152f35b5f80fd5b34610207575f366003190112610207576004546040516001600160a01b039091168152602090f35b3461020757602036600319011261020757600435335f52600c60205260405f205461073657805f52600d602052600360405f200154156106ff576001545f906020906102c0906001600160a01b031661028a6110da565b90546040516323b872dd60e01b815233600482015230602482015260039290921b1c604482015293849283919082906064820190565b03925af180156106f4576106c7575b50600554906102e16006548093611294565b916001810180911161051357600655335f52600c6020528160405f2055815f52600d60205260405f2090336bffffffffffffffffffffffff60a01b83541617825542600283015582600383015560048201818155600160068401556103446110da565b90549060031b1c600a84015542600f840155815f52600d602052600760405f2001805490600182018092116105135755815f5260126020526103898460405f20611572565b600754600160401b8110156106b3578060016103aa9201600755600761110c565b81549060031b9086821b915f19901b1916179055600954845f52600a60205260405f20555f5f90835f526011602052600260405f2054105f14610588575050835f52600d60205281600560405f200155815f52601160205260405f20805490600182018092116105135755815b5f905b600f8210610527575b50506104616104306110da565b90546040519160031b1c61044382611222565b81525f602082015242604082015260016060820152600185016112a1565b6104696110da565b90549060031b1c906005820282159280820460051484171561051357603c810293818504603c1481171561051357601982029182046019141715610513576104cc936104c4606489946104be82809604611612565b04611679565b0491546117a6565b5f52600d602052600560018060a01b0360405f2054169101546040519081527f309bb360e8b69c23937ccc5fb01f9aeeead1c95a99604e175113ff82f2b1723a60203392a4005b634e487b7160e01b5f52601160045260245ffd5b801561058357805f52600d602052600960405f2001805490600182018092116105135755805f52601060205260405f20825f5260205261056a8660405f20611572565b5f52600d6020526001600560405f20015491019061041a565b610423565b5f5b600f811061059a575b5050610417565b816106ae57845f52601060205260405f2060018201808311610513575f5260205260405f2054600282018083116105135760ff8111610513576001901b116105e5575b60010161058a565b93925f9591955b845f52601060205260405f20865f5260205260405f20548110156106a0578661068f57845f52601060205260405f20865f5260205261062e8160405f2061110c565b90549060031b1c805f526011602052600260405f205410610653575b506001016105ec565b9193509550865f52600d60205280600560405f200155805f52601160205260405f2080549060018201809211610513575591600180969061064a565b5092936001909591955b90506105dd565b509293600190959195610699565b610593565b634e487b7160e01b5f52604160045260245ffd5b6106e89060203d6020116106ed575b6106e0818361125a565b81019061127c565b6102cf565b503d6106d6565b6040513d5f823e3d90fd5b60405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21039b837b739b7b960891b6044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b6044820152606490fd5b34610207575f366003190112610207576020600554604051908152f35b34610207575f366003190112610207576020604051683635c9adc5dea000008152f35b34610207575f366003190112610207576003546040516001600160a01b039091168152602090f35b34610207575f366003190112610207576020603e54604051908152f35b3461020757602036600319011261020757610811600435611363565b005b34610207575f36600319011261020757602060405160058152f35b3461020757602036600319011261020757600435600881101561020757602090601c0154604051908152f35b34610207575f366003190112610207576020603654604051908152f35b34610207575f366003190112610207576020603d54604051908152f35b34610207575f36600319011261020757602060405169021e19e0c9bab24000008152f35b3461020757602036600319011261020757600435600b54811015610207576108e16020916110c2565b90549060031b1c604051908152f35b34610207575f366003190112610207576020600654604051908152f35b3461020757602036600319011261020757600435601354811015610207576013548110156109675760135f527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b34610207575f3660031901126102075760206040516283d6008152f35b34610207575f366003190112610207576020603f54604051908152f35b34610207575f366003190112610207576020604554604051908152f35b346102075760203660031901126102075760043560088110156102075760209060240154604051908152f35b34610207575f366003190112610207576002546040516001600160a01b039091168152602090f35b34610207575f366003190112610207576020600954604051908152f35b34610207575f36600319011261020757602060405162093a808152f35b34610207575f36600319011261020757602060405163025143008152f35b34610207575f366003190112610207576020604654604051908152f35b611121565b34610207575f366003190112610207576020604454604051908152f35b3461020757602036600319011261020757600435805f52600d60205260405f20610af160018060a01b0382541633146111e3565b6006810190815491600f831015610ea157610b0b836110c2565b90546001546040516323b872dd60e01b815233600482015230602482015260039390931b9190911c60448301819052929190602090829060649082905f906001600160a01b03165af180156106f457610e84575b50805490600182018092116105135755600a8201610b7e828254611294565b9055610bae604051610b8f81611222565b8281525f602082015242604082015260016060820152600184016112a1565b60058102811590828104600514821715610513576019830283810460191483171561051357610be4916104be6064809304611612565b601482029182046014141715610513576064900490600481019182549360018101948582116105135782610c1e87610c36958a82956118e5565b8760058601610c308484848454611a42565b54611c2c565b600a8314610d9e575b600f8314610caa575b505060405190815260606020820152601560608201527453706f6e736f72736869702073747275637475726560581b60808201524260408201527fae1560e7d725caf8d266d531bf32f170b87264eca8d1265202c334cfeb5bc38260a03392a3005b601142910155825f52600d60205260405f2090545f52600d60205260405f206013810180546001810180911161051357806002925510159081610d80575b81610d70575b50610d5a575b6002601382015410159081610d37575b81610d28575b50610d17575b8280610c48565b610d2360445483611ffc565b610d10565b600f9150600601541483610d0a565b90506011810154600f820154906302514300820180921161051357111590610d04565b610d6b600482015460445490611ffc565b610cf4565b600f915060060154101584610cee565b9050600f810154630251430081018091116105135742111590610ce8565b4260108201555f848152600d60205260408082208454835291206012810180546001810190811061051357806005925510159081610e67575b81610e57575b50610e41575b6005601282015410159081610e1f575b81610e10575b5015610c3f57610e0b603d5485611e9b565b610c3f565b600a9150600601541485610df9565b90506010810154600f820154906283d600820180921161051357111590610df3565b610e526004820154603d5490611e9b565b610de3565b600a915060060154101586610ddd565b9050600f8101546283d60081018091116105135742111590610dd7565b610e9c9060203d6020116106ed576106e0818361125a565b610b5f565b60405162461bcd60e51b8152602060048201526014602482015273105b1c9958591e48185d081b585e081b195d995b60621b6044820152606490fd5b3461020757602036600319011261020757600435600754811015610207576007548110156109675760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b61113c565b34610207575f366003190112610207576020604051670de0b6b3a76400008152f35b34610207575f366003190112610207576020604051620151808152f35b34610207575f36600319011261020757602060405160028152f35b34610207575f366003190112610207576020603854604051908152f35b34610207575f366003190112610207576001546040516001600160a01b039091168152602090f35b34610207575f36600319011261020757602060405162278d008152f35b34610207576020366003190112610207576040611016600435611182565b82519182526020820152f35b3461020757602036600319011261020757600435601454811015610207576014548110156109675760145f527fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec0154604051908152602090f35b346102075760203660031901126102075760043560078110156102075760209060150154604051908152f35b34610207575f366003190112610207578061271060209252f35b600b5481101561096757600b5f5260205f2001905f90565b600b541561096757600b5f9081527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db991565b8054821015610967575f5260205f2001905f90565b34610207575f366003190112610207576020604051600a8152f35b34610207575f366003190112610207576020604051600f8152f35b9190820391821161051357565b811561116e570490565b634e487b7160e01b5f52601260045260245ffd5b90815f52600d602052600360405f200154156111dc57600954825f52600a60205260405f205490818111156111d2576111c76111cf92670de0b6b3a764000092611157565b0480936115a6565b90565b505090505f905f90565b5f91508190565b156111ea57565b60405162461bcd60e51b815260206004820152601060248201526f139bdd081e5bdd5c881858d8dbdd5b9d60821b6044820152606490fd5b6080810190811067ffffffffffffffff8211176106b357604052565b60a0810190811067ffffffffffffffff8211176106b357604052565b90601f8019910116810190811067ffffffffffffffff8211176106b357604052565b90816020910312610207575180151581036102075790565b9190820180921161051357565b8054600160401b8110156106b3576001810180835581101561096757600360609160ff935f5260205f209060021b01845181556020850151600182015560408501516002820155019201511660ff19825416179055565b8181029291811591840414171561051357565b805490600160401b8210156106b35760018201808255821015610967576004916080915f52600560205f2091020192805184556020810151600185015560408101516002850155606081015160038501550151910155565b805f52600d60205260405f209060038201541561153c5761138e60018060a01b0383541633146111e3565b60095491815f52600a60205260405f2054808414611536576113b9670de0b6b3a76400009185611157565b04918215611525576113cb83826115a6565b93815f52600a60205260405f20558380611401575b91505081116113ed575050565b6113ff916113fa91611157565b611679565b565b6114aa9261146b836020945f52600e8552600660405f20611423868254611294565b815501611431858254611294565b9055805f52600f855260405f206040519161144b8361123e565b82528486830152600160408301524260608301526009608083015261130b565b600154905460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810193909352919384929091169082905f9082906044820190565b03925af19081156106f4575f91611506575b50156114ca575f80836113e0565b60405162461bcd60e51b81526020600482015260146024820152731554d115081d1c985b9cd9995c8819985a5b195960621b6044820152606490fd5b61151f915060203d6020116106ed576106e0818361125a565b5f6114bc565b9150505f52600a60205260405f2055565b50505050565b60405162461bcd60e51b815260206004820152600e60248201526d155cd95c881b9bdd08199bdd5b9960921b6044820152606490fd5b8054600160401b8110156106b35761158f9160018201815561110c565b819291549060031b91821b915f19901b1916179055565b805f52600d60205260405f20905f52600e602052600a6115dc60405f2092600f906001600882015411611609575b8301546112f8565b04905481811015611602576115f091611157565b90818111156115fd575090565b905090565b5050505f90565b601491506115d4565b6007549081158015611671575b61165e57670de0b6b3a7640000810290808204670de0b6b3a76400001490151715610513576116599161165191611164565b600954611294565b600955565b8091506116685750565b6113ff90611679565b50801561161f565b6002546001600160a01b0316801561176d5760015460405163a9059cbb60e01b60208083019182526001600160a01b039485166024840152604480840187905283529390921692915f916116ce60648261125a565b519082855af1156106f4575f513d6117645750803b155b61175257506080906005545f52600e60205260405f20611706828254611294565b90557f0f67c60bc8519c61563ac616d368a6df646202c88d10744d736438bc4fbe281660018060a01b03600254169283926040519081525f60208201525f6040820152426060820152a3565b635274afe760e01b5f5260045260245ffd5b600114156116e5565b60405162461bcd60e51b8152602060048201526011602482015270199959481859191c9cc81b9bdd081cd95d607a1b6044820152606490fd5b801580156118da575b6118cf57805f52600d60205260405f2090805f52600e602052600160405f206117d9868254611294565b8155016117e7858254611294565b9055600154825460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810187905291602091839160449183915f91165af180156106f4576118b2575b505f52600f60205261186b60405f20604051906118498261123e565b848252856020830152600160408301524260608301526001608083015261130b565b60018060a01b03905416905f52600d6020525f51602061220c5f395f51905f52606060018060a01b0360405f205416936040519081526001602082015260016040820152a3565b6118ca9060203d6020116106ed576106e0818361125a565b61182d565b50506113ff90611679565b5060055481146117af565b909181158015611a29575b611a1c579061196c91815f52600d60205260405f20825f52600e602052600160405f2061191e848254611294565b81550161192c838254611294565b9055600154815460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101859052956020928792169082905f9082906044820190565b03925af19283156106f4575f51602061220c5f395f51905f52946060946119ff575b505f52600f6020526119ca60405f20604051906119aa8261123e565b87825284602083015288604083015242868301526001608083015261130b565b60018060a01b03905416935f52600d60205260018060a01b0360405f20541694604051918252602082015260016040820152a3565b611a179060203d6020116106ed576106e0818361125a565b61198e565b9150506113ff9150611679565b5060055482146118f0565b5f1981146105135760010190565b93919392909260055481148015611c24575b611c175760015b828110611be65750925f935b80151580611bda575b80611bd0575b15611bc257805f52600d60205260405f20908360068301541015611aa957506005611aa391015494611a34565b93611a67565b600154825460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018a905296989597509395949193919291602091869160449183915f91165af19283156106f4575f51602061220c5f395f51905f5294606094611ba6575b50805f52600e602052600260405f20611b26858254611294565b815501611b34848254611294565b90555f52600f602052611b7160405f2060405190611b518261123e565b87825284602083015288604083015242868301526002608083015261130b565b60018060a01b03905416935f52600d60205260018060a01b0360405f20541694604051918252602082015260026040820152a3565b611bbd9060203d81116106ed576106e0818361125a565b611b0c565b505050916113ff9150611679565b50600f8510611a76565b50600554811415611a70565b905f52600d602052600560405f2001549081158015611c0c575b611bc257600101611a5b565b506005548214611c00565b5050916113ff9150611679565b508015611a54565b9294939491909183158015611e90575b8015611e88575b611e79579491611c538383611164565b95611c67611c6185896112f8565b84611157565b945f948593849260015b601e8510611cab575b50505050505050611c8d92939450611157565b80611c9c575b50806116685750565b611ca590611679565b5f611c93565b8192939495969891158015611e6e575b611e5157825f52600d60205260405f20928c88600686015410155f14611e325782611ce5916112f8565b5f828152600d6020908152604080832054600154915163a9059cbb60e01b81526001600160a01b039182166004820181905260248201879052909894909392899260449284929091165af19384156106f457611df096611dea95611e16575b50805f52600e602052600360405f20611d5e868254611294565b815501611d6c858254611294565b90555f52600f602052611daa60405f2060405190611d898261123e565b8a82528560208301528d60408301524260608301526004608083015261130b565b875f52600d60205260018060a01b0360405f205416905f51602061220c5f395f51905f5260608d60405190878252602082015260046040820152a3611294565b98611294565b936001915b84861015611e1157600560019101549101939291959495611c71565b611c7a565b611e2d9060203d81116106ed576106e0818361125a565b611d44565b5050918483999692991015611df55791611e4b90611a34565b91611df5565b50975050505050509050611e66929350611157565b806116685750565b506005548314611cbb565b509150506113ff919250611679565b508515611c43565b506005548414611c3c565b90815f52604260205260ff600460405f2001541615611eb8575050565b611ec5603d548214612119565b805f526040602052611ee160ff600860405f2001541615612155565b815f52600d60205260405f209160108301548015611fc357600f840154936283d6008501809511610513577f42ee5ef523a95c6fb3ffdd2e9b34955b83ea8c2b11ff268c87ae6ea25556eaac94611f5b9211159060056012600a6006840154101592015410159082611fbb575b5081611fb3575b50612190565b805f52604260205260405f20600160048201918482845492611f8060ff8516156121cb565b428155015560ff1916179055611fae6040519283924291846040919493926060820195825260208201520152565b0390a1565b90505f611f55565b91505f611f4e565b60405162461bcd60e51b8152602060048201526011602482015270055736572206e6f74206c6576656c20313607c1b6044820152606490fd5b90815f52604960205260ff600460405f2001541615612019575050565b6120266044548214612119565b805f52604760205261204260ff600860405f2001541615612155565b815f52600d60205260405f2091601183015480156120e057600f8401549363025143008501809511610513577f42ee5ef523a95c6fb3ffdd2e9b34955b83ea8c2b11ff268c87ae6ea25556eaac946120bb9211159060026013600f6006840154101592015410159082611fbb575081611fb35750612190565b805f52604960205260405f20600160048201918482845492611f8060ff8516156121cb565b60405162461bcd60e51b815260206004820152601160248201527055736572206e6f74206c6576656c20313560781b6044820152606490fd5b1561212057565b60405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081c9bdd5b99609a1b6044820152606490fd5b1561215c57565b60405162461bcd60e51b815260206004820152600c60248201526b149bdd5b990818db1bdcd95960a21b6044820152606490fd5b1561219757565b60405162461bcd60e51b815260206004820152600c60248201526b4e6f7420656c696769626c6560a01b6044820152606490fd5b156121d257565b60405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e48145d585b1a599a5959607a1b6044820152606490fdfee17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e3a264697066735822122084a58ff3a9a9de9170510864ecde57625647ce5dc97e145bc75e121fce72195964736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x52B JUMPI PUSH1 0x1 PUSH0 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x517 JUMPI PUSH1 0x40 MSTORE PUSH8 0xD02AB486CEDC0000 DUP2 MSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH2 0x100 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH2 0x120 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH2 0x140 DUP3 ADD MSTORE PUSH10 0x56BC75E2D6310000000 PUSH2 0x160 DUP3 ADD MSTORE PUSH10 0xAD78EBC5AC620000000 PUSH2 0x180 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C40000000 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B1880000000 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xB SLOAD PUSH1 0xF PUSH1 0xB SSTORE DUP1 PUSH1 0xF LT PUSH2 0x4C1 JUMPI JUMPDEST POP PUSH1 0xB PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0xF DUP2 LT PUSH2 0x4A4 JUMPI PUSH2 0x141 PUSH2 0x52F JUMP JUMPDEST PUSH9 0x410D586A20A4C0000 DUP2 MSTORE PUSH9 0x1043561A8829300000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x410D586A20A4C00000 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1043561A88293000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH10 0x1043561A882930000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C0000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH1 0x7 PUSH1 0x13 SSTORE DUP1 PUSH1 0x7 LT PUSH2 0x44E JUMPI JUMPDEST POP PUSH1 0x13 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x431 JUMPI PUSH2 0x1D8 PUSH2 0x54E JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x14 SLOAD PUSH1 0x8 PUSH1 0x14 SSTORE DUP1 PUSH1 0x8 LT PUSH2 0x3DB JUMPI JUMPDEST POP PUSH1 0x14 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x3BE JUMPI PUSH2 0x27C PUSH2 0x52F JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0xC0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x3A6 JUMPI PUSH2 0x2BC PUSH2 0x54E JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x38E JUMPI PUSH2 0x303 PUSH2 0x54E JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x376 JUMPI PUSH0 PUSH1 0x36 SSTORE PUSH0 PUSH1 0x37 SSTORE PUSH0 PUSH1 0x38 SSTORE PUSH1 0x1 PUSH1 0x3D SSTORE PUSH0 PUSH1 0x3E SSTORE PUSH0 PUSH1 0x3F SSTORE PUSH1 0x1 PUSH1 0x44 SSTORE PUSH0 PUSH1 0x45 SSTORE PUSH0 PUSH1 0x46 SSTORE PUSH1 0x40 MLOAD PUSH2 0x2261 SWAP1 DUP2 PUSH2 0x585 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x24 ADD SSTORE ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x1C ADD SSTORE ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x15 ADD SSTORE ADD PUSH2 0x2AC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x26C JUMP JUMPDEST PUSH1 0x14 PUSH0 MSTORE PUSH2 0x42B SWAP1 PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4 PUSH2 0x56E JUMP JUMPDEST DUP2 PUSH2 0x260 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x13 PUSH0 MSTORE PUSH2 0x49E SWAP1 PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097 PUSH2 0x56E JUMP JUMPDEST DUP2 PUSH2 0x1BC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x131 JUMP JUMPDEST PUSH1 0xB PUSH0 MSTORE PUSH2 0x511 SWAP1 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8 PUSH2 0x56E JUMP JUMPDEST PUSH0 PUSH2 0x125 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x100 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x579 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x56E JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0x10A8 JUMPI POP DUP1 PUSH4 0x2132D204 EQ PUSH2 0x107C JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0x1022 JUMPI DUP1 PUSH4 0x23FD338E EQ PUSH2 0xA9B JUMPI DUP1 PUSH4 0x24513088 EQ PUSH2 0xFF8 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0xFDB JUMPI DUP1 PUSH4 0x2AE0EE0D EQ PUSH2 0xF37 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0xFB3 JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0xF96 JUMPI DUP1 PUSH4 0x31BB6A30 EQ PUSH2 0xF7B JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0xF5E JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0xF3C JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0xF37 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0xEDD JUMPI DUP1 PUSH4 0x45977D03 EQ PUSH2 0xABD JUMPI DUP1 PUSH4 0x4B8CBF9B EQ PUSH2 0xAA0 JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0xA9B JUMPI DUP1 PUSH4 0x5B62D1D5 EQ PUSH2 0xA7E JUMPI DUP1 PUSH4 0x705FEE2D EQ PUSH2 0xA60 JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0xA43 JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0xA26 JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x9FE JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x9D2 JUMPI DUP1 PUSH4 0x9B40AB97 EQ PUSH2 0x9B5 JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x998 JUMPI DUP1 PUSH4 0xA5E52B99 EQ PUSH2 0x97B JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x90D JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x8F0 JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x8B8 JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x894 JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x877 JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x85A JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0xD2F0490D EQ PUSH2 0x813 JUMPI DUP1 PUSH4 0xD54D6DDB EQ PUSH2 0x7F5 JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x7B0 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x78D JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x770 JUMPI DUP1 PUSH4 0xF207564E EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x20B JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x1EA JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD CALLER PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x736 JUMPI DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD ISZERO PUSH2 0x6FF JUMPI PUSH1 0x1 SLOAD PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x2C0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28A PUSH2 0x10DA JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x44 DUP3 ADD MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x6F4 JUMPI PUSH2 0x6C7 JUMPI JUMPDEST POP PUSH1 0x5 SLOAD SWAP1 PUSH2 0x2E1 PUSH1 0x6 SLOAD DUP1 SWAP4 PUSH2 0x1294 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x513 JUMPI PUSH1 0x6 SSTORE CALLER PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP4 SLOAD AND OR DUP3 SSTORE TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE DUP3 PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x4 DUP3 ADD DUP2 DUP2 SSTORE PUSH1 0x1 PUSH1 0x6 DUP5 ADD SSTORE PUSH2 0x344 PUSH2 0x10DA JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0xA DUP5 ADD SSTORE TIMESTAMP PUSH1 0xF DUP5 ADD SSTORE DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH0 KECCAK256 ADD DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI SSTORE DUP2 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH2 0x389 DUP5 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x6B3 JUMPI DUP1 PUSH1 0x1 PUSH2 0x3AA SWAP3 ADD PUSH1 0x7 SSTORE PUSH1 0x7 PUSH2 0x110C JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP7 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x9 SLOAD DUP5 PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH0 PUSH0 SWAP1 DUP4 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 SLOAD LT PUSH0 EQ PUSH2 0x588 JUMPI POP POP DUP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x5 PUSH1 0x40 PUSH0 KECCAK256 ADD SSTORE DUP2 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI SSTORE DUP2 JUMPDEST PUSH0 SWAP1 JUMPDEST PUSH1 0xF DUP3 LT PUSH2 0x527 JUMPI JUMPDEST POP POP PUSH2 0x461 PUSH2 0x430 PUSH2 0x10DA JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR PUSH2 0x443 DUP3 PUSH2 0x1222 JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 DUP6 ADD PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x469 PUSH2 0x10DA JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 PUSH1 0x5 DUP3 MUL DUP3 ISZERO SWAP3 DUP1 DUP3 DIV PUSH1 0x5 EQ DUP5 OR ISZERO PUSH2 0x513 JUMPI PUSH1 0x3C DUP2 MUL SWAP4 DUP2 DUP6 DIV PUSH1 0x3C EQ DUP2 OR ISZERO PUSH2 0x513 JUMPI PUSH1 0x19 DUP3 MUL SWAP2 DUP3 DIV PUSH1 0x19 EQ OR ISZERO PUSH2 0x513 JUMPI PUSH2 0x4CC SWAP4 PUSH2 0x4C4 PUSH1 0x64 DUP10 SWAP5 PUSH2 0x4BE DUP3 DUP1 SWAP7 DIV PUSH2 0x1612 JUMP JUMPDEST DIV PUSH2 0x1679 JUMP JUMPDEST DIV SWAP2 SLOAD PUSH2 0x17A6 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x309BB360E8B69C23937CCC5FB01F9AEEEAD1C95A99604E175113FF82F2B1723A PUSH1 0x20 CALLER SWAP3 LOG4 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x583 JUMPI DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH0 KECCAK256 ADD DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI SSTORE DUP1 PUSH0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x56A DUP7 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1572 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x5 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP2 ADD SWAP1 PUSH2 0x41A JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xF DUP2 LT PUSH2 0x59A JUMPI JUMPDEST POP POP PUSH2 0x417 JUMP JUMPDEST DUP2 PUSH2 0x6AE JUMPI DUP5 PUSH0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP3 ADD DUP1 DUP4 GT PUSH2 0x513 JUMPI PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x2 DUP3 ADD DUP1 DUP4 GT PUSH2 0x513 JUMPI PUSH1 0xFF DUP2 GT PUSH2 0x513 JUMPI PUSH1 0x1 SWAP1 SHL GT PUSH2 0x5E5 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x58A JUMP JUMPDEST SWAP4 SWAP3 PUSH0 SWAP6 SWAP2 SWAP6 JUMPDEST DUP5 PUSH0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP7 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x6A0 JUMPI DUP7 PUSH2 0x68F JUMPI DUP5 PUSH0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP7 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x62E DUP2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x110C JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP1 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 SLOAD LT PUSH2 0x653 JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x5EC JUMP JUMPDEST SWAP2 SWAP4 POP SWAP6 POP DUP7 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x5 PUSH1 0x40 PUSH0 KECCAK256 ADD SSTORE DUP1 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI SSTORE SWAP2 PUSH1 0x1 DUP1 SWAP7 SWAP1 PUSH2 0x64A JUMP JUMPDEST POP SWAP3 SWAP4 PUSH1 0x1 SWAP1 SWAP6 SWAP2 SWAP6 JUMPDEST SWAP1 POP PUSH2 0x5DD JUMP JUMPDEST POP SWAP3 SWAP4 PUSH1 0x1 SWAP1 SWAP6 SWAP2 SWAP6 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x6E8 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6ED JUMPI JUMPDEST PUSH2 0x6E0 DUP2 DUP4 PUSH2 0x125A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x24B73B30B634B21039B837B739B7B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x3E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH2 0x811 PUSH1 0x4 CALLDATALOAD PUSH2 0x1363 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x3D SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH2 0x8E1 PUSH1 0x20 SWAP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x967 JUMPI PUSH1 0x13 PUSH0 MSTORE PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x83D600 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x45 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2514300 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x46 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1121 JUMP JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x44 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xAF1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x6 DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0xF DUP4 LT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xB0B DUP4 PUSH2 0x10C2 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 SWAP4 SWAP1 SWAP4 SHL SWAP2 SWAP1 SWAP2 SHR PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x6F4 JUMPI PUSH2 0xE84 JUMPI JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI SSTORE PUSH1 0xA DUP3 ADD PUSH2 0xB7E DUP3 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xBAE PUSH1 0x40 MLOAD PUSH2 0xB8F DUP2 PUSH2 0x1222 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 DUP5 ADD PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x5 DUP2 MUL DUP2 ISZERO SWAP1 DUP3 DUP2 DIV PUSH1 0x5 EQ DUP3 OR ISZERO PUSH2 0x513 JUMPI PUSH1 0x19 DUP4 MUL DUP4 DUP2 DIV PUSH1 0x19 EQ DUP4 OR ISZERO PUSH2 0x513 JUMPI PUSH2 0xBE4 SWAP2 PUSH2 0x4BE PUSH1 0x64 DUP1 SWAP4 DIV PUSH2 0x1612 JUMP JUMPDEST PUSH1 0x14 DUP3 MUL SWAP2 DUP3 DIV PUSH1 0x14 EQ OR ISZERO PUSH2 0x513 JUMPI PUSH1 0x64 SWAP1 DIV SWAP1 PUSH1 0x4 DUP2 ADD SWAP2 DUP3 SLOAD SWAP4 PUSH1 0x1 DUP2 ADD SWAP5 DUP6 DUP3 GT PUSH2 0x513 JUMPI DUP3 PUSH2 0xC1E DUP8 PUSH2 0xC36 SWAP6 DUP11 DUP3 SWAP6 PUSH2 0x18E5 JUMP JUMPDEST DUP8 PUSH1 0x5 DUP7 ADD PUSH2 0xC30 DUP5 DUP5 DUP5 DUP5 SLOAD PUSH2 0x1A42 JUMP JUMPDEST SLOAD PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0xA DUP4 EQ PUSH2 0xD9E JUMPI JUMPDEST PUSH1 0xF DUP4 EQ PUSH2 0xCAA JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x60 DUP3 ADD MSTORE PUSH21 0x53706F6E736F727368697020737472756374757265 PUSH1 0x58 SHL PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0xAE1560E7D725CAF8D266D531BF32F170B87264ECA8D1265202C334CFEB5BC382 PUSH1 0xA0 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x11 TIMESTAMP SWAP2 ADD SSTORE DUP3 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 SLOAD PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x13 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x513 JUMPI DUP1 PUSH1 0x2 SWAP3 SSTORE LT ISZERO SWAP1 DUP2 PUSH2 0xD80 JUMPI JUMPDEST DUP2 PUSH2 0xD70 JUMPI JUMPDEST POP PUSH2 0xD5A JUMPI JUMPDEST PUSH1 0x2 PUSH1 0x13 DUP3 ADD SLOAD LT ISZERO SWAP1 DUP2 PUSH2 0xD37 JUMPI JUMPDEST DUP2 PUSH2 0xD28 JUMPI JUMPDEST POP PUSH2 0xD17 JUMPI JUMPDEST DUP3 DUP1 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0xD23 PUSH1 0x44 SLOAD DUP4 PUSH2 0x1FFC JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH1 0xF SWAP2 POP PUSH1 0x6 ADD SLOAD EQ DUP4 PUSH2 0xD0A JUMP JUMPDEST SWAP1 POP PUSH1 0x11 DUP2 ADD SLOAD PUSH1 0xF DUP3 ADD SLOAD SWAP1 PUSH4 0x2514300 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI GT ISZERO SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0xD6B PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x44 SLOAD SWAP1 PUSH2 0x1FFC JUMP JUMPDEST PUSH2 0xCF4 JUMP JUMPDEST PUSH1 0xF SWAP2 POP PUSH1 0x6 ADD SLOAD LT ISZERO DUP5 PUSH2 0xCEE JUMP JUMPDEST SWAP1 POP PUSH1 0xF DUP2 ADD SLOAD PUSH4 0x2514300 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x513 JUMPI TIMESTAMP GT ISZERO SWAP1 PUSH2 0xCE8 JUMP JUMPDEST TIMESTAMP PUSH1 0x10 DUP3 ADD SSTORE PUSH0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SLOAD DUP4 MSTORE SWAP2 KECCAK256 PUSH1 0x12 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 LT PUSH2 0x513 JUMPI DUP1 PUSH1 0x5 SWAP3 SSTORE LT ISZERO SWAP1 DUP2 PUSH2 0xE67 JUMPI JUMPDEST DUP2 PUSH2 0xE57 JUMPI JUMPDEST POP PUSH2 0xE41 JUMPI JUMPDEST PUSH1 0x5 PUSH1 0x12 DUP3 ADD SLOAD LT ISZERO SWAP1 DUP2 PUSH2 0xE1F JUMPI JUMPDEST DUP2 PUSH2 0xE10 JUMPI JUMPDEST POP ISZERO PUSH2 0xC3F JUMPI PUSH2 0xE0B PUSH1 0x3D SLOAD DUP6 PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0xC3F JUMP JUMPDEST PUSH1 0xA SWAP2 POP PUSH1 0x6 ADD SLOAD EQ DUP6 PUSH2 0xDF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x10 DUP2 ADD SLOAD PUSH1 0xF DUP3 ADD SLOAD SWAP1 PUSH3 0x83D600 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI GT ISZERO SWAP1 PUSH2 0xDF3 JUMP JUMPDEST PUSH2 0xE52 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x3D SLOAD SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0xA SWAP2 POP PUSH1 0x6 ADD SLOAD LT ISZERO DUP7 PUSH2 0xDDD JUMP JUMPDEST SWAP1 POP PUSH1 0xF DUP2 ADD SLOAD PUSH3 0x83D600 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x513 JUMPI TIMESTAMP GT ISZERO SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0xE9C SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6ED JUMPI PUSH2 0x6E0 DUP2 DUP4 PUSH2 0x125A JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x105B1C9958591E48185D081B585E081B195D995B PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x967 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x113C JUMP JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x40 PUSH2 0x1016 PUSH1 0x4 CALLDATALOAD PUSH2 0x1182 JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x967 JUMPI PUSH1 0x14 PUSH0 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x967 JUMPI PUSH1 0xB PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD ISZERO PUSH2 0x967 JUMPI PUSH1 0xB PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP2 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x967 JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x513 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x116E JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD ISZERO PUSH2 0x11DC JUMPI PUSH1 0x9 SLOAD DUP3 PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP2 DUP2 GT ISZERO PUSH2 0x11D2 JUMPI PUSH2 0x11C7 PUSH2 0x11CF SWAP3 PUSH8 0xDE0B6B3A7640000 SWAP3 PUSH2 0x1157 JUMP JUMPDEST DIV DUP1 SWAP4 PUSH2 0x15A6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP SWAP1 POP PUSH0 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH0 SWAP2 POP DUP2 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x11EA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081E5BDD5C881858D8DBDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x207 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x207 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE DUP2 LT ISZERO PUSH2 0x967 JUMPI PUSH1 0x3 PUSH1 0x60 SWAP2 PUSH1 0xFF SWAP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD DUP5 MLOAD DUP2 SSTORE PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE ADD SWAP3 ADD MLOAD AND PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x513 JUMPI JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x967 JUMPI PUSH1 0x4 SWAP2 PUSH1 0x80 SWAP2 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP3 DUP1 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 DUP3 ADD SLOAD ISZERO PUSH2 0x153C JUMPI PUSH2 0x138E PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND CALLER EQ PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP2 DUP2 PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP1 DUP5 EQ PUSH2 0x1536 JUMPI PUSH2 0x13B9 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP6 PUSH2 0x1157 JUMP JUMPDEST DIV SWAP2 DUP3 ISZERO PUSH2 0x1525 JUMPI PUSH2 0x13CB DUP4 DUP3 PUSH2 0x15A6 JUMP JUMPDEST SWAP4 DUP2 PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP4 DUP1 PUSH2 0x1401 JUMPI JUMPDEST SWAP2 POP POP DUP2 GT PUSH2 0x13ED JUMPI POP POP JUMP JUMPDEST PUSH2 0x13FF SWAP2 PUSH2 0x13FA SWAP2 PUSH2 0x1157 JUMP JUMPDEST PUSH2 0x1679 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x14AA SWAP3 PUSH2 0x146B DUP4 PUSH1 0x20 SWAP5 PUSH0 MSTORE PUSH1 0xE DUP6 MSTORE PUSH1 0x6 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1423 DUP7 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x1431 DUP6 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH0 MSTORE PUSH1 0xF DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x144B DUP4 PUSH2 0x123E JUMP JUMPDEST DUP3 MSTORE DUP5 DUP7 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x9 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP4 DUP5 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP3 SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x6F4 JUMPI PUSH0 SWAP2 PUSH2 0x1506 JUMPI JUMPDEST POP ISZERO PUSH2 0x14CA JUMPI PUSH0 DUP1 DUP4 PUSH2 0x13E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1554D115081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x151F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6ED JUMPI PUSH2 0x6E0 DUP2 DUP4 PUSH2 0x125A JUMP JUMPDEST PUSH0 PUSH2 0x14BC JUMP JUMPDEST SWAP2 POP POP PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x155CD95C881B9BDD08199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x158F SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x110C JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xA PUSH2 0x15DC PUSH1 0x40 PUSH0 KECCAK256 SWAP3 PUSH1 0xF SWAP1 PUSH1 0x1 PUSH1 0x8 DUP3 ADD SLOAD GT PUSH2 0x1609 JUMPI JUMPDEST DUP4 ADD SLOAD PUSH2 0x12F8 JUMP JUMPDEST DIV SWAP1 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1602 JUMPI PUSH2 0x15F0 SWAP2 PUSH2 0x1157 JUMP JUMPDEST SWAP1 DUP2 DUP2 GT ISZERO PUSH2 0x15FD JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x14 SWAP2 POP PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1671 JUMPI JUMPDEST PUSH2 0x165E JUMPI PUSH8 0xDE0B6B3A7640000 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH8 0xDE0B6B3A7640000 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x513 JUMPI PUSH2 0x1659 SWAP2 PUSH2 0x1651 SWAP2 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST DUP1 SWAP2 POP PUSH2 0x1668 JUMPI POP JUMP JUMPDEST PUSH2 0x13FF SWAP1 PUSH2 0x1679 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x161F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x176D JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP1 DUP5 ADD DUP8 SWAP1 MSTORE DUP4 MSTORE SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH0 SWAP2 PUSH2 0x16CE PUSH1 0x64 DUP3 PUSH2 0x125A JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x6F4 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x1764 JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x1752 JUMPI POP PUSH1 0x80 SWAP1 PUSH1 0x5 SLOAD PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1706 DUP3 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST SWAP1 SSTORE PUSH32 0xF67C60BC8519C61563AC616D368A6DF646202C88D10744D736438BC4FBE2816 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP3 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE LOG3 JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x199959481859191C9CC81B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x18DA JUMPI JUMPDEST PUSH2 0x18CF JUMPI DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP1 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x17D9 DUP7 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x17E7 DUP6 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 SLOAD DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x6F4 JUMPI PUSH2 0x18B2 JUMPI JUMPDEST POP PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x186B PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1849 DUP3 PUSH2 0x123E JUMP JUMPDEST DUP5 DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND SWAP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x220C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x60 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE LOG3 JUMP JUMPDEST PUSH2 0x18CA SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6ED JUMPI PUSH2 0x6E0 DUP2 DUP4 PUSH2 0x125A JUMP JUMPDEST PUSH2 0x182D JUMP JUMPDEST POP POP PUSH2 0x13FF SWAP1 PUSH2 0x1679 JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP2 EQ PUSH2 0x17AF JUMP JUMPDEST SWAP1 SWAP2 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1A29 JUMPI JUMPDEST PUSH2 0x1A1C JUMPI SWAP1 PUSH2 0x196C SWAP2 DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x191E DUP5 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x192C DUP4 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 SLOAD DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP6 PUSH1 0x20 SWAP3 DUP8 SWAP3 AND SWAP1 DUP3 SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x6F4 JUMPI PUSH0 MLOAD PUSH1 0x20 PUSH2 0x220C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP5 PUSH1 0x60 SWAP5 PUSH2 0x19FF JUMPI JUMPDEST POP PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x19CA PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x19AA DUP3 PUSH2 0x123E JUMP JUMPDEST DUP8 DUP3 MSTORE DUP5 PUSH1 0x20 DUP4 ADD MSTORE DUP9 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP DUP7 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND SWAP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE LOG3 JUMP JUMPDEST PUSH2 0x1A17 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6ED JUMPI PUSH2 0x6E0 DUP2 DUP4 PUSH2 0x125A JUMP JUMPDEST PUSH2 0x198E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13FF SWAP2 POP PUSH2 0x1679 JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP3 EQ PUSH2 0x18F0 JUMP JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x513 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP4 SWAP2 SWAP4 SWAP3 SWAP1 SWAP3 PUSH1 0x5 SLOAD DUP2 EQ DUP1 ISZERO PUSH2 0x1C24 JUMPI JUMPDEST PUSH2 0x1C17 JUMPI PUSH1 0x1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1BE6 JUMPI POP SWAP3 PUSH0 SWAP4 JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x1BDA JUMPI JUMPDEST DUP1 PUSH2 0x1BD0 JUMPI JUMPDEST ISZERO PUSH2 0x1BC2 JUMPI DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP4 PUSH1 0x6 DUP4 ADD SLOAD LT ISZERO PUSH2 0x1AA9 JUMPI POP PUSH1 0x5 PUSH2 0x1AA3 SWAP2 ADD SLOAD SWAP5 PUSH2 0x1A34 JUMP JUMPDEST SWAP4 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE SWAP7 SWAP9 SWAP6 SWAP8 POP SWAP4 SWAP6 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0x20 SWAP2 DUP7 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x6F4 JUMPI PUSH0 MLOAD PUSH1 0x20 PUSH2 0x220C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP5 PUSH1 0x60 SWAP5 PUSH2 0x1BA6 JUMPI JUMPDEST POP DUP1 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1B26 DUP6 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x1B34 DUP5 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST SWAP1 SSTORE PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x1B71 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1B51 DUP3 PUSH2 0x123E JUMP JUMPDEST DUP8 DUP3 MSTORE DUP5 PUSH1 0x20 DUP4 ADD MSTORE DUP9 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP DUP7 DUP4 ADD MSTORE PUSH1 0x2 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND SWAP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x40 DUP3 ADD MSTORE LOG3 JUMP JUMPDEST PUSH2 0x1BBD SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x6ED JUMPI PUSH2 0x6E0 DUP2 DUP4 PUSH2 0x125A JUMP JUMPDEST PUSH2 0x1B0C JUMP JUMPDEST POP POP POP SWAP2 PUSH2 0x13FF SWAP2 POP PUSH2 0x1679 JUMP JUMPDEST POP PUSH1 0xF DUP6 LT PUSH2 0x1A76 JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP2 EQ ISZERO PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1C0C JUMPI JUMPDEST PUSH2 0x1BC2 JUMPI PUSH1 0x1 ADD PUSH2 0x1A5B JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP3 EQ PUSH2 0x1C00 JUMP JUMPDEST POP POP SWAP2 PUSH2 0x13FF SWAP2 POP PUSH2 0x1679 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1A54 JUMP JUMPDEST SWAP3 SWAP5 SWAP4 SWAP5 SWAP2 SWAP1 SWAP2 DUP4 ISZERO DUP1 ISZERO PUSH2 0x1E90 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1E88 JUMPI JUMPDEST PUSH2 0x1E79 JUMPI SWAP5 SWAP2 PUSH2 0x1C53 DUP4 DUP4 PUSH2 0x1164 JUMP JUMPDEST SWAP6 PUSH2 0x1C67 PUSH2 0x1C61 DUP6 DUP10 PUSH2 0x12F8 JUMP JUMPDEST DUP5 PUSH2 0x1157 JUMP JUMPDEST SWAP5 PUSH0 SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH1 0x1 JUMPDEST PUSH1 0x1E DUP6 LT PUSH2 0x1CAB JUMPI JUMPDEST POP POP POP POP POP POP POP PUSH2 0x1C8D SWAP3 SWAP4 SWAP5 POP PUSH2 0x1157 JUMP JUMPDEST DUP1 PUSH2 0x1C9C JUMPI JUMPDEST POP DUP1 PUSH2 0x1668 JUMPI POP JUMP JUMPDEST PUSH2 0x1CA5 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH0 PUSH2 0x1C93 JUMP JUMPDEST DUP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP9 SWAP2 ISZERO DUP1 ISZERO PUSH2 0x1E6E JUMPI JUMPDEST PUSH2 0x1E51 JUMPI DUP3 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 DUP13 DUP9 PUSH1 0x6 DUP7 ADD SLOAD LT ISZERO PUSH0 EQ PUSH2 0x1E32 JUMPI DUP3 PUSH2 0x1CE5 SWAP2 PUSH2 0x12F8 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP9 SWAP5 SWAP1 SWAP4 SWAP3 DUP10 SWAP3 PUSH1 0x44 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x6F4 JUMPI PUSH2 0x1DF0 SWAP7 PUSH2 0x1DEA SWAP6 PUSH2 0x1E16 JUMPI JUMPDEST POP DUP1 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1D5E DUP7 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x1D6C DUP6 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST SWAP1 SSTORE PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x1DAA PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1D89 DUP3 PUSH2 0x123E JUMP JUMPDEST DUP11 DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE DUP14 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST DUP8 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x220C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x60 DUP14 PUSH1 0x40 MLOAD SWAP1 DUP8 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 PUSH1 0x40 DUP3 ADD MSTORE LOG3 PUSH2 0x1294 JUMP JUMPDEST SWAP9 PUSH2 0x1294 JUMP JUMPDEST SWAP4 PUSH1 0x1 SWAP2 JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x1E11 JUMPI PUSH1 0x5 PUSH1 0x1 SWAP2 ADD SLOAD SWAP2 ADD SWAP4 SWAP3 SWAP2 SWAP6 SWAP5 SWAP6 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x1C7A JUMP JUMPDEST PUSH2 0x1E2D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x6ED JUMPI PUSH2 0x6E0 DUP2 DUP4 PUSH2 0x125A JUMP JUMPDEST PUSH2 0x1D44 JUMP JUMPDEST POP POP SWAP2 DUP5 DUP4 SWAP10 SWAP7 SWAP3 SWAP10 LT ISZERO PUSH2 0x1DF5 JUMPI SWAP2 PUSH2 0x1E4B SWAP1 PUSH2 0x1A34 JUMP JUMPDEST SWAP2 PUSH2 0x1DF5 JUMP JUMPDEST POP SWAP8 POP POP POP POP POP POP SWAP1 POP PUSH2 0x1E66 SWAP3 SWAP4 POP PUSH2 0x1157 JUMP JUMPDEST DUP1 PUSH2 0x1668 JUMPI POP JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP4 EQ PUSH2 0x1CBB JUMP JUMPDEST POP SWAP2 POP POP PUSH2 0x13FF SWAP2 SWAP3 POP PUSH2 0x1679 JUMP JUMPDEST POP DUP6 ISZERO PUSH2 0x1C43 JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP5 EQ PUSH2 0x1C3C JUMP JUMPDEST SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x1EB8 JUMPI POP POP JUMP JUMPDEST PUSH2 0x1EC5 PUSH1 0x3D SLOAD DUP3 EQ PUSH2 0x2119 JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH1 0x20 MSTORE PUSH2 0x1EE1 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x2155 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x10 DUP4 ADD SLOAD DUP1 ISZERO PUSH2 0x1FC3 JUMPI PUSH1 0xF DUP5 ADD SLOAD SWAP4 PUSH3 0x83D600 DUP6 ADD DUP1 SWAP6 GT PUSH2 0x513 JUMPI PUSH32 0x42EE5EF523A95C6FB3FFDD2E9B34955B83EA8C2B11FF268C87AE6EA25556EAAC SWAP5 PUSH2 0x1F5B SWAP3 GT ISZERO SWAP1 PUSH1 0x5 PUSH1 0x12 PUSH1 0xA PUSH1 0x6 DUP5 ADD SLOAD LT ISZERO SWAP3 ADD SLOAD LT ISZERO SWAP1 DUP3 PUSH2 0x1FBB JUMPI JUMPDEST POP DUP2 PUSH2 0x1FB3 JUMPI JUMPDEST POP PUSH2 0x2190 JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0x4 DUP3 ADD SWAP2 DUP5 DUP3 DUP5 SLOAD SWAP3 PUSH2 0x1F80 PUSH1 0xFF DUP6 AND ISZERO PUSH2 0x21CB JUMP JUMPDEST TIMESTAMP DUP2 SSTORE ADD SSTORE PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH2 0x1FAE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 TIMESTAMP SWAP2 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1F55 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x55736572206E6F74206C6576656C20313 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x2019 JUMPI POP POP JUMP JUMPDEST PUSH2 0x2026 PUSH1 0x44 SLOAD DUP3 EQ PUSH2 0x2119 JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x47 PUSH1 0x20 MSTORE PUSH2 0x2042 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x2155 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x11 DUP4 ADD SLOAD DUP1 ISZERO PUSH2 0x20E0 JUMPI PUSH1 0xF DUP5 ADD SLOAD SWAP4 PUSH4 0x2514300 DUP6 ADD DUP1 SWAP6 GT PUSH2 0x513 JUMPI PUSH32 0x42EE5EF523A95C6FB3FFDD2E9B34955B83EA8C2B11FF268C87AE6EA25556EAAC SWAP5 PUSH2 0x20BB SWAP3 GT ISZERO SWAP1 PUSH1 0x2 PUSH1 0x13 PUSH1 0xF PUSH1 0x6 DUP5 ADD SLOAD LT ISZERO SWAP3 ADD SLOAD LT ISZERO SWAP1 DUP3 PUSH2 0x1FBB JUMPI POP DUP2 PUSH2 0x1FB3 JUMPI POP PUSH2 0x2190 JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0x4 DUP3 ADD SWAP2 DUP5 DUP3 DUP5 SLOAD SWAP3 PUSH2 0x1F80 PUSH1 0xFF DUP6 AND ISZERO PUSH2 0x21CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x55736572206E6F74206C6576656C203135 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2120 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081C9BDD5B99 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x215C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x149BDD5B990818DB1BDCD959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2197 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F7420656C696769626C65 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x21D2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x185B1C9958591E48145D585B1A599A5959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID RJUMPI 0x7B61 0xD3 0x24 0xCE OR ORIGIN DUP16 NUMBER RETURNDATASIZE EXP 0xB6 0x25 DUP2 0xC0 CREATE 0xAA SWAP10 PUSH20 0x12BAE80FBDFCD2AA9B91D6E3A264697066735822 SLT KECCAK256 DUP5 0xA5 DUP16 RETURN 0xA9 0xA9 0xDE SWAP2 PUSH17 0x510864ECDE57625647CE5DC97E145BC75E SLT 0x1F 0xCE PUSH19 0x195964736F6C634300081E0033000000000000 ",
							"sourceMap": "124:20066:7:-:0;;;;;;1716:1:3;1821:22;124:20066:7;;;;;;-1:-1:-1;;;;;124:20066:7;;;;;;;;;;1666:9:8;124:20066:7;;1698:9:8;1655:515;;;124:20066:7;1730:9:8;124:20066:7;1655:515:8;;124:20066:7;1762:10:8;1655:515;;;124:20066:7;1795:10:8;1655:515;;;124:20066:7;1828:10:8;1655:515;;;124:20066:7;1861:10:8;1655:515;;;124:20066:7;1894:11:8;1655:515;;;124:20066:7;1928:11:8;1655:515;;;124:20066:7;1962:11:8;1655:515;;;124:20066:7;1996:12:8;1655:515;;;124:20066:7;2031:12:8;1655:515;;;124:20066:7;2066:12:8;1655:515;;;124:20066:7;2101:13:8;1655:515;;;124:20066:7;2137:13:8;1655:515;;;124:20066:7;1655:515:8;124:20066:7;1655:515:8;;124:20066:7;;1655:515:8;124:20066:7;;;-1:-1:-1;124:20066:7;1655:515:8;1821:22:3;124:20066:7;1655:515:8;1821:22:3;124:20066:7;;1821:22:3;124:20066:7;1655:515:8;124:20066:7;;;;;;:::i;:::-;6122:5:8;124:20066:7;;6129:6:8;1655:515;6121:64;;124:20066:7;6137:7:8;124:20066:7;6121:64:8;;124:20066:7;6146:7:8;1655:515;6121:64;;124:20066:7;6155:8:8;1655:515;6121:64;;124:20066:7;6165:8:8;1655:515;6121:64;;124:20066:7;6175:9:8;1655:515;6121:64;;124:20066:7;6121:64:8;124:20066:7;6121:64:8;;124:20066:7;;6121:64:8;124:20066:7;;;;;6121:64:8;1821:22:3;124:20066:7;1655:515:8;1821:22:3;124:20066:7;;1821:22:3;124:20066:7;6121:64:8;124:20066:7;;;;;;:::i;:::-;1762:10:8;124:20066:7;;1795:10:8;1655:515;6227:70;;124:20066:7;1828:10:8;124:20066:7;6227:70:8;;124:20066:7;1861:10:8;1655:515;6227:70;;124:20066:7;1894:11:8;1655:515;6227:70;;124:20066:7;1928:11:8;1655:515;6227:70;;124:20066:7;1962:11:8;1655:515;6227:70;;124:20066:7;1996:12:8;1655:515;6227:70;;124:20066:7;6227:70:8;124:20066:7;6227:70:8;;124:20066:7;;6227:70:8;124:20066:7;;;;;6227:70:8;1821:22:3;124:20066:7;1655:515:8;1821:22:3;124:20066:7;;1821:22:3;124:20066:7;6227:70:8;124:20066:7;;;;;;:::i;:::-;6338:1:8;124:20066:7;;;1655:515:8;6337:24;;124:20066:7;6121:64:8;124:20066:7;6337:24:8;;124:20066:7;6347:1:8;1655:515;6337:24;;124:20066:7;1655:515:8;;6337:24;;124:20066:7;6354:2:8;1655:515;6337:24;;124:20066:7;1655:515:8;;6337:24;;124:20066:7;1821:22:3;124:20066:7;6121:64:8;124:20066:7;;;;;;:::i;:::-;6408:1:8;124:20066:7;;;1655:515:8;6407:25;;124:20066:7;6414:1:8;124:20066:7;6407:25:8;;124:20066:7;6121:64:8;1655:515;6407:25;;124:20066:7;6227:70:8;1655:515;6407:25;;124:20066:7;6347:1:8;1655:515;6407:25;;124:20066:7;6426:2:8;1655:515;6407:25;;124:20066:7;1655:515:8;;6407:25;;124:20066:7;1821:22:3;124:20066:7;6227:70:8;124:20066:7;;;;;;:::i;:::-;1821:22:3;124:20066:7;;1716:1:3;1655:515:8;6477:23;;124:20066:7;1716:1:3;124:20066:7;6477:23:8;;124:20066:7;1716:1:3;1655:515:8;6477:23;;124:20066:7;1716:1:3;1655:515:8;6477:23;;124:20066:7;1716:1:3;1655:515:8;6477:23;;124:20066:7;1716:1:3;1655:515:8;6477:23;;124:20066:7;1716:1:3;1655:515:8;6477:23;;124:20066:7;1821:22:3;124:20066:7;6227:70:8;124:20066:7;;;;1821:22:3;8030:1:8;124:20066:7;1821:22:3;8075:1:8;124:20066:7;1821:22:3;8117:1:8;124:20066:7;1716:1:3;9479::8;124:20066:7;1821:22:3;9525:1:8;124:20066:7;1821:22:3;9566:1:8;124:20066:7;1716:1:3;10785::8;124:20066:7;1821:22:3;10827:1:8;124:20066:7;1821:22:3;10866:1:8;124:20066:7;;;;;;;;;;;1716:1:3;124:20066:7;1655:515:8;124:20066:7;;;;;;;;6477:23:8;124:20066:7;;;;;;1716:1:3;124:20066:7;1655:515:8;124:20066:7;;;;;;;;6407:25:8;124:20066:7;;;;;;1716:1:3;124:20066:7;1655:515:8;124:20066:7;;;;;;;;6337:24:8;124:20066:7;;;;;;;;-1:-1:-1;;;;;124:20066:7;;;;;1655:515:8;124:20066:7;;;;1716:1:3;124:20066:7;;;;6227:70:8;1821:22:3;124:20066:7;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;124:20066:7;;;;;1655:515:8;124:20066:7;;;;1716:1:3;124:20066:7;;;;6121:64:8;1821:22:3;124:20066:7;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;124:20066:7;;;;;1655:515:8;124:20066:7;;;;1716:1:3;124:20066:7;;;;1655:515:8;1821:22:3;124:20066:7;;;;;;;:::i;:::-;;;;;;;;1821:22:3;124:20066:7;;;;;1821:22:3;124:20066:7;;;;;;;;;;;;-1:-1:-1;;;;;124:20066:7;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;124:20066:7;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_bool_fromMemory": {
									"entryPoint": 4732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_uint256_uint256_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"array_push_from_struct_Deposit_to_array_struct_Deposit_storage_dyn__ptr": {
									"entryPoint": 4769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"array_push_from_struct_Income_to_array_struct_Income_storage_dyn__ptr": {
									"entryPoint": 4875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"array_push_from_uint256_to_array_uint256_dyn_storage_ptr": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"checked_add_uint256": {
									"entryPoint": 4756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_uint256": {
									"entryPoint": 4452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_uint256": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 4439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"external_fun_MONTHLY_ROYALTY_LEVEL": {
									"entryPoint": 4385,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_TOP_ROYALTY_LEVEL": {
									"entryPoint": 4412,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 4698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_19867": {
									"entryPoint": 4642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_19896": {
									"entryPoint": 4670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun__distributeSponsorIncome": {
									"entryPoint": 6373,
									"id": 1846,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_accrueCommunityBonus": {
									"entryPoint": 5650,
									"id": 1393,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_applyGlobalCapping": {
									"entryPoint": 5542,
									"id": 1354,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_claimCommunity": {
									"entryPoint": 4963,
									"id": 1532,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_distributeLevelBoosterIncome": {
									"entryPoint": 7212,
									"id": 2189,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"fun_distributeMatrixIncome": {
									"entryPoint": 6722,
									"id": 2009,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_distributeSponsorIncome": {
									"entryPoint": 6054,
									"id": 1846,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_pendingCommunity": {
									"entryPoint": 4482,
									"id": 1591,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"fun_sendToCreator": {
									"entryPoint": 5753,
									"id": 3158,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_tryMonthlyRoyaltyQualify": {
									"entryPoint": 7835,
									"id": 3498,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_tryTopRoyaltyQualify": {
									"entryPoint": 8188,
									"id": 3633,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_uint256": {
									"entryPoint": 6708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"require_helper_stringliteral_399c": {
									"entryPoint": 8651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_44c3": {
									"entryPoint": 8473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_61a1": {
									"entryPoint": 8592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_7cb1": {
									"entryPoint": 8533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_d2be": {
									"entryPoint": 4579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"storage_array_index_access_array_uint256_dyn": {
									"entryPoint": 4290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"storage_array_index_access_uint256_dyn": {
									"entryPoint": 4364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"storage_array_index_access_uint256_dyn_": {
									"entryPoint": 4314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 2
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a8146110a8575080632132d2041461107c5780632350268f1461102257806323fd338e14610a9b5780632451308814610ff85780632a89153414610fdb5780632ae0ee0d14610f375780632f48ab7d14610fb35780633080b5bc14610f9657806331bb6a3014610f7b57806332bc298c14610f5e57806332fcd96614610f3c578063375b43b414610f3757806339ab360314610edd57806345977d0314610abd5780634b8cbf9b14610aa057806358c7d35214610a9b5780635b62d1d514610a7e578063705fee2d14610a6057806376f5f70014610a4357806378f6ad6d14610a265780637cdc65f2146109fe578063956a3228146109d25780639b40ab97146109b5578063a59d17d114610998578063a5e52b991461097b578063ae4708dc1461090d578063bff1f9e1146108f0578063c216212a146108b8578063c8df290814610894578063c9ed070814610877578063ca8e91211461085a578063d0a2fd791461082e578063d2f0490d14610813578063d54d6ddb146107f5578063e898fc38146107d8578063e9e34a16146107b0578063ebe0ff151461078d578063ec597e6f14610770578063f207564e14610233578063f5d74d931461020b5763fddc806f146101ea575f80fd5b34610207575f366003190112610207576020603754604051908152f35b5f80fd5b34610207575f366003190112610207576004546040516001600160a01b039091168152602090f35b3461020757602036600319011261020757600435335f52600c60205260405f205461073657805f52600d602052600360405f200154156106ff576001545f906020906102c0906001600160a01b031661028a6110da565b90546040516323b872dd60e01b815233600482015230602482015260039290921b1c604482015293849283919082906064820190565b03925af180156106f4576106c7575b50600554906102e16006548093611294565b916001810180911161051357600655335f52600c6020528160405f2055815f52600d60205260405f2090336bffffffffffffffffffffffff60a01b83541617825542600283015582600383015560048201818155600160068401556103446110da565b90549060031b1c600a84015542600f840155815f52600d602052600760405f2001805490600182018092116105135755815f5260126020526103898460405f20611572565b600754600160401b8110156106b3578060016103aa9201600755600761110c565b81549060031b9086821b915f19901b1916179055600954845f52600a60205260405f20555f5f90835f526011602052600260405f2054105f14610588575050835f52600d60205281600560405f200155815f52601160205260405f20805490600182018092116105135755815b5f905b600f8210610527575b50506104616104306110da565b90546040519160031b1c61044382611222565b81525f602082015242604082015260016060820152600185016112a1565b6104696110da565b90549060031b1c906005820282159280820460051484171561051357603c810293818504603c1481171561051357601982029182046019141715610513576104cc936104c4606489946104be82809604611612565b04611679565b0491546117a6565b5f52600d602052600560018060a01b0360405f2054169101546040519081527f309bb360e8b69c23937ccc5fb01f9aeeead1c95a99604e175113ff82f2b1723a60203392a4005b634e487b7160e01b5f52601160045260245ffd5b801561058357805f52600d602052600960405f2001805490600182018092116105135755805f52601060205260405f20825f5260205261056a8660405f20611572565b5f52600d6020526001600560405f20015491019061041a565b610423565b5f5b600f811061059a575b5050610417565b816106ae57845f52601060205260405f2060018201808311610513575f5260205260405f2054600282018083116105135760ff8111610513576001901b116105e5575b60010161058a565b93925f9591955b845f52601060205260405f20865f5260205260405f20548110156106a0578661068f57845f52601060205260405f20865f5260205261062e8160405f2061110c565b90549060031b1c805f526011602052600260405f205410610653575b506001016105ec565b9193509550865f52600d60205280600560405f200155805f52601160205260405f2080549060018201809211610513575591600180969061064a565b5092936001909591955b90506105dd565b509293600190959195610699565b610593565b634e487b7160e01b5f52604160045260245ffd5b6106e89060203d6020116106ed575b6106e0818361125a565b81019061127c565b6102cf565b503d6106d6565b6040513d5f823e3d90fd5b60405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21039b837b739b7b960891b6044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b6044820152606490fd5b34610207575f366003190112610207576020600554604051908152f35b34610207575f366003190112610207576020604051683635c9adc5dea000008152f35b34610207575f366003190112610207576003546040516001600160a01b039091168152602090f35b34610207575f366003190112610207576020603e54604051908152f35b3461020757602036600319011261020757610811600435611363565b005b34610207575f36600319011261020757602060405160058152f35b3461020757602036600319011261020757600435600881101561020757602090601c0154604051908152f35b34610207575f366003190112610207576020603654604051908152f35b34610207575f366003190112610207576020603d54604051908152f35b34610207575f36600319011261020757602060405169021e19e0c9bab24000008152f35b3461020757602036600319011261020757600435600b54811015610207576108e16020916110c2565b90549060031b1c604051908152f35b34610207575f366003190112610207576020600654604051908152f35b3461020757602036600319011261020757600435601354811015610207576013548110156109675760135f527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b34610207575f3660031901126102075760206040516283d6008152f35b34610207575f366003190112610207576020603f54604051908152f35b34610207575f366003190112610207576020604554604051908152f35b346102075760203660031901126102075760043560088110156102075760209060240154604051908152f35b34610207575f366003190112610207576002546040516001600160a01b039091168152602090f35b34610207575f366003190112610207576020600954604051908152f35b34610207575f36600319011261020757602060405162093a808152f35b34610207575f36600319011261020757602060405163025143008152f35b34610207575f366003190112610207576020604654604051908152f35b611121565b34610207575f366003190112610207576020604454604051908152f35b3461020757602036600319011261020757600435805f52600d60205260405f20610af160018060a01b0382541633146111e3565b6006810190815491600f831015610ea157610b0b836110c2565b90546001546040516323b872dd60e01b815233600482015230602482015260039390931b9190911c60448301819052929190602090829060649082905f906001600160a01b03165af180156106f457610e84575b50805490600182018092116105135755600a8201610b7e828254611294565b9055610bae604051610b8f81611222565b8281525f602082015242604082015260016060820152600184016112a1565b60058102811590828104600514821715610513576019830283810460191483171561051357610be4916104be6064809304611612565b601482029182046014141715610513576064900490600481019182549360018101948582116105135782610c1e87610c36958a82956118e5565b8760058601610c308484848454611a42565b54611c2c565b600a8314610d9e575b600f8314610caa575b505060405190815260606020820152601560608201527453706f6e736f72736869702073747275637475726560581b60808201524260408201527fae1560e7d725caf8d266d531bf32f170b87264eca8d1265202c334cfeb5bc38260a03392a3005b601142910155825f52600d60205260405f2090545f52600d60205260405f206013810180546001810180911161051357806002925510159081610d80575b81610d70575b50610d5a575b6002601382015410159081610d37575b81610d28575b50610d17575b8280610c48565b610d2360445483611ffc565b610d10565b600f9150600601541483610d0a565b90506011810154600f820154906302514300820180921161051357111590610d04565b610d6b600482015460445490611ffc565b610cf4565b600f915060060154101584610cee565b9050600f810154630251430081018091116105135742111590610ce8565b4260108201555f848152600d60205260408082208454835291206012810180546001810190811061051357806005925510159081610e67575b81610e57575b50610e41575b6005601282015410159081610e1f575b81610e10575b5015610c3f57610e0b603d5485611e9b565b610c3f565b600a9150600601541485610df9565b90506010810154600f820154906283d600820180921161051357111590610df3565b610e526004820154603d5490611e9b565b610de3565b600a915060060154101586610ddd565b9050600f8101546283d60081018091116105135742111590610dd7565b610e9c9060203d6020116106ed576106e0818361125a565b610b5f565b60405162461bcd60e51b8152602060048201526014602482015273105b1c9958591e48185d081b585e081b195d995b60621b6044820152606490fd5b3461020757602036600319011261020757600435600754811015610207576007548110156109675760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b61113c565b34610207575f366003190112610207576020604051670de0b6b3a76400008152f35b34610207575f366003190112610207576020604051620151808152f35b34610207575f36600319011261020757602060405160028152f35b34610207575f366003190112610207576020603854604051908152f35b34610207575f366003190112610207576001546040516001600160a01b039091168152602090f35b34610207575f36600319011261020757602060405162278d008152f35b34610207576020366003190112610207576040611016600435611182565b82519182526020820152f35b3461020757602036600319011261020757600435601454811015610207576014548110156109675760145f527fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec0154604051908152602090f35b346102075760203660031901126102075760043560078110156102075760209060150154604051908152f35b34610207575f366003190112610207578061271060209252f35b600b5481101561096757600b5f5260205f2001905f90565b600b541561096757600b5f9081527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db991565b8054821015610967575f5260205f2001905f90565b34610207575f366003190112610207576020604051600a8152f35b34610207575f366003190112610207576020604051600f8152f35b9190820391821161051357565b811561116e570490565b634e487b7160e01b5f52601260045260245ffd5b90815f52600d602052600360405f200154156111dc57600954825f52600a60205260405f205490818111156111d2576111c76111cf92670de0b6b3a764000092611157565b0480936115a6565b90565b505090505f905f90565b5f91508190565b156111ea57565b60405162461bcd60e51b815260206004820152601060248201526f139bdd081e5bdd5c881858d8dbdd5b9d60821b6044820152606490fd5b6080810190811067ffffffffffffffff8211176106b357604052565b60a0810190811067ffffffffffffffff8211176106b357604052565b90601f8019910116810190811067ffffffffffffffff8211176106b357604052565b90816020910312610207575180151581036102075790565b9190820180921161051357565b8054600160401b8110156106b3576001810180835581101561096757600360609160ff935f5260205f209060021b01845181556020850151600182015560408501516002820155019201511660ff19825416179055565b8181029291811591840414171561051357565b805490600160401b8210156106b35760018201808255821015610967576004916080915f52600560205f2091020192805184556020810151600185015560408101516002850155606081015160038501550151910155565b805f52600d60205260405f209060038201541561153c5761138e60018060a01b0383541633146111e3565b60095491815f52600a60205260405f2054808414611536576113b9670de0b6b3a76400009185611157565b04918215611525576113cb83826115a6565b93815f52600a60205260405f20558380611401575b91505081116113ed575050565b6113ff916113fa91611157565b611679565b565b6114aa9261146b836020945f52600e8552600660405f20611423868254611294565b815501611431858254611294565b9055805f52600f855260405f206040519161144b8361123e565b82528486830152600160408301524260608301526009608083015261130b565b600154905460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810193909352919384929091169082905f9082906044820190565b03925af19081156106f4575f91611506575b50156114ca575f80836113e0565b60405162461bcd60e51b81526020600482015260146024820152731554d115081d1c985b9cd9995c8819985a5b195960621b6044820152606490fd5b61151f915060203d6020116106ed576106e0818361125a565b5f6114bc565b9150505f52600a60205260405f2055565b50505050565b60405162461bcd60e51b815260206004820152600e60248201526d155cd95c881b9bdd08199bdd5b9960921b6044820152606490fd5b8054600160401b8110156106b35761158f9160018201815561110c565b819291549060031b91821b915f19901b1916179055565b805f52600d60205260405f20905f52600e602052600a6115dc60405f2092600f906001600882015411611609575b8301546112f8565b04905481811015611602576115f091611157565b90818111156115fd575090565b905090565b5050505f90565b601491506115d4565b6007549081158015611671575b61165e57670de0b6b3a7640000810290808204670de0b6b3a76400001490151715610513576116599161165191611164565b600954611294565b600955565b8091506116685750565b6113ff90611679565b50801561161f565b6002546001600160a01b0316801561176d5760015460405163a9059cbb60e01b60208083019182526001600160a01b039485166024840152604480840187905283529390921692915f916116ce60648261125a565b519082855af1156106f4575f513d6117645750803b155b61175257506080906005545f52600e60205260405f20611706828254611294565b90557f0f67c60bc8519c61563ac616d368a6df646202c88d10744d736438bc4fbe281660018060a01b03600254169283926040519081525f60208201525f6040820152426060820152a3565b635274afe760e01b5f5260045260245ffd5b600114156116e5565b60405162461bcd60e51b8152602060048201526011602482015270199959481859191c9cc81b9bdd081cd95d607a1b6044820152606490fd5b801580156118da575b6118cf57805f52600d60205260405f2090805f52600e602052600160405f206117d9868254611294565b8155016117e7858254611294565b9055600154825460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810187905291602091839160449183915f91165af180156106f4576118b2575b505f52600f60205261186b60405f20604051906118498261123e565b848252856020830152600160408301524260608301526001608083015261130b565b60018060a01b03905416905f52600d6020525f51602061220c5f395f51905f52606060018060a01b0360405f205416936040519081526001602082015260016040820152a3565b6118ca9060203d6020116106ed576106e0818361125a565b61182d565b50506113ff90611679565b5060055481146117af565b909181158015611a29575b611a1c579061196c91815f52600d60205260405f20825f52600e602052600160405f2061191e848254611294565b81550161192c838254611294565b9055600154815460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101859052956020928792169082905f9082906044820190565b03925af19283156106f4575f51602061220c5f395f51905f52946060946119ff575b505f52600f6020526119ca60405f20604051906119aa8261123e565b87825284602083015288604083015242868301526001608083015261130b565b60018060a01b03905416935f52600d60205260018060a01b0360405f20541694604051918252602082015260016040820152a3565b611a179060203d6020116106ed576106e0818361125a565b61198e565b9150506113ff9150611679565b5060055482146118f0565b5f1981146105135760010190565b93919392909260055481148015611c24575b611c175760015b828110611be65750925f935b80151580611bda575b80611bd0575b15611bc257805f52600d60205260405f20908360068301541015611aa957506005611aa391015494611a34565b93611a67565b600154825460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018a905296989597509395949193919291602091869160449183915f91165af19283156106f4575f51602061220c5f395f51905f5294606094611ba6575b50805f52600e602052600260405f20611b26858254611294565b815501611b34848254611294565b90555f52600f602052611b7160405f2060405190611b518261123e565b87825284602083015288604083015242868301526002608083015261130b565b60018060a01b03905416935f52600d60205260018060a01b0360405f20541694604051918252602082015260026040820152a3565b611bbd9060203d81116106ed576106e0818361125a565b611b0c565b505050916113ff9150611679565b50600f8510611a76565b50600554811415611a70565b905f52600d602052600560405f2001549081158015611c0c575b611bc257600101611a5b565b506005548214611c00565b5050916113ff9150611679565b508015611a54565b9294939491909183158015611e90575b8015611e88575b611e79579491611c538383611164565b95611c67611c6185896112f8565b84611157565b945f948593849260015b601e8510611cab575b50505050505050611c8d92939450611157565b80611c9c575b50806116685750565b611ca590611679565b5f611c93565b8192939495969891158015611e6e575b611e5157825f52600d60205260405f20928c88600686015410155f14611e325782611ce5916112f8565b5f828152600d6020908152604080832054600154915163a9059cbb60e01b81526001600160a01b039182166004820181905260248201879052909894909392899260449284929091165af19384156106f457611df096611dea95611e16575b50805f52600e602052600360405f20611d5e868254611294565b815501611d6c858254611294565b90555f52600f602052611daa60405f2060405190611d898261123e565b8a82528560208301528d60408301524260608301526004608083015261130b565b875f52600d60205260018060a01b0360405f205416905f51602061220c5f395f51905f5260608d60405190878252602082015260046040820152a3611294565b98611294565b936001915b84861015611e1157600560019101549101939291959495611c71565b611c7a565b611e2d9060203d81116106ed576106e0818361125a565b611d44565b5050918483999692991015611df55791611e4b90611a34565b91611df5565b50975050505050509050611e66929350611157565b806116685750565b506005548314611cbb565b509150506113ff919250611679565b508515611c43565b506005548414611c3c565b90815f52604260205260ff600460405f2001541615611eb8575050565b611ec5603d548214612119565b805f526040602052611ee160ff600860405f2001541615612155565b815f52600d60205260405f209160108301548015611fc357600f840154936283d6008501809511610513577f42ee5ef523a95c6fb3ffdd2e9b34955b83ea8c2b11ff268c87ae6ea25556eaac94611f5b9211159060056012600a6006840154101592015410159082611fbb575b5081611fb3575b50612190565b805f52604260205260405f20600160048201918482845492611f8060ff8516156121cb565b428155015560ff1916179055611fae6040519283924291846040919493926060820195825260208201520152565b0390a1565b90505f611f55565b91505f611f4e565b60405162461bcd60e51b8152602060048201526011602482015270055736572206e6f74206c6576656c20313607c1b6044820152606490fd5b90815f52604960205260ff600460405f2001541615612019575050565b6120266044548214612119565b805f52604760205261204260ff600860405f2001541615612155565b815f52600d60205260405f2091601183015480156120e057600f8401549363025143008501809511610513577f42ee5ef523a95c6fb3ffdd2e9b34955b83ea8c2b11ff268c87ae6ea25556eaac946120bb9211159060026013600f6006840154101592015410159082611fbb575081611fb35750612190565b805f52604960205260405f20600160048201918482845492611f8060ff8516156121cb565b60405162461bcd60e51b815260206004820152601160248201527055736572206e6f74206c6576656c20313560781b6044820152606490fd5b1561212057565b60405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081c9bdd5b99609a1b6044820152606490fd5b1561215c57565b60405162461bcd60e51b815260206004820152600c60248201526b149bdd5b990818db1bdcd95960a21b6044820152606490fd5b1561219757565b60405162461bcd60e51b815260206004820152600c60248201526b4e6f7420656c696769626c6560a01b6044820152606490fd5b156121d257565b60405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e48145d585b1a599a5959607a1b6044820152606490fdfee17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e3a264697066735822122084a58ff3a9a9de9170510864ecde57625647ce5dc97e145bc75e121fce72195964736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0x10A8 JUMPI POP DUP1 PUSH4 0x2132D204 EQ PUSH2 0x107C JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0x1022 JUMPI DUP1 PUSH4 0x23FD338E EQ PUSH2 0xA9B JUMPI DUP1 PUSH4 0x24513088 EQ PUSH2 0xFF8 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0xFDB JUMPI DUP1 PUSH4 0x2AE0EE0D EQ PUSH2 0xF37 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0xFB3 JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0xF96 JUMPI DUP1 PUSH4 0x31BB6A30 EQ PUSH2 0xF7B JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0xF5E JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0xF3C JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0xF37 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0xEDD JUMPI DUP1 PUSH4 0x45977D03 EQ PUSH2 0xABD JUMPI DUP1 PUSH4 0x4B8CBF9B EQ PUSH2 0xAA0 JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0xA9B JUMPI DUP1 PUSH4 0x5B62D1D5 EQ PUSH2 0xA7E JUMPI DUP1 PUSH4 0x705FEE2D EQ PUSH2 0xA60 JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0xA43 JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0xA26 JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x9FE JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x9D2 JUMPI DUP1 PUSH4 0x9B40AB97 EQ PUSH2 0x9B5 JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x998 JUMPI DUP1 PUSH4 0xA5E52B99 EQ PUSH2 0x97B JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x90D JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x8F0 JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x8B8 JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x894 JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x877 JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x85A JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0xD2F0490D EQ PUSH2 0x813 JUMPI DUP1 PUSH4 0xD54D6DDB EQ PUSH2 0x7F5 JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x7B0 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x78D JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x770 JUMPI DUP1 PUSH4 0xF207564E EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x20B JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x1EA JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD CALLER PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x736 JUMPI DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD ISZERO PUSH2 0x6FF JUMPI PUSH1 0x1 SLOAD PUSH0 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x2C0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28A PUSH2 0x10DA JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x44 DUP3 ADD MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x6F4 JUMPI PUSH2 0x6C7 JUMPI JUMPDEST POP PUSH1 0x5 SLOAD SWAP1 PUSH2 0x2E1 PUSH1 0x6 SLOAD DUP1 SWAP4 PUSH2 0x1294 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x513 JUMPI PUSH1 0x6 SSTORE CALLER PUSH0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP4 SLOAD AND OR DUP3 SSTORE TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE DUP3 PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x4 DUP3 ADD DUP2 DUP2 SSTORE PUSH1 0x1 PUSH1 0x6 DUP5 ADD SSTORE PUSH2 0x344 PUSH2 0x10DA JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0xA DUP5 ADD SSTORE TIMESTAMP PUSH1 0xF DUP5 ADD SSTORE DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH0 KECCAK256 ADD DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI SSTORE DUP2 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH2 0x389 DUP5 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x6B3 JUMPI DUP1 PUSH1 0x1 PUSH2 0x3AA SWAP3 ADD PUSH1 0x7 SSTORE PUSH1 0x7 PUSH2 0x110C JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP7 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x9 SLOAD DUP5 PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH0 PUSH0 SWAP1 DUP4 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 SLOAD LT PUSH0 EQ PUSH2 0x588 JUMPI POP POP DUP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x5 PUSH1 0x40 PUSH0 KECCAK256 ADD SSTORE DUP2 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI SSTORE DUP2 JUMPDEST PUSH0 SWAP1 JUMPDEST PUSH1 0xF DUP3 LT PUSH2 0x527 JUMPI JUMPDEST POP POP PUSH2 0x461 PUSH2 0x430 PUSH2 0x10DA JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR PUSH2 0x443 DUP3 PUSH2 0x1222 JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 DUP6 ADD PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x469 PUSH2 0x10DA JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 PUSH1 0x5 DUP3 MUL DUP3 ISZERO SWAP3 DUP1 DUP3 DIV PUSH1 0x5 EQ DUP5 OR ISZERO PUSH2 0x513 JUMPI PUSH1 0x3C DUP2 MUL SWAP4 DUP2 DUP6 DIV PUSH1 0x3C EQ DUP2 OR ISZERO PUSH2 0x513 JUMPI PUSH1 0x19 DUP3 MUL SWAP2 DUP3 DIV PUSH1 0x19 EQ OR ISZERO PUSH2 0x513 JUMPI PUSH2 0x4CC SWAP4 PUSH2 0x4C4 PUSH1 0x64 DUP10 SWAP5 PUSH2 0x4BE DUP3 DUP1 SWAP7 DIV PUSH2 0x1612 JUMP JUMPDEST DIV PUSH2 0x1679 JUMP JUMPDEST DIV SWAP2 SLOAD PUSH2 0x17A6 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x309BB360E8B69C23937CCC5FB01F9AEEEAD1C95A99604E175113FF82F2B1723A PUSH1 0x20 CALLER SWAP3 LOG4 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x583 JUMPI DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH0 KECCAK256 ADD DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI SSTORE DUP1 PUSH0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x56A DUP7 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1572 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x5 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP2 ADD SWAP1 PUSH2 0x41A JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xF DUP2 LT PUSH2 0x59A JUMPI JUMPDEST POP POP PUSH2 0x417 JUMP JUMPDEST DUP2 PUSH2 0x6AE JUMPI DUP5 PUSH0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP3 ADD DUP1 DUP4 GT PUSH2 0x513 JUMPI PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x2 DUP3 ADD DUP1 DUP4 GT PUSH2 0x513 JUMPI PUSH1 0xFF DUP2 GT PUSH2 0x513 JUMPI PUSH1 0x1 SWAP1 SHL GT PUSH2 0x5E5 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x58A JUMP JUMPDEST SWAP4 SWAP3 PUSH0 SWAP6 SWAP2 SWAP6 JUMPDEST DUP5 PUSH0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP7 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x6A0 JUMPI DUP7 PUSH2 0x68F JUMPI DUP5 PUSH0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP7 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x62E DUP2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x110C JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP1 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 SLOAD LT PUSH2 0x653 JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x5EC JUMP JUMPDEST SWAP2 SWAP4 POP SWAP6 POP DUP7 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x5 PUSH1 0x40 PUSH0 KECCAK256 ADD SSTORE DUP1 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI SSTORE SWAP2 PUSH1 0x1 DUP1 SWAP7 SWAP1 PUSH2 0x64A JUMP JUMPDEST POP SWAP3 SWAP4 PUSH1 0x1 SWAP1 SWAP6 SWAP2 SWAP6 JUMPDEST SWAP1 POP PUSH2 0x5DD JUMP JUMPDEST POP SWAP3 SWAP4 PUSH1 0x1 SWAP1 SWAP6 SWAP2 SWAP6 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x6E8 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6ED JUMPI JUMPDEST PUSH2 0x6E0 DUP2 DUP4 PUSH2 0x125A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x127C JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x24B73B30B634B21039B837B739B7B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x3E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH2 0x811 PUSH1 0x4 CALLDATALOAD PUSH2 0x1363 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x3D SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH2 0x8E1 PUSH1 0x20 SWAP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x967 JUMPI PUSH1 0x13 PUSH0 MSTORE PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x83D600 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x45 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2514300 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x46 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1121 JUMP JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x44 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xAF1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND CALLER EQ PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x6 DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH1 0xF DUP4 LT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xB0B DUP4 PUSH2 0x10C2 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 SWAP4 SWAP1 SWAP4 SHL SWAP2 SWAP1 SWAP2 SHR PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x6F4 JUMPI PUSH2 0xE84 JUMPI JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI SSTORE PUSH1 0xA DUP3 ADD PUSH2 0xB7E DUP3 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xBAE PUSH1 0x40 MLOAD PUSH2 0xB8F DUP2 PUSH2 0x1222 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 DUP5 ADD PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x5 DUP2 MUL DUP2 ISZERO SWAP1 DUP3 DUP2 DIV PUSH1 0x5 EQ DUP3 OR ISZERO PUSH2 0x513 JUMPI PUSH1 0x19 DUP4 MUL DUP4 DUP2 DIV PUSH1 0x19 EQ DUP4 OR ISZERO PUSH2 0x513 JUMPI PUSH2 0xBE4 SWAP2 PUSH2 0x4BE PUSH1 0x64 DUP1 SWAP4 DIV PUSH2 0x1612 JUMP JUMPDEST PUSH1 0x14 DUP3 MUL SWAP2 DUP3 DIV PUSH1 0x14 EQ OR ISZERO PUSH2 0x513 JUMPI PUSH1 0x64 SWAP1 DIV SWAP1 PUSH1 0x4 DUP2 ADD SWAP2 DUP3 SLOAD SWAP4 PUSH1 0x1 DUP2 ADD SWAP5 DUP6 DUP3 GT PUSH2 0x513 JUMPI DUP3 PUSH2 0xC1E DUP8 PUSH2 0xC36 SWAP6 DUP11 DUP3 SWAP6 PUSH2 0x18E5 JUMP JUMPDEST DUP8 PUSH1 0x5 DUP7 ADD PUSH2 0xC30 DUP5 DUP5 DUP5 DUP5 SLOAD PUSH2 0x1A42 JUMP JUMPDEST SLOAD PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0xA DUP4 EQ PUSH2 0xD9E JUMPI JUMPDEST PUSH1 0xF DUP4 EQ PUSH2 0xCAA JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x60 DUP3 ADD MSTORE PUSH21 0x53706F6E736F727368697020737472756374757265 PUSH1 0x58 SHL PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0xAE1560E7D725CAF8D266D531BF32F170B87264ECA8D1265202C334CFEB5BC382 PUSH1 0xA0 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x11 TIMESTAMP SWAP2 ADD SSTORE DUP3 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 SLOAD PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x13 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x513 JUMPI DUP1 PUSH1 0x2 SWAP3 SSTORE LT ISZERO SWAP1 DUP2 PUSH2 0xD80 JUMPI JUMPDEST DUP2 PUSH2 0xD70 JUMPI JUMPDEST POP PUSH2 0xD5A JUMPI JUMPDEST PUSH1 0x2 PUSH1 0x13 DUP3 ADD SLOAD LT ISZERO SWAP1 DUP2 PUSH2 0xD37 JUMPI JUMPDEST DUP2 PUSH2 0xD28 JUMPI JUMPDEST POP PUSH2 0xD17 JUMPI JUMPDEST DUP3 DUP1 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0xD23 PUSH1 0x44 SLOAD DUP4 PUSH2 0x1FFC JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH1 0xF SWAP2 POP PUSH1 0x6 ADD SLOAD EQ DUP4 PUSH2 0xD0A JUMP JUMPDEST SWAP1 POP PUSH1 0x11 DUP2 ADD SLOAD PUSH1 0xF DUP3 ADD SLOAD SWAP1 PUSH4 0x2514300 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI GT ISZERO SWAP1 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0xD6B PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x44 SLOAD SWAP1 PUSH2 0x1FFC JUMP JUMPDEST PUSH2 0xCF4 JUMP JUMPDEST PUSH1 0xF SWAP2 POP PUSH1 0x6 ADD SLOAD LT ISZERO DUP5 PUSH2 0xCEE JUMP JUMPDEST SWAP1 POP PUSH1 0xF DUP2 ADD SLOAD PUSH4 0x2514300 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x513 JUMPI TIMESTAMP GT ISZERO SWAP1 PUSH2 0xCE8 JUMP JUMPDEST TIMESTAMP PUSH1 0x10 DUP3 ADD SSTORE PUSH0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SLOAD DUP4 MSTORE SWAP2 KECCAK256 PUSH1 0x12 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 LT PUSH2 0x513 JUMPI DUP1 PUSH1 0x5 SWAP3 SSTORE LT ISZERO SWAP1 DUP2 PUSH2 0xE67 JUMPI JUMPDEST DUP2 PUSH2 0xE57 JUMPI JUMPDEST POP PUSH2 0xE41 JUMPI JUMPDEST PUSH1 0x5 PUSH1 0x12 DUP3 ADD SLOAD LT ISZERO SWAP1 DUP2 PUSH2 0xE1F JUMPI JUMPDEST DUP2 PUSH2 0xE10 JUMPI JUMPDEST POP ISZERO PUSH2 0xC3F JUMPI PUSH2 0xE0B PUSH1 0x3D SLOAD DUP6 PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0xC3F JUMP JUMPDEST PUSH1 0xA SWAP2 POP PUSH1 0x6 ADD SLOAD EQ DUP6 PUSH2 0xDF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x10 DUP2 ADD SLOAD PUSH1 0xF DUP3 ADD SLOAD SWAP1 PUSH3 0x83D600 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI GT ISZERO SWAP1 PUSH2 0xDF3 JUMP JUMPDEST PUSH2 0xE52 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x3D SLOAD SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0xA SWAP2 POP PUSH1 0x6 ADD SLOAD LT ISZERO DUP7 PUSH2 0xDDD JUMP JUMPDEST SWAP1 POP PUSH1 0xF DUP2 ADD SLOAD PUSH3 0x83D600 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x513 JUMPI TIMESTAMP GT ISZERO SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0xE9C SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6ED JUMPI PUSH2 0x6E0 DUP2 DUP4 PUSH2 0x125A JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x105B1C9958591E48185D081B585E081B195D995B PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x967 JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x113C JUMP JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x40 PUSH2 0x1016 PUSH1 0x4 CALLDATALOAD PUSH2 0x1182 JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x967 JUMPI PUSH1 0x14 PUSH0 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x967 JUMPI PUSH1 0xB PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD ISZERO PUSH2 0x967 JUMPI PUSH1 0xB PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP2 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x967 JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x207 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x207 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x513 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x116E JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD ISZERO PUSH2 0x11DC JUMPI PUSH1 0x9 SLOAD DUP3 PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP2 DUP2 GT ISZERO PUSH2 0x11D2 JUMPI PUSH2 0x11C7 PUSH2 0x11CF SWAP3 PUSH8 0xDE0B6B3A7640000 SWAP3 PUSH2 0x1157 JUMP JUMPDEST DIV DUP1 SWAP4 PUSH2 0x15A6 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP SWAP1 POP PUSH0 SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH0 SWAP2 POP DUP2 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x11EA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081E5BDD5C881858D8DBDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x207 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x207 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x513 JUMPI JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE DUP2 LT ISZERO PUSH2 0x967 JUMPI PUSH1 0x3 PUSH1 0x60 SWAP2 PUSH1 0xFF SWAP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD DUP5 MLOAD DUP2 SSTORE PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE ADD SWAP3 ADD MLOAD AND PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x513 JUMPI JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x967 JUMPI PUSH1 0x4 SWAP2 PUSH1 0x80 SWAP2 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP3 DUP1 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 DUP3 ADD SLOAD ISZERO PUSH2 0x153C JUMPI PUSH2 0x138E PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND CALLER EQ PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP2 DUP2 PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD DUP1 DUP5 EQ PUSH2 0x1536 JUMPI PUSH2 0x13B9 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP6 PUSH2 0x1157 JUMP JUMPDEST DIV SWAP2 DUP3 ISZERO PUSH2 0x1525 JUMPI PUSH2 0x13CB DUP4 DUP3 PUSH2 0x15A6 JUMP JUMPDEST SWAP4 DUP2 PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP4 DUP1 PUSH2 0x1401 JUMPI JUMPDEST SWAP2 POP POP DUP2 GT PUSH2 0x13ED JUMPI POP POP JUMP JUMPDEST PUSH2 0x13FF SWAP2 PUSH2 0x13FA SWAP2 PUSH2 0x1157 JUMP JUMPDEST PUSH2 0x1679 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x14AA SWAP3 PUSH2 0x146B DUP4 PUSH1 0x20 SWAP5 PUSH0 MSTORE PUSH1 0xE DUP6 MSTORE PUSH1 0x6 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1423 DUP7 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x1431 DUP6 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH0 MSTORE PUSH1 0xF DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x144B DUP4 PUSH2 0x123E JUMP JUMPDEST DUP3 MSTORE DUP5 DUP7 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x9 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP4 DUP5 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP3 SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x6F4 JUMPI PUSH0 SWAP2 PUSH2 0x1506 JUMPI JUMPDEST POP ISZERO PUSH2 0x14CA JUMPI PUSH0 DUP1 DUP4 PUSH2 0x13E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1554D115081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x151F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6ED JUMPI PUSH2 0x6E0 DUP2 DUP4 PUSH2 0x125A JUMP JUMPDEST PUSH0 PUSH2 0x14BC JUMP JUMPDEST SWAP2 POP POP PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x155CD95C881B9BDD08199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x158F SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x110C JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xA PUSH2 0x15DC PUSH1 0x40 PUSH0 KECCAK256 SWAP3 PUSH1 0xF SWAP1 PUSH1 0x1 PUSH1 0x8 DUP3 ADD SLOAD GT PUSH2 0x1609 JUMPI JUMPDEST DUP4 ADD SLOAD PUSH2 0x12F8 JUMP JUMPDEST DIV SWAP1 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1602 JUMPI PUSH2 0x15F0 SWAP2 PUSH2 0x1157 JUMP JUMPDEST SWAP1 DUP2 DUP2 GT ISZERO PUSH2 0x15FD JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x14 SWAP2 POP PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1671 JUMPI JUMPDEST PUSH2 0x165E JUMPI PUSH8 0xDE0B6B3A7640000 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH8 0xDE0B6B3A7640000 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x513 JUMPI PUSH2 0x1659 SWAP2 PUSH2 0x1651 SWAP2 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST DUP1 SWAP2 POP PUSH2 0x1668 JUMPI POP JUMP JUMPDEST PUSH2 0x13FF SWAP1 PUSH2 0x1679 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x161F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x176D JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP1 DUP5 ADD DUP8 SWAP1 MSTORE DUP4 MSTORE SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH0 SWAP2 PUSH2 0x16CE PUSH1 0x64 DUP3 PUSH2 0x125A JUMP JUMPDEST MLOAD SWAP1 DUP3 DUP6 GAS CALL ISZERO PUSH2 0x6F4 JUMPI PUSH0 MLOAD RETURNDATASIZE PUSH2 0x1764 JUMPI POP DUP1 EXTCODESIZE ISZERO JUMPDEST PUSH2 0x1752 JUMPI POP PUSH1 0x80 SWAP1 PUSH1 0x5 SLOAD PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1706 DUP3 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST SWAP1 SSTORE PUSH32 0xF67C60BC8519C61563AC616D368A6DF646202C88D10744D736438BC4FBE2816 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP3 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE LOG3 JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x199959481859191C9CC81B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x18DA JUMPI JUMPDEST PUSH2 0x18CF JUMPI DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP1 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x17D9 DUP7 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x17E7 DUP6 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 SLOAD DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x6F4 JUMPI PUSH2 0x18B2 JUMPI JUMPDEST POP PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x186B PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1849 DUP3 PUSH2 0x123E JUMP JUMPDEST DUP5 DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND SWAP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH0 MLOAD PUSH1 0x20 PUSH2 0x220C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x60 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE LOG3 JUMP JUMPDEST PUSH2 0x18CA SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6ED JUMPI PUSH2 0x6E0 DUP2 DUP4 PUSH2 0x125A JUMP JUMPDEST PUSH2 0x182D JUMP JUMPDEST POP POP PUSH2 0x13FF SWAP1 PUSH2 0x1679 JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP2 EQ PUSH2 0x17AF JUMP JUMPDEST SWAP1 SWAP2 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1A29 JUMPI JUMPDEST PUSH2 0x1A1C JUMPI SWAP1 PUSH2 0x196C SWAP2 DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x191E DUP5 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x192C DUP4 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 SLOAD DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP6 PUSH1 0x20 SWAP3 DUP8 SWAP3 AND SWAP1 DUP3 SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x6F4 JUMPI PUSH0 MLOAD PUSH1 0x20 PUSH2 0x220C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP5 PUSH1 0x60 SWAP5 PUSH2 0x19FF JUMPI JUMPDEST POP PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x19CA PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x19AA DUP3 PUSH2 0x123E JUMP JUMPDEST DUP8 DUP3 MSTORE DUP5 PUSH1 0x20 DUP4 ADD MSTORE DUP9 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP DUP7 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND SWAP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE LOG3 JUMP JUMPDEST PUSH2 0x1A17 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6ED JUMPI PUSH2 0x6E0 DUP2 DUP4 PUSH2 0x125A JUMP JUMPDEST PUSH2 0x198E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13FF SWAP2 POP PUSH2 0x1679 JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP3 EQ PUSH2 0x18F0 JUMP JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x513 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP4 SWAP2 SWAP4 SWAP3 SWAP1 SWAP3 PUSH1 0x5 SLOAD DUP2 EQ DUP1 ISZERO PUSH2 0x1C24 JUMPI JUMPDEST PUSH2 0x1C17 JUMPI PUSH1 0x1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1BE6 JUMPI POP SWAP3 PUSH0 SWAP4 JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x1BDA JUMPI JUMPDEST DUP1 PUSH2 0x1BD0 JUMPI JUMPDEST ISZERO PUSH2 0x1BC2 JUMPI DUP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP4 PUSH1 0x6 DUP4 ADD SLOAD LT ISZERO PUSH2 0x1AA9 JUMPI POP PUSH1 0x5 PUSH2 0x1AA3 SWAP2 ADD SLOAD SWAP5 PUSH2 0x1A34 JUMP JUMPDEST SWAP4 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE SWAP7 SWAP9 SWAP6 SWAP8 POP SWAP4 SWAP6 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 SWAP2 PUSH1 0x20 SWAP2 DUP7 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x6F4 JUMPI PUSH0 MLOAD PUSH1 0x20 PUSH2 0x220C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP5 PUSH1 0x60 SWAP5 PUSH2 0x1BA6 JUMPI JUMPDEST POP DUP1 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1B26 DUP6 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x1B34 DUP5 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST SWAP1 SSTORE PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x1B71 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1B51 DUP3 PUSH2 0x123E JUMP JUMPDEST DUP8 DUP3 MSTORE DUP5 PUSH1 0x20 DUP4 ADD MSTORE DUP9 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP DUP7 DUP4 ADD MSTORE PUSH1 0x2 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SLOAD AND SWAP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x40 DUP3 ADD MSTORE LOG3 JUMP JUMPDEST PUSH2 0x1BBD SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x6ED JUMPI PUSH2 0x6E0 DUP2 DUP4 PUSH2 0x125A JUMP JUMPDEST PUSH2 0x1B0C JUMP JUMPDEST POP POP POP SWAP2 PUSH2 0x13FF SWAP2 POP PUSH2 0x1679 JUMP JUMPDEST POP PUSH1 0xF DUP6 LT PUSH2 0x1A76 JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP2 EQ ISZERO PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1C0C JUMPI JUMPDEST PUSH2 0x1BC2 JUMPI PUSH1 0x1 ADD PUSH2 0x1A5B JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP3 EQ PUSH2 0x1C00 JUMP JUMPDEST POP POP SWAP2 PUSH2 0x13FF SWAP2 POP PUSH2 0x1679 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1A54 JUMP JUMPDEST SWAP3 SWAP5 SWAP4 SWAP5 SWAP2 SWAP1 SWAP2 DUP4 ISZERO DUP1 ISZERO PUSH2 0x1E90 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1E88 JUMPI JUMPDEST PUSH2 0x1E79 JUMPI SWAP5 SWAP2 PUSH2 0x1C53 DUP4 DUP4 PUSH2 0x1164 JUMP JUMPDEST SWAP6 PUSH2 0x1C67 PUSH2 0x1C61 DUP6 DUP10 PUSH2 0x12F8 JUMP JUMPDEST DUP5 PUSH2 0x1157 JUMP JUMPDEST SWAP5 PUSH0 SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH1 0x1 JUMPDEST PUSH1 0x1E DUP6 LT PUSH2 0x1CAB JUMPI JUMPDEST POP POP POP POP POP POP POP PUSH2 0x1C8D SWAP3 SWAP4 SWAP5 POP PUSH2 0x1157 JUMP JUMPDEST DUP1 PUSH2 0x1C9C JUMPI JUMPDEST POP DUP1 PUSH2 0x1668 JUMPI POP JUMP JUMPDEST PUSH2 0x1CA5 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH0 PUSH2 0x1C93 JUMP JUMPDEST DUP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP9 SWAP2 ISZERO DUP1 ISZERO PUSH2 0x1E6E JUMPI JUMPDEST PUSH2 0x1E51 JUMPI DUP3 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 DUP13 DUP9 PUSH1 0x6 DUP7 ADD SLOAD LT ISZERO PUSH0 EQ PUSH2 0x1E32 JUMPI DUP3 PUSH2 0x1CE5 SWAP2 PUSH2 0x12F8 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP9 SWAP5 SWAP1 SWAP4 SWAP3 DUP10 SWAP3 PUSH1 0x44 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x6F4 JUMPI PUSH2 0x1DF0 SWAP7 PUSH2 0x1DEA SWAP6 PUSH2 0x1E16 JUMPI JUMPDEST POP DUP1 PUSH0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1D5E DUP7 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST DUP2 SSTORE ADD PUSH2 0x1D6C DUP6 DUP3 SLOAD PUSH2 0x1294 JUMP JUMPDEST SWAP1 SSTORE PUSH0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x1DAA PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1D89 DUP3 PUSH2 0x123E JUMP JUMPDEST DUP11 DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE DUP14 PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x130B JUMP JUMPDEST DUP8 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x220C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE PUSH1 0x60 DUP14 PUSH1 0x40 MLOAD SWAP1 DUP8 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 PUSH1 0x40 DUP3 ADD MSTORE LOG3 PUSH2 0x1294 JUMP JUMPDEST SWAP9 PUSH2 0x1294 JUMP JUMPDEST SWAP4 PUSH1 0x1 SWAP2 JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x1E11 JUMPI PUSH1 0x5 PUSH1 0x1 SWAP2 ADD SLOAD SWAP2 ADD SWAP4 SWAP3 SWAP2 SWAP6 SWAP5 SWAP6 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x1C7A JUMP JUMPDEST PUSH2 0x1E2D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x6ED JUMPI PUSH2 0x6E0 DUP2 DUP4 PUSH2 0x125A JUMP JUMPDEST PUSH2 0x1D44 JUMP JUMPDEST POP POP SWAP2 DUP5 DUP4 SWAP10 SWAP7 SWAP3 SWAP10 LT ISZERO PUSH2 0x1DF5 JUMPI SWAP2 PUSH2 0x1E4B SWAP1 PUSH2 0x1A34 JUMP JUMPDEST SWAP2 PUSH2 0x1DF5 JUMP JUMPDEST POP SWAP8 POP POP POP POP POP POP SWAP1 POP PUSH2 0x1E66 SWAP3 SWAP4 POP PUSH2 0x1157 JUMP JUMPDEST DUP1 PUSH2 0x1668 JUMPI POP JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP4 EQ PUSH2 0x1CBB JUMP JUMPDEST POP SWAP2 POP POP PUSH2 0x13FF SWAP2 SWAP3 POP PUSH2 0x1679 JUMP JUMPDEST POP DUP6 ISZERO PUSH2 0x1C43 JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP5 EQ PUSH2 0x1C3C JUMP JUMPDEST SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x1EB8 JUMPI POP POP JUMP JUMPDEST PUSH2 0x1EC5 PUSH1 0x3D SLOAD DUP3 EQ PUSH2 0x2119 JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH1 0x20 MSTORE PUSH2 0x1EE1 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x2155 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x10 DUP4 ADD SLOAD DUP1 ISZERO PUSH2 0x1FC3 JUMPI PUSH1 0xF DUP5 ADD SLOAD SWAP4 PUSH3 0x83D600 DUP6 ADD DUP1 SWAP6 GT PUSH2 0x513 JUMPI PUSH32 0x42EE5EF523A95C6FB3FFDD2E9B34955B83EA8C2B11FF268C87AE6EA25556EAAC SWAP5 PUSH2 0x1F5B SWAP3 GT ISZERO SWAP1 PUSH1 0x5 PUSH1 0x12 PUSH1 0xA PUSH1 0x6 DUP5 ADD SLOAD LT ISZERO SWAP3 ADD SLOAD LT ISZERO SWAP1 DUP3 PUSH2 0x1FBB JUMPI JUMPDEST POP DUP2 PUSH2 0x1FB3 JUMPI JUMPDEST POP PUSH2 0x2190 JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x42 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0x4 DUP3 ADD SWAP2 DUP5 DUP3 DUP5 SLOAD SWAP3 PUSH2 0x1F80 PUSH1 0xFF DUP6 AND ISZERO PUSH2 0x21CB JUMP JUMPDEST TIMESTAMP DUP2 SSTORE ADD SSTORE PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH2 0x1FAE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 TIMESTAMP SWAP2 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1F55 JUMP JUMPDEST SWAP2 POP PUSH0 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x55736572206E6F74206C6576656C20313 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x2019 JUMPI POP POP JUMP JUMPDEST PUSH2 0x2026 PUSH1 0x44 SLOAD DUP3 EQ PUSH2 0x2119 JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x47 PUSH1 0x20 MSTORE PUSH2 0x2042 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x2155 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x11 DUP4 ADD SLOAD DUP1 ISZERO PUSH2 0x20E0 JUMPI PUSH1 0xF DUP5 ADD SLOAD SWAP4 PUSH4 0x2514300 DUP6 ADD DUP1 SWAP6 GT PUSH2 0x513 JUMPI PUSH32 0x42EE5EF523A95C6FB3FFDD2E9B34955B83EA8C2B11FF268C87AE6EA25556EAAC SWAP5 PUSH2 0x20BB SWAP3 GT ISZERO SWAP1 PUSH1 0x2 PUSH1 0x13 PUSH1 0xF PUSH1 0x6 DUP5 ADD SLOAD LT ISZERO SWAP3 ADD SLOAD LT ISZERO SWAP1 DUP3 PUSH2 0x1FBB JUMPI POP DUP2 PUSH2 0x1FB3 JUMPI POP PUSH2 0x2190 JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x49 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0x4 DUP3 ADD SWAP2 DUP5 DUP3 DUP5 SLOAD SWAP3 PUSH2 0x1F80 PUSH1 0xFF DUP6 AND ISZERO PUSH2 0x21CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x55736572206E6F74206C6576656C203135 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2120 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59081C9BDD5B99 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x215C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x149BDD5B990818DB1BDCD959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2197 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F7420656C696769626C65 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x21D2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x185B1C9958591E48145D585B1A599A5959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID RJUMPI 0x7B61 0xD3 0x24 0xCE OR ORIGIN DUP16 NUMBER RETURNDATASIZE EXP 0xB6 0x25 DUP2 0xC0 CREATE 0xAA SWAP10 PUSH20 0x12BAE80FBDFCD2AA9B91D6E3A264697066735822 SLT KECCAK256 DUP5 0xA5 DUP16 RETURN 0xA9 0xA9 0xDE SWAP2 PUSH17 0x510864ECDE57625647CE5DC97E145BC75E SLT 0x1F 0xCE PUSH19 0x195964736F6C634300081E0033000000000000 ",
							"sourceMap": "124:20066:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;8038:38:8;124:20066:7;;;;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;;-1:-1:-1;;;;;124:20066:7;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;298:10;124:20066;;286:11;124:20066;;;;;;;;;;;356:5;124:20066;;356:20;124:20066;;;356:20;124:20066;356:24;124:20066;;;;;;;;469:57;;-1:-1:-1;;;;;124:20066:7;514:11;;:::i;:::-;124:20066;;;;-1:-1:-1;;;469:57:7;;298:10;124:20066;469:57;;124:20066;507:4;124:20066;;;;356:20;124:20066;;;;;;;;;;;;;;;;;;;;;;469:57;;;;;;;;;;;124:20066;;602:12;124:20066;;602:25;617:10;124:20066;602:25;;;:::i;:::-;124:20066;;;;;;;;;617:10;124:20066;298:10;124:20066;;286:11;124:20066;;;;;;;;;;356:5;124:20066;;;;;298:10;;124:20066;;;;;;;;;822:15;804;;;124:20066;848:7;356:20;848:7;;124:20066;;878:14;;124:20066;;;;617:10;916;;124:20066;961:11;;:::i;:::-;124:20066;;;356:20;124:20066;;941:17;;;124:20066;822:15;983:21;;;124:20066;;;;356:5;124:20066;;1088:28;124:20066;;;1088:28;124:20066;;;;;;;;;;;;;;;1132:15;124:20066;;1132:43;124:20066;;;;1132:43;:::i;:::-;1088:28;124:20066;-1:-1:-1;;;124:20066:7;;;;;;;;;;1088:28;124:20066;1088:28;124:20066;:::i;:::-;;;;356:20;124:20066;;;;;;;;;;;;;;;1257:19;124:20066;;;;941:17;124:20066;;;;;;;;;;;;9731:12;124:20066;;804:15;124:20066;;;;9731:28;9728:1000;804:15;;;124:20066;;;;;356:5;124:20066;;;602:12;124:20066;;;9776:26;124:20066;;;;9731:12;124:20066;;;;;;;;;;;;;;;;;9874:21;9728:1000;124:20066;10790:233;10804:11;983:21;10804:11;;;;10790:233;1454:11;;1404:166;1454:11;;:::i;:::-;124:20066;;;;;356:20;124:20066;;;;;:::i;:::-;;;;;1423:146;;124:20066;822:15;124:20066;1423:146;;124:20066;;1423:146;;;124:20066;;1404:13;;:166;:::i;:::-;1636:11;;:::i;:::-;124:20066;;;356:20;124:20066;;;602:12;124:20066;;;;;;;;602:12;124:20066;;;;;;1776:2;124:20066;;;;;;1776:2;124:20066;;;;;;1919:2;124:20066;;;;;1919:2;124:20066;;;;;2216:71;124:20066;2133:12;1702:3;124:20066;;2049:14;124:20066;;;;2049:14;:::i;:::-;124:20066;2133:12;:::i;:::-;124:20066;;;2216:71;:::i;:::-;124:20066;;356:5;124:20066;;602:12;124:20066;;;;;;;;;;2394:13;;124:20066;;;;;;2331:77;124:20066;298:10;2331:77;;124:20066;;;;;;;9731:12;124:20066;;;;;10817:3;10840:13;;10837:23;;124:20066;;;356:5;124:20066;;1257:19;124:20066;;;10875:31;124:20066;;;;;;;;;;;;;;;10926:5;124:20066;;;;;;;;;;10926:35;124:20066;;;;10926:35;:::i;:::-;124:20066;;356:5;124:20066;;;602:12;124:20066;;;10987:24;124:20066;10817:3;124:20066;10794:8;;;10837:23;10855:5;;9728:1000;124:20066;10026:11;983:21;10026:11;;;;10012:705;9728:1000;;;;10039:3;10108:17;;;124:20066;;;10147:5;124:20066;;;;;;;;;;;;;;;;;;;;;804:15;124:20066;;;;;;;;;;;;;;;-1:-1:-1;10144:558:7;;10039:3;124:20066;;10016:8;;10144:558;10218:8;;124:20066;10218:8;;;10259:3;124:20066;;;10147:5;124:20066;;;;;;;;;;;;;;10228:29;;;;;10289:17;;;124:20066;;;10147:5;124:20066;;;;;;;;;;10345:23;124:20066;;;;10345:23;:::i;:::-;124:20066;;;356:20;124:20066;;;;;9731:12;124:20066;;804:15;124:20066;;;;10398:22;10395:264;;10259:3;;124:20066;;10218:8;;10395:264;124:20066;;;;;;;;356:5;124:20066;;;602:12;124:20066;;;10453:26;124:20066;;;;9731:12;124:20066;;;;;;;;;;;;;;;;;10617:14;124:20066;10617:14;10395:264;;;;10289:17;10301:5;;;124:20066;10301:5;;;;10214:469;10144:558;;;;10228:29;;;;124:20066;10228:29;;;;;;10108:17;10120:5;;124:20066;;;;;;;;;;;;469:57;;;124:20066;469:57;124:20066;469:57;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;124:20066;;;;;;;;;;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;534:24:8;124:20066:7;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;7978:7:8;124:20066:7;;;;;;;;;-1:-1:-1;;124:20066:7;;;;460:30:8;124:20066:7;;;-1:-1:-1;;;;;124:20066:7;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;9487:39:8;124:20066:7;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;1136:1:8;124:20066:7;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;6368:64:8;;;;;124:20066:7;;6368:64:8;124:20066:7;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;7997:34:8;124:20066:7;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;9445:35:8;124:20066:7;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;9424:8:8;124:20066:7;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;1630:540:8;124:20066:7;1630:540:8;;;;;;124:20066:7;1630:540:8;;:::i;:::-;124:20066:7;;;;;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;565:22:8;124:20066:7;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;6092:93:8;124:20066:7;6092:93:8;;;;;;124:20066:7;;;;;;6092:93:8;124:20066:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;791:8:8;124:20066:7;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;9533:34:8;124:20066:7;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;10793:35:8;124:20066:7;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;6439:61:8;;;;;124:20066:7;;6439:61:8;124:20066:7;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;422:28:8;124:20066:7;;;-1:-1:-1;;;;;124:20066:7;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;1473:34:8;124:20066:7;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;7925:6:8;124:20066:7;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;849:8:8;124:20066:7;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;10835:32:8;124:20066:7;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;124:20066:7;;;;;10755:31:8;124:20066:7;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;;;2499:5;124:20066;;;;;2524:55;124:20066;;;;;;;;2548:10;2532:26;2524:55;:::i;:::-;2598:10;;;124:20066;;;2598:15;2611:2;2598:15;;124:20066;;;2717:19;;;:::i;:::-;124:20066;;;;;;-1:-1:-1;;;2845:58:7;;2548:10;124:20066;2845:58;;124:20066;2883:4;124:20066;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;124:20066:7;2845:58;;;;;;;;124:20066;;;;;;;;;;;;;;2950:17;;;:33;124:20066;;;2950:33;:::i;:::-;124:20066;;3028:159;124:20066;;;;;:::i;:::-;;;;;;3047:139;;124:20066;2762:15;124:20066;3047:139;;124:20066;;3047:139;;;124:20066;;3028:13;;:159;:::i;:::-;3337:1;124:20066;;;;;;;;3337:1;124:20066;;;;;;3497:2;124:20066;;;;;3497:2;124:20066;;;;;;3612:12;124:20066;3538:14;3341:3;124:20066;;;3538:14;:::i;3612:12::-;3804:2;124:20066;;;;;3804:2;124:20066;;;;;3341:3;124:20066;;3848:14;124:20066;3848:14;;124:20066;;;;;;;;;;;;;3888:13;;;4197:9;3888:13;;;;;:::i;:::-;3993;3337:1;3993:13;;4031;124:20066;;;;;4031:13;:::i;:::-;124:20066;4197:9;:::i;:::-;2950:17;4260:38;;4257:920;;124:20066;2611:2;5228:34;;5225:872;;124:20066;;;;;;;;3047:139;124:20066;;;;;3047:139;124:20066;;;-1:-1:-1;;;124:20066:7;;;;2762:15;124:20066;;;;6122:77;;2548:10;6122:77;;124:20066;5225:872;5292:16;2762:15;5292:16;;124:20066;;;;2499:5;124:20066;;;;;;;;;2499:5;124:20066;;;;;5511:30;;;124:20066;;;;;;;;;;;1189:1:8;124:20066:7;;5564:52;;5563:115;;;;5225:872;5563:156;;;5225:872;5560:251;;;5225:872;1189:1:8;5511:30:7;5833:27;;124:20066;5833:49;;5832:118;;;;5225:872;5832:156;;;5225:872;5829:257;;;5225:872;;;;;5829:257;6042:15;;124:20066;6042:15;;:::i;:::-;5829:257;;5832:156;2611:2;5955:11;;2598:10;5955:11;124:20066;5955:32;5832:156;;;:118;5887:17;;5292:16;5887:17;;124:20066;2611:2;5908:22;;124:20066;;849:8:8;124:20066:7;;;;;;;5887:62;;5832:118;;;5560:251;5779:15;124:20066;5762:15;;124:20066;5779:15;124:20066;5779:15;;:::i;:::-;5560:251;;5563:156;2611:2;5683:14;;2598:10;5683:14;124:20066;5683:35;;5563:156;;;:115;5633:25;;2611:2;5633:25;;124:20066;849:8:8;124:20066:7;;;;;;;2762:15;5622:55;;5563:115;;;4257:920;2762:15;4328:16;;;124:20066;;;;;2499:5;124:20066;;;;;;;;;;;;4547:31;;;124:20066;;;;;;;-1:-1:-1;124:20066:7;;;3337:1;124:20066;;4601:57;;4600:124;;;;4257:920;4600:169;;;4257:920;4597:272;;;4257:920;3337:1;4547:31;4891:28;;124:20066;4891:54;;4890:128;;;;4257:920;4890:170;;;4257:920;4887:279;;4257:920;4887:279;5118:19;;124:20066;5118:19;;:::i;:::-;4257:920;;4890:170;2950:17;5023:11;;2598:10;5023:11;124:20066;5023:36;4890:170;;;:128;4951:17;;4328:16;4951:17;;124:20066;2611:2;4972:22;;124:20066;;791:8:8;124:20066:7;;;;;;;4951:66;;4890:128;;;4597:272;4833:19;124:20066;4816:15;;124:20066;4833:19;124:20066;4833:19;;:::i;:::-;4597:272;;4600:169;2950:17;4729:14;;2598:10;4729:14;124:20066;4729:39;;4600:169;;;:124;4675:25;;2611:2;4675:25;;124:20066;791:8:8;124:20066:7;;;;;;;2762:15;4664:59;;4600:124;;;2845:58;;;124:20066;2845:58;124:20066;2845:58;;;;;;;:::i;:::-;;;124:20066;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;1206:31:8;124:20066:7;1206:31:8;;;;;;124:20066:7;;;;;;1206:31:8;124:20066:7;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;124:20066:7;;;;;;;1462:4:8;124:20066:7;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;731:6:8;124:20066:7;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;1189:1:8;124:20066:7;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;8085:33:8;124:20066:7;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;;-1:-1:-1;;;;;124:20066:7;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;9372:7:8;124:20066:7;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;6192:105:8;124:20066:7;6192:105:8;;;;;;124:20066:7;;;;;;6192:105:8;124:20066:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;6304:57:8;;;;;124:20066:7;;6304:57:8;124:20066:7;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;683:5:8;124:20066:7;;;;;2717:8;124:20066;;;;;;2717:8;-1:-1:-1;124:20066:7;;-1:-1:-1;124:20066:7;;;-1:-1:-1;124:20066:7;:::o;:::-;514:8;124:20066;;;;514:8;124:20066;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;124:20066:7;;-1:-1:-1;124:20066:7;;;-1:-1:-1;124:20066:7;:::o;:::-;;;;;;-1:-1:-1;;124:20066:7;;;;;;;1025:2:8;124:20066:7;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;1078:2:8;124:20066:7;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;9085:436;;124:20066;-1:-1:-1;124:20066:7;9204:5;124:20066;;9204:17;124:20066;-1:-1:-1;124:20066:7;9204:17;124:20066;9204:22;9200:41;;9266:19;124:20066;;-1:-1:-1;124:20066:7;9311:13;124:20066;;;-1:-1:-1;124:20066:7;;9348:11;;;;;9344:30;;9399:10;9448:35;9399:10;1462:4:8;9399:10:7;;:::i;:::-;124:20066;9448:35;;;:::i;:::-;9085:436;:::o;9344:30::-;9361:13;;;;-1:-1:-1;9361:13:7;-1:-1:-1;9361:13:7;:::o;9200:41::-;-1:-1:-1;;;;;9228:13:7:o;124:20066::-;;;;:::o;:::-;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;124:20066:7;;-1:-1:-1;124:20066:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;;;;;;;;;-1:-1:-1;124:20066:7;;;-1:-1:-1;124:20066:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7328:1747::-;124:20066;-1:-1:-1;124:20066:7;7407:5;124:20066;;;-1:-1:-1;124:20066:7;7444:4;;;;124:20066;7444:9;124:20066;;7487:52;124:20066;;;;;;;;7508:10;7495:23;7487:52;:::i;:::-;7636:19;124:20066;;;-1:-1:-1;124:20066:7;7685:13;124:20066;;;-1:-1:-1;124:20066:7;;7728:19;;;7724:86;;7845:18;1462:4:8;7845:18:7;;;:::i;:::-;124:20066;7899:12;;;7895:133;;8105:37;;;;:::i;:::-;124:20066;;-1:-1:-1;124:20066:7;7685:13;124:20066;;;-1:-1:-1;124:20066:7;;8289:7;;8285:621;;7328:1747;8985:13;;;;;8981:83;;7328:1747;;:::o;8981:83::-;9034:13;;;;;:::i;:::-;;:::i;:::-;7328:1747::o;8285:621::-;8836:29;124:20066;8501:274;124:20066;;;-1:-1:-1;124:20066:7;8342:11;124:20066;;8422:19;124:20066;-1:-1:-1;124:20066:7;8381:22;124:20066;;;8381:22;:::i;:::-;124:20066;;8422:19;:26;124:20066;;;8422:26;:::i;:::-;124:20066;;;-1:-1:-1;124:20066:7;8501:13;124:20066;;;-1:-1:-1;124:20066:7;;;;;;;:::i;:::-;;;8529:245;;;;124:20066;8649:1;124:20066;8529:245;;124:20066;8684:15;8529:245;;;124:20066;7636:19;8529:245;;;124:20066;8501:274;:::i;:::-;124:20066;;;;;;-1:-1:-1;;;8836:29:7;;-1:-1:-1;;;;;124:20066:7;;;8836:29;;;124:20066;;;;;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;;;;;;;8836:29;;;;;;;;;;-1:-1:-1;8836:29:7;;;8285:621;124:20066;;;;8285:621;;;;;124:20066;;;-1:-1:-1;;;124:20066:7;;;8836:29;124:20066;;;;;;;;-1:-1:-1;;;124:20066:7;;;;;;;8836:29;;;;124:20066;8836:29;124:20066;8836:29;;;;;;;:::i;:::-;;;;7895:133;124:20066;;;-1:-1:-1;124:20066:7;7685:13;124:20066;;;-1:-1:-1;124:20066:7;;8006:7::o;7724:86::-;7768:7;;;;:::o;124:20066::-;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;6219:767::-;124:20066;;;6332:5;124:20066;;;;;;;;6381:11;124:20066;;6757:17;:39;124:20066;;;6613:45;1078:2:8;6667:24:7;6692:1;6667:24;;;124:20066;6667:26;6664:70;;6219:767;6757:17;;124:20066;6757:39;:::i;:::-;124:20066;;;6828:31;;;;6824:45;;6895:30;;;:::i;:::-;6939:43;6940:19;;;;;;6939:43;6219:767;:::o;6939:43::-;;;6219:767;:::o;6824:45::-;6861:8;;;124:20066;6861:8;:::o;6664:70::-;6725:2;;-1:-1:-1;6664:70:7;;6994:324;7073:17;124:20066;7112:6;;;:27;;;;6994:324;7108:135;;1462:4:8;124:20066:7;;;;;;1462:4:8;124:20066:7;;;;;;;7253:57;7276:34;;;;:::i;:::-;7253:57;124:20066;7253:57;:::i;:::-;;124:20066;6994:324::o;7108:135::-;7160:16;;;7156:55;;7225:7;:::o;7156:55::-;7195:12;;;:::i;7112:27::-;7122:17;;;7112:27;;12070:742:8;12132:13;124:20066:7;-1:-1:-1;;;;;124:20066:7;12132:27:8;;124:20066:7;;;;;;-1:-1:-1;;;1328:43:5;;;;;;;-1:-1:-1;;;;;124:20066:7;;;1328:43:5;;;124:20066:7;;;;;;;;1328:43:5;;124:20066:7;;;;;1328:43:5;-1:-1:-1;;1328:43:5;124:20066:7;;1328:43:5;:::i;:::-;8507:421;;;;;;;;;-1:-1:-1;8507:421:5;;8942:15;;8960:26;;;:31;8942:68;8938:146;;124:20066:7;;;12426:12:8;124:20066:7;-1:-1:-1;124:20066:7;12414:11:8;1328:43:5;124:20066:7;;-1:-1:-1;124:20066:7;12446:36:8;124:20066:7;;;12446:36:8;:::i;:::-;124:20066:7;;12710:98:8;124:20066:7;;;;;12132:13:8;124:20066:7;;;;;;;;;;-1:-1:-1;1328:43:5;124:20066:7;;;-1:-1:-1;124:20066:7;;;;12791:15:8;124:20066:7;;;;12710:98:8;12070:742::o;8938:146:5:-;9033:40;;;-1:-1:-1;9033:40:5;;124:20066:7;1328:43:5;-1:-1:-1;9033:40:5;8942:68;12278:4:8;8994:16:5;;8942:68;;124:20066:7;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;-1:-1:-1;;;124:20066:7;;;;;;;11042:1234;11164:15;;:45;;;;11042:1234;11160:122;;124:20066;11178:1;124:20066;11325:5;124:20066;;;11178:1;124:20066;;;11178:1;124:20066;11696:11;124:20066;;469:4;124:20066;11178:1;124:20066;11730:36;124:20066;;;11730:36;:::i;:::-;124:20066;;11777:27;:38;124:20066;;;11777:38;:::i;:::-;124:20066;;;;;;;;-1:-1:-1;;;11826:39:7;;-1:-1:-1;;;;;124:20066:7;;;11826:39;;;124:20066;;;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;11826:39;;;;;;;;11042:1234;124:20066;11178:1;124:20066;11904:13;124:20066;;11904:244;124:20066;11178:1;124:20066;;;;;;;:::i;:::-;;;;11935:212;124:20066;11935:212;;124:20066;469:4;124:20066;11935:212;;124:20066;12074:15;11935:212;;;124:20066;469:4;11935:212;;;124:20066;11904:244;:::i;:::-;124:20066;;;;;;;;;11178:1;124:20066;11325:5;124:20066;;-1:-1:-1;;;;;;;;;;;11935:212:7;124:20066;;;;;;11178:1;124:20066;;;;;;;;;469:4;124:20066;;;;469:4;124:20066;;;;12174:85;11042:1234::o;11826:39::-;;;124:20066;11826:39;124:20066;11826:39;;;;;;;:::i;:::-;;;11160:122;11241:7;;;;;:::i;11164:45::-;124:20066;11197:12;124:20066;11183:26;;11164:45;;11042:1234;;;11164:15;;:45;;;;11042:1234;11160:122;;124:20066;11826:39;124:20066;;11178:1;124:20066;11325:5;124:20066;;;11178:1;124:20066;;11178:1;124:20066;11696:11;124:20066;;11777:27;124:20066;11178:1;124:20066;11730:36;124:20066;;;11730:36;:::i;:::-;124:20066;;11777:27;:38;124:20066;;;11777:38;:::i;:::-;124:20066;;;;;;;;-1:-1:-1;;;11826:39:7;;-1:-1:-1;;;;;124:20066:7;;;11826:39;;;124:20066;;;;;;;;;;;;;;;;11178:1;;124:20066;;;;;;;11826:39;;;;;;;;;;-1:-1:-1;;;;;;;;;;;11826:39:7;11935:212;11826:39;;;11042:1234;124:20066;11178:1;124:20066;11904:13;124:20066;;11904:244;124:20066;11178:1;124:20066;;;;;;;:::i;:::-;;;;11935:212;124:20066;11935:212;;124:20066;11935:212;124:20066;11935:212;;124:20066;12074:15;11935:212;;;124:20066;11777:27;11935:212;;;124:20066;11904:244;:::i;:::-;124:20066;;;;;;;;;11178:1;124:20066;11325:5;124:20066;;;;;;;;11178:1;124:20066;;;;;;;;;;;;;11777:27;124:20066;;;;12174:85;11042:1234::o;11826:39::-;;;124:20066;11826:39;124:20066;11826:39;;;;;;;:::i;:::-;;;11160:122;11241:7;;;;;;;:::i;11164:45::-;124:20066;11197:12;124:20066;11183:26;;11164:45;;629:2:8;-1:-1:-1;;629:2:8;;;;;;;:::o;12290:2081:7:-;;;;;;;12589:12;124:20066;12576:25;;:43;;;;12290:2081;12573:128;;12768:1;12771:17;;;;;;13057:25;13093:14;-1:-1:-1;13118:1138:7;;13125:14;;;:43;;;13118:1138;13125:64;;;13118:1138;13125:64;;;124:20066;-1:-1:-1;124:20066:7;12821:5;124:20066;;;-1:-1:-1;124:20066:7;13338:8;;;;;124:20066;13338:25;;13334:801;;14211:11;12589:12;14237:7;14211:11;;124:20066;14237:7;;:::i;:::-;13118:1138;;;13334:801;124:20066;;;;;;-1:-1:-1;;;13484:34:7;;-1:-1:-1;;;;;124:20066:7;;;13484:34;;;124:20066;;;;;;;;;;;-1:-1:-1;124:20066:7;;;;;;;;;;;;;;;;-1:-1:-1;;124:20066:7;13484:34;;;;;;;-1:-1:-1;;;;;;;;;;;13484:34:7;13728:259;13484:34;;;13334:801;124:20066;;-1:-1:-1;124:20066:7;13564:11;124:20066;;13650:16;124:20066;-1:-1:-1;124:20066:7;13605:26;124:20066;;;13605:26;:::i;:::-;124:20066;;13650:16;:27;124:20066;;;13650:27;:::i;:::-;124:20066;;-1:-1:-1;124:20066:7;13698:13;124:20066;;13698:290;124:20066;-1:-1:-1;124:20066:7;;;;;;;:::i;:::-;;;;13728:259;124:20066;13728:259;;124:20066;13728:259;124:20066;13728:259;;124:20066;13899:15;13728:259;;;124:20066;13650:16;13728:259;;;124:20066;13698:290;:::i;:::-;124:20066;;;;;;;;;-1:-1:-1;124:20066:7;12821:5;124:20066;;;;;;;;-1:-1:-1;124:20066:7;;;;;;;;;;629:2:8;;124:20066:7;13650:16;124:20066;629:2:8;;124:20066:7;14014:80;14113:7::o;13484:34::-;;;124:20066;13484:34;;;;;;;;;:::i;:::-;;;13125:64;;;;;14355:7;13125:64;;14355:7;:::i;13125:64::-;13172:17;1078:2:8;13172:17:7;;13125:64;;:43;124:20066;12589:12;124:20066;13143:25;;;13125:43;;12790:3;124:20066;-1:-1:-1;124:20066:7;12821:5;124:20066;;12589:12;124:20066;-1:-1:-1;124:20066:7;12821:24;124:20066;12864:13;;;:41;;;;12790:3;12860:176;;12768:1;124:20066;12759:10;;12864:41;124:20066;12589:12;124:20066;12881:24;;12864:41;;12573:128;12660:7;;;;;;;:::i;12576:43::-;12605:14;;;12576:43;;16478:2456;;;;;;;;16617:13;;:41;;;;16478:2456;16617:59;;;;16478:2456;16613:136;;16832:19;;;;;;:::i;:::-;16890:26;16879:38;16890:26;;;;:::i;:::-;16879:38;;:::i;:::-;17000:25;16629:1;;;;;;17126;17181:6;17185:2;17181:6;;;;17164:1375;18656:26;;;;;;;;;;;;;:::i;:::-;18697:22;18693:89;;17164:1375;18851:13;;18847:71;;16478:2456;:::o;18693:89::-;18751:18;;;:::i;:::-;18693:89;;;17189:3;17278:14;;;;;;;;;:43;;;;17189:3;17274:276;;124:20066;16629:1;124:20066;17584:5;124:20066;;;16629:1;124:20066;17621:8;;;;;;124:20066;17621:25;;17617:630;17621:25;;;17755:34;;;;:::i;:::-;16629:1;124:20066;;;17584:5;124:20066;;;;;;;;;;;;;-1:-1:-1;;;19152:25:7;;-1:-1:-1;;;;;124:20066:7;;;19152:25;;;124:20066;;;;;;;;;;;;;;;;;;;;;16629:1;;124:20066;19152:25;;;;;;;17935:30;19152:25;17890:26;19152:25;;;17617:630;124:20066;;16629:1;124:20066;19215:11;124:20066;;19285:22;124:20066;16629:1;124:20066;19249:25;124:20066;;;19249:25;:::i;:::-;124:20066;;19285:22;:32;124:20066;;;19285:32;:::i;:::-;124:20066;;16629:1;124:20066;19330:13;124:20066;;19330:247;124:20066;16629:1;124:20066;;;;;;;:::i;:::-;;;;19361:215;124:20066;19361:215;;124:20066;19361:215;124:20066;19361:215;;124:20066;19497:15;19361:215;;;124:20066;19152:25;19361:215;;;124:20066;19330:247;:::i;:::-;124:20066;16629:1;124:20066;17584:5;124:20066;;;;;;;;16629:1;124:20066;;;;-1:-1:-1;;;;;;;;;;;19361:215:7;124:20066;;;;;;;;;;;19152:25;124:20066;;;;19595:69;17890:26;:::i;:::-;17935:30;;:::i;:::-;17984:21;17126:1;17617:630;;18327:22;;;;18323:33;;18516:11;17126:1;18516:11;;124:20066;17189:3;124:20066;17169:10;;;;;;;;18323:33;18351:5;;19152:25;;;124:20066;19152:25;;;;;;;;;:::i;:::-;;;17617:630;18124:27;;;;;;;;;;18121:94;17617:630;18121:94;18176:19;;;;:::i;:::-;18121:94;17617:630;;17274:276;17420:26;;;;;;;;;;;;;;;:::i;:::-;17469:13;17465:44;;17528:7;:::o;17278:43::-;124:20066;18516:11;124:20066;17296:25;;17278:43;;16613:136;16708:7;;;;;;;;;:::i;16617:59::-;16662:14;;;16617:59;;:41;124:20066;16646:12;124:20066;16634:24;;16617:41;;16745:225:8;;124:20066:7;-1:-1:-1;124:20066:7;16837:21:8;124:20066:7;;;16837:42:8;124:20066:7;-1:-1:-1;124:20066:7;16837:42:8;124:20066:7;;16836:43:8;16832:131;;16745:225;;:::o;16832:131::-;17075:57;17095:19;124:20066:7;17083:31:8;;17075:57;:::i;:::-;124:20066:7;-1:-1:-1;124:20066:7;;;;17143:60:8;124:20066:7;17152:34:8;124:20066:7;-1:-1:-1;124:20066:7;17152:34:8;124:20066:7;;17151:35:8;17143:60;:::i;:::-;124:20066:7;-1:-1:-1;124:20066:7;17243:5:8;124:20066:7;;;-1:-1:-1;124:20066:7;17286:16:8;;;;124:20066:7;17286:20:8;;124:20066:7;;17377:21:8;;;124:20066:7;;791:8:8;124:20066:7;;;;;;;18117:51:8;17357:64;17592:77;17357:64;;;17456:10;1136:1;17528:27;1025:2;17456:10;;;124:20066:7;17456:35:8;;17528:27;;124:20066:7;17528:53:8;;17600:30;;;;16832:131;17600:52;;;;16832:131;17592:77;;:::i;:::-;124:20066:7;-1:-1:-1;124:20066:7;16837:21:8;124:20066:7;;;-1:-1:-1;124:20066:7;18016:28:8;16837:42;17839:23;;124:20066:7;;;;;;17830:54:8;124:20066:7;;;17838:24:8;17830:54;:::i;:::-;17912:15;124:20066:7;;18016:28:8;124:20066:7;;;;;;;18117:51:8;124:20066:7;;17912:15:8;;;;18117:51;;124:20066:7;;;;;;;;;;;;;;;;;;18117:51:8;;;;16745:225::o;17600:52::-;;;;;;:30;;-1:-1:-1;17600:30:8;;;124:20066:7;;;-1:-1:-1;;;124:20066:7;;;16837:42:8;124:20066:7;;;;;;;;-1:-1:-1;;;124:20066:7;;;;;;;18192:213:8;;124:20066:7;-1:-1:-1;124:20066:7;18280:17:8;124:20066:7;;;18280:38:8;124:20066:7;-1:-1:-1;124:20066:7;18280:38:8;124:20066:7;;18279:39:8;18275:123;;18192:213;;:::o;18275:123::-;18506:53;18526:15;124:20066:7;18514:27:8;;18506:53;:::i;:::-;124:20066:7;-1:-1:-1;124:20066:7;18579:13:8;124:20066:7;;18570:56:8;124:20066:7;18579:30:8;124:20066:7;-1:-1:-1;124:20066:7;18579:30:8;124:20066:7;;18578:31:8;18570:56;:::i;:::-;124:20066:7;-1:-1:-1;124:20066:7;18666:5:8;124:20066:7;;;-1:-1:-1;124:20066:7;18709:16:8;;;;124:20066:7;18709:20:8;;124:20066:7;;18800:21:8;;;124:20066:7;;849:8:8;124:20066:7;;;;;;;19519:51:8;18780:60;19002:77;18780:60;;;18875:10;1189:1;18943:26;18800:21;18875:10;;;124:20066:7;18875:31:8;;18943:26;;124:20066:7;18943:48:8;;19010:30;;;;:52;;;;19002:77;;:::i;:::-;124:20066:7;-1:-1:-1;124:20066:7;18280:17:8;124:20066:7;;;-1:-1:-1;124:20066:7;19418:28:8;18280:38;19241:23;;124:20066:7;;;;;;19232:54:8;124:20066:7;;;19240:24:8;19232:54;:::i;124:20066:7:-;;;-1:-1:-1;;;124:20066:7;;;18280:38:8;124:20066:7;;;18709:16:8;124:20066:7;;;;-1:-1:-1;;;18526:15:8;124:20066:7;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;124:20066:7;;;;;;;;;;;;-1:-1:-1;;;124:20066:7;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1760200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACC_PRECISION()": "395",
								"MONTHLY_ROYALTY_DIRECT()": "879",
								"MONTHLY_ROYALTY_LEVEL()": "231",
								"MONTHLY_ROYALTY_TIME()": "703",
								"MONTH_DURATION()": "263",
								"PERCENTS_DIVIDER()": "148",
								"ROI_CAP_DIVIDER()": "517",
								"ROI_CAP_MULTIPLIER()": "429",
								"TIME_STEP()": "373",
								"TOP_ROYALTY_DIRECT()": "351",
								"TOP_ROYALTY_LEVEL()": "297",
								"TOP_ROYALTY_TIME()": "549",
								"WEEK_DURATION()": "571",
								"WeeklyCapping()": "967",
								"WeeklyTotalReward()": "2432",
								"claimCommunity(uint256)": "infinite",
								"communityAccPerUser()": "2696",
								"creatorWallet()": "2742",
								"currentMonthlyRound()": "2916",
								"currentMonthlyStartTime()": "3026",
								"currentWeeklyRound()": "2938",
								"currentWeeklyStartTime()": "3155",
								"defaultRefId()": "3092",
								"glbBoosterPackages(uint256)": "6571",
								"minLevelForGlbBooster(uint256)": "2998",
								"minLevelForPool(uint256)": "2316",
								"minPoolForGlbBooster(uint256)": "2778",
								"monthlyCapping()": "791",
								"monthlyTotalReward()": "2784",
								"packages(uint256)": "7228",
								"pendingCommunity(uint256)": "infinite",
								"poolPackages(uint256)": "7099",
								"register(uint256)": "infinite",
								"registeredUserIds(uint256)": "6813",
								"systemMaintance()": "3072",
								"teamDevelopment()": "3160",
								"topRoyaltyReward()": "2630",
								"topRoyaltyRound()": "2586",
								"topRoyaltyStartTime()": "2762",
								"totalUsers()": "2850",
								"upgrade(uint256)": "infinite",
								"usdt()": "2434"
							},
							"internal": {
								"_accrueCommunityBonus(uint256)": "infinite",
								"_applyGlobalCapping(uint256,uint256)": "6721",
								"_distributeLevelBoosterIncome(uint256,uint256,uint256,uint256,uint256)": "infinite",
								"_distributeMatrixIncome(uint256,uint256,uint256,uint256)": "infinite",
								"_distributeSponsorIncome(uint256,uint256,uint256,uint256)": "infinite",
								"_findEligibleSponsor(uint256,uint256)": "infinite",
								"_payLevelBooster(uint256,uint256,uint256,uint256)": "infinite",
								"_placeInMatrix(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "1E0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1675,
									"name": "PUSH",
									"source": 8,
									"value": "D02AB486CEDC0000"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1698,
									"end": 1707,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1730,
									"end": 1739,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1772,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 1805,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1828,
									"end": 1838,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1861,
									"end": 1871,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1905,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1928,
									"end": 1939,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1962,
									"end": 1973,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1996,
									"end": 2008,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2031,
									"end": 2043,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D6310000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2066,
									"end": 2078,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC620000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2101,
									"end": 2114,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "1A0"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2137,
									"end": 2150,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "1C0"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 20190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6122,
									"end": 6127,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6129,
									"end": 6135,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A8829300000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6137,
									"end": 6144,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C00000"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6146,
									"end": 6153,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A88293000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6155,
									"end": 6163,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6165,
									"end": 6173,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A882930000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6175,
									"end": 6184,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 124,
									"end": 20190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1772,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1795,
									"end": 1805,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1828,
									"end": 1838,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1861,
									"end": 1871,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1905,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1928,
									"end": 1939,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1962,
									"end": 1973,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1996,
									"end": 2008,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 20190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6338,
									"end": 6339,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6347,
									"end": 6348,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6354,
									"end": 6356,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 124,
									"end": 20190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6408,
									"end": 6409,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6414,
									"end": 6415,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6347,
									"end": 6348,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6426,
									"end": 6428,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 124,
									"end": 20190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8030,
									"end": 8031,
									"name": "PUSH",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8075,
									"end": 8076,
									"name": "PUSH",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8117,
									"end": 8118,
									"name": "PUSH",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 9479,
									"end": 9480,
									"name": "PUSH",
									"source": 8,
									"value": "3D"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 9525,
									"end": 9526,
									"name": "PUSH",
									"source": 8,
									"value": "3E"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 9566,
									"end": 9567,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 10785,
									"end": 10786,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 10827,
									"end": 10828,
									"name": "PUSH",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 10866,
									"end": 10867,
									"name": "PUSH",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "RETURN",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "PUSH",
									"source": 8,
									"value": "1C"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 124,
									"end": 20190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 124,
									"end": 20190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 124,
									"end": 20190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 124,
									"end": 20190,
									"name": "JUMP",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122084a58ff3a9a9de9170510864ecde57625647ce5dc97e145bc75e121fce72195964736f6c634300081e0033",
									".code": [
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1C234A8"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "2132D204"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "2350268F"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "23FD338E"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24513088"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "2A891534"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "2AE0EE0D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "2F48AB7D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "3080B5BC"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "31BB6A30"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "32BC298C"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "32FCD966"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "375B43B4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "39AB3603"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "45977D03"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4B8CBF9B"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "58C7D352"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "5B62D1D5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "705FEE2D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "76F5F700"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "78F6AD6D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "7CDC65F2"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "956A3228"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "9B40AB97"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A59D17D1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A5E52B99"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "AE4708DC"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "BFF1F9E1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "C216212A"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "C8DF2908"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "C9ED0708"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "CA8E9121"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "D0A2FD79"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "D2F0490D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "D54D6DDB"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "E898FC38"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "E9E34A16"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "EBE0FF15"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "EC597E6F"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "F207564E"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "F5D74D93"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "FDDC806F"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8038,
											"end": 8076,
											"name": "PUSH",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 298,
											"end": 308,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 286,
											"end": 297,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 356,
											"end": 361,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 356,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 356,
											"end": 376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 356,
											"end": 380,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 514,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 514,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 514,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 514,
											"end": 525,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 514,
											"end": 525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 469,
											"end": 526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 298,
											"end": 308,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 507,
											"end": 511,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 356,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 602,
											"end": 614,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 602,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 617,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 602,
											"end": 627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 602,
											"end": 627,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 602,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 602,
											"end": 627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 602,
											"end": 627,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 602,
											"end": 627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 617,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 298,
											"end": 308,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 286,
											"end": 297,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 356,
											"end": 361,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 298,
											"end": 308,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 298,
											"end": 308,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 822,
											"end": 837,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 804,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 804,
											"end": 819,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 804,
											"end": 819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 848,
											"end": 855,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 356,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 848,
											"end": 855,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 848,
											"end": 855,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 878,
											"end": 892,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 878,
											"end": 892,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 617,
											"end": 627,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 916,
											"end": 926,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 916,
											"end": 926,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 961,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 961,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 961,
											"end": 972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 961,
											"end": 972,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 961,
											"end": 972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 356,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 941,
											"end": 958,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 941,
											"end": 958,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 941,
											"end": 958,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 822,
											"end": 837,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 983,
											"end": 1004,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1004,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 356,
											"end": 361,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1116,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1132,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1175,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1132,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1116,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1116,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1088,
											"end": 1116,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 356,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 941,
											"end": 958,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9743,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 804,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9759,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 10728,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 819,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 804,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 804,
											"end": 819,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 356,
											"end": 361,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 602,
											"end": 614,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9776,
											"end": 9802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9743,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9874,
											"end": 9895,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 10728,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 9728,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10790,
											"end": 11023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 10815,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 10804,
											"end": 10815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 10804,
											"end": 10815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 10815,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 10815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 10804,
											"end": 10815,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10790,
											"end": 11023,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 10790,
											"end": 11023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1454,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1454,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1454,
											"end": 1465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1465,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1454,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 356,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1569,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1569,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 822,
											"end": 837,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1569,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1569,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1423,
											"end": 1569,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1423,
											"end": 1569,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1569,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1404,
											"end": 1417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1404,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1570,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1404,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1636,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1636,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1647,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1636,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 356,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 602,
											"end": 614,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 602,
											"end": 614,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "3C"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "3C"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1921,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1921,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1702,
											"end": 1705,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2049,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2049,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2049,
											"end": 2063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2049,
											"end": 2063,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2049,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2133,
											"end": 2145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2145,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2133,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2216,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2287,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2216,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 356,
											"end": 361,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 602,
											"end": 614,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2408,
											"name": "PUSH",
											"source": 7,
											"value": "309BB360E8B69C23937CCC5FB01F9AEEEAD1C95A99604E175113FF82F2B1723A"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 298,
											"end": 308,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2408,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2408,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9743,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10817,
											"end": 10820,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 10817,
											"end": 10820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10840,
											"end": 10853,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10840,
											"end": 10853,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10837,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 10837,
											"end": 10860,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 356,
											"end": 361,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10875,
											"end": 10906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10926,
											"end": 10931,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10926,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10926,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 10926,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10926,
											"end": 10961,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 10926,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 356,
											"end": 361,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 602,
											"end": 614,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10987,
											"end": 11011,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10817,
											"end": 10820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10794,
											"end": 10802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10794,
											"end": 10802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 10794,
											"end": 10802,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10837,
											"end": 10860,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 10837,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 10728,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 9728,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10026,
											"end": 10037,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 10026,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 10026,
											"end": 10037,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10026,
											"end": 10037,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10026,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 10026,
											"end": 10037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10012,
											"end": 10717,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 10012,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 10728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 10728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 9728,
											"end": 10728,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10039,
											"end": 10042,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 10039,
											"end": 10042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10108,
											"end": 10125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10108,
											"end": 10125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 10108,
											"end": 10125,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10147,
											"end": 10152,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 804,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 10144,
											"end": 10702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 10144,
											"end": 10702,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10039,
											"end": 10042,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 10039,
											"end": 10042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10016,
											"end": 10024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 10016,
											"end": 10024,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10702,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 10144,
											"end": 10702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10218,
											"end": 10226,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10218,
											"end": 10226,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10218,
											"end": 10226,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10218,
											"end": 10226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10218,
											"end": 10226,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10259,
											"end": 10262,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 10259,
											"end": 10262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10147,
											"end": 10152,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10289,
											"end": 10306,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10289,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 10289,
											"end": 10306,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10147,
											"end": 10152,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10345,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10345,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10345,
											"end": 10368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10345,
											"end": 10368,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 10345,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 356,
											"end": 376,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9743,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 804,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10398,
											"end": 10420,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10395,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 10395,
											"end": 10659,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10259,
											"end": 10262,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 10259,
											"end": 10262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10259,
											"end": 10262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10218,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 10218,
											"end": 10226,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10395,
											"end": 10659,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 10395,
											"end": 10659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 356,
											"end": 361,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 602,
											"end": 614,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10453,
											"end": 10479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9743,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10617,
											"end": 10631,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10617,
											"end": 10631,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10395,
											"end": 10659,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 10395,
											"end": 10659,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10395,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 10395,
											"end": 10659,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10289,
											"end": 10306,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 10289,
											"end": 10306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10301,
											"end": 10306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10301,
											"end": 10306,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10301,
											"end": 10306,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10301,
											"end": 10306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10301,
											"end": 10306,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10301,
											"end": 10306,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10301,
											"end": 10306,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10214,
											"end": 10683,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 10214,
											"end": 10683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 10144,
											"end": 10702,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 10228,
											"end": 10257,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10108,
											"end": 10125,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 10108,
											"end": 10125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10120,
											"end": 10125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 10120,
											"end": 10125,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 469,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 469,
											"end": 526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 469,
											"end": 526,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 469,
											"end": 526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B21039B837B739B7B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481C9959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 534,
											"end": 558,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7978,
											"end": 7985,
											"name": "PUSH",
											"source": 8,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 460,
											"end": 490,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9526,
											"name": "PUSH",
											"source": 8,
											"value": "3E"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6368,
											"end": 6432,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6432,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6432,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6368,
											"end": 6432,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6432,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7997,
											"end": 8031,
											"name": "PUSH",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9445,
											"end": 9480,
											"name": "PUSH",
											"source": 8,
											"value": "3D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9424,
											"end": 9432,
											"name": "PUSH",
											"source": 8,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1630,
											"end": 2170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 799,
											"name": "PUSH",
											"source": 8,
											"value": "83D600"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9567,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10793,
											"end": 10828,
											"name": "PUSH",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 422,
											"end": 450,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1507,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7925,
											"end": 7931,
											"name": "PUSH",
											"source": 8,
											"value": "93A80"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 849,
											"end": 857,
											"name": "PUSH",
											"source": 8,
											"value": "2514300"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10755,
											"end": 10786,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2504,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2558,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2558,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2524,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2579,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 2524,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2608,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2613,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 2598,
											"end": 2613,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2613,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2717,
											"end": 2736,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2717,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2736,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2717,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2558,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2883,
											"end": 2887,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 2967,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2950,
											"end": 2967,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 2967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2950,
											"end": 2983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 2983,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 2950,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3028,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3047,
											"end": 3186,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3047,
											"end": 3186,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3047,
											"end": 3186,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3047,
											"end": 3186,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3028,
											"end": 3041,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3028,
											"end": 3041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3028,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3028,
											"end": 3187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3028,
											"end": 3187,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3028,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3338,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3338,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3499,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3499,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 3341,
											"end": 3344,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3538,
											"end": 3552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3624,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3612,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3806,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3806,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3341,
											"end": 3344,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3848,
											"end": 3862,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3862,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3901,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 3888,
											"end": 3901,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 3888,
											"end": 3901,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3901,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3901,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3901,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3888,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3901,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 3888,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3993,
											"end": 4006,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3338,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3993,
											"end": 4006,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3993,
											"end": 4006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4031,
											"end": 4044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4197,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4206,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 4197,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 2967,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4260,
											"end": 4298,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4260,
											"end": 4298,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 5228,
											"end": 5262,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5228,
											"end": 5262,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3047,
											"end": 3186,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 3047,
											"end": 3186,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53706F6E736F727368697020737472756374757265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6122,
											"end": 6199,
											"name": "PUSH",
											"source": 7,
											"value": "AE1560E7D725CAF8D266D531BF32F170B87264ECA8D1265202C334CFEB5BC382"
										},
										{
											"begin": 6122,
											"end": 6199,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 2548,
											"end": 2558,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6122,
											"end": 6199,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6122,
											"end": 6199,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5292,
											"end": 5308,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5292,
											"end": 5308,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5292,
											"end": 5308,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2504,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2504,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5541,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 5511,
											"end": 5541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5541,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1189,
											"end": 1190,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5616,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5616,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 5563,
											"end": 5678,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 5563,
											"end": 5719,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5560,
											"end": 5811,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5560,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5560,
											"end": 5811,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1189,
											"end": 1190,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5511,
											"end": 5541,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 5833,
											"end": 5860,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5833,
											"end": 5860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5833,
											"end": 5882,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5833,
											"end": 5882,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5950,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5950,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 5832,
											"end": 5950,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5988,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 5832,
											"end": 5988,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 6086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5829,
											"end": 6086,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 5225,
											"end": 6097,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 6086,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5829,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6042,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 6042,
											"end": 6057,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6042,
											"end": 6057,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6042,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6042,
											"end": 6057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6042,
											"end": 6057,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 6042,
											"end": 6057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 5829,
											"end": 6086,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5988,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 5832,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 5955,
											"end": 5966,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 5966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2608,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5955,
											"end": 5966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5955,
											"end": 5987,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5988,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 5832,
											"end": 5988,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5950,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 5832,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5292,
											"end": 5308,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5887,
											"end": 5904,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5904,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 5908,
											"end": 5930,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5908,
											"end": 5930,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 849,
											"end": 857,
											"name": "PUSH",
											"source": 8,
											"value": "2514300"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5949,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5949,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5950,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 5832,
											"end": 5950,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5560,
											"end": 5811,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5560,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5794,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5794,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 5779,
											"end": 5794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5794,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5779,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5560,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5560,
											"end": 5811,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5719,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 5563,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2608,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5683,
											"end": 5697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5683,
											"end": 5718,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5683,
											"end": 5718,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5719,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 5563,
											"end": 5719,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5678,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 5563,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 5633,
											"end": 5658,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5658,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 849,
											"end": 857,
											"name": "PUSH",
											"source": 8,
											"value": "2514300"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5622,
											"end": 5677,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5622,
											"end": 5677,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 5563,
											"end": 5678,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4328,
											"end": 4344,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 4328,
											"end": 4344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4328,
											"end": 4344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2504,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4547,
											"end": 4578,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4547,
											"end": 4578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4547,
											"end": 4578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3338,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4601,
											"end": 4658,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4601,
											"end": 4658,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4724,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4600,
											"end": 4724,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4769,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 4600,
											"end": 4769,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4597,
											"end": 4869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4597,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4597,
											"end": 4869,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3338,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4547,
											"end": 4578,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4891,
											"end": 4919,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4891,
											"end": 4919,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4891,
											"end": 4945,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4891,
											"end": 4945,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 5018,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 5018,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 4890,
											"end": 5018,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 5060,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 4890,
											"end": 5060,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 5166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 5166,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4887,
											"end": 5166,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "PUSH",
											"source": 7,
											"value": "3D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 5118,
											"end": 5137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4257,
											"end": 5177,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 5060,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 4890,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 2967,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5023,
											"end": 5034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5023,
											"end": 5034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2608,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5023,
											"end": 5034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 5060,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 4890,
											"end": 5060,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 5018,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 4890,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4328,
											"end": 4344,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 4951,
											"end": 4968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 4972,
											"end": 4994,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 4994,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 791,
											"end": 799,
											"name": "PUSH",
											"source": 8,
											"value": "83D600"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5017,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 5018,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4890,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 4890,
											"end": 5018,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4597,
											"end": 4869,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4597,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4816,
											"end": 4831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4852,
											"name": "PUSH",
											"source": 7,
											"value": "3D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4833,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4852,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 4833,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4597,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 4597,
											"end": 4869,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4769,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 4600,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 2967,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4729,
											"end": 4743,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4729,
											"end": 4743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2608,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4729,
											"end": 4743,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4729,
											"end": 4768,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4729,
											"end": 4768,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4769,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 4600,
											"end": 4769,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4724,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4600,
											"end": 4724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4675,
											"end": 4700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4675,
											"end": 4700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 4675,
											"end": 4700,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4675,
											"end": 4700,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 799,
											"name": "PUSH",
											"source": 8,
											"value": "83D600"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2777,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4723,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4723,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 4600,
											"end": 4724,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2845,
											"end": 2903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 2845,
											"end": 2903,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E48185D081B585E081B195D995B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1466,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1189,
											"end": 1190,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8085,
											"end": 8118,
											"name": "PUSH",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9379,
											"name": "PUSH",
											"source": 8,
											"value": "278D00"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6304,
											"end": 6361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6361,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6361,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6304,
											"end": 6361,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6361,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 683,
											"end": 688,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2725,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2725,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 514,
											"end": 522,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 514,
											"end": 522,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9085,
											"end": 9521,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 9085,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9085,
											"end": 9521,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9204,
											"end": 9209,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9204,
											"end": 9221,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9204,
											"end": 9221,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9204,
											"end": 9226,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9200,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 9200,
											"end": 9241,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9266,
											"end": 9285,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9311,
											"end": 9324,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9348,
											"end": 9359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9348,
											"end": 9359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9348,
											"end": 9359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9348,
											"end": 9359,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9348,
											"end": 9359,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9344,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 9344,
											"end": 9374,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9399,
											"end": 9409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 9448,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 9399,
											"end": 9409,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1466,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9399,
											"end": 9409,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9399,
											"end": 9409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 9399,
											"end": 9409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9399,
											"end": 9409,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 9399,
											"end": 9409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9448,
											"end": 9483,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9448,
											"end": 9483,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9448,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 9448,
											"end": 9483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9448,
											"end": 9483,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 9448,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9085,
											"end": 9521,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9085,
											"end": 9521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9344,
											"end": 9374,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 9344,
											"end": 9374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9361,
											"end": 9374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9361,
											"end": 9374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9361,
											"end": 9374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9361,
											"end": 9374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9361,
											"end": 9374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9361,
											"end": 9374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9361,
											"end": 9374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9200,
											"end": 9241,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 9200,
											"end": 9241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 9228,
											"end": 9241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD081E5BDD5C881858D8DBDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7328,
											"end": 9075,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7328,
											"end": 9075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7412,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7448,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7444,
											"end": 7448,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7453,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7508,
											"end": 7518,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7495,
											"end": 7518,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7487,
											"end": 7539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7539,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 7487,
											"end": 7539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7636,
											"end": 7655,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7685,
											"end": 7698,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7728,
											"end": 7747,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7728,
											"end": 7747,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7728,
											"end": 7747,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7724,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 7724,
											"end": 7810,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 1462,
											"end": 1466,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7845,
											"end": 7863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7911,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7895,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 7895,
											"end": 8028,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 8105,
											"end": 8142,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 8105,
											"end": 8142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8142,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 8105,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7685,
											"end": 7698,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8289,
											"end": 8296,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8289,
											"end": 8296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 8285,
											"end": 8906,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7328,
											"end": 9075,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 7328,
											"end": 9075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8985,
											"end": 8998,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8985,
											"end": 8998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8985,
											"end": 8998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8985,
											"end": 8998,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8985,
											"end": 8998,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8981,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 8981,
											"end": 9064,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7328,
											"end": 9075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7328,
											"end": 9075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7328,
											"end": 9075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8981,
											"end": 9064,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 8981,
											"end": 9064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 9034,
											"end": 9047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 9034,
											"end": 9047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 9034,
											"end": 9047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9047,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 9034,
											"end": 9047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9034,
											"end": 9047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9047,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 9034,
											"end": 9047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7328,
											"end": 9075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8906,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 8285,
											"end": 8906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8501,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8342,
											"end": 8353,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8381,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8381,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 8381,
											"end": 8403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8381,
											"end": 8403,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 8381,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8441,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 8422,
											"end": 8448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8448,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 8422,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8501,
											"end": 8514,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8529,
											"end": 8774,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8529,
											"end": 8774,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8529,
											"end": 8774,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8529,
											"end": 8774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8649,
											"end": 8650,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8529,
											"end": 8774,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8529,
											"end": 8774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8684,
											"end": 8699,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 8529,
											"end": 8774,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8529,
											"end": 8774,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8529,
											"end": 8774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7636,
											"end": 7655,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 8529,
											"end": 8774,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 8529,
											"end": 8774,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8529,
											"end": 8774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8501,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 8501,
											"end": 8775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8501,
											"end": 8775,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 8501,
											"end": 8775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8906,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 8285,
											"end": 8906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8906,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8906,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8285,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 8285,
											"end": 8906,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1554D115081D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 8836,
											"end": 8865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 8836,
											"end": 8865,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7895,
											"end": 8028,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 7895,
											"end": 8028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7685,
											"end": 7698,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7724,
											"end": 7810,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 7724,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7768,
											"end": 7775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7768,
											"end": 7775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7768,
											"end": 7775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7768,
											"end": 7775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7768,
											"end": 7775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "155CD95C881B9BDD08199BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6219,
											"end": 6986,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6219,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6332,
											"end": 6337,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6392,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 6774,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 6757,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6658,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 6667,
											"end": 6691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6693,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6667,
											"end": 6691,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6667,
											"end": 6691,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 6691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 6693,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6664,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 6664,
											"end": 6734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6219,
											"end": 6986,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 6219,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 6774,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 6774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 6757,
											"end": 6796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 6796,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 6757,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6828,
											"end": 6859,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6828,
											"end": 6859,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6828,
											"end": 6859,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6828,
											"end": 6859,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6895,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 6895,
											"end": 6925,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6895,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6895,
											"end": 6925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6895,
											"end": 6925,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 6895,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6982,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6940,
											"end": 6959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6940,
											"end": 6959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6940,
											"end": 6959,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6940,
											"end": 6959,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6940,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 6940,
											"end": 6959,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6982,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6219,
											"end": 6986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6219,
											"end": 6986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6982,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 6939,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6982,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6982,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6219,
											"end": 6986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6219,
											"end": 6986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 6824,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6861,
											"end": 6869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6861,
											"end": 6869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6861,
											"end": 6869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6861,
											"end": 6869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6861,
											"end": 6869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6664,
											"end": 6734,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 6664,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6727,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 6725,
											"end": 6727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6664,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 6664,
											"end": 6734,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7318,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 6994,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7073,
											"end": 7090,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7112,
											"end": 7118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7112,
											"end": 7118,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7112,
											"end": 7118,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7112,
											"end": 7139,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7112,
											"end": 7139,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7112,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 7112,
											"end": 7139,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7318,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 6994,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7108,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 7108,
											"end": 7243,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1466,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1466,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 7276,
											"end": 7310,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 7276,
											"end": 7310,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7276,
											"end": 7310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7310,
											"name": "tag",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 7276,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7310,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 7253,
											"end": 7310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7310,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 7253,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7310,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7108,
											"end": 7243,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 7108,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7160,
											"end": 7176,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7160,
											"end": 7176,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7160,
											"end": 7176,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7156,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 7156,
											"end": 7211,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7225,
											"end": 7232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7225,
											"end": 7232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7156,
											"end": 7211,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 7156,
											"end": 7211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 7195,
											"end": 7207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7195,
											"end": 7207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7112,
											"end": 7139,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 7112,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7139,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7139,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7112,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 7112,
											"end": 7139,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12070,
											"end": 12812,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12070,
											"end": 12812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12132,
											"end": 12145,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12132,
											"end": 12159,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12132,
											"end": 12159,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "550"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "550"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8507,
											"end": 8928,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "554"
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "556"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "557"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12426,
											"end": 12438,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12414,
											"end": 12425,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12446,
											"end": 12482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12446,
											"end": 12482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 12446,
											"end": 12482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12446,
											"end": 12482,
											"name": "tag",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 12446,
											"end": 12482,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12710,
											"end": 12808,
											"name": "PUSH",
											"source": 8,
											"value": "F67C60BC8519C61563AC616D368A6DF646202C88D10744D736438BC4FBE2816"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12132,
											"end": 12145,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12791,
											"end": 12806,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12710,
											"end": 12808,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 12070,
											"end": 12812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 5,
											"value": "557"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE7"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "554"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12278,
											"end": 12282,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "556"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "199959481859191C9CC81B9BDD081CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11042,
											"end": 12276,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 11042,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11179,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11179,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11042,
											"end": 12276,
											"name": "tag",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 11042,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11160,
											"end": 11282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 11160,
											"end": 11282,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11325,
											"end": 11330,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11696,
											"end": 11707,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 469,
											"end": 473,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 11730,
											"end": 11766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11730,
											"end": 11766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 11730,
											"end": 11766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11730,
											"end": 11766,
											"name": "tag",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 11730,
											"end": 11766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11777,
											"end": 11815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11777,
											"end": 11815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 11777,
											"end": 11815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11777,
											"end": 11815,
											"name": "tag",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 11777,
											"end": 11815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11042,
											"end": 12276,
											"name": "tag",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 11042,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 11917,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 469,
											"end": 473,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12074,
											"end": 12089,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 469,
											"end": 473,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 11904,
											"end": 12148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 12148,
											"name": "tag",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 11904,
											"end": 12148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11325,
											"end": 11330,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "51678340555B44277C2BBA9423D75EBEAD61331B9CDE789C13D0820D4F537E29"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 469,
											"end": 473,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 469,
											"end": 473,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12174,
											"end": 12259,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 11042,
											"end": 12276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "tag",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 11826,
											"end": 11865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "tag",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11160,
											"end": 11282,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 11160,
											"end": 11282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11241,
											"end": 11248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11241,
											"end": 11248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11241,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 11241,
											"end": 11248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11241,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11241,
											"end": 11248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "tag",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11209,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11183,
											"end": 11209,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11183,
											"end": 11209,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11042,
											"end": 12276,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 11042,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11042,
											"end": 12276,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11042,
											"end": 12276,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11179,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11042,
											"end": 12276,
											"name": "tag",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 11042,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11160,
											"end": 11282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 11160,
											"end": 11282,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11325,
											"end": 11330,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11696,
											"end": 11707,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 11730,
											"end": 11766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11730,
											"end": 11766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 11730,
											"end": 11766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11730,
											"end": 11766,
											"name": "tag",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 11730,
											"end": 11766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11777,
											"end": 11815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11777,
											"end": 11815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 11777,
											"end": 11815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11777,
											"end": 11815,
											"name": "tag",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 11777,
											"end": 11815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "tag",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "51678340555B44277C2BBA9423D75EBEAD61331B9CDE789C13D0820D4F537E29"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11042,
											"end": 12276,
											"name": "tag",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 11042,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 11917,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12074,
											"end": 12089,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 12147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 11904,
											"end": 12148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 12148,
											"name": "tag",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 11904,
											"end": 12148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11325,
											"end": 11330,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12174,
											"end": 12259,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 11042,
											"end": 12276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "tag",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 11826,
											"end": 11865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "tag",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 11826,
											"end": 11865,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11160,
											"end": 11282,
											"name": "tag",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 11160,
											"end": 11282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11241,
											"end": 11248,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11241,
											"end": 11248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11241,
											"end": 11248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11241,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 11241,
											"end": 11248,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11241,
											"end": 11248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11241,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11241,
											"end": 11248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "tag",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11209,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11183,
											"end": 11209,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11183,
											"end": 11209,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 11164,
											"end": 11209,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 629,
											"end": 631,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 629,
											"end": 631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 629,
											"end": 631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 629,
											"end": 631,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 629,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 629,
											"end": 631,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 629,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 629,
											"end": 631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 629,
											"end": 631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 629,
											"end": 631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12290,
											"end": 14371,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 12290,
											"end": 14371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12290,
											"end": 14371,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12290,
											"end": 14371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12290,
											"end": 14371,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12290,
											"end": 14371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12290,
											"end": 14371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12290,
											"end": 14371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12589,
											"end": 12601,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12576,
											"end": 12601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12576,
											"end": 12601,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12576,
											"end": 12619,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12576,
											"end": 12619,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12576,
											"end": 12619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 12576,
											"end": 12619,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12290,
											"end": 14371,
											"name": "tag",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 12290,
											"end": 14371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12573,
											"end": 12701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 12573,
											"end": 12701,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12768,
											"end": 12769,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12771,
											"end": 12788,
											"name": "tag",
											"source": 7,
											"value": "602"
										},
										{
											"begin": 12771,
											"end": 12788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12771,
											"end": 12788,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12771,
											"end": 12788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12771,
											"end": 12788,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12771,
											"end": 12788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "603"
										},
										{
											"begin": 12771,
											"end": 12788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13057,
											"end": 13082,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13093,
											"end": 13107,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13118,
											"end": 14256,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13118,
											"end": 14256,
											"name": "tag",
											"source": 7,
											"value": "605"
										},
										{
											"begin": 13118,
											"end": 14256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13139,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13139,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13139,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13168,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 13125,
											"end": 13168,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13118,
											"end": 14256,
											"name": "tag",
											"source": 7,
											"value": "607"
										},
										{
											"begin": 13118,
											"end": 14256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "608"
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13118,
											"end": 14256,
											"name": "tag",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 13118,
											"end": 14256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "610"
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12821,
											"end": 12826,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 13338,
											"end": 13346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13338,
											"end": 13346,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13338,
											"end": 13346,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 13338,
											"end": 13346,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13338,
											"end": 13346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13338,
											"end": 13363,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 13338,
											"end": 13363,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13334,
											"end": 14135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "612"
										},
										{
											"begin": 13334,
											"end": 14135,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14211,
											"end": 14222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12589,
											"end": 12601,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 14237,
											"end": 14244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "614"
										},
										{
											"begin": 14211,
											"end": 14222,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14211,
											"end": 14222,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 14244,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 14244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 14237,
											"end": 14244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 14244,
											"name": "tag",
											"source": 7,
											"value": "614"
										},
										{
											"begin": 14237,
											"end": 14244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13118,
											"end": 14256,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13118,
											"end": 14256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "605"
										},
										{
											"begin": 13118,
											"end": 14256,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13334,
											"end": 14135,
											"name": "tag",
											"source": 7,
											"value": "612"
										},
										{
											"begin": 13334,
											"end": 14135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "51678340555B44277C2BBA9423D75EBEAD61331B9CDE789C13D0820D4F537E29"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 13728,
											"end": 13987,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "618"
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13334,
											"end": 14135,
											"name": "tag",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 13334,
											"end": 14135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13564,
											"end": 13575,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13650,
											"end": 13666,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 13605,
											"end": 13631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "620"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13605,
											"end": 13631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 13605,
											"end": 13631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13605,
											"end": 13631,
											"name": "tag",
											"source": 7,
											"value": "620"
										},
										{
											"begin": 13605,
											"end": 13631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 13650,
											"end": 13666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13650,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "621"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13650,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 13650,
											"end": 13677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13650,
											"end": 13677,
											"name": "tag",
											"source": 7,
											"value": "621"
										},
										{
											"begin": 13650,
											"end": 13677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13698,
											"end": 13711,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13698,
											"end": 13988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "622"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "623"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "623"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13728,
											"end": 13987,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13728,
											"end": 13987,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13728,
											"end": 13987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13728,
											"end": 13987,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13728,
											"end": 13987,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13728,
											"end": 13987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13899,
											"end": 13914,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 13728,
											"end": 13987,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13728,
											"end": 13987,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13728,
											"end": 13987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13650,
											"end": 13666,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 13728,
											"end": 13987,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 13728,
											"end": 13987,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13728,
											"end": 13987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13698,
											"end": 13988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 13698,
											"end": 13988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13698,
											"end": 13988,
											"name": "tag",
											"source": 7,
											"value": "622"
										},
										{
											"begin": 13698,
											"end": 13988,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12821,
											"end": 12826,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 629,
											"end": 631,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 629,
											"end": 631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13650,
											"end": 13666,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 631,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 629,
											"end": 631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14014,
											"end": 14094,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 14113,
											"end": 14120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "tag",
											"source": 7,
											"value": "618"
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "624"
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 13484,
											"end": 13518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "tag",
											"source": 7,
											"value": "624"
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 13484,
											"end": 13518,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "tag",
											"source": 7,
											"value": "610"
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14355,
											"end": 14362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14355,
											"end": 14362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14355,
											"end": 14362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "tag",
											"source": 7,
											"value": "608"
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13172,
											"end": 13189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 13172,
											"end": 13189,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13172,
											"end": 13189,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 13125,
											"end": 13189,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13168,
											"name": "tag",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 13125,
											"end": 13168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12589,
											"end": 12601,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13143,
											"end": 13168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13143,
											"end": 13168,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13143,
											"end": 13168,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "607"
										},
										{
											"begin": 13125,
											"end": 13168,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12790,
											"end": 12793,
											"name": "tag",
											"source": 7,
											"value": "603"
										},
										{
											"begin": 12790,
											"end": 12793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12821,
											"end": 12826,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12589,
											"end": 12601,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 12821,
											"end": 12845,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 12877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 12877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 12877,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 12905,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 12905,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 12905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "629"
										},
										{
											"begin": 12864,
											"end": 12905,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12790,
											"end": 12793,
											"name": "tag",
											"source": 7,
											"value": "630"
										},
										{
											"begin": 12790,
											"end": 12793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12860,
											"end": 13036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "610"
										},
										{
											"begin": 12860,
											"end": 13036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12768,
											"end": 12769,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12759,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "602"
										},
										{
											"begin": 12759,
											"end": 12769,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 12905,
											"name": "tag",
											"source": 7,
											"value": "629"
										},
										{
											"begin": 12864,
											"end": 12905,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12589,
											"end": 12601,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12881,
											"end": 12905,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12881,
											"end": 12905,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 12905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "630"
										},
										{
											"begin": 12864,
											"end": 12905,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12573,
											"end": 12701,
											"name": "tag",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 12573,
											"end": 12701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12660,
											"end": 12667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12660,
											"end": 12667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12660,
											"end": 12667,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12660,
											"end": 12667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 12660,
											"end": 12667,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12660,
											"end": 12667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12660,
											"end": 12667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12660,
											"end": 12667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12576,
											"end": 12619,
											"name": "tag",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 12576,
											"end": 12619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12605,
											"end": 12619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12605,
											"end": 12619,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12605,
											"end": 12619,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12576,
											"end": 12619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 12576,
											"end": 12619,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 18934,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 16478,
											"end": 18934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 18934,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 18934,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 18934,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 18934,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 18934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 18934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 18934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16617,
											"end": 16630,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16617,
											"end": 16630,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16617,
											"end": 16658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16617,
											"end": 16658,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16617,
											"end": 16658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "635"
										},
										{
											"begin": 16617,
											"end": 16658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 18934,
											"name": "tag",
											"source": 7,
											"value": "636"
										},
										{
											"begin": 16478,
											"end": 18934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16617,
											"end": 16676,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16617,
											"end": 16676,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16617,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "637"
										},
										{
											"begin": 16617,
											"end": 16676,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 18934,
											"name": "tag",
											"source": 7,
											"value": "638"
										},
										{
											"begin": 16478,
											"end": 18934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16613,
											"end": 16749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "639"
										},
										{
											"begin": 16613,
											"end": 16749,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16832,
											"end": 16851,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 16832,
											"end": 16851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16832,
											"end": 16851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 16832,
											"end": 16851,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16832,
											"end": 16851,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16832,
											"end": 16851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 16832,
											"end": 16851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16832,
											"end": 16851,
											"name": "tag",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 16832,
											"end": 16851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16890,
											"end": 16916,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 16879,
											"end": 16917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "642"
										},
										{
											"begin": 16890,
											"end": 16916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "643"
										},
										{
											"begin": 16890,
											"end": 16916,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16890,
											"end": 16916,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 16890,
											"end": 16916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 16890,
											"end": 16916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16890,
											"end": 16916,
											"name": "tag",
											"source": 7,
											"value": "643"
										},
										{
											"begin": 16890,
											"end": 16916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16879,
											"end": 16917,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16879,
											"end": 16917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 16879,
											"end": 16917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16879,
											"end": 16917,
											"name": "tag",
											"source": 7,
											"value": "642"
										},
										{
											"begin": 16879,
											"end": 16917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17000,
											"end": 17025,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17126,
											"end": 17127,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 17181,
											"end": 17187,
											"name": "tag",
											"source": 7,
											"value": "644"
										},
										{
											"begin": 17181,
											"end": 17187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17185,
											"end": 17187,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 17181,
											"end": 17187,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17181,
											"end": 17187,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 17181,
											"end": 17187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 17181,
											"end": 17187,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17164,
											"end": 18539,
											"name": "tag",
											"source": 7,
											"value": "646"
										},
										{
											"begin": 17164,
											"end": 18539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 18656,
											"end": 18682,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18682,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18682,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 18656,
											"end": 18682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18656,
											"end": 18682,
											"name": "tag",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 18656,
											"end": 18682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18697,
											"end": 18719,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18693,
											"end": 18782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "648"
										},
										{
											"begin": 18693,
											"end": 18782,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17164,
											"end": 18539,
											"name": "tag",
											"source": 7,
											"value": "649"
										},
										{
											"begin": 17164,
											"end": 18539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18851,
											"end": 18864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18851,
											"end": 18864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18847,
											"end": 18918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 18847,
											"end": 18918,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 18934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 18934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18693,
											"end": 18782,
											"name": "tag",
											"source": 7,
											"value": "648"
										},
										{
											"begin": 18693,
											"end": 18782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18751,
											"end": 18769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 18751,
											"end": 18769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18751,
											"end": 18769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 18751,
											"end": 18769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18751,
											"end": 18769,
											"name": "tag",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 18751,
											"end": 18769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18693,
											"end": 18782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18693,
											"end": 18782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "649"
										},
										{
											"begin": 18693,
											"end": 18782,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17189,
											"end": 17192,
											"name": "tag",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 17189,
											"end": 17192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17278,
											"end": 17292,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17278,
											"end": 17292,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17278,
											"end": 17292,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17278,
											"end": 17292,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 17278,
											"end": 17292,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 17278,
											"end": 17292,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 17278,
											"end": 17292,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 17278,
											"end": 17292,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17278,
											"end": 17292,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17278,
											"end": 17321,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17278,
											"end": 17321,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17278,
											"end": 17321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "654"
										},
										{
											"begin": 17278,
											"end": 17321,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17189,
											"end": 17192,
											"name": "tag",
											"source": 7,
											"value": "655"
										},
										{
											"begin": 17189,
											"end": 17192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17274,
											"end": 17550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "656"
										},
										{
											"begin": 17274,
											"end": 17550,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17584,
											"end": 17589,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 17621,
											"end": 17629,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17621,
											"end": 17629,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 17621,
											"end": 17629,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 17621,
											"end": 17629,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 17621,
											"end": 17629,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17621,
											"end": 17629,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17621,
											"end": 17646,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 17621,
											"end": 17646,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17617,
											"end": 18247,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17621,
											"end": 17646,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 17621,
											"end": 17646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "658"
										},
										{
											"begin": 17621,
											"end": 17646,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17755,
											"end": 17789,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17755,
											"end": 17789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "660"
										},
										{
											"begin": 17755,
											"end": 17789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17755,
											"end": 17789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 17755,
											"end": 17789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17755,
											"end": 17789,
											"name": "tag",
											"source": 7,
											"value": "660"
										},
										{
											"begin": 17755,
											"end": 17789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17584,
											"end": 17589,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17935,
											"end": 17965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "664"
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 17890,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "665"
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "666"
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17617,
											"end": 18247,
											"name": "tag",
											"source": 7,
											"value": "667"
										},
										{
											"begin": 17617,
											"end": 18247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19215,
											"end": 19226,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19285,
											"end": 19307,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 19249,
											"end": 19274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "668"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19249,
											"end": 19274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 19249,
											"end": 19274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19249,
											"end": 19274,
											"name": "tag",
											"source": 7,
											"value": "668"
										},
										{
											"begin": 19249,
											"end": 19274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 19285,
											"end": 19307,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19285,
											"end": 19317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "669"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19285,
											"end": 19317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 19285,
											"end": 19317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19285,
											"end": 19317,
											"name": "tag",
											"source": 7,
											"value": "669"
										},
										{
											"begin": 19285,
											"end": 19317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19330,
											"end": 19343,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19330,
											"end": 19577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "670"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "671"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "671"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19361,
											"end": 19576,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19361,
											"end": 19576,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19361,
											"end": 19576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19361,
											"end": 19576,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19361,
											"end": 19576,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19361,
											"end": 19576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19497,
											"end": 19512,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 19361,
											"end": 19576,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 19361,
											"end": 19576,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19361,
											"end": 19576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 19361,
											"end": 19576,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 19361,
											"end": 19576,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19361,
											"end": 19576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19330,
											"end": 19577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 19330,
											"end": 19577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19330,
											"end": 19577,
											"name": "tag",
											"source": 7,
											"value": "670"
										},
										{
											"begin": 19330,
											"end": 19577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17584,
											"end": 17589,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "51678340555B44277C2BBA9423D75EBEAD61331B9CDE789C13D0820D4F537E29"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 19361,
											"end": 19576,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19595,
											"end": 19664,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 17890,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 17890,
											"end": 17916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17890,
											"end": 17916,
											"name": "tag",
											"source": 7,
											"value": "665"
										},
										{
											"begin": 17890,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17935,
											"end": 17965,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 17935,
											"end": 17965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 17935,
											"end": 17965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17935,
											"end": 17965,
											"name": "tag",
											"source": 7,
											"value": "664"
										},
										{
											"begin": 17935,
											"end": 17965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17984,
											"end": 18005,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17126,
											"end": 17127,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 17617,
											"end": 18247,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17617,
											"end": 18247,
											"name": "tag",
											"source": 7,
											"value": "672"
										},
										{
											"begin": 17617,
											"end": 18247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18327,
											"end": 18349,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18327,
											"end": 18349,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18327,
											"end": 18349,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 18327,
											"end": 18349,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18323,
											"end": 18356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "673"
										},
										{
											"begin": 18323,
											"end": 18356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18516,
											"end": 18527,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 17126,
											"end": 17127,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 18516,
											"end": 18527,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18516,
											"end": 18527,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17189,
											"end": 17192,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17169,
											"end": 17179,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17169,
											"end": 17179,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17169,
											"end": 17179,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17169,
											"end": 17179,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 17169,
											"end": 17179,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 17169,
											"end": 17179,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 17169,
											"end": 17179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "644"
										},
										{
											"begin": 17169,
											"end": 17179,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18323,
											"end": 18356,
											"name": "tag",
											"source": 7,
											"value": "673"
										},
										{
											"begin": 18323,
											"end": 18356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18351,
											"end": 18356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "646"
										},
										{
											"begin": 18351,
											"end": 18356,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "tag",
											"source": 7,
											"value": "666"
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "675"
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 19152,
											"end": 19177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "tag",
											"source": 7,
											"value": "675"
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "667"
										},
										{
											"begin": 19152,
											"end": 19177,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17617,
											"end": 18247,
											"name": "tag",
											"source": 7,
											"value": "658"
										},
										{
											"begin": 17617,
											"end": 18247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18124,
											"end": 18151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18124,
											"end": 18151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18124,
											"end": 18151,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18124,
											"end": 18151,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18124,
											"end": 18151,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18124,
											"end": 18151,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 18124,
											"end": 18151,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 18124,
											"end": 18151,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18124,
											"end": 18151,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 18124,
											"end": 18151,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 18121,
											"end": 18215,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17617,
											"end": 18247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "672"
										},
										{
											"begin": 18121,
											"end": 18215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18176,
											"end": 18195,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18176,
											"end": 18195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "681"
										},
										{
											"begin": 18176,
											"end": 18195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18176,
											"end": 18195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 18176,
											"end": 18195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18176,
											"end": 18195,
											"name": "tag",
											"source": 7,
											"value": "681"
										},
										{
											"begin": 18176,
											"end": 18195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18121,
											"end": 18215,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17617,
											"end": 18247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "672"
										},
										{
											"begin": 17617,
											"end": 18247,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17274,
											"end": 17550,
											"name": "tag",
											"source": 7,
											"value": "656"
										},
										{
											"begin": 17274,
											"end": 17550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "682"
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 17420,
											"end": 17446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "tag",
											"source": 7,
											"value": "682"
										},
										{
											"begin": 17420,
											"end": 17446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17469,
											"end": 17482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17465,
											"end": 17509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 17465,
											"end": 17509,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17528,
											"end": 17535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17528,
											"end": 17535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17278,
											"end": 17321,
											"name": "tag",
											"source": 7,
											"value": "654"
										},
										{
											"begin": 17278,
											"end": 17321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18516,
											"end": 18527,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17296,
											"end": 17321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17296,
											"end": 17321,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 17278,
											"end": 17321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "655"
										},
										{
											"begin": 17278,
											"end": 17321,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16613,
											"end": 16749,
											"name": "tag",
											"source": 7,
											"value": "639"
										},
										{
											"begin": 16613,
											"end": 16749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16708,
											"end": 16715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16708,
											"end": 16715,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16708,
											"end": 16715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16708,
											"end": 16715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16708,
											"end": 16715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 16708,
											"end": 16715,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16708,
											"end": 16715,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16708,
											"end": 16715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16708,
											"end": 16715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 16708,
											"end": 16715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16617,
											"end": 16676,
											"name": "tag",
											"source": 7,
											"value": "637"
										},
										{
											"begin": 16617,
											"end": 16676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16662,
											"end": 16676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16662,
											"end": 16676,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16662,
											"end": 16676,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16617,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "638"
										},
										{
											"begin": 16617,
											"end": 16676,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16617,
											"end": 16658,
											"name": "tag",
											"source": 7,
											"value": "635"
										},
										{
											"begin": 16617,
											"end": 16658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16646,
											"end": 16658,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16634,
											"end": 16658,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16634,
											"end": 16658,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 16617,
											"end": 16658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "636"
										},
										{
											"begin": 16617,
											"end": 16658,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16745,
											"end": 16970,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 16745,
											"end": 16970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16745,
											"end": 16970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16837,
											"end": 16858,
											"name": "PUSH",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 16837,
											"end": 16879,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 16837,
											"end": 16879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16836,
											"end": 16879,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16832,
											"end": 16963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "687"
										},
										{
											"begin": 16832,
											"end": 16963,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16745,
											"end": 16970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16745,
											"end": 16970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16745,
											"end": 16970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16832,
											"end": 16963,
											"name": "tag",
											"source": 8,
											"value": "687"
										},
										{
											"begin": 16832,
											"end": 16963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "689"
										},
										{
											"begin": 17095,
											"end": 17114,
											"name": "PUSH",
											"source": 8,
											"value": "3D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17083,
											"end": 17114,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17083,
											"end": 17114,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 17075,
											"end": 17132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17075,
											"end": 17132,
											"name": "tag",
											"source": 8,
											"value": "689"
										},
										{
											"begin": 17075,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17143,
											"end": 17203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 17152,
											"end": 17186,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 17152,
											"end": 17186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17151,
											"end": 17186,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17143,
											"end": 17203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 17143,
											"end": 17203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17143,
											"end": 17203,
											"name": "tag",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 17143,
											"end": 17203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17243,
											"end": 17248,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 17286,
											"end": 17302,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17286,
											"end": 17302,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 17286,
											"end": 17302,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17286,
											"end": 17302,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17286,
											"end": 17306,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17286,
											"end": 17306,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "691"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17377,
											"end": 17398,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 17377,
											"end": 17398,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17377,
											"end": 17398,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 791,
											"end": 799,
											"name": "PUSH",
											"source": 8,
											"value": "83D600"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18117,
											"end": 18168,
											"name": "PUSH",
											"source": 8,
											"value": "42EE5EF523A95C6FB3FFDD2E9B34955B83EA8C2B11FF268C87AE6EA25556EAAC"
										},
										{
											"begin": 17357,
											"end": 17421,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 17592,
											"end": 17669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "695"
										},
										{
											"begin": 17357,
											"end": 17421,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17357,
											"end": 17421,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 17357,
											"end": 17421,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17456,
											"end": 17466,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 17528,
											"end": 17555,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 17456,
											"end": 17466,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 17456,
											"end": 17466,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17456,
											"end": 17466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17456,
											"end": 17491,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17456,
											"end": 17491,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17528,
											"end": 17555,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17528,
											"end": 17555,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17528,
											"end": 17581,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17528,
											"end": 17581,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17600,
											"end": 17630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17600,
											"end": 17630,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17600,
											"end": 17630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "696"
										},
										{
											"begin": 17600,
											"end": 17630,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16832,
											"end": 16963,
											"name": "tag",
											"source": 8,
											"value": "697"
										},
										{
											"begin": 16832,
											"end": 16963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17600,
											"end": 17652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17600,
											"end": 17652,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17600,
											"end": 17652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "698"
										},
										{
											"begin": 17600,
											"end": 17652,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16832,
											"end": 16963,
											"name": "tag",
											"source": 8,
											"value": "699"
										},
										{
											"begin": 16832,
											"end": 16963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17592,
											"end": 17669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17592,
											"end": 17669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 17592,
											"end": 17669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17592,
											"end": 17669,
											"name": "tag",
											"source": 8,
											"value": "695"
										},
										{
											"begin": 17592,
											"end": 17669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16837,
											"end": 16858,
											"name": "PUSH",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 18016,
											"end": 18044,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16837,
											"end": 16879,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17839,
											"end": 17862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17839,
											"end": 17862,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17830,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "700"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17838,
											"end": 17862,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17830,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 17830,
											"end": 17884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17830,
											"end": 17884,
											"name": "tag",
											"source": 8,
											"value": "700"
										},
										{
											"begin": 17830,
											"end": 17884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17912,
											"end": 17927,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 18016,
											"end": 18044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 18117,
											"end": 18168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "701"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17912,
											"end": 17927,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17912,
											"end": 17927,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17912,
											"end": 17927,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17912,
											"end": 17927,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 18117,
											"end": 18168,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18117,
											"end": 18168,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18117,
											"end": 18168,
											"name": "tag",
											"source": 8,
											"value": "701"
										},
										{
											"begin": 18117,
											"end": 18168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18117,
											"end": 18168,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18117,
											"end": 18168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18117,
											"end": 18168,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 16745,
											"end": 16970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17600,
											"end": 17652,
											"name": "tag",
											"source": 8,
											"value": "698"
										},
										{
											"begin": 17600,
											"end": 17652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17600,
											"end": 17652,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17600,
											"end": 17652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17600,
											"end": 17652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17600,
											"end": 17652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "699"
										},
										{
											"begin": 17600,
											"end": 17652,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17600,
											"end": 17630,
											"name": "tag",
											"source": 8,
											"value": "696"
										},
										{
											"begin": 17600,
											"end": 17630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17600,
											"end": 17630,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17600,
											"end": 17630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17600,
											"end": 17630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "697"
										},
										{
											"begin": 17600,
											"end": 17630,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "691"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16837,
											"end": 16879,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55736572206E6F74206C6576656C20313"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 18192,
											"end": 18405,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 18192,
											"end": 18405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18192,
											"end": 18405,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18280,
											"end": 18297,
											"name": "PUSH",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 18280,
											"end": 18318,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 18280,
											"end": 18318,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 18279,
											"end": 18318,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18275,
											"end": 18398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "702"
										},
										{
											"begin": 18275,
											"end": 18398,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18192,
											"end": 18405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18192,
											"end": 18405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18192,
											"end": 18405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18275,
											"end": 18398,
											"name": "tag",
											"source": 8,
											"value": "702"
										},
										{
											"begin": 18275,
											"end": 18398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18506,
											"end": 18559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "704"
										},
										{
											"begin": 18526,
											"end": 18541,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 18514,
											"end": 18541,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18514,
											"end": 18541,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 18506,
											"end": 18559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 18506,
											"end": 18559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18506,
											"end": 18559,
											"name": "tag",
											"source": 8,
											"value": "704"
										},
										{
											"begin": 18506,
											"end": 18559,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18579,
											"end": 18592,
											"name": "PUSH",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18570,
											"end": 18626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "705"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 18579,
											"end": 18609,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 18579,
											"end": 18609,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 18578,
											"end": 18609,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18570,
											"end": 18626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 18570,
											"end": 18626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18570,
											"end": 18626,
											"name": "tag",
											"source": 8,
											"value": "705"
										},
										{
											"begin": 18570,
											"end": 18626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18666,
											"end": 18671,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 18709,
											"end": 18725,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18709,
											"end": 18725,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 18709,
											"end": 18725,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18709,
											"end": 18725,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 18709,
											"end": 18729,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18709,
											"end": 18729,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "706"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18800,
											"end": 18821,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 18800,
											"end": 18821,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18800,
											"end": 18821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 849,
											"end": 857,
											"name": "PUSH",
											"source": 8,
											"value": "2514300"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19519,
											"end": 19570,
											"name": "PUSH",
											"source": 8,
											"value": "42EE5EF523A95C6FB3FFDD2E9B34955B83EA8C2B11FF268C87AE6EA25556EAAC"
										},
										{
											"begin": 18780,
											"end": 18840,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 19002,
											"end": 19079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "710"
										},
										{
											"begin": 18780,
											"end": 18840,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18780,
											"end": 18840,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18780,
											"end": 18840,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18875,
											"end": 18885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1189,
											"end": 1190,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 18943,
											"end": 18969,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 18800,
											"end": 18821,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 18875,
											"end": 18885,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 18875,
											"end": 18885,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18875,
											"end": 18885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 18875,
											"end": 18906,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18875,
											"end": 18906,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18943,
											"end": 18969,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18943,
											"end": 18969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 18943,
											"end": 18991,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18943,
											"end": 18991,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19010,
											"end": 19040,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19010,
											"end": 19040,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19010,
											"end": 19040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "696"
										},
										{
											"begin": 19010,
											"end": 19040,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19010,
											"end": 19062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19010,
											"end": 19062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19010,
											"end": 19062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "698"
										},
										{
											"begin": 19010,
											"end": 19062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19002,
											"end": 19079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19002,
											"end": 19079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 19002,
											"end": 19079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19002,
											"end": 19079,
											"name": "tag",
											"source": 8,
											"value": "710"
										},
										{
											"begin": 19002,
											"end": 19079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18280,
											"end": 18297,
											"name": "PUSH",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 19418,
											"end": 19446,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18280,
											"end": 18318,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 19241,
											"end": 19264,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19241,
											"end": 19264,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19232,
											"end": 19286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "700"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19240,
											"end": 19264,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19232,
											"end": 19286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 19232,
											"end": 19286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "706"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18280,
											"end": 18318,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18709,
											"end": 18725,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55736572206E6F74206C6576656C203135"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18526,
											"end": 18541,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "717"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "717"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C9BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "719"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "719"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "149BDD5B990818DB1BDCD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "721"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "721"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656C696769626C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "723"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "tag",
											"source": 7,
											"value": "723"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B1C9958591E48145D585B1A599A5959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 124,
											"end": 20190,
											"name": "REVERT",
											"source": 7
										}
									],
									".data": {
										"51678340555B44277C2BBA9423D75EBEAD61331B9CDE789C13D0820D4F537E29": "e17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e3"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/modules/SponsorMatrix.sol",
								"contracts/modules/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ACC_PRECISION()": "32fcd966",
							"MONTHLY_ROYALTY_DIRECT()": "d2f0490d",
							"MONTHLY_ROYALTY_LEVEL()": "23fd338e",
							"MONTHLY_ROYALTY_TIME()": "a5e52b99",
							"MONTH_DURATION()": "2a891534",
							"PERCENTS_DIVIDER()": "01c234a8",
							"ROI_CAP_DIVIDER()": "58c7d352",
							"ROI_CAP_MULTIPLIER()": "375b43b4",
							"TIME_STEP()": "32bc298c",
							"TOP_ROYALTY_DIRECT()": "31bb6a30",
							"TOP_ROYALTY_LEVEL()": "2ae0ee0d",
							"TOP_ROYALTY_TIME()": "705fee2d",
							"WEEK_DURATION()": "76f5f700",
							"WeeklyCapping()": "ebe0ff15",
							"WeeklyTotalReward()": "3080b5bc",
							"claimCommunity(uint256)": "d54d6ddb",
							"communityAccPerUser()": "78f6ad6d",
							"creatorWallet()": "7cdc65f2",
							"currentMonthlyRound()": "c9ed0708",
							"currentMonthlyStartTime()": "e898fc38",
							"currentWeeklyRound()": "ca8e9121",
							"currentWeeklyStartTime()": "fddc806f",
							"defaultRefId()": "ec597e6f",
							"glbBoosterPackages(uint256)": "2350268f",
							"minLevelForGlbBooster(uint256)": "d0a2fd79",
							"minLevelForPool(uint256)": "2132d204",
							"minPoolForGlbBooster(uint256)": "956a3228",
							"monthlyCapping()": "c8df2908",
							"monthlyTotalReward()": "a59d17d1",
							"packages(uint256)": "c216212a",
							"pendingCommunity(uint256)": "24513088",
							"poolPackages(uint256)": "ae4708dc",
							"register(uint256)": "f207564e",
							"registeredUserIds(uint256)": "39ab3603",
							"systemMaintance()": "e9e34a16",
							"teamDevelopment()": "f5d74d93",
							"topRoyaltyReward()": "5b62d1d5",
							"topRoyaltyRound()": "4b8cbf9b",
							"topRoyaltyStartTime()": "9b40ab97",
							"totalUsers()": "bff1f9e1",
							"upgrade(uint256)": "45977d03",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUser\",\"type\":\"uint256\"}],\"name\":\"CommunityBonusDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"incomeType\",\"type\":\"uint256\"}],\"name\":\"IncomeDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Storage.IncomeType\",\"name\":\"incomeType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"IncomeDistribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromUserId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LotteryReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyRewardClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyRoyaltyQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uplineId\",\"type\":\"uint256\"}],\"name\":\"Registration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"level\",\"type\":\"string\"}],\"name\":\"RewardSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyRewardClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"depositType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upgradeTime\",\"type\":\"uint256\"}],\"name\":\"Upgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"matrixId\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"userId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"parentId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"}],\"name\":\"UserJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyContestQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyRewardClaim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACC_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY_DIRECT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTH_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY_DIRECT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEEK_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"claimCommunity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityAccPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultRefId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"glbBoosterPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minPoolForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"packages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"pendingCommunity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pendingGross\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingAfterCap\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sponsorId\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredUserIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemMaintance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamDevelopment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/SponsorMatrix.sol\":\"Nanakshahi\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/modules/SponsorMatrix.sol\":{\"keccak256\":\"0x6556fdaabb4478cef8690ff06dfad127f82abc40c125bb07cd1f7b954da2690b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1035b00dd95355aef387ac3004289510f0462da6b5e44568852671460e01b94d\",\"dweb:/ipfs/QmeN7TWovmahq3j2atRHcZsucpyC5m6LKLcDdnRyiVA9iy\"]},\"contracts/modules/Storage.sol\":{\"keccak256\":\"0xfdca77efb4adc564a11cfeb1d285a517ccaa87c63e1e49d380ad6406f5210186\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://605b0acb462baf239cc9f8e6e5c83cf9edfd882d996d7ff55d55352204bcd63e\",\"dweb:/ipfs/QmTU5Z4KcYr3vsfh2XwxuMEyKm9JBd7wwj3UvgPr3MtFWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 2330,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "usdt",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)232"
							},
							{
								"astId": 2332,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "creatorWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 2334,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "systemMaintance",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 2336,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "teamDevelopment",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 2338,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "defaultRefId",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 2340,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "totalUsers",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2376,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "registeredUserIds",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2378,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "nonce",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 2383,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "communityAccPerUser",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 2387,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "communityDebt",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2436,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "packages",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2539,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "addressToId",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2544,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "users",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_struct(User)2488_storage)"
							},
							{
								"astId": 2549,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "userIncomes",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint256,t_struct(UserIncome)2513_storage)"
							},
							{
								"astId": 2555,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "incomeHistory",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_array(t_struct(Income)2524_storage)dyn_storage)"
							},
							{
								"astId": 2562,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "teams",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2566,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "matrixDirect",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2571,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "directReferrals",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2671,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "poolPackages",
								"offset": 0,
								"slot": "19",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2683,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "glbBoosterPackages",
								"offset": 0,
								"slot": "20",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2695,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "minLevelForPool",
								"offset": 0,
								"slot": "21",
								"type": "t_array(t_uint256)7_storage"
							},
							{
								"astId": 2708,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "minLevelForGlbBooster",
								"offset": 0,
								"slot": "28",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 2721,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "minPoolForGlbBooster",
								"offset": 0,
								"slot": "36",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 2755,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "userPooltopup",
								"offset": 0,
								"slot": "44",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)2737_storage))"
							},
							{
								"astId": 2762,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "userPooldtl",
								"offset": 0,
								"slot": "45",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)2732_storage))"
							},
							{
								"astId": 2769,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "userChildren",
								"offset": 0,
								"slot": "46",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2776,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "userIdPerPool",
								"offset": 0,
								"slot": "47",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2781,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "poolUsers",
								"offset": 0,
								"slot": "48",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2787,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "userHasPool",
								"offset": 0,
								"slot": "49",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2794,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "userBoosterdtl",
								"offset": 0,
								"slot": "50",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)2748_storage))"
							},
							{
								"astId": 2801,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "userBoosterChildren",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2806,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "boosterUsers",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2812,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "userHasbooster",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2821,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "currentWeeklyRound",
								"offset": 0,
								"slot": "54",
								"type": "t_uint256"
							},
							{
								"astId": 2824,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "currentWeeklyStartTime",
								"offset": 0,
								"slot": "55",
								"type": "t_uint256"
							},
							{
								"astId": 2827,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "WeeklyTotalReward",
								"offset": 0,
								"slot": "56",
								"type": "t_uint256"
							},
							{
								"astId": 2862,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "weeklyContestdtl",
								"offset": 0,
								"slot": "57",
								"type": "t_mapping(t_uint256,t_struct(WeeklyContest)2846_storage)"
							},
							{
								"astId": 2867,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "weeklyQualifiedUsers",
								"offset": 0,
								"slot": "58",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2874,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "weeklyUserdtl",
								"offset": 0,
								"slot": "59",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2857_storage))"
							},
							{
								"astId": 2881,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "weeklyUserDirects",
								"offset": 0,
								"slot": "60",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2924,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "currentMonthlyRound",
								"offset": 0,
								"slot": "61",
								"type": "t_uint256"
							},
							{
								"astId": 2927,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "currentMonthlyStartTime",
								"offset": 0,
								"slot": "62",
								"type": "t_uint256"
							},
							{
								"astId": 2930,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "monthlyTotalReward",
								"offset": 0,
								"slot": "63",
								"type": "t_uint256"
							},
							{
								"astId": 2967,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "monthlyRoyaltydtl",
								"offset": 0,
								"slot": "64",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyalty)2949_storage)"
							},
							{
								"astId": 2970,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "monthlyQualifiedUsers",
								"offset": 0,
								"slot": "65",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2975,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "monthlyRoyaltyUserdtl",
								"offset": 0,
								"slot": "66",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2962_storage)"
							},
							{
								"astId": 2980,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "monthlyUserDirects",
								"offset": 0,
								"slot": "67",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 3017,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "topRoyaltyRound",
								"offset": 0,
								"slot": "68",
								"type": "t_uint256"
							},
							{
								"astId": 3020,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "topRoyaltyStartTime",
								"offset": 0,
								"slot": "69",
								"type": "t_uint256"
							},
							{
								"astId": 3023,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "topRoyaltyReward",
								"offset": 0,
								"slot": "70",
								"type": "t_uint256"
							},
							{
								"astId": 3060,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "topRoyaltydtl",
								"offset": 0,
								"slot": "71",
								"type": "t_mapping(t_uint256,t_struct(topRoyalty)3042_storage)"
							},
							{
								"astId": 3063,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "topRoyaltyQualifiedUsers",
								"offset": 0,
								"slot": "72",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 3068,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "topRoyaltyUserdtl",
								"offset": 0,
								"slot": "73",
								"type": "t_mapping(t_uint256,t_struct(topRoyaltyUser)3055_storage)"
							},
							{
								"astId": 3073,
								"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
								"label": "topRoyaltyUserDirects",
								"offset": 0,
								"slot": "74",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Deposit)2445_storage)dyn_storage": {
								"base": "t_struct(Deposit)2445_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Deposit[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Income)2524_storage)dyn_storage": {
								"base": "t_struct(Income)2524_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Income[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)7_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[7]",
								"numberOfBytes": "224"
							},
							"t_array(t_uint256)8_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[8]",
								"numberOfBytes": "256"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)232": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_array(t_struct(Income)2524_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.Income[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Income)2524_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)2748_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserBooster)2748_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)2732_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPool)2732_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)2737_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPoolTopup)2737_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2857_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(weeklyUser)2857_storage)"
							},
							"t_mapping(t_uint256,t_struct(User)2488_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)2488_storage"
							},
							"t_mapping(t_uint256,t_struct(UserBooster)2748_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserBooster)",
								"numberOfBytes": "32",
								"value": "t_struct(UserBooster)2748_storage"
							},
							"t_mapping(t_uint256,t_struct(UserIncome)2513_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserIncome)",
								"numberOfBytes": "32",
								"value": "t_struct(UserIncome)2513_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPool)2732_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPool)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPool)2732_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPoolTopup)2737_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPoolTopup)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPoolTopup)2737_storage"
							},
							"t_mapping(t_uint256,t_struct(WeeklyContest)2846_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.WeeklyContest)",
								"numberOfBytes": "32",
								"value": "t_struct(WeeklyContest)2846_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyalty)2949_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyalty)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyalty)2949_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2962_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyaltyUser)2962_storage"
							},
							"t_mapping(t_uint256,t_struct(topRoyalty)3042_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.topRoyalty)",
								"numberOfBytes": "32",
								"value": "t_struct(topRoyalty)3042_storage"
							},
							"t_mapping(t_uint256,t_struct(topRoyaltyUser)3055_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.topRoyaltyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(topRoyaltyUser)3055_storage"
							},
							"t_mapping(t_uint256,t_struct(weeklyUser)2857_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.weeklyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(weeklyUser)2857_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Deposit)2445_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Deposit",
								"members": [
									{
										"astId": 2438,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2440,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "withdrawn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2442,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "start",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2444,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "depositType",
										"offset": 0,
										"slot": "3",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Income)2524_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Income",
								"members": [
									{
										"astId": 2515,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "fromUserId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2517,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2519,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "packageLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2521,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2523,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "incomeType",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(User)2488_storage": {
								"encoding": "inplace",
								"label": "struct Storage.User",
								"members": [
									{
										"astId": 2447,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "account",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2451,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "deposits",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Deposit)2445_storage)dyn_storage"
									},
									{
										"astId": 2453,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "checkpoint",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2455,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "id",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2457,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "sponsorId",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2459,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "uplineId",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2461,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "level",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2463,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "directTeam",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2465,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "directPoolQualified",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2467,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "totalMatrixTeam",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2469,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "totalDeposit",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2471,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "poollevel",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 2473,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "poolDeposit",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 2475,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "boosterlevel",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 2477,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "boosterDeposit",
										"offset": 0,
										"slot": "14",
										"type": "t_uint256"
									},
									{
										"astId": 2479,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "registrationTime",
										"offset": 0,
										"slot": "15",
										"type": "t_uint256"
									},
									{
										"astId": 2481,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "level10Time",
										"offset": 0,
										"slot": "16",
										"type": "t_uint256"
									},
									{
										"astId": 2483,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "level15Time",
										"offset": 0,
										"slot": "17",
										"type": "t_uint256"
									},
									{
										"astId": 2485,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "monthlyUserDirectCount",
										"offset": 0,
										"slot": "18",
										"type": "t_uint256"
									},
									{
										"astId": 2487,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "topRoyaltyDirectCount",
										"offset": 0,
										"slot": "19",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "640"
							},
							"t_struct(UserBooster)2748_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserBooster",
								"members": [
									{
										"astId": 2739,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2741,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "poolId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2743,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "parentId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2745,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "bonusCount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2747,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "joinTime",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserIncome)2513_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserIncome",
								"members": [
									{
										"astId": 2490,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "totalIncome",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2492,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "sponsorIncome",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2494,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "matrixIncome",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2496,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "levelBoosterIncome",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2498,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "royaltyIncome",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2500,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "royaltyIncomeClaimed",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2502,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "communityIncome",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2504,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "poolIncome",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2506,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "boosterIncome",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2508,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "weeklyContestIncome",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2510,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "monthlyRoyalty",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2512,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "topRoyalty",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "384"
							},
							"t_struct(UserPool)2732_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPool",
								"members": [
									{
										"astId": 2723,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2725,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "mainid",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2727,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "poolId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2729,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "parentId",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2731,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "bonusCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserPoolTopup)2737_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPoolTopup",
								"members": [
									{
										"astId": 2734,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "nextPoolAmt",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2736,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "reTopupAmt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(WeeklyContest)2846_storage": {
								"encoding": "inplace",
								"label": "struct Storage.WeeklyContest",
								"members": [
									{
										"astId": 2829,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2831,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2833,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2835,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2837,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2839,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2841,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2843,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2845,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyalty)2949_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyalty",
								"members": [
									{
										"astId": 2932,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2934,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2936,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2938,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2940,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2942,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2944,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2946,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2948,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyaltyUser)2962_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyaltyUser",
								"members": [
									{
										"astId": 2951,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2953,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "qualifiedRoundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2955,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2959,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_uint256,t_bool)"
									},
									{
										"astId": 2961,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "isQualified",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(topRoyalty)3042_storage": {
								"encoding": "inplace",
								"label": "struct Storage.topRoyalty",
								"members": [
									{
										"astId": 3025,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3027,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3029,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 3031,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3033,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 3035,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 3037,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 3039,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 3041,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(topRoyaltyUser)3055_storage": {
								"encoding": "inplace",
								"label": "struct Storage.topRoyaltyUser",
								"members": [
									{
										"astId": 3044,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3046,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "qualifiedRoundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3048,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 3052,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_uint256,t_bool)"
									},
									{
										"astId": 3054,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "isQualified",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(weeklyUser)2857_storage": {
								"encoding": "inplace",
								"label": "struct Storage.weeklyUser",
								"members": [
									{
										"astId": 2848,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2850,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "roundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2852,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2854,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 2856,
										"contract": "contracts/modules/SponsorMatrix.sol:Nanakshahi",
										"label": "isQualified",
										"offset": 1,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/Storage.sol": {
				"Storage": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usersCount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUser",
									"type": "uint256"
								}
							],
							"name": "CommunityBonusDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "incomeType",
									"type": "uint256"
								}
							],
							"name": "IncomeDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum Storage.IncomeType",
									"name": "incomeType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "IncomeDistribution",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromUserId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LotteryReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyRewardClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "MonthlyRoyaltyQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sponsor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "uplineId",
									"type": "uint256"
								}
							],
							"name": "Registration",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "level",
									"type": "string"
								}
							],
							"name": "RewardSent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "TopRoyaltyRewardClaim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "packageLevel",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "depositType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "upgradeTime",
									"type": "uint256"
								}
							],
							"name": "Upgrade",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint8",
									"name": "matrixId",
									"type": "uint8"
								},
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "userId",
									"type": "uint32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "parentId",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "parentAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "position",
									"type": "uint8"
								}
							],
							"name": "UserJoined",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalUsers",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDistributed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leftoverReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "joinTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyContestQualified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "userId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "perUserReward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimTime",
									"type": "uint256"
								}
							],
							"name": "WeeklyRewardClaim",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACC_PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY_DIRECT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY_LEVEL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTHLY_ROYALTY_TIME",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MONTH_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERCENTS_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROI_CAP_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TIME_STEP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY_DIRECT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY_LEVEL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOP_ROYALTY_TIME",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WEEK_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WeeklyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "communityAccPerUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creatorWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentMonthlyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentWeeklyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultRefId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "glbBoosterPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minLevelForPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "minPoolForGlbBooster",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyCapping",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthlyTotalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "packages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolPackages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "registeredUserIds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "systemMaintance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamDevelopment",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topRoyaltyStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_4, callvalue)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sstore\n  mload(0x40)\n  0x01e0\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup3\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n    /* \"contracts/modules/Storage.sol\":1666:1675  15 * 1e18 */\n  0xd02ab486cedc0000\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1698:1707  25 * 1e18 */\n  0x015af1d78b58c40000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1730:1739  50 * 1e18 */\n  0x02b5e3af16b1880000\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1762:1772  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x60\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1795:1805  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x80\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1828:1838  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xa0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1861:1871  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xc0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1894:1905  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xe0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1928:1939  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0100\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1962:1973  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0120\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1996:2008  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0140\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2031:2043  25600 * 1e18 */\n  0x056bc75e2d6310000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0160\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2066:2078  51200 * 1e18 */\n  0x0ad78ebc5ac620000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0180\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2101:2114  102400 * 1e18 */\n  0x15af1d78b58c40000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x01a0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":2137:2150  204800 * 1e18 */\n  0x2b5e3af16b1880000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x01c0\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0b\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0f\n  0x0b\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0f\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  lt\n  tag_8\n  jumpi\ntag_9:\n  pop\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\ntag_10:\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0f\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_11\n  jumpi\n  tag_13\n  tag_1\n  jump\t// in\ntag_13:\n    /* \"contracts/modules/Storage.sol\":6122:6127  75e18 */\n  0x0410d586a20a4c0000\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":6129:6135  300e18 */\n  0x1043561a8829300000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6137:6144  1200e18 */\n  0x410d586a20a4c00000\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6146:6153  4800e18 */\n  0x01043561a88293000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6155:6163  19200e18 */\n  0x0410d586a20a4c000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6165:6173  76800e18 */\n  0x1043561a882930000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6175:6184  307200e18 */\n  0x410d586a20a4c0000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n  0x13\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  lt\n  tag_14\n  jumpi\ntag_15:\n  pop\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\ntag_16:\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_17\n  jumpi\n  tag_19\n  tag_2\n  jump\t// in\ntag_19:\n    /* \"contracts/modules/Storage.sol\":1762:1772  100 * 1e18 */\n  0x056bc75e2d63100000\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"contracts/modules/Storage.sol\":1795:1805  200 * 1e18 */\n  0x0ad78ebc5ac6200000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1828:1838  400 * 1e18 */\n  0x15af1d78b58c400000\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1861:1871  800 * 1e18 */\n  0x2b5e3af16b18800000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1894:1905  1600 * 1e18 */\n  0x56bc75e2d631000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1928:1939  3200 * 1e18 */\n  0xad78ebc5ac62000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1962:1973  6400 * 1e18 */\n  0x015af1d78b58c4000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1996:2008  12800 * 1e18 */\n  0x02b5e3af16b188000000\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sload\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n  0x14\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sstore\n  dup1\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  lt\n  tag_20\n  jumpi\ntag_21:\n  pop\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  keccak256\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\ntag_22:\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_23\n  jumpi\n  tag_25\n  tag_1\n  jump\t// in\ntag_25:\n    /* \"contracts/modules/Storage.sol\":6338:6339  3 */\n  0x03\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6337:6361  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6337:6361  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6347:6348  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6337:6361  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0b\n  0x80\n    /* \"contracts/modules/Storage.sol\":6337:6361  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6354:6356  13 */\n  0x0d\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6337:6361  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0f\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6337:6361  [3, 5, 7, 9, 11, 13, 15] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\ntag_26:\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_27\n  jumpi\n  tag_29\n  tag_2\n  jump\t// in\ntag_29:\n    /* \"contracts/modules/Storage.sol\":6408:6409  4 */\n  0x04\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n  0x05\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6414:6415  6 */\n  0x06\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x07\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6347:6348  9 */\n  0x09\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":6426:6428  10 */\n  0x0a\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0b\n  0xe0\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\ntag_30:\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_31\n  jumpi\n  tag_33\n  tag_2\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  0x40\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x60\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x80\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xa0\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xc0\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0xe0\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  dup3\n  add\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\ntag_34:\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x08\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  dup2\n  lt\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8030:8031  0 */\n  0x36\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8075:8076  0 */\n  0x37\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":8117:8118  0 */\n  0x38\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":9479:9480  1 */\n  0x3d\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":9525:9526  0 */\n  0x3e\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":9566:9567  0 */\n  0x3f\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":10785:10786  1 */\n  0x44\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":10827:10828  0 */\n  0x45\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":10866:10867  0 */\n  0x46\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_35:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":6477:6500  [0, 1, 1, 1, 1, 1, 1,1] */\n  0x24\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  add\n  sstore\n  add\n  jump(tag_34)\ntag_31:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":6407:6432  [4, 5, 6, 7, 8, 9, 10,11] */\n  0x1c\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  add\n  sstore\n  add\n  jump(tag_30)\ntag_27:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  swap1\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  0xff\n  dup5\n  mload\n  and\n  swap4\n  add\n  swap3\n  dup2\n    /* \"contracts/modules/Storage.sol\":6337:6361  [3, 5, 7, 9, 11, 13, 15] */\n  0x15\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  add\n  sstore\n  add\n  jump(tag_26)\ntag_23:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  add\n  jump(tag_22)\ntag_20:\n    /* \"contracts/modules/Storage.sol\":6227:6297  [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n  0x14\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n  tag_37\n  swap1\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec\n  add\n  0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f4\n  tag_3\n  jump\t// in\ntag_37:\n  dup2\n  jump(tag_21)\ntag_17:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  add\n  jump(tag_16)\ntag_14:\n    /* \"contracts/modules/Storage.sol\":6121:6185  [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n  0x13\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n  tag_38\n  swap1\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090\n  add\n  0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a097\n  tag_3\n  jump\t// in\ntag_38:\n  dup2\n  jump(tag_15)\ntag_11:\n  dup2\n  mload\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  dup2\n  dup5\n  add\n  sstore\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x20\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  add\n  jump(tag_10)\ntag_8:\n    /* \"contracts/modules/Storage.sol\":1655:2170  [... */\n  0x0b\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n  tag_39\n  swap1\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n  add\n  0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc8\n  tag_3\n  jump\t// in\ntag_39:\n  0x00\n  jump(tag_9)\ntag_6:\n  shl(0xe0, 0x4e487b71)\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  mstore\n  mstore(0x04, 0x41)\n  0x24\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  0x00\n    /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n  revert\ntag_4:\n  0x00\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  swap1\n  0xe0\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_2:\n  mload(0x40)\n  swap1\n  0x0100\n  dup3\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_6\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_3:\n  dup2\n  dup2\n  lt\n  tag_45\n  jumpi\n  pop\n  pop\n  jump\t// out\ntag_45:\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_3)\nstop\n\nsub_0: assembly {\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_3, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_3:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01c234a8\n      eq\n      tag_5\n      jumpi\n      pop\n      dup1\n      0x2132d204\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2350268f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23fd338e\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x2a891534\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x2ae0ee0d\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x3080b5bc\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x31bb6a30\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x32bc298c\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x32fcd966\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x375b43b4\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x39ab3603\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x4b8cbf9b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x58c7d352\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x5b62d1d5\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x705fee2d\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x76f5f700\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x78f6ad6d\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x7cdc65f2\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x956a3228\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x9b40ab97\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xa59d17d1\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xa5e52b99\n      eq\n      tag_51\n      jumpi\n      dup1\n      0xae4708dc\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xbff1f9e1\n      eq\n      tag_55\n      jumpi\n      dup1\n      0xc216212a\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xc8df2908\n      eq\n      tag_59\n      jumpi\n      dup1\n      0xc9ed0708\n      eq\n      tag_61\n      jumpi\n      dup1\n      0xca8e9121\n      eq\n      tag_63\n      jumpi\n      dup1\n      0xd0a2fd79\n      eq\n      tag_65\n      jumpi\n      dup1\n      0xd2f0490d\n      eq\n      tag_67\n      jumpi\n      dup1\n      0xe898fc38\n      eq\n      tag_69\n      jumpi\n      dup1\n      0xe9e34a16\n      eq\n      tag_71\n      jumpi\n      dup1\n      0xebe0ff15\n      eq\n      tag_73\n      jumpi\n      dup1\n      0xec597e6f\n      eq\n      tag_75\n      jumpi\n      dup1\n      0xf5d74d93\n      eq\n      tag_77\n      jumpi\n      0xfddc806f\n      eq\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8038:8076  uint public currentWeeklyStartTime = 0 */\n      0x37\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_83:\n      0x00\n      dup1\n      revert\n    tag_77:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x04)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_75:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":534:558  uint public defaultRefId */\n      0x05\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_73:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":7978:7985  1000e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_71:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":460:490  address public systemMaintance */\n      0x03\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_69:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":9487:9526  uint public currentMonthlyStartTime = 0 */\n      0x3e\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_67:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1136:1137  5 */\n      0x05\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_65:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":6368:6432  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":6368:6432  uint[8] public minLevelForGlbBooster = [4, 5, 6, 7, 8, 9, 10,11] */\n      0x1c\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_63:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":7997:8031  uint public currentWeeklyRound = 0 */\n      0x36\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_61:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":9445:9480  uint public currentMonthlyRound = 1 */\n      0x3d\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_59:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":9424:9432  10000e18 */\n      0x021e19e0c9bab2400000\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_57:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":1630:2170  uint[] public packages = [... */\n      0x0b\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":1630:2170  uint[] public packages = [... */\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n      0x0b\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_133\n      jumpi\n        /* \"contracts/modules/Storage.sol\":1630:2170  uint[] public packages = [... */\n      0x0b\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_133:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_55:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":565:587  uint public totalUsers */\n      0x06\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_53:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":6092:6185  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x13\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":6092:6185  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n      0x13\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_133\n      jumpi\n        /* \"contracts/modules/Storage.sol\":6092:6185  uint[] public poolPackages = [75e18, 300e18, 1200e18, 4800e18, 19200e18, 76800e18, 307200e18] */\n      0x13\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0x66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_51:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":791:799  100 days */\n      0x83d600\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_49:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":9533:9567  uint public monthlyTotalReward = 0 */\n      0x3f\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_47:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":10793:10828  uint public topRoyaltyStartTime = 0 */\n      0x45\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_45:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x08\n        /* \"contracts/modules/Storage.sol\":6439:6500  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":6439:6500  uint[8] public minPoolForGlbBooster = [0, 1, 1, 1, 1, 1, 1,1] */\n      0x24\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_43:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/modules/Storage.sol\":422:450  address public creatorWallet */\n      0x02\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_41:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":1473:1507  uint256 public communityAccPerUser */\n      0x09\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_39:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":7925:7931  7 days */\n      0x093a80\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_37:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":849:857  450 days */\n      0x02514300\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_35:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":10835:10867  uint public topRoyaltyReward = 0 */\n      0x46\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_33:\n      tag_1\n      jump\t// in\n    tag_31:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":10755:10786  uint public topRoyaltyRound = 1 */\n      0x44\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_29:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":1206:1237  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":1206:1237  uint[] public registeredUserIds */\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n      0x07\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_133\n      jumpi\n        /* \"contracts/modules/Storage.sol\":1206:1237  uint[] public registeredUserIds */\n      0x07\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_27:\n      tag_2\n      jump\t// in\n    tag_25:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1462:1466  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_23:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":731:737  1 days */\n      0x015180\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_21:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1189:1190  2 */\n      0x02\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_19:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"contracts/modules/Storage.sol\":8085:8118  uint public WeeklyTotalReward = 0 */\n      0x38\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_17:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x01)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_13:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":9372:9379  30 days */\n      0x278d00\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_9:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"contracts/modules/Storage.sol\":6192:6297  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n        /* \"contracts/modules/Storage.sol\":6192:6297  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n      0x14\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      sload\n      dup2\n      lt\n      iszero\n      tag_133\n      jumpi\n        /* \"contracts/modules/Storage.sol\":6192:6297  uint[] public glbBoosterPackages = [ 100e18, 200e18, 400e18, 800e18, 1600e18, 3200e18, 6400e18, 12800e18] */\n      0x14\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      0x00\n      mstore\n      0xce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_7:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x07\n        /* \"contracts/modules/Storage.sol\":6304:6361  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap1\n        /* \"contracts/modules/Storage.sol\":6304:6361  uint[7] public minLevelForPool = [3, 5, 7, 9, 11, 13, 15] */\n      0x15\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      add\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_5:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      dup1\n        /* \"contracts/modules/Storage.sol\":683:688  10000 */\n      0x2710\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      0x20\n      swap3\n      mstore\n      return\n    tag_1:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1025:1027  10 */\n      0x0a\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n    tag_2:\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/modules/Storage.sol\":1078:1080  15 */\n      0x0f\n        /* \"contracts/modules/Storage.sol\":292:19583  contract Storage is ReentrancyGuard {... */\n      dup2\n      mstore\n      return\n\n    auxdata: 0xa2646970667358221220efb238bd61855cdd176678738c5f7295dec50a4a12d15e1b3288e533094e74d064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"allocate_memory": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_3495": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"clear_storage_range_uint256": {
									"entryPoint": 1390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523461052b5760015f556040516101e081016001600160401b038111828210176105175760405267d02ab486cedc0000815268015af1d78b58c4000060208201526802b5e3af16b1880000604082015268056bc75e2d631000006060820152680ad78ebc5ac620000060808201526815af1d78b58c40000060a0820152682b5e3af16b1880000060c08201526856bc75e2d63100000060e082015268ad78ebc5ac6200000061010082015269015af1d78b58c40000006101208201526902b5e3af16b18800000061014082015269056bc75e2d6310000000610160820152690ad78ebc5ac6200000006101808201526915af1d78b58c400000006101a0820152692b5e3af16b18800000006101c0820152600b54600f600b5580600f106104c1575b50600b5f5260205f20905f5b600f81106104a45761014161052f565b680410d586a20a4c00008152681043561a8829300000602082015268410d586a20a4c0000060408201526901043561a882930000006060820152690410d586a20a4c0000006080820152691043561a88293000000060a082015269410d586a20a4c000000060c082015260135460076013558060071061044e575b5060135f5260205f20905f5b60078110610431576101d861054e565b68056bc75e2d631000008152680ad78ebc5ac620000060208201526815af1d78b58c4000006040820152682b5e3af16b1880000060608201526856bc75e2d631000000608082015268ad78ebc5ac6200000060a082015269015af1d78b58c400000060c08201526902b5e3af16b18800000060e08201526014546008601455806008106103db575b5060145f5260205f20905f5b600881106103be5761027c61052f565b60038152600560208201526007604082015260096060820152600b6080820152600d60a0820152600f60c08201525f5b600781106103a6576102bc61054e565b6004815260056020820152600660408201526007606082015260086080820152600960a0820152600a60c0820152600b60e08201525f5b6008811061038e5761030361054e565b5f815260016020820152600160408201526001606082015260016080820152600160a0820152600160c0820152600160e08201525f5b60088110610376575f6036555f6037555f6038556001603d555f603e555f603f5560016044555f6045555f60465560405161077f90816105858239f35b600190602060ff845116930192816024015501610339565b600190602060ff84511693019281601c0155016102f3565b600190602060ff8451169301928160150155016102ac565b81516001600160501b03168184015560209091019060010161026c565b60145f5261042b907fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec017fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4f461056e565b81610260565b81516001600160501b0316818401556020909101906001016101c8565b60135f5261049e907f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090017f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09761056e565b816101bc565b81516001600160501b031681840155602090910190600101610131565b600b5f52610511907f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9017f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc861056e565b5f610125565b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b6040519060e082016001600160401b0381118382101761051757604052565b6040519061010082016001600160401b0381118382101761051757604052565b818110610579575050565b5f815560010161056e56fe6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a8146106f9575080632132d204146106cd5780632350268f1461067357806323fd338e146105365780632a891534146106565780632ae0ee0d146105b25780632f48ab7d1461062e5780633080b5bc1461061157806331bb6a30146105f657806332bc298c146105d957806332fcd966146105b7578063375b43b4146105b257806339ab3603146105585780634b8cbf9b1461053b57806358c7d352146105365780635b62d1d514610519578063705fee2d146104fb57806376f5f700146104de57806378f6ad6d146104c15780637cdc65f214610499578063956a32281461046d5780639b40ab9714610450578063a59d17d114610433578063a5e52b9914610416578063ae4708dc146103bc578063bff1f9e11461039f578063c216212a14610331578063c8df29081461030d578063c9ed0708146102f0578063ca8e9121146102d3578063d0a2fd79146102a7578063d2f0490d1461028c578063e898fc381461026f578063e9e34a1614610247578063ebe0ff1514610224578063ec597e6f14610207578063f5d74d93146101df5763fddc806f146101be575f80fd5b346101db575f3660031901126101db576020603754604051908152f35b5f80fd5b346101db575f3660031901126101db576004546040516001600160a01b039091168152602090f35b346101db575f3660031901126101db576020600554604051908152f35b346101db575f3660031901126101db576020604051683635c9adc5dea000008152f35b346101db575f3660031901126101db576003546040516001600160a01b039091168152602090f35b346101db575f3660031901126101db576020603e54604051908152f35b346101db575f3660031901126101db57602060405160058152f35b346101db5760203660031901126101db5760043560088110156101db57602090601c0154604051908152f35b346101db575f3660031901126101db576020603654604051908152f35b346101db575f3660031901126101db576020603d54604051908152f35b346101db575f3660031901126101db57602060405169021e19e0c9bab24000008152f35b346101db5760203660031901126101db57600435600b548110156101db57600b5481101561038b57600b5f527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b346101db575f3660031901126101db576020600654604051908152f35b346101db5760203660031901126101db576004356013548110156101db5760135481101561038b5760135f527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900154604051908152602090f35b346101db575f3660031901126101db5760206040516283d6008152f35b346101db575f3660031901126101db576020603f54604051908152f35b346101db575f3660031901126101db576020604554604051908152f35b346101db5760203660031901126101db5760043560088110156101db5760209060240154604051908152f35b346101db575f3660031901126101db576002546040516001600160a01b039091168152602090f35b346101db575f3660031901126101db576020600954604051908152f35b346101db575f3660031901126101db57602060405162093a808152f35b346101db575f3660031901126101db57602060405163025143008152f35b346101db575f3660031901126101db576020604654604051908152f35b610713565b346101db575f3660031901126101db576020604454604051908152f35b346101db5760203660031901126101db576004356007548110156101db5760075481101561038b5760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b61072e565b346101db575f3660031901126101db576020604051670de0b6b3a76400008152f35b346101db575f3660031901126101db576020604051620151808152f35b346101db575f3660031901126101db57602060405160028152f35b346101db575f3660031901126101db576020603854604051908152f35b346101db575f3660031901126101db576001546040516001600160a01b039091168152602090f35b346101db575f3660031901126101db57602060405162278d008152f35b346101db5760203660031901126101db576004356014548110156101db5760145481101561038b5760145f527fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec0154604051908152602090f35b346101db5760203660031901126101db5760043560078110156101db5760209060150154604051908152f35b346101db575f3660031901126101db578061271060209252f35b346101db575f3660031901126101db576020604051600a8152f35b346101db575f3660031901126101db576020604051600f8152f3fea2646970667358221220efb238bd61855cdd176678738c5f7295dec50a4a12d15e1b3288e533094e74d064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x52B JUMPI PUSH1 0x1 PUSH0 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x517 JUMPI PUSH1 0x40 MSTORE PUSH8 0xD02AB486CEDC0000 DUP2 MSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH2 0x100 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH2 0x120 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH2 0x140 DUP3 ADD MSTORE PUSH10 0x56BC75E2D6310000000 PUSH2 0x160 DUP3 ADD MSTORE PUSH10 0xAD78EBC5AC620000000 PUSH2 0x180 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C40000000 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B1880000000 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0xB SLOAD PUSH1 0xF PUSH1 0xB SSTORE DUP1 PUSH1 0xF LT PUSH2 0x4C1 JUMPI JUMPDEST POP PUSH1 0xB PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0xF DUP2 LT PUSH2 0x4A4 JUMPI PUSH2 0x141 PUSH2 0x52F JUMP JUMPDEST PUSH9 0x410D586A20A4C0000 DUP2 MSTORE PUSH9 0x1043561A8829300000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x410D586A20A4C00000 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1043561A88293000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH10 0x1043561A882930000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x410D586A20A4C0000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH1 0x7 PUSH1 0x13 SSTORE DUP1 PUSH1 0x7 LT PUSH2 0x44E JUMPI JUMPDEST POP PUSH1 0x13 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x431 JUMPI PUSH2 0x1D8 PUSH2 0x54E JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x2B5E3AF16B18800000 PUSH1 0x60 DUP3 ADD MSTORE PUSH9 0x56BC75E2D631000000 PUSH1 0x80 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC62000000 PUSH1 0xA0 DUP3 ADD MSTORE PUSH10 0x15AF1D78B58C4000000 PUSH1 0xC0 DUP3 ADD MSTORE PUSH10 0x2B5E3AF16B188000000 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x14 SLOAD PUSH1 0x8 PUSH1 0x14 SSTORE DUP1 PUSH1 0x8 LT PUSH2 0x3DB JUMPI JUMPDEST POP PUSH1 0x14 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x3BE JUMPI PUSH2 0x27C PUSH2 0x52F JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0xC0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x3A6 JUMPI PUSH2 0x2BC PUSH2 0x54E JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x38E JUMPI PUSH2 0x303 PUSH2 0x54E JUMP JUMPDEST PUSH0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x376 JUMPI PUSH0 PUSH1 0x36 SSTORE PUSH0 PUSH1 0x37 SSTORE PUSH0 PUSH1 0x38 SSTORE PUSH1 0x1 PUSH1 0x3D SSTORE PUSH0 PUSH1 0x3E SSTORE PUSH0 PUSH1 0x3F SSTORE PUSH1 0x1 PUSH1 0x44 SSTORE PUSH0 PUSH1 0x45 SSTORE PUSH0 PUSH1 0x46 SSTORE PUSH1 0x40 MLOAD PUSH2 0x77F SWAP1 DUP2 PUSH2 0x585 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x24 ADD SSTORE ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x1C ADD SSTORE ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH1 0xFF DUP5 MLOAD AND SWAP4 ADD SWAP3 DUP2 PUSH1 0x15 ADD SSTORE ADD PUSH2 0x2AC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x26C JUMP JUMPDEST PUSH1 0x14 PUSH0 MSTORE PUSH2 0x42B SWAP1 PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4 PUSH2 0x56E JUMP JUMPDEST DUP2 PUSH2 0x260 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x13 PUSH0 MSTORE PUSH2 0x49E SWAP1 PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097 PUSH2 0x56E JUMP JUMPDEST DUP2 PUSH2 0x1BC JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x131 JUMP JUMPDEST PUSH1 0xB PUSH0 MSTORE PUSH2 0x511 SWAP1 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8 PUSH2 0x56E JUMP JUMPDEST PUSH0 PUSH2 0x125 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x100 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x579 JUMPI POP POP JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x56E JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0x6F9 JUMPI POP DUP1 PUSH4 0x2132D204 EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0x23FD338E EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0x2AE0EE0D EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0x611 JUMPI DUP1 PUSH4 0x31BB6A30 EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0x4B8CBF9B EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x5B62D1D5 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x705FEE2D EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x9B40AB97 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xA5E52B99 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xD2F0490D EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x1DF JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x1BE JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x3E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x3D SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1DB JUMPI PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x38B JUMPI PUSH1 0xB PUSH0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x38B JUMPI PUSH1 0x13 PUSH0 MSTORE PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x83D600 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x45 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2514300 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x46 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x713 JUMP JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x44 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x38B JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x72E JUMP JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x38B JUMPI PUSH1 0x14 PUSH0 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xB2 CODESIZE 0xBD PUSH2 0x855C 0xDD OR PUSH7 0x78738C5F7295DE 0xC5 EXP BLOBBASEFEE SLT DATALOADN 0x5E1B ORIGIN DUP9 JUMPF 0x3309 0x4E PUSH21 0xD064736F6C634300081E0033000000000000000000 ",
							"sourceMap": "292:19291:8:-:0;;;;;;1716:1:3;1821:22;292:19291:8;;;;;;-1:-1:-1;;;;;292:19291:8;;;;;;;;;;1666:9;292:19291;;1698:9;1655:515;;;292:19291;1730:9;292:19291;1655:515;;292:19291;1762:10;1655:515;;;292:19291;1795:10;1655:515;;;292:19291;1828:10;1655:515;;;292:19291;1861:10;1655:515;;;292:19291;1894:11;1655:515;;;292:19291;1928:11;1655:515;;;292:19291;1962:11;1655:515;;;292:19291;1996:12;1655:515;;;292:19291;2031:12;1655:515;;;292:19291;2066:12;1655:515;;;292:19291;2101:13;1655:515;;;292:19291;2137:13;1655:515;;;292:19291;1655:515;292:19291;1655:515;;292:19291;;1655:515;292:19291;;;-1:-1:-1;292:19291:8;1655:515;1821:22:3;292:19291:8;1655:515;1821:22:3;292:19291:8;;1821:22:3;292:19291:8;1655:515;292:19291;;;;;;:::i;:::-;6122:5;292:19291;;6129:6;1655:515;6121:64;;292:19291;6137:7;292:19291;6121:64;;292:19291;6146:7;1655:515;6121:64;;292:19291;6155:8;1655:515;6121:64;;292:19291;6165:8;1655:515;6121:64;;292:19291;6175:9;1655:515;6121:64;;292:19291;6121:64;292:19291;6121:64;;292:19291;;6121:64;292:19291;;;;;6121:64;1821:22:3;292:19291:8;1655:515;1821:22:3;292:19291:8;;1821:22:3;292:19291:8;6121:64;292:19291;;;;;;:::i;:::-;1762:10;292:19291;;1795:10;1655:515;6227:70;;292:19291;1828:10;292:19291;6227:70;;292:19291;1861:10;1655:515;6227:70;;292:19291;1894:11;1655:515;6227:70;;292:19291;1928:11;1655:515;6227:70;;292:19291;1962:11;1655:515;6227:70;;292:19291;1996:12;1655:515;6227:70;;292:19291;6227:70;292:19291;6227:70;;292:19291;;6227:70;292:19291;;;;;6227:70;1821:22:3;292:19291:8;1655:515;1821:22:3;292:19291:8;;1821:22:3;292:19291:8;6227:70;292:19291;;;;;;:::i;:::-;6338:1;292:19291;;;1655:515;6337:24;;292:19291;6121:64;292:19291;6337:24;;292:19291;6347:1;1655:515;6337:24;;292:19291;1655:515;;6337:24;;292:19291;6354:2;1655:515;6337:24;;292:19291;1655:515;;6337:24;;292:19291;1821:22:3;292:19291:8;6121:64;292:19291;;;;;;:::i;:::-;6408:1;292:19291;;;1655:515;6407:25;;292:19291;6414:1;292:19291;6407:25;;292:19291;6121:64;1655:515;6407:25;;292:19291;6227:70;1655:515;6407:25;;292:19291;6347:1;1655:515;6407:25;;292:19291;6426:2;1655:515;6407:25;;292:19291;1655:515;;6407:25;;292:19291;1821:22:3;292:19291:8;6227:70;292:19291;;;;;;:::i;:::-;1821:22:3;292:19291:8;;1716:1:3;1655:515:8;6477:23;;292:19291;1716:1:3;292:19291:8;6477:23;;292:19291;1716:1:3;1655:515:8;6477:23;;292:19291;1716:1:3;1655:515:8;6477:23;;292:19291;1716:1:3;1655:515:8;6477:23;;292:19291;1716:1:3;1655:515:8;6477:23;;292:19291;1716:1:3;1655:515:8;6477:23;;292:19291;1821:22:3;292:19291:8;6227:70;292:19291;;;;1821:22:3;8030:1:8;292:19291;1821:22:3;8075:1:8;292:19291;1821:22:3;8117:1:8;292:19291;1716:1:3;9479::8;292:19291;1821:22:3;9525:1:8;292:19291;1821:22:3;9566:1:8;292:19291;1716:1:3;10785::8;292:19291;1821:22:3;10827:1:8;292:19291;1821:22:3;10866:1:8;292:19291;;;;;;;;;;;1716:1:3;292:19291:8;1655:515;292:19291;;;;;;;;6477:23;292:19291;;;;;;1716:1:3;292:19291:8;1655:515;292:19291;;;;;;;;6407:25;292:19291;;;;;;1716:1:3;292:19291:8;1655:515;292:19291;;;;;;;;6337:24;292:19291;;;;;;;;-1:-1:-1;;;;;292:19291:8;;;;;1655:515;292:19291;;;;1716:1:3;292:19291:8;;;;6227:70;1821:22:3;292:19291:8;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;292:19291:8;;;;;1655:515;292:19291;;;;1716:1:3;292:19291:8;;;;6121:64;1821:22:3;292:19291:8;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;292:19291:8;;;;;1655:515;292:19291;;;;1716:1:3;292:19291:8;;;;1655:515;1821:22:3;292:19291:8;;;;;;;:::i;:::-;;;;;;;;1821:22:3;292:19291:8;;;;;1821:22:3;292:19291:8;;;;;;;;;;;;-1:-1:-1;;;;;292:19291:8;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;292:19291:8;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"external_fun_MONTHLY_ROYALTY_LEVEL": {
									"entryPoint": 1811,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_TOP_ROYALTY_LEVEL": {
									"entryPoint": 1838,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301c234a8146106f9575080632132d204146106cd5780632350268f1461067357806323fd338e146105365780632a891534146106565780632ae0ee0d146105b25780632f48ab7d1461062e5780633080b5bc1461061157806331bb6a30146105f657806332bc298c146105d957806332fcd966146105b7578063375b43b4146105b257806339ab3603146105585780634b8cbf9b1461053b57806358c7d352146105365780635b62d1d514610519578063705fee2d146104fb57806376f5f700146104de57806378f6ad6d146104c15780637cdc65f214610499578063956a32281461046d5780639b40ab9714610450578063a59d17d114610433578063a5e52b9914610416578063ae4708dc146103bc578063bff1f9e11461039f578063c216212a14610331578063c8df29081461030d578063c9ed0708146102f0578063ca8e9121146102d3578063d0a2fd79146102a7578063d2f0490d1461028c578063e898fc381461026f578063e9e34a1614610247578063ebe0ff1514610224578063ec597e6f14610207578063f5d74d93146101df5763fddc806f146101be575f80fd5b346101db575f3660031901126101db576020603754604051908152f35b5f80fd5b346101db575f3660031901126101db576004546040516001600160a01b039091168152602090f35b346101db575f3660031901126101db576020600554604051908152f35b346101db575f3660031901126101db576020604051683635c9adc5dea000008152f35b346101db575f3660031901126101db576003546040516001600160a01b039091168152602090f35b346101db575f3660031901126101db576020603e54604051908152f35b346101db575f3660031901126101db57602060405160058152f35b346101db5760203660031901126101db5760043560088110156101db57602090601c0154604051908152f35b346101db575f3660031901126101db576020603654604051908152f35b346101db575f3660031901126101db576020603d54604051908152f35b346101db575f3660031901126101db57602060405169021e19e0c9bab24000008152f35b346101db5760203660031901126101db57600435600b548110156101db57600b5481101561038b57600b5f527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90154604051908152602090f35b634e487b7160e01b5f52603260045260245ffd5b346101db575f3660031901126101db576020600654604051908152f35b346101db5760203660031901126101db576004356013548110156101db5760135481101561038b5760135f527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900154604051908152602090f35b346101db575f3660031901126101db5760206040516283d6008152f35b346101db575f3660031901126101db576020603f54604051908152f35b346101db575f3660031901126101db576020604554604051908152f35b346101db5760203660031901126101db5760043560088110156101db5760209060240154604051908152f35b346101db575f3660031901126101db576002546040516001600160a01b039091168152602090f35b346101db575f3660031901126101db576020600954604051908152f35b346101db575f3660031901126101db57602060405162093a808152f35b346101db575f3660031901126101db57602060405163025143008152f35b346101db575f3660031901126101db576020604654604051908152f35b610713565b346101db575f3660031901126101db576020604454604051908152f35b346101db5760203660031901126101db576004356007548110156101db5760075481101561038b5760075f527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154604051908152602090f35b61072e565b346101db575f3660031901126101db576020604051670de0b6b3a76400008152f35b346101db575f3660031901126101db576020604051620151808152f35b346101db575f3660031901126101db57602060405160028152f35b346101db575f3660031901126101db576020603854604051908152f35b346101db575f3660031901126101db576001546040516001600160a01b039091168152602090f35b346101db575f3660031901126101db57602060405162278d008152f35b346101db5760203660031901126101db576004356014548110156101db5760145481101561038b5760145f527fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec0154604051908152602090f35b346101db5760203660031901126101db5760043560078110156101db5760209060150154604051908152f35b346101db575f3660031901126101db578061271060209252f35b346101db575f3660031901126101db576020604051600a8152f35b346101db575f3660031901126101db576020604051600f8152f3fea2646970667358221220efb238bd61855cdd176678738c5f7295dec50a4a12d15e1b3288e533094e74d064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1C234A8 EQ PUSH2 0x6F9 JUMPI POP DUP1 PUSH4 0x2132D204 EQ PUSH2 0x6CD JUMPI DUP1 PUSH4 0x2350268F EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0x23FD338E EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x2A891534 EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0x2AE0EE0D EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0x3080B5BC EQ PUSH2 0x611 JUMPI DUP1 PUSH4 0x31BB6A30 EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0x32FCD966 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0x375B43B4 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0x39AB3603 EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0x4B8CBF9B EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0x58C7D352 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x5B62D1D5 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x705FEE2D EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x76F5F700 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x78F6AD6D EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x7CDC65F2 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x956A3228 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x9B40AB97 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xA59D17D1 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xA5E52B99 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xAE4708DC EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xC216212A EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xC8DF2908 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xC9ED0708 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xCA8E9121 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xD0A2FD79 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xD2F0490D EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE898FC38 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xE9E34A16 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xEBE0FF15 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xEC597E6F EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xF5D74D93 EQ PUSH2 0x1DF JUMPI PUSH4 0xFDDC806F EQ PUSH2 0x1BE JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x37 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x3E SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1C ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x36 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x3D SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1DB JUMPI PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x38B JUMPI PUSH1 0xB PUSH0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x38B JUMPI PUSH1 0x13 PUSH0 MSTORE PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x83D600 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x3F SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x45 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x2514300 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x46 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x713 JUMP JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x44 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x38B JUMPI PUSH1 0x7 PUSH0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH2 0x72E JUMP JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x38 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x278D00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x38B JUMPI PUSH1 0x14 PUSH0 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI DUP1 PUSH2 0x2710 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1DB JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1DB JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xB2 CODESIZE 0xBD PUSH2 0x855C 0xDD OR PUSH7 0x78738C5F7295DE 0xC5 EXP BLOBBASEFEE SLT DATALOADN 0x5E1B ORIGIN DUP9 JUMPF 0x3309 0x4E PUSH21 0xD064736F6C634300081E0033000000000000000000 ",
							"sourceMap": "292:19291:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;8038:38;292:19291;;;;;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;;-1:-1:-1;;;;;292:19291:8;;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;534:24;292:19291;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;7978:7;292:19291;;;;;;;;;-1:-1:-1;;292:19291:8;;;;460:30;292:19291;;;-1:-1:-1;;;;;292:19291:8;;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;9487:39;292:19291;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;1136:1;292:19291;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;6368:64;;;;;292:19291;;6368:64;292:19291;;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;7997:34;292:19291;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;9445:35;292:19291;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;9424:8;292:19291;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;1630:540;292:19291;1630:540;;;;;;292:19291;;;;;;1630:540;292:19291;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;565:22;292:19291;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;6092:93;292:19291;6092:93;;;;;;292:19291;;;;;;6092:93;292:19291;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;791:8;292:19291;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;9533:34;292:19291;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;10793:35;292:19291;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;6439:61;;;;;292:19291;;6439:61;292:19291;;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;422:28;292:19291;;;-1:-1:-1;;;;;292:19291:8;;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;1473:34;292:19291;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;7925:6;292:19291;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;849:8;292:19291;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;10835:32;292:19291;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;292:19291:8;;;;;10755:31;292:19291;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;1206:31;292:19291;1206:31;;;;;;292:19291;;;;;;1206:31;292:19291;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;292:19291:8;;;;;;;1462:4;292:19291;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;731:6;292:19291;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;1189:1;292:19291;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;8085:33;292:19291;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;;-1:-1:-1;;;;;292:19291:8;;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;9372:7;292:19291;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;6192:105;292:19291;6192:105;;;;;;292:19291;;;;;;6192:105;292:19291;;;;;;;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;6304:57;;;;;292:19291;;6304:57;292:19291;;;;;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;683:5;292:19291;;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;1025:2;292:19291;;;;;;;;;-1:-1:-1;;292:19291:8;;;;;;;1078:2;292:19291;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "383800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACC_PRECISION()": "373",
								"MONTHLY_ROYALTY_DIRECT()": "835",
								"MONTHLY_ROYALTY_LEVEL()": "231",
								"MONTHLY_ROYALTY_TIME()": "659",
								"MONTH_DURATION()": "241",
								"PERCENTS_DIVIDER()": "148",
								"ROI_CAP_DIVIDER()": "473",
								"ROI_CAP_MULTIPLIER()": "407",
								"TIME_STEP()": "351",
								"TOP_ROYALTY_DIRECT()": "329",
								"TOP_ROYALTY_LEVEL()": "275",
								"TOP_ROYALTY_TIME()": "505",
								"WEEK_DURATION()": "527",
								"WeeklyCapping()": "901",
								"WeeklyTotalReward()": "2410",
								"communityAccPerUser()": "2652",
								"creatorWallet()": "2698",
								"currentMonthlyRound()": "2872",
								"currentMonthlyStartTime()": "2960",
								"currentWeeklyRound()": "2894",
								"currentWeeklyStartTime()": "3067",
								"defaultRefId()": "3026",
								"glbBoosterPackages(uint256)": "6571",
								"minLevelForGlbBooster(uint256)": "2954",
								"minLevelForPool(uint256)": "2316",
								"minPoolForGlbBooster(uint256)": "2734",
								"monthlyCapping()": "747",
								"monthlyTotalReward()": "2740",
								"packages(uint256)": "7099",
								"poolPackages(uint256)": "7055",
								"registeredUserIds(uint256)": "6791",
								"systemMaintance()": "3006",
								"teamDevelopment()": "3072",
								"topRoyaltyReward()": "2586",
								"topRoyaltyRound()": "2542",
								"topRoyaltyStartTime()": "2718",
								"totalUsers()": "2806",
								"usdt()": "2412"
							},
							"internal": {
								"_distributeIncome(uint256,uint256,uint256,uint256,enum Storage.IncomeType)": "infinite",
								"_monthlyRoyaltyQualifier(uint256,uint256)": "infinite",
								"_sendToCreator(uint256)": "infinite",
								"_topRoyaltyQualifier(uint256,uint256)": "infinite",
								"_tryMonthlyRoyaltyQualify(uint256,uint256)": "infinite",
								"_tryTopRoyaltyQualify(uint256,uint256)": "infinite",
								"_tryWeeklyContestQualify(uint256,uint256)": "infinite",
								"_weeklyContestQualifier(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "1E0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1675,
									"name": "PUSH",
									"source": 8,
									"value": "D02AB486CEDC0000"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1698,
									"end": 1707,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1730,
									"end": 1739,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1762,
									"end": 1772,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1795,
									"end": 1805,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1828,
									"end": 1838,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1861,
									"end": 1871,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1894,
									"end": 1905,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1928,
									"end": 1939,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1962,
									"end": 1973,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1996,
									"end": 2008,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2031,
									"end": 2043,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D6310000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2066,
									"end": 2078,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC620000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2114,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C40000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "1A0"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2137,
									"end": 2150,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B1880000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "1C0"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 19583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6122,
									"end": 6127,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6129,
									"end": 6135,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A8829300000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6137,
									"end": 6144,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C00000"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6146,
									"end": 6153,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A88293000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6155,
									"end": 6163,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6165,
									"end": 6173,
									"name": "PUSH",
									"source": 8,
									"value": "1043561A882930000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6175,
									"end": 6184,
									"name": "PUSH",
									"source": 8,
									"value": "410D586A20A4C0000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 19583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1762,
									"end": 1772,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1795,
									"end": 1805,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1828,
									"end": 1838,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1861,
									"end": 1871,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B18800000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1894,
									"end": 1905,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D631000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1928,
									"end": 1939,
									"name": "PUSH",
									"source": 8,
									"value": "AD78EBC5AC62000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1962,
									"end": 1973,
									"name": "PUSH",
									"source": 8,
									"value": "15AF1D78B58C4000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1996,
									"end": 2008,
									"name": "PUSH",
									"source": 8,
									"value": "2B5E3AF16B188000000"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 19583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6338,
									"end": 6339,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6347,
									"end": 6348,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6354,
									"end": 6356,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 19583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6408,
									"end": 6409,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6414,
									"end": 6415,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6347,
									"end": 6348,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6426,
									"end": 6428,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 19583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8030,
									"end": 8031,
									"name": "PUSH",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8075,
									"end": 8076,
									"name": "PUSH",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 8117,
									"end": 8118,
									"name": "PUSH",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 9479,
									"end": 9480,
									"name": "PUSH",
									"source": 8,
									"value": "3D"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 9525,
									"end": 9526,
									"name": "PUSH",
									"source": 8,
									"value": "3E"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 9566,
									"end": 9567,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 10785,
									"end": 10786,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 10827,
									"end": 10828,
									"name": "PUSH",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 10866,
									"end": 10867,
									"name": "PUSH",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "RETURN",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6477,
									"end": 6500,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6407,
									"end": 6432,
									"name": "PUSH",
									"source": 8,
									"value": "1C"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6337,
									"end": 6361,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6227,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4F4"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 19583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6121,
									"end": 6185,
									"name": "PUSH",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A097"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 19583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 2170,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC8"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 19583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 292,
									"end": 19583,
									"name": "JUMP",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220efb238bd61855cdd176678738c5f7295dec50a4a12d15e1b3288e533094e74d064736f6c634300081e0033",
									".code": [
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "1C234A8"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "2132D204"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "2350268F"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "23FD338E"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "2A891534"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "2AE0EE0D"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "2F48AB7D"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "3080B5BC"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "31BB6A30"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "32BC298C"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "32FCD966"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "375B43B4"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "39AB3603"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "4B8CBF9B"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "58C7D352"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "5B62D1D5"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "705FEE2D"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "76F5F700"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "78F6AD6D"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "7CDC65F2"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "956A3228"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "9B40AB97"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "A59D17D1"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "A5E52B99"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "AE4708DC"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "BFF1F9E1"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "C216212A"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "C8DF2908"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "C9ED0708"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "CA8E9121"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "D0A2FD79"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "D2F0490D"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "E898FC38"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "E9E34A16"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "EBE0FF15"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "EC597E6F"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "F5D74D93"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "FDDC806F"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8038,
											"end": 8076,
											"name": "PUSH",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 534,
											"end": 558,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7978,
											"end": 7985,
											"name": "PUSH",
											"source": 8,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 460,
											"end": 490,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9526,
											"name": "PUSH",
											"source": 8,
											"value": "3E"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6368,
											"end": 6432,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6432,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6432,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 6368,
											"end": 6432,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6368,
											"end": 6432,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7997,
											"end": 8031,
											"name": "PUSH",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9445,
											"end": 9480,
											"name": "PUSH",
											"source": 8,
											"value": "3D"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9432,
											"name": "PUSH",
											"source": 8,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 2170,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 587,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6185,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 799,
											"name": "PUSH",
											"source": 8,
											"value": "83D600"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9567,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10793,
											"end": 10828,
											"name": "PUSH",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 422,
											"end": 450,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1507,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7925,
											"end": 7931,
											"name": "PUSH",
											"source": 8,
											"value": "93A80"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 849,
											"end": 857,
											"name": "PUSH",
											"source": 8,
											"value": "2514300"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 19583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10755,
											"end": 10786,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1206,
											"end": 1237,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "A66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 19583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1466,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 731,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1189,
											"end": 1190,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8085,
											"end": 8118,
											"name": "PUSH",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9372,
											"end": 9379,
											"name": "PUSH",
											"source": 8,
											"value": "278D00"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6297,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "CE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 6304,
											"end": 6361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6361,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6361,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 6304,
											"end": 6361,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6361,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 683,
											"end": 688,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 292,
											"end": 19583,
											"name": "RETURN",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/modules/SponsorMatrix.sol",
								"contracts/modules/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ACC_PRECISION()": "32fcd966",
							"MONTHLY_ROYALTY_DIRECT()": "d2f0490d",
							"MONTHLY_ROYALTY_LEVEL()": "23fd338e",
							"MONTHLY_ROYALTY_TIME()": "a5e52b99",
							"MONTH_DURATION()": "2a891534",
							"PERCENTS_DIVIDER()": "01c234a8",
							"ROI_CAP_DIVIDER()": "58c7d352",
							"ROI_CAP_MULTIPLIER()": "375b43b4",
							"TIME_STEP()": "32bc298c",
							"TOP_ROYALTY_DIRECT()": "31bb6a30",
							"TOP_ROYALTY_LEVEL()": "2ae0ee0d",
							"TOP_ROYALTY_TIME()": "705fee2d",
							"WEEK_DURATION()": "76f5f700",
							"WeeklyCapping()": "ebe0ff15",
							"WeeklyTotalReward()": "3080b5bc",
							"communityAccPerUser()": "78f6ad6d",
							"creatorWallet()": "7cdc65f2",
							"currentMonthlyRound()": "c9ed0708",
							"currentMonthlyStartTime()": "e898fc38",
							"currentWeeklyRound()": "ca8e9121",
							"currentWeeklyStartTime()": "fddc806f",
							"defaultRefId()": "ec597e6f",
							"glbBoosterPackages(uint256)": "2350268f",
							"minLevelForGlbBooster(uint256)": "d0a2fd79",
							"minLevelForPool(uint256)": "2132d204",
							"minPoolForGlbBooster(uint256)": "956a3228",
							"monthlyCapping()": "c8df2908",
							"monthlyTotalReward()": "a59d17d1",
							"packages(uint256)": "c216212a",
							"poolPackages(uint256)": "ae4708dc",
							"registeredUserIds(uint256)": "39ab3603",
							"systemMaintance()": "e9e34a16",
							"teamDevelopment()": "f5d74d93",
							"topRoyaltyReward()": "5b62d1d5",
							"topRoyaltyRound()": "4b8cbf9b",
							"topRoyaltyStartTime()": "9b40ab97",
							"totalUsers()": "bff1f9e1",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usersCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUser\",\"type\":\"uint256\"}],\"name\":\"CommunityBonusDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"incomeType\",\"type\":\"uint256\"}],\"name\":\"IncomeDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Storage.IncomeType\",\"name\":\"incomeType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"IncomeDistribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromUserId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LotteryReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyRewardClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"MonthlyRoyaltyQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uplineId\",\"type\":\"uint256\"}],\"name\":\"Registration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"level\",\"type\":\"string\"}],\"name\":\"RewardSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"TopRoyaltyRewardClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"packageLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"depositType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upgradeTime\",\"type\":\"uint256\"}],\"name\":\"Upgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"matrixId\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"userId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"parentId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"}],\"name\":\"UserJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leftoverReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"joinTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyContestQualified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"perUserReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimTime\",\"type\":\"uint256\"}],\"name\":\"WeeklyRewardClaim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACC_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY_DIRECT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTHLY_ROYALTY_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MONTH_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROI_CAP_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY_DIRECT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOP_ROYALTY_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEEK_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WeeklyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityAccPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMonthlyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentWeeklyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultRefId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"glbBoosterPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minLevelForPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minPoolForGlbBooster\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyCapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyTotalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"packages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolPackages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredUserIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemMaintance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamDevelopment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topRoyaltyStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/Storage.sol\":\"Storage\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/modules/Storage.sol\":{\"keccak256\":\"0xfdca77efb4adc564a11cfeb1d285a517ccaa87c63e1e49d380ad6406f5210186\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://605b0acb462baf239cc9f8e6e5c83cf9edfd882d996d7ff55d55352204bcd63e\",\"dweb:/ipfs/QmTU5Z4KcYr3vsfh2XwxuMEyKm9JBd7wwj3UvgPr3MtFWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 2330,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "usdt",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)232"
							},
							{
								"astId": 2332,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "creatorWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 2334,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "systemMaintance",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 2336,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "teamDevelopment",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 2338,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "defaultRefId",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 2340,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "totalUsers",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2376,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "registeredUserIds",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2378,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "nonce",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 2383,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "communityAccPerUser",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 2387,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "communityDebt",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2436,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "packages",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2539,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "addressToId",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2544,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "users",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_struct(User)2488_storage)"
							},
							{
								"astId": 2549,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userIncomes",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_uint256,t_struct(UserIncome)2513_storage)"
							},
							{
								"astId": 2555,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "incomeHistory",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_uint256,t_array(t_struct(Income)2524_storage)dyn_storage)"
							},
							{
								"astId": 2562,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "teams",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2566,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "matrixDirect",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2571,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "directReferrals",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2671,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "poolPackages",
								"offset": 0,
								"slot": "19",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2683,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "glbBoosterPackages",
								"offset": 0,
								"slot": "20",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2695,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "minLevelForPool",
								"offset": 0,
								"slot": "21",
								"type": "t_array(t_uint256)7_storage"
							},
							{
								"astId": 2708,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "minLevelForGlbBooster",
								"offset": 0,
								"slot": "28",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 2721,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "minPoolForGlbBooster",
								"offset": 0,
								"slot": "36",
								"type": "t_array(t_uint256)8_storage"
							},
							{
								"astId": 2755,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userPooltopup",
								"offset": 0,
								"slot": "44",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)2737_storage))"
							},
							{
								"astId": 2762,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userPooldtl",
								"offset": 0,
								"slot": "45",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)2732_storage))"
							},
							{
								"astId": 2769,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userChildren",
								"offset": 0,
								"slot": "46",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2776,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userIdPerPool",
								"offset": 0,
								"slot": "47",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2781,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "poolUsers",
								"offset": 0,
								"slot": "48",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2787,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userHasPool",
								"offset": 0,
								"slot": "49",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2794,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userBoosterdtl",
								"offset": 0,
								"slot": "50",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)2748_storage))"
							},
							{
								"astId": 2801,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userBoosterChildren",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2806,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "boosterUsers",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2812,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "userHasbooster",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2821,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentWeeklyRound",
								"offset": 0,
								"slot": "54",
								"type": "t_uint256"
							},
							{
								"astId": 2824,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentWeeklyStartTime",
								"offset": 0,
								"slot": "55",
								"type": "t_uint256"
							},
							{
								"astId": 2827,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "WeeklyTotalReward",
								"offset": 0,
								"slot": "56",
								"type": "t_uint256"
							},
							{
								"astId": 2862,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyContestdtl",
								"offset": 0,
								"slot": "57",
								"type": "t_mapping(t_uint256,t_struct(WeeklyContest)2846_storage)"
							},
							{
								"astId": 2867,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyQualifiedUsers",
								"offset": 0,
								"slot": "58",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2874,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyUserdtl",
								"offset": 0,
								"slot": "59",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2857_storage))"
							},
							{
								"astId": 2881,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "weeklyUserDirects",
								"offset": 0,
								"slot": "60",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))"
							},
							{
								"astId": 2924,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentMonthlyRound",
								"offset": 0,
								"slot": "61",
								"type": "t_uint256"
							},
							{
								"astId": 2927,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "currentMonthlyStartTime",
								"offset": 0,
								"slot": "62",
								"type": "t_uint256"
							},
							{
								"astId": 2930,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyTotalReward",
								"offset": 0,
								"slot": "63",
								"type": "t_uint256"
							},
							{
								"astId": 2967,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyRoyaltydtl",
								"offset": 0,
								"slot": "64",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyalty)2949_storage)"
							},
							{
								"astId": 2970,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyQualifiedUsers",
								"offset": 0,
								"slot": "65",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2975,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyRoyaltyUserdtl",
								"offset": 0,
								"slot": "66",
								"type": "t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2962_storage)"
							},
							{
								"astId": 2980,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "monthlyUserDirects",
								"offset": 0,
								"slot": "67",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 3017,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyRound",
								"offset": 0,
								"slot": "68",
								"type": "t_uint256"
							},
							{
								"astId": 3020,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyStartTime",
								"offset": 0,
								"slot": "69",
								"type": "t_uint256"
							},
							{
								"astId": 3023,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyReward",
								"offset": 0,
								"slot": "70",
								"type": "t_uint256"
							},
							{
								"astId": 3060,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltydtl",
								"offset": 0,
								"slot": "71",
								"type": "t_mapping(t_uint256,t_struct(topRoyalty)3042_storage)"
							},
							{
								"astId": 3063,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyQualifiedUsers",
								"offset": 0,
								"slot": "72",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 3068,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyUserdtl",
								"offset": 0,
								"slot": "73",
								"type": "t_mapping(t_uint256,t_struct(topRoyaltyUser)3055_storage)"
							},
							{
								"astId": 3073,
								"contract": "contracts/modules/Storage.sol:Storage",
								"label": "topRoyaltyUserDirects",
								"offset": 0,
								"slot": "74",
								"type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Deposit)2445_storage)dyn_storage": {
								"base": "t_struct(Deposit)2445_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Deposit[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Income)2524_storage)dyn_storage": {
								"base": "t_struct(Income)2524_storage",
								"encoding": "dynamic_array",
								"label": "struct Storage.Income[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)7_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[7]",
								"numberOfBytes": "224"
							},
							"t_array(t_uint256)8_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[8]",
								"numberOfBytes": "256"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)232": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_array(t_struct(Income)2524_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.Income[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Income)2524_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserBooster)2748_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserBooster)2748_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPool)2732_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPool)2732_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(UserPoolTopup)2737_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(UserPoolTopup)2737_storage)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(weeklyUser)2857_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(weeklyUser)2857_storage)"
							},
							"t_mapping(t_uint256,t_struct(User)2488_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)2488_storage"
							},
							"t_mapping(t_uint256,t_struct(UserBooster)2748_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserBooster)",
								"numberOfBytes": "32",
								"value": "t_struct(UserBooster)2748_storage"
							},
							"t_mapping(t_uint256,t_struct(UserIncome)2513_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserIncome)",
								"numberOfBytes": "32",
								"value": "t_struct(UserIncome)2513_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPool)2732_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPool)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPool)2732_storage"
							},
							"t_mapping(t_uint256,t_struct(UserPoolTopup)2737_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.UserPoolTopup)",
								"numberOfBytes": "32",
								"value": "t_struct(UserPoolTopup)2737_storage"
							},
							"t_mapping(t_uint256,t_struct(WeeklyContest)2846_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.WeeklyContest)",
								"numberOfBytes": "32",
								"value": "t_struct(WeeklyContest)2846_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyalty)2949_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyalty)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyalty)2949_storage"
							},
							"t_mapping(t_uint256,t_struct(monthlyRoyaltyUser)2962_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(monthlyRoyaltyUser)2962_storage"
							},
							"t_mapping(t_uint256,t_struct(topRoyalty)3042_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.topRoyalty)",
								"numberOfBytes": "32",
								"value": "t_struct(topRoyalty)3042_storage"
							},
							"t_mapping(t_uint256,t_struct(topRoyaltyUser)3055_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.topRoyaltyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(topRoyaltyUser)3055_storage"
							},
							"t_mapping(t_uint256,t_struct(weeklyUser)2857_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Storage.weeklyUser)",
								"numberOfBytes": "32",
								"value": "t_struct(weeklyUser)2857_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Deposit)2445_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Deposit",
								"members": [
									{
										"astId": 2438,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2440,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "withdrawn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2442,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "start",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2444,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "depositType",
										"offset": 0,
										"slot": "3",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Income)2524_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Income",
								"members": [
									{
										"astId": 2515,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "fromUserId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2517,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2519,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "packageLevel",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2521,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2523,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "incomeType",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(User)2488_storage": {
								"encoding": "inplace",
								"label": "struct Storage.User",
								"members": [
									{
										"astId": 2447,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "account",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2451,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "deposits",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Deposit)2445_storage)dyn_storage"
									},
									{
										"astId": 2453,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "checkpoint",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2455,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2457,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "sponsorId",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2459,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "uplineId",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2461,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "level",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2463,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "directTeam",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2465,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "directPoolQualified",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2467,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalMatrixTeam",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2469,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalDeposit",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2471,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poollevel",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 2473,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolDeposit",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 2475,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "boosterlevel",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 2477,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "boosterDeposit",
										"offset": 0,
										"slot": "14",
										"type": "t_uint256"
									},
									{
										"astId": 2479,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "registrationTime",
										"offset": 0,
										"slot": "15",
										"type": "t_uint256"
									},
									{
										"astId": 2481,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "level10Time",
										"offset": 0,
										"slot": "16",
										"type": "t_uint256"
									},
									{
										"astId": 2483,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "level15Time",
										"offset": 0,
										"slot": "17",
										"type": "t_uint256"
									},
									{
										"astId": 2485,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "monthlyUserDirectCount",
										"offset": 0,
										"slot": "18",
										"type": "t_uint256"
									},
									{
										"astId": 2487,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "topRoyaltyDirectCount",
										"offset": 0,
										"slot": "19",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "640"
							},
							"t_struct(UserBooster)2748_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserBooster",
								"members": [
									{
										"astId": 2739,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2741,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2743,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "parentId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2745,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "bonusCount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2747,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserIncome)2513_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserIncome",
								"members": [
									{
										"astId": 2490,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalIncome",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2492,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "sponsorIncome",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2494,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "matrixIncome",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2496,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "levelBoosterIncome",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2498,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "royaltyIncome",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2500,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "royaltyIncomeClaimed",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2502,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "communityIncome",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2504,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolIncome",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2506,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "boosterIncome",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2508,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "weeklyContestIncome",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2510,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "monthlyRoyalty",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2512,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "topRoyalty",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "384"
							},
							"t_struct(UserPool)2732_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPool",
								"members": [
									{
										"astId": 2723,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2725,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "mainid",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2727,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "poolId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2729,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "parentId",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2731,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "bonusCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserPoolTopup)2737_storage": {
								"encoding": "inplace",
								"label": "struct Storage.UserPoolTopup",
								"members": [
									{
										"astId": 2734,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "nextPoolAmt",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2736,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "reTopupAmt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(WeeklyContest)2846_storage": {
								"encoding": "inplace",
								"label": "struct Storage.WeeklyContest",
								"members": [
									{
										"astId": 2829,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2831,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2833,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2835,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2837,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2839,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2841,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2843,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2845,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyalty)2949_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyalty",
								"members": [
									{
										"astId": 2932,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2934,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2936,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2938,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2940,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2942,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2944,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 2946,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2948,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(monthlyRoyaltyUser)2962_storage": {
								"encoding": "inplace",
								"label": "struct Storage.monthlyRoyaltyUser",
								"members": [
									{
										"astId": 2951,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2953,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "qualifiedRoundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2955,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2959,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_uint256,t_bool)"
									},
									{
										"astId": 2961,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isQualified",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(topRoyalty)3042_storage": {
								"encoding": "inplace",
								"label": "struct Storage.topRoyalty",
								"members": [
									{
										"astId": 3025,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3027,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3029,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "totalUsers",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 3031,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "perUserReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3033,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimedCount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 3035,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "startTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 3037,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "endTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 3039,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "carryForward",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 3041,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "closed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(topRoyaltyUser)3055_storage": {
								"encoding": "inplace",
								"label": "struct Storage.topRoyaltyUser",
								"members": [
									{
										"astId": 3044,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3046,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "qualifiedRoundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3048,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 3052,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_uint256,t_bool)"
									},
									{
										"astId": 3054,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isQualified",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(weeklyUser)2857_storage": {
								"encoding": "inplace",
								"label": "struct Storage.weeklyUser",
								"members": [
									{
										"astId": 2848,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "joinTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2850,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "roundId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2852,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "claimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2854,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isClaimed",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 2856,
										"contract": "contracts/modules/Storage.sol:Storage",
										"label": "isQualified",
										"offset": 1,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							708
						],
						"IERC20": [
							232
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								708,
								232
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 709,
							"src": "133:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 233,
							"src": "132:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "140:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							154
						]
					},
					"id": 155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 98,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 154,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 114,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 119,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 124,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 130,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 154,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 137,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 138,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 154,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 148,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 149,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 147,
												"id": 151,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 154,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 155,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 156,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 157,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 232,
							"linearizedBaseContracts": [
								232
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 166,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 175,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 232,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 232,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 232,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 232,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 232,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 232,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 233,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"SafeERC20": [
							696
						]
					},
					"id": 697,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 234,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 233,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 235,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 238,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 82,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 237,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 239,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 696,
							"linearizedBaseContracts": [
								696
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 244,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 253,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 265,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 268,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 270,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 271,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 272,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 266,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 264,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 696,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 294,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 296,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 297,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 292,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 290,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 279,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 696,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 318,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 321,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 323,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 310,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 324,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 325,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 319,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 317,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 316,
												"id": 328,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 306,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 696,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 349,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 351,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 352,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 353,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 354,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 347,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 345,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 357,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 333,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 332,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 232,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 696,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 376,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 372,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 383,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 385,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 361,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 232,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 696,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															402
														],
														"declarations": [
															{
																"constant": false,
																"id": 402,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 401,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 411,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 407,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 405,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 409,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 209,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 413,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 422,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 421,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 416,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 417,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 402,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 418,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 398,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 415,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 420,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 424,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 425,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 426,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 427,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 423,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 392,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 232,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 696,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 444,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 448,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 219,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 450,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 452,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 446,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 456,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 457,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 455,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 461,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 464,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 437,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$232",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 219,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 466,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 439,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 468,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 462,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 460,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 474,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 472,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 232,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 696,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 493,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 508,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 509,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 505,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 520,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 519,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 515,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 484,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 512,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 518,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 499,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 500,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 501,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 498,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 482,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 696,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 538,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 554,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 556,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 567,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 566,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 562,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 527,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 560,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 559,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 565,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 545,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 546,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 547,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 543,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 526,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 525,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 696,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 583,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 597,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 598,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 599,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 595,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 610,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 609,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 605,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 574,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 603,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 602,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 608,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 589,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 590,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 591,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 588,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 572,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 696,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 623,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 626,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 617,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 628,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 629,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 640,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 634,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 632,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 617,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 615,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 232,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 696,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 665,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 671,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 669,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 672,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 658,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 674,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 675,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 676,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 687,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 681,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 658,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 679,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 691,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 664,
												"id": 693,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 656,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 232,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 696,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 697,
							"src": "698:9376:5",
							"usedErrors": [
								244,
								253
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 698,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 699,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 708,
							"linearizedBaseContracts": [
								708
							],
							"name": "IERC165",
							"nameLocation": "433:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "819:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 701,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:6"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "862:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:6"
									},
									"scope": 708,
									"src": "792:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 709,
							"src": "423:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:6"
				},
				"id": 6
			},
			"contracts/modules/SponsorMatrix.sol": {
				"ast": {
					"absolutePath": "contracts/modules/SponsorMatrix.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"Nanakshahi": [
							2316
						],
						"ReentrancyGuard": [
							154
						],
						"SafeERC20": [
							696
						],
						"Storage": [
							3749
						]
					},
					"id": 2317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "contracts/modules/Storage.sol",
							"file": "./Storage.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2317,
							"sourceUnit": 3750,
							"src": "97:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 712,
										"name": "Storage",
										"nameLocations": [
											"147:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3749,
										"src": "147:7:7"
									},
									"id": 713,
									"nodeType": "InheritanceSpecifier",
									"src": "147:7:7"
								}
							],
							"canonicalName": "Nanakshahi",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2316,
							"linearizedBaseContracts": [
								2316,
								3749,
								154
							],
							"name": "Nanakshahi",
							"nameLocation": "133:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "186:17:7",
										"statements": []
									},
									"id": 717,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "183:2:7"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:0:7"
									},
									"scope": 2316,
									"src": "172:31:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "267:2149:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 723,
																	"name": "addressToId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2539,
																	"src": "286:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 726,
																"indexExpression": {
																	"expression": {
																		"id": 724,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "298:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "302:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "298:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "286:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "313:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "286:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792072656769737465726564",
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "316:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2",
																"typeString": "literal_string \"Already registered\""
															},
															"value": "Already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2",
																"typeString": "literal_string \"Already registered\""
															}
														],
														"id": 722,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "278:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "278:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "278:59:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 733,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2544,
																		"src": "356:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																			"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																		}
																	},
																	"id": 735,
																	"indexExpression": {
																		"id": 734,
																		"name": "_sponsorId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "362:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "356:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2488_storage",
																		"typeString": "struct Storage.User storage ref"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "374:2:7",
																"memberName": "id",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2455,
																"src": "356:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "379:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "356:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642073706f6e736f72",
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "382:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_531fd3618b82cbf119023752f6dbf61d43631ba4b257b90a03c7a89f9ee818d8",
																"typeString": "literal_string \"Invalid sponsor\""
															},
															"value": "Invalid sponsor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_531fd3618b82cbf119023752f6dbf61d43631ba4b257b90a03c7a89f9ee818d8",
																"typeString": "literal_string \"Invalid sponsor\""
															}
														],
														"id": 732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "348:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "348:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "348:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 745,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "487:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "491:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "487:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 749,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "507:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Nanakshahi_$2316",
																		"typeString": "contract Nanakshahi"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Nanakshahi_$2316",
																		"typeString": "contract Nanakshahi"
																	}
																],
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "499:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 747,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "499:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "499:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 751,
																"name": "packages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2436,
																"src": "514:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																	"typeString": "uint256[] storage ref"
																}
															},
															"id": 753,
															"indexExpression": {
																"hexValue": "30",
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "523:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "514:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 742,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "469:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "474:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 231,
														"src": "469:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "469:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "469:57:7"
											},
											{
												"assignments": [
													757
												],
												"declarations": [
													{
														"constant": false,
														"id": 757,
														"mutability": "mutable",
														"name": "newUserId",
														"nameLocation": "590:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 932,
														"src": "585:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 756,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "585:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 761,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "defaultRefId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2338,
														"src": "602:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 759,
														"name": "totalUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2340,
														"src": "617:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "602:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "585:42:7"
											},
											{
												"expression": {
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 762,
														"name": "totalUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2340,
														"src": "639:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "653:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "639:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "639:15:7"
											},
											{
												"expression": {
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 766,
															"name": "addressToId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2539,
															"src": "665:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 769,
														"indexExpression": {
															"expression": {
																"id": 767,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "677:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "681:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "677:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "665:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 770,
														"name": "newUserId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "691:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "665:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "665:35:7"
											},
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "734:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 932,
														"src": "721:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 774,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 773,
																"name": "User",
																"nameLocations": [
																	"721:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2488,
																"src": "721:4:7"
															},
															"referencedDeclaration": 2488,
															"src": "721:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 779,
												"initialValue": {
													"baseExpression": {
														"id": 776,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2544,
														"src": "741:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 778,
													"indexExpression": {
														"id": 777,
														"name": "newUserId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "747:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "741:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2488_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:36:7"
											},
											{
												"expression": {
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 780,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "768:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "773:7:7",
														"memberName": "account",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2447,
														"src": "768:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 783,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "783:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "787:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "783:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "768:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "768:25:7"
											},
											{
												"expression": {
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 787,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "804:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "809:10:7",
														"memberName": "checkpoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2453,
														"src": "804:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 790,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "828:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "822:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "804:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "804:33:7"
											},
											{
												"expression": {
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 794,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "848:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "853:2:7",
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2455,
														"src": "848:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 797,
														"name": "newUserId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "858:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "848:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "848:19:7"
											},
											{
												"expression": {
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 800,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "878:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 802,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "883:9:7",
														"memberName": "sponsorId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2457,
														"src": "878:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 803,
														"name": "_sponsorId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "895:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "878:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "878:27:7"
											},
											{
												"expression": {
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 806,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "916:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "921:5:7",
														"memberName": "level",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2461,
														"src": "916:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "929:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "916:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "916:14:7"
											},
											{
												"expression": {
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 812,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "941:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "946:12:7",
														"memberName": "totalDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2469,
														"src": "941:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 815,
															"name": "packages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "961:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 817,
														"indexExpression": {
															"hexValue": "30",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "970:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "961:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "941:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "941:31:7"
											},
											{
												"expression": {
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 820,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "983:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "988:16:7",
														"memberName": "registrationTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2479,
														"src": "983:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 823,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1007:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1013:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1007:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "983:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "983:39:7"
											},
											{
												"expression": {
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 827,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2544,
																"src": "1088:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																}
															},
															"id": 829,
															"indexExpression": {
																"id": 828,
																"name": "_sponsorId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "1094:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1088:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage",
																"typeString": "struct Storage.User storage ref"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1106:10:7",
														"memberName": "directTeam",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2463,
														"src": "1088:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1120:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1088:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "1088:33:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 838,
															"name": "newUserId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "1165:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 834,
																"name": "directReferrals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2571,
																"src": "1132:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 836,
															"indexExpression": {
																"id": 835,
																"name": "_sponsorId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "1148:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1132:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1160:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1132:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1132:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "1132:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "newUserId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "1209:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 841,
															"name": "registeredUserIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2376,
															"src": "1186:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1204:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1186:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1186:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "1186:33:7"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 847,
															"name": "communityDebt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "1230:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 849,
														"indexExpression": {
															"id": 848,
															"name": "newUserId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "1244:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1230:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 850,
														"name": "communityAccPerUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2383,
														"src": "1257:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1230:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "1230:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 854,
															"name": "newUserId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "1343:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 855,
															"name": "_sponsorId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "1354:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 853,
														"name": "_placeInMatrix",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "1328:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1328:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "1328:37:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"baseExpression": {
																		"id": 864,
																		"name": "packages",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2436,
																		"src": "1454:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 866,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1463:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1454:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1491:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"expression": {
																		"id": 868,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1514:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1520:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1514:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31",
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1556:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 863,
																"name": "Deposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2445,
																"src": "1423:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Deposit_$2445_storage_ptr_$",
																	"typeString": "type(struct Storage.Deposit storage pointer)"
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"1446:6:7",
																"1480:9:7",
																"1507:5:7",
																"1544:11:7"
															],
															"names": [
																"amount",
																"withdrawn",
																"start",
																"depositType"
															],
															"nodeType": "FunctionCall",
															"src": "1423:146:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deposit_$2445_memory_ptr",
																"typeString": "struct Storage.Deposit memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Deposit_$2445_memory_ptr",
																"typeString": "struct Storage.Deposit memory"
															}
														],
														"expression": {
															"expression": {
																"id": 858,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "1404:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1409:8:7",
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2451,
															"src": "1404:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$2445_storage_$dyn_storage",
																"typeString": "struct Storage.Deposit storage ref[] storage ref"
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1418:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1404:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$2445_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$2445_storage_$returns$__$attached_to$_t_array$_t_struct$_Deposit_$2445_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Storage.Deposit storage ref[] storage pointer,struct Storage.Deposit storage ref)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1404:166:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "1404:166:7"
											},
											{
												"assignments": [
													875
												],
												"declarations": [
													{
														"constant": false,
														"id": 875,
														"mutability": "mutable",
														"name": "totalPackagePrice",
														"nameLocation": "1616:17:7",
														"nodeType": "VariableDeclaration",
														"scope": 932,
														"src": "1611:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 874,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1611:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 879,
												"initialValue": {
													"baseExpression": {
														"id": 876,
														"name": "packages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2436,
														"src": "1636:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 878,
													"indexExpression": {
														"hexValue": "30",
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1645:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1636:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1611:36:7"
											},
											{
												"assignments": [
													881
												],
												"declarations": [
													{
														"constant": false,
														"id": 881,
														"mutability": "mutable",
														"name": "creatorShare",
														"nameLocation": "1663:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 932,
														"src": "1658:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 880,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1658:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 887,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 882,
															"name": "totalPackagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "1678:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "35",
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1698:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"src": "1678:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1702:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1678:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1658:47:7"
											},
											{
												"assignments": [
													889
												],
												"declarations": [
													{
														"constant": false,
														"id": 889,
														"mutability": "mutable",
														"name": "remainingAmount",
														"nameLocation": "1738:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 932,
														"src": "1733:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 888,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1733:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 895,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 890,
															"name": "totalPackagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "1756:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3630",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1776:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "60"
														},
														"src": "1756:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1756:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1733:51:7"
											},
											{
												"assignments": [
													897
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "communityShare",
														"nameLocation": "1882:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 932,
														"src": "1877:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 896,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1877:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 903,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 898,
															"name": "totalPackagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "1899:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3235",
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1919:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_25_by_1",
																"typeString": "int_const 25"
															},
															"value": "25"
														},
														"src": "1899:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1924:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1899:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1877:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 905,
															"name": "communityShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "2049:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 904,
														"name": "_accrueCommunityBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "2027:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2027:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "2027:37:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "creatorShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "2133:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 908,
														"name": "_sendToCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3158,
														"src": "2118:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2118:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "2118:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 913,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "2241:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2246:9:7",
															"memberName": "sponsorId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2457,
															"src": "2241:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 915,
															"name": "newUserId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "2257:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 916,
															"name": "remainingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "2268:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 912,
														"name": "_distributeSponsorIncome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "2216:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2216:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "2216:71:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 921,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2344:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2348:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2344:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 923,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2544,
																	"src": "2356:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 925,
																"indexExpression": {
																	"id": 924,
																	"name": "_sponsorId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "2362:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2356:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2374:7:7",
															"memberName": "account",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2447,
															"src": "2356:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "newUserId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "2383:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 928,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "2394:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2399:8:7",
															"memberName": "uplineId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2459,
															"src": "2394:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 920,
														"name": "Registration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2603,
														"src": "2331:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2331:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "EmitStatement",
												"src": "2326:82:7"
											}
										]
									},
									"functionSelector": "f207564e",
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nameLocation": "232:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "_sponsorId",
												"nameLocation": "246:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "241:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "241:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:17:7"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "267:0:7"
									},
									"scope": 2316,
									"src": "223:2193:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "2468:3739:7",
										"statements": [
											{
												"assignments": [
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "2492:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "2479:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 939,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 938,
																"name": "User",
																"nameLocations": [
																	"2479:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2488,
																"src": "2479:4:7"
															},
															"referencedDeclaration": 2488,
															"src": "2479:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 944,
												"initialValue": {
													"baseExpression": {
														"id": 941,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2544,
														"src": "2499:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 943,
													"indexExpression": {
														"id": 942,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "2505:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2499:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2488_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2479:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 946,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "2532:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2537:7:7",
																"memberName": "account",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2447,
																"src": "2532:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 948,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2548:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2552:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2548:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2532:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420796f7572206163636f756e74",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2560:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															},
															"value": "Not your account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2524:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2524:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "2524:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 955,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "2598:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2603:5:7",
																"memberName": "level",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2461,
																"src": "2598:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3135",
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2611:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"src": "2598:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479206174206d6178206c6576656c",
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2615:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b2c71611f38d91acb7ec4554ebef030c18150fac5c1fb78ff60054c385291d2",
																"typeString": "literal_string \"Already at max level\""
															},
															"value": "Already at max level"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b2c71611f38d91acb7ec4554ebef030c18150fac5c1fb78ff60054c385291d2",
																"typeString": "literal_string \"Already at max level\""
															}
														],
														"id": 954,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2590:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "2590:48:7"
											},
											{
												"assignments": [
													963
												],
												"declarations": [
													{
														"constant": false,
														"id": 963,
														"mutability": "mutable",
														"name": "nextLevel",
														"nameLocation": "2664:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "2659:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 962,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2659:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 966,
												"initialValue": {
													"expression": {
														"id": 964,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "2676:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2681:5:7",
													"memberName": "level",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2461,
													"src": "2676:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2659:27:7"
											},
											{
												"assignments": [
													968
												],
												"declarations": [
													{
														"constant": false,
														"id": 968,
														"mutability": "mutable",
														"name": "packagePrice",
														"nameLocation": "2702:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "2697:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 967,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2697:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 972,
												"initialValue": {
													"baseExpression": {
														"id": 969,
														"name": "packages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2436,
														"src": "2717:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 971,
													"indexExpression": {
														"id": 970,
														"name": "nextLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "2726:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2717:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2697:39:7"
											},
											{
												"assignments": [
													974
												],
												"declarations": [
													{
														"constant": false,
														"id": 974,
														"mutability": "mutable",
														"name": "nowTime",
														"nameLocation": "2752:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "2747:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 973,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2747:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 977,
												"initialValue": {
													"expression": {
														"id": 975,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2762:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2768:9:7",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2762:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2747:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 981,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2863:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2867:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2863:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 985,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2883:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Nanakshahi_$2316",
																		"typeString": "contract Nanakshahi"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Nanakshahi_$2316",
																		"typeString": "contract Nanakshahi"
																	}
																],
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2875:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 983,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2875:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2875:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 987,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "2890:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 978,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "2845:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2850:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 231,
														"src": "2845:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2845:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "2845:58:7"
											},
											{
												"expression": {
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 990,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "2924:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2929:5:7",
														"memberName": "level",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2461,
														"src": "2924:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2924:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "2924:15:7"
											},
											{
												"expression": {
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 996,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "2950:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2955:12:7",
														"memberName": "totalDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2469,
														"src": "2950:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 999,
														"name": "packagePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "2971:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2950:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "2950:33:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1008,
																	"name": "packagePrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "3078:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3116:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"id": 1010,
																	"name": "nowTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "3139:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3173:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 1007,
																"name": "Deposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2445,
																"src": "3047:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Deposit_$2445_storage_ptr_$",
																	"typeString": "type(struct Storage.Deposit storage pointer)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"3070:6:7",
																"3105:9:7",
																"3132:5:7",
																"3161:11:7"
															],
															"names": [
																"amount",
																"withdrawn",
																"start",
																"depositType"
															],
															"nodeType": "FunctionCall",
															"src": "3047:139:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deposit_$2445_memory_ptr",
																"typeString": "struct Storage.Deposit memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Deposit_$2445_memory_ptr",
																"typeString": "struct Storage.Deposit memory"
															}
														],
														"expression": {
															"expression": {
																"id": 1002,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "3028:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3033:8:7",
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2451,
															"src": "3028:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$2445_storage_$dyn_storage",
																"typeString": "struct Storage.Deposit storage ref[] storage ref"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3042:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3028:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$2445_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$2445_storage_$returns$__$attached_to$_t_array$_t_struct$_Deposit_$2445_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Storage.Deposit storage ref[] storage pointer,struct Storage.Deposit storage ref)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3028:159:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "3028:159:7"
											},
											{
												"assignments": [
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "creatorShare",
														"nameLocation": "3307:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "3302:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1015,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3302:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1022,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1017,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "3322:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "35",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3337:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"src": "3322:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3341:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3322:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3302:42:7"
											},
											{
												"assignments": [
													1024
												],
												"declarations": [
													{
														"constant": false,
														"id": 1024,
														"mutability": "mutable",
														"name": "communityShare",
														"nameLocation": "3465:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "3460:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1023,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3460:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1030,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1025,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "3482:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3235",
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3497:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_25_by_1",
																"typeString": "int_const 25"
															},
															"value": "25"
														},
														"src": "3482:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3502:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3482:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3460:45:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1032,
															"name": "communityShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "3538:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1031,
														"name": "_accrueCommunityBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "3516:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3516:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "3516:37:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1036,
															"name": "creatorShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "3612:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1035,
														"name": "_sendToCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3158,
														"src": "3597:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "3597:28:7"
											},
											{
												"assignments": [
													1040
												],
												"declarations": [
													{
														"constant": false,
														"id": 1040,
														"mutability": "mutable",
														"name": "sponsorIncome",
														"nameLocation": "3773:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "3768:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1039,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3768:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1046,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1041,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "3789:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3230",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3804:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "3789:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3809:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3789:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3768:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1048,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "3848:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3853:9:7",
															"memberName": "sponsorId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2457,
															"src": "3848:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1050,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "3864:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1051,
															"name": "sponsorIncome",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "3873:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1052,
																"name": "nextLevel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "3888:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3900:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3888:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1047,
														"name": "_distributeSponsorIncome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "3823:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:79:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "3823:79:7"
											},
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"mutability": "mutable",
														"name": "uplineIncome",
														"nameLocation": "3920:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "3915:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1057,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3915:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1059,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "3935:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3230",
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3950:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "3935:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3955:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3935:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3915:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1066,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "3993:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3998:8:7",
															"memberName": "uplineId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2459,
															"src": "3993:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1068,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "4008:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1069,
															"name": "uplineIncome",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "4017:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1070,
																"name": "nextLevel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "4031:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4043:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "4031:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1065,
														"name": "_distributeMatrixIncome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2009,
														"src": "3969:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3969:76:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "3969:76:7"
											},
											{
												"assignments": [
													1076
												],
												"declarations": [
													{
														"constant": false,
														"id": 1076,
														"mutability": "mutable",
														"name": "boosterIncome",
														"nameLocation": "4063:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "4058:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1075,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4058:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1082,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1077,
															"name": "packagePrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "4079:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3230",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4094:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "4079:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4099:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "4079:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4058:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1084,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "4143:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4148:8:7",
															"memberName": "uplineId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2459,
															"src": "4143:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1086,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "4158:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1087,
															"name": "boosterIncome",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "4167:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1088,
																"name": "nextLevel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "4182:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4194:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "4182:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1091,
															"name": "nextLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "4197:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1083,
														"name": "_distributeLevelBoosterIncome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "4113:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4113:94:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "4113:94:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1094,
																	"name": "nextLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "4261:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4271:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4261:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1097,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4260:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1098,
														"name": "MONTHLY_ROYALTY_LEVEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2364,
														"src": "4277:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4260:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1182,
												"nodeType": "IfStatement",
												"src": "4257:920:7",
												"trueBody": {
													"id": 1181,
													"nodeType": "Block",
													"src": "4299:878:7",
													"statements": [
														{
															"expression": {
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1100,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "4328:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4333:11:7",
																	"memberName": "level10Time",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2481,
																	"src": "4328:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1103,
																	"name": "nowTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "4347:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4328:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1105,
															"nodeType": "ExpressionStatement",
															"src": "4328:26:7"
														},
														{
															"assignments": [
																1108
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1108,
																	"mutability": "mutable",
																	"name": "_user",
																	"nameLocation": "4382:5:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1181,
																	"src": "4369:18:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																		"typeString": "struct Storage.User"
																	},
																	"typeName": {
																		"id": 1107,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1106,
																			"name": "User",
																			"nameLocations": [
																				"4369:4:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2488,
																			"src": "4369:4:7"
																		},
																		"referencedDeclaration": 2488,
																		"src": "4369:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1112,
															"initialValue": {
																"baseExpression": {
																	"id": 1109,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2544,
																	"src": "4390:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 1111,
																"indexExpression": {
																	"id": 1110,
																	"name": "_userId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 935,
																	"src": "4396:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4390:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4369:35:7"
														},
														{
															"assignments": [
																1115
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1115,
																	"mutability": "mutable",
																	"name": "_sponsor",
																	"nameLocation": "4500:8:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1181,
																	"src": "4487:21:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																		"typeString": "struct Storage.User"
																	},
																	"typeName": {
																		"id": 1114,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1113,
																			"name": "User",
																			"nameLocations": [
																				"4487:4:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2488,
																			"src": "4487:4:7"
																		},
																		"referencedDeclaration": 2488,
																		"src": "4487:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1120,
															"initialValue": {
																"baseExpression": {
																	"id": 1116,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2544,
																	"src": "4511:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 1119,
																"indexExpression": {
																	"expression": {
																		"id": 1117,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "4517:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4522:9:7",
																	"memberName": "sponsorId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2457,
																	"src": "4517:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4511:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4487:45:7"
														},
														{
															"expression": {
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1121,
																		"name": "_sponsor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "4547:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4556:22:7",
																	"memberName": "monthlyUserDirectCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2485,
																	"src": "4547:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4581:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4547:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1126,
															"nodeType": "ExpressionStatement",
															"src": "4547:35:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1127,
																						"name": "_sponsor",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1115,
																						"src": "4601:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																							"typeString": "struct Storage.User storage pointer"
																						}
																					},
																					"id": 1128,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4610:22:7",
																					"memberName": "monthlyUserDirectCount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2485,
																					"src": "4601:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"id": 1129,
																					"name": "MONTHLY_ROYALTY_DIRECT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2370,
																					"src": "4636:22:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4601:57:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1131,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4600:59:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1132,
																					"name": "nowTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 974,
																					"src": "4664:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1136,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1133,
																							"name": "_sponsor",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1115,
																							"src": "4675:8:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																								"typeString": "struct Storage.User storage pointer"
																							}
																						},
																						"id": 1134,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4684:16:7",
																						"memberName": "registrationTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2479,
																						"src": "4675:25:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 1135,
																						"name": "MONTHLY_ROYALTY_TIME",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2352,
																						"src": "4703:20:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4675:48:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4664:59:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1138,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4663:61:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4600:124:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1140,
																					"name": "_sponsor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1115,
																					"src": "4729:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																						"typeString": "struct Storage.User storage pointer"
																					}
																				},
																				"id": 1141,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:5:7",
																				"memberName": "level",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2461,
																				"src": "4729:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 1142,
																				"name": "MONTHLY_ROYALTY_LEVEL",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2364,
																				"src": "4747:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4729:39:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1144,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4728:41:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4600:169:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1153,
															"nodeType": "IfStatement",
															"src": "4597:272:7",
															"trueBody": {
																"id": 1152,
																"nodeType": "Block",
																"src": "4770:99:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1147,
																						"name": "_user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1108,
																						"src": "4816:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																							"typeString": "struct Storage.User storage pointer"
																						}
																					},
																					"id": 1148,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4822:9:7",
																					"memberName": "sponsorId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2457,
																					"src": "4816:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1149,
																					"name": "currentMonthlyRound",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2924,
																					"src": "4833:19:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1146,
																				"name": "_tryMonthlyRoyaltyQualify",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3498,
																				"src": "4789:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4789:64:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1151,
																		"nodeType": "ExpressionStatement",
																		"src": "4789:64:7"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1154,
																						"name": "_user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1108,
																						"src": "4891:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																							"typeString": "struct Storage.User storage pointer"
																						}
																					},
																					"id": 1155,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4897:22:7",
																					"memberName": "monthlyUserDirectCount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2485,
																					"src": "4891:28:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"id": 1156,
																					"name": "MONTHLY_ROYALTY_DIRECT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2370,
																					"src": "4923:22:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4891:54:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1158,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4890:56:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1159,
																						"name": "_user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1108,
																						"src": "4951:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																							"typeString": "struct Storage.User storage pointer"
																						}
																					},
																					"id": 1160,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4957:11:7",
																					"memberName": "level10Time",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2481,
																					"src": "4951:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1164,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1161,
																							"name": "_user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1108,
																							"src": "4972:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																								"typeString": "struct Storage.User storage pointer"
																							}
																						},
																						"id": 1162,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4978:16:7",
																						"memberName": "registrationTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2479,
																						"src": "4972:22:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 1163,
																						"name": "MONTHLY_ROYALTY_TIME",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2352,
																						"src": "4997:20:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4972:45:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4951:66:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1166,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4950:68:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4890:128:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1168,
																					"name": "_user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "5023:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																						"typeString": "struct Storage.User storage pointer"
																					}
																				},
																				"id": 1169,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5029:5:7",
																				"memberName": "level",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2461,
																				"src": "5023:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1170,
																				"name": "MONTHLY_ROYALTY_LEVEL",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2364,
																				"src": "5038:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5023:36:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1172,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5022:38:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4890:170:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1180,
															"nodeType": "IfStatement",
															"src": "4887:279:7",
															"trueBody": {
																"id": 1179,
																"nodeType": "Block",
																"src": "5063:103:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1175,
																					"name": "_userId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 935,
																					"src": "5109:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1176,
																					"name": "currentMonthlyRound",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2924,
																					"src": "5118:19:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1174,
																				"name": "_tryMonthlyRoyaltyQualify",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3498,
																				"src": "5082:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5082:56:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1178,
																		"nodeType": "ExpressionStatement",
																		"src": "5082:56:7"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1183,
																	"name": "nextLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "5229:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5239:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5229:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1186,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5228:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1187,
														"name": "TOP_ROYALTY_LEVEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2367,
														"src": "5245:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5228:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1271,
												"nodeType": "IfStatement",
												"src": "5225:872:7",
												"trueBody": {
													"id": 1270,
													"nodeType": "Block",
													"src": "5263:834:7",
													"statements": [
														{
															"expression": {
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1189,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "5292:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5297:11:7",
																	"memberName": "level15Time",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2483,
																	"src": "5292:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1192,
																	"name": "nowTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "5311:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5292:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1194,
															"nodeType": "ExpressionStatement",
															"src": "5292:26:7"
														},
														{
															"assignments": [
																1197
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1197,
																	"mutability": "mutable",
																	"name": "_user",
																	"nameLocation": "5346:5:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1270,
																	"src": "5333:18:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																		"typeString": "struct Storage.User"
																	},
																	"typeName": {
																		"id": 1196,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1195,
																			"name": "User",
																			"nameLocations": [
																				"5333:4:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2488,
																			"src": "5333:4:7"
																		},
																		"referencedDeclaration": 2488,
																		"src": "5333:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1201,
															"initialValue": {
																"baseExpression": {
																	"id": 1198,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2544,
																	"src": "5354:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 1200,
																"indexExpression": {
																	"id": 1199,
																	"name": "_userId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 935,
																	"src": "5360:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5354:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5333:35:7"
														},
														{
															"assignments": [
																1204
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1204,
																	"mutability": "mutable",
																	"name": "_sponsor",
																	"nameLocation": "5464:8:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1270,
																	"src": "5451:21:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																		"typeString": "struct Storage.User"
																	},
																	"typeName": {
																		"id": 1203,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1202,
																			"name": "User",
																			"nameLocations": [
																				"5451:4:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2488,
																			"src": "5451:4:7"
																		},
																		"referencedDeclaration": 2488,
																		"src": "5451:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1209,
															"initialValue": {
																"baseExpression": {
																	"id": 1205,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2544,
																	"src": "5475:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 1208,
																"indexExpression": {
																	"expression": {
																		"id": 1206,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "5481:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5486:9:7",
																	"memberName": "sponsorId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2457,
																	"src": "5481:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5475:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5451:45:7"
														},
														{
															"expression": {
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1210,
																		"name": "_sponsor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "5511:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5520:21:7",
																	"memberName": "topRoyaltyDirectCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2487,
																	"src": "5511:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5544:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5511:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1215,
															"nodeType": "ExpressionStatement",
															"src": "5511:34:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1216,
																						"name": "_sponsor",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1204,
																						"src": "5564:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																							"typeString": "struct Storage.User storage pointer"
																						}
																					},
																					"id": 1217,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5573:21:7",
																					"memberName": "topRoyaltyDirectCount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2487,
																					"src": "5564:30:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"id": 1218,
																					"name": "TOP_ROYALTY_DIRECT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2373,
																					"src": "5598:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5564:52:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1220,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5563:54:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1221,
																					"name": "nowTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 974,
																					"src": "5622:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1225,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1222,
																							"name": "_sponsor",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1204,
																							"src": "5633:8:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																								"typeString": "struct Storage.User storage pointer"
																							}
																						},
																						"id": 1223,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5642:16:7",
																						"memberName": "registrationTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2479,
																						"src": "5633:25:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 1224,
																						"name": "TOP_ROYALTY_TIME",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2355,
																						"src": "5661:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5633:44:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5622:55:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1227,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5621:57:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5563:115:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1229,
																					"name": "_sponsor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1204,
																					"src": "5683:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																						"typeString": "struct Storage.User storage pointer"
																					}
																				},
																				"id": 1230,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5692:5:7",
																				"memberName": "level",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2461,
																				"src": "5683:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 1231,
																				"name": "TOP_ROYALTY_LEVEL",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2367,
																				"src": "5701:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5683:35:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1233,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5682:37:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5563:156:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1242,
															"nodeType": "IfStatement",
															"src": "5560:251:7",
															"trueBody": {
																"id": 1241,
																"nodeType": "Block",
																"src": "5720:91:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1236,
																						"name": "_user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1197,
																						"src": "5762:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																							"typeString": "struct Storage.User storage pointer"
																						}
																					},
																					"id": 1237,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5768:9:7",
																					"memberName": "sponsorId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2457,
																					"src": "5762:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1238,
																					"name": "topRoyaltyRound",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3017,
																					"src": "5779:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1235,
																				"name": "_tryTopRoyaltyQualify",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3633,
																				"src": "5739:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5739:56:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1240,
																		"nodeType": "ExpressionStatement",
																		"src": "5739:56:7"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1243,
																						"name": "_user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1197,
																						"src": "5833:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																							"typeString": "struct Storage.User storage pointer"
																						}
																					},
																					"id": 1244,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5839:21:7",
																					"memberName": "topRoyaltyDirectCount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2487,
																					"src": "5833:27:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"id": 1245,
																					"name": "TOP_ROYALTY_DIRECT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2373,
																					"src": "5864:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5833:49:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1247,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5832:51:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1248,
																						"name": "_user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1197,
																						"src": "5887:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																							"typeString": "struct Storage.User storage pointer"
																						}
																					},
																					"id": 1249,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5893:11:7",
																					"memberName": "level15Time",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2483,
																					"src": "5887:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1253,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1250,
																							"name": "_user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1197,
																							"src": "5908:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																								"typeString": "struct Storage.User storage pointer"
																							}
																						},
																						"id": 1251,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5914:16:7",
																						"memberName": "registrationTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2479,
																						"src": "5908:22:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 1252,
																						"name": "TOP_ROYALTY_TIME",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2355,
																						"src": "5933:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5908:41:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5887:62:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1255,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5886:64:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5832:118:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1257,
																					"name": "_user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1197,
																					"src": "5955:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																						"typeString": "struct Storage.User storage pointer"
																					}
																				},
																				"id": 1258,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5961:5:7",
																				"memberName": "level",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2461,
																				"src": "5955:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1259,
																				"name": "TOP_ROYALTY_LEVEL",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2367,
																				"src": "5970:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5955:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1261,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5954:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5832:156:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1269,
															"nodeType": "IfStatement",
															"src": "5829:257:7",
															"trueBody": {
																"id": 1268,
																"nodeType": "Block",
																"src": "5991:95:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1264,
																					"name": "_userId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 935,
																					"src": "6033:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1265,
																					"name": "topRoyaltyRound",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3017,
																					"src": "6042:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1263,
																				"name": "_tryTopRoyaltyQualify",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3633,
																				"src": "6010:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6010:48:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1267,
																		"nodeType": "ExpressionStatement",
																		"src": "6010:48:7"
																	}
																]
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1273,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6130:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6134:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6130:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1275,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "6142:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1276,
																"name": "nextLevel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "6151:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6163:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "6151:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "53706f6e736f727368697020737472756374757265",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6166:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80a7100bed8b924e4d26bb9a35219babc2047e737e9eb52407f4289ec1627f19",
																"typeString": "literal_string \"Sponsorship structure\""
															},
															"value": "Sponsorship structure"
														},
														{
															"id": 1280,
															"name": "nowTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "6191:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_80a7100bed8b924e4d26bb9a35219babc2047e737e9eb52407f4289ec1627f19",
																"typeString": "literal_string \"Sponsorship structure\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1272,
														"name": "Upgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2615,
														"src": "6122:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,string memory,uint256)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6122:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "EmitStatement",
												"src": "6117:82:7"
											}
										]
									},
									"functionSelector": "45977d03",
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgrade",
									"nameLocation": "2437:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "2450:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "2445:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2445:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2444:14:7"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2468:0:7"
									},
									"scope": 2316,
									"src": "2428:3779:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "6305:681:7",
										"statements": [
											{
												"assignments": [
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "6325:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "6312:17:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 1294,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1293,
																"name": "User",
																"nameLocations": [
																	"6312:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2488,
																"src": "6312:4:7"
															},
															"referencedDeclaration": 2488,
															"src": "6312:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1299,
												"initialValue": {
													"baseExpression": {
														"id": 1296,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2544,
														"src": "6332:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 1298,
													"indexExpression": {
														"id": 1297,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "6338:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6332:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2488_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6312:34:7"
											},
											{
												"assignments": [
													1302
												],
												"declarations": [
													{
														"constant": false,
														"id": 1302,
														"mutability": "mutable",
														"name": "income",
														"nameLocation": "6372:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "6353:25:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
															"typeString": "struct Storage.UserIncome"
														},
														"typeName": {
															"id": 1301,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1300,
																"name": "UserIncome",
																"nameLocations": [
																	"6353:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2513,
																"src": "6353:10:7"
															},
															"referencedDeclaration": 2513,
															"src": "6353:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																"typeString": "struct Storage.UserIncome"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1306,
												"initialValue": {
													"baseExpression": {
														"id": 1303,
														"name": "userIncomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2549,
														"src": "6381:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2513_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
														}
													},
													"id": 1305,
													"indexExpression": {
														"id": 1304,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "6393:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6381:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIncome_$2513_storage",
														"typeString": "struct Storage.UserIncome storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6353:48:7"
											},
											{
												"assignments": [
													1308
												],
												"declarations": [
													{
														"constant": false,
														"id": 1308,
														"mutability": "mutable",
														"name": "_ROI_CAP_MULTIPLIER",
														"nameLocation": "6618:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "6613:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1307,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6613:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1310,
												"initialValue": {
													"id": 1309,
													"name": "ROI_CAP_MULTIPLIER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2358,
													"src": "6640:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6613:45:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1311,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "6667:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 1312,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6672:19:7",
														"memberName": "directPoolQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2465,
														"src": "6667:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6692:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6667:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1320,
												"nodeType": "IfStatement",
												"src": "6664:70:7",
												"trueBody": {
													"id": 1319,
													"nodeType": "Block",
													"src": "6694:40:7",
													"statements": [
														{
															"expression": {
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1315,
																	"name": "_ROI_CAP_MULTIPLIER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "6703:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3230",
																	"id": 1316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6725:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "6703:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1318,
															"nodeType": "ExpressionStatement",
															"src": "6703:24:7"
														}
													]
												}
											},
											{
												"assignments": [
													1322
												],
												"declarations": [
													{
														"constant": false,
														"id": 1322,
														"mutability": "mutable",
														"name": "maxIncome",
														"nameLocation": "6744:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "6739:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1321,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6739:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1323,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "6757:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6762:12:7",
																	"memberName": "totalDeposit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2469,
																	"src": "6757:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1325,
																	"name": "_ROI_CAP_MULTIPLIER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "6777:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6757:39:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1327,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6756:41:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1328,
														"name": "ROI_CAP_DIVIDER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2361,
														"src": "6800:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6756:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6739:76:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1331,
															"name": "income",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "6828:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6835:11:7",
														"memberName": "totalIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2490,
														"src": "6828:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1333,
														"name": "maxIncome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "6850:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6828:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1337,
												"nodeType": "IfStatement",
												"src": "6824:45:7",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6868:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1292,
													"id": 1336,
													"nodeType": "Return",
													"src": "6861:8:7"
												}
											},
											{
												"assignments": [
													1339
												],
												"declarations": [
													{
														"constant": false,
														"id": 1339,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "6883:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "6878:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1338,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6878:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1344,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1340,
														"name": "maxIncome",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "6895:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1341,
															"name": "income",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "6907:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 1342,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6914:11:7",
														"memberName": "totalIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2490,
														"src": "6907:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6895:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6878:47:7"
											},
											{
												"expression": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1345,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "6940:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1346,
																	"name": "remaining",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1339,
																	"src": "6950:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6940:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1348,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6939:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1350,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "6975:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6939:43:7",
													"trueExpression": {
														"id": 1349,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "6963:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1292,
												"id": 1352,
												"nodeType": "Return",
												"src": "6932:50:7"
											}
										]
									},
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_applyGlobalCapping",
									"nameLocation": "6228:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "6253:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "6248:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6248:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6267:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "6262:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6262:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6247:28:7"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "6299:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6299:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6298:6:7"
									},
									"scope": 2316,
									"src": "6219:767:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "7053:265:7",
										"statements": [
											{
												"assignments": [
													1360
												],
												"declarations": [
													{
														"constant": false,
														"id": 1360,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "7069:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 1392,
														"src": "7064:6:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1359,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7064:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1363,
												"initialValue": {
													"expression": {
														"id": 1361,
														"name": "registeredUserIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2376,
														"src": "7073:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7091:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "7073:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7064:33:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1364,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "7112:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7117:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7112:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1367,
															"name": "_totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "7122:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7138:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7122:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7112:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1382,
												"nodeType": "IfStatement",
												"src": "7108:135:7",
												"trueBody": {
													"id": 1381,
													"nodeType": "Block",
													"src": "7141:102:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1371,
																	"name": "_totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1356,
																	"src": "7160:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7175:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7160:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1379,
															"nodeType": "IfStatement",
															"src": "7156:55:7",
															"trueBody": {
																"id": 1378,
																"nodeType": "Block",
																"src": "7178:33:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1375,
																					"name": "_totalAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1356,
																					"src": "7195:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1374,
																				"name": "_sendToCreator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3158,
																				"src": "7180:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 1376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7180:28:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1377,
																		"nodeType": "ExpressionStatement",
																		"src": "7180:28:7"
																	}
																]
															}
														},
														{
															"functionReturnParameters": 1358,
															"id": 1380,
															"nodeType": "Return",
															"src": "7225:7:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1383,
														"name": "communityAccPerUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2383,
														"src": "7253:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1384,
																		"name": "_totalAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1356,
																		"src": "7277:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1385,
																		"name": "ACC_PRECISION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2381,
																		"src": "7292:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7277:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1387,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7276:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1388,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "7309:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7276:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7253:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1391,
												"nodeType": "ExpressionStatement",
												"src": "7253:57:7"
											}
										]
									},
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_accrueCommunityBonus",
									"nameLocation": "7003:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "_totalAmount",
												"nameLocation": "7030:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "7025:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7025:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7024:19:7"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7053:0:7"
									},
									"scope": 2316,
									"src": "6994:324:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1531,
										"nodeType": "Block",
										"src": "7375:1700:7",
										"statements": [
											{
												"assignments": [
													1400
												],
												"declarations": [
													{
														"constant": false,
														"id": 1400,
														"mutability": "mutable",
														"name": "u",
														"nameLocation": "7403:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 1531,
														"src": "7390:14:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 1399,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1398,
																"name": "User",
																"nameLocations": [
																	"7390:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2488,
																"src": "7390:4:7"
															},
															"referencedDeclaration": 2488,
															"src": "7390:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1404,
												"initialValue": {
													"baseExpression": {
														"id": 1401,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2544,
														"src": "7407:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 1403,
													"indexExpression": {
														"id": 1402,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "7413:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7407:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2488_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7390:31:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1406,
																	"name": "u",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "7444:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7446:2:7",
																"memberName": "id",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2455,
																"src": "7444:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7452:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7444:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206e6f7420666f756e64",
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7455:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e15167f5786c4ddc21384bc04afaf89cf38eefb643327f5c8a229975fe5e928",
																"typeString": "literal_string \"User not found\""
															},
															"value": "User not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e15167f5786c4ddc21384bc04afaf89cf38eefb643327f5c8a229975fe5e928",
																"typeString": "literal_string \"User not found\""
															}
														],
														"id": 1405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7436:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7436:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "7436:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1414,
																	"name": "u",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "7495:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7497:7:7",
																"memberName": "account",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2447,
																"src": "7495:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1416,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7508:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7512:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7508:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7495:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420796f7572206163636f756e74",
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7520:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															},
															"value": "Not your account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2be5388e395114c9bc63051fd6def6e9e0facc3465cd48116ad48bef63b0e75",
																"typeString": "literal_string \"Not your account\""
															}
														],
														"id": 1413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7487:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7487:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "7487:52:7"
											},
											{
												"assignments": [
													1423
												],
												"declarations": [
													{
														"constant": false,
														"id": 1423,
														"mutability": "mutable",
														"name": "accumulated",
														"nameLocation": "7622:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1531,
														"src": "7614:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1422,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7614:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1425,
												"initialValue": {
													"id": 1424,
													"name": "communityAccPerUser",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2383,
													"src": "7636:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7614:41:7"
											},
											{
												"assignments": [
													1427
												],
												"declarations": [
													{
														"constant": false,
														"id": 1427,
														"mutability": "mutable",
														"name": "debt",
														"nameLocation": "7678:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1531,
														"src": "7670:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1426,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7670:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1431,
												"initialValue": {
													"baseExpression": {
														"id": 1428,
														"name": "communityDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2387,
														"src": "7685:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1430,
													"indexExpression": {
														"id": 1429,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "7699:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7685:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7670:37:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1432,
														"name": "accumulated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "7728:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1433,
														"name": "debt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "7743:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7728:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1437,
												"nodeType": "IfStatement",
												"src": "7724:86:7",
												"trueBody": {
													"id": 1436,
													"nodeType": "Block",
													"src": "7749:61:7",
													"statements": [
														{
															"functionReturnParameters": 1397,
															"id": 1435,
															"nodeType": "Return",
															"src": "7768:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													1439
												],
												"declarations": [
													{
														"constant": false,
														"id": 1439,
														"mutability": "mutable",
														"name": "accrued",
														"nameLocation": "7834:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1531,
														"src": "7826:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1438,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7826:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1446,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1440,
																	"name": "accumulated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "7845:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1441,
																	"name": "debt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "7859:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7845:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1443,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7844:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1444,
														"name": "ACC_PRECISION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "7867:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7844:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:54:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1447,
														"name": "accrued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "7899:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7910:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7899:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1458,
												"nodeType": "IfStatement",
												"src": "7895:133:7",
												"trueBody": {
													"id": 1457,
													"nodeType": "Block",
													"src": "7913:115:7",
													"statements": [
														{
															"expression": {
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1450,
																		"name": "communityDebt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2387,
																		"src": "7932:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1452,
																	"indexExpression": {
																		"id": 1451,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1395,
																		"src": "7946:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7932:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1453,
																	"name": "accumulated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "7957:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7932:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1455,
															"nodeType": "ExpressionStatement",
															"src": "7932:36:7"
														},
														{
															"functionReturnParameters": 1397,
															"id": 1456,
															"nodeType": "Return",
															"src": "8006:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													1460
												],
												"declarations": [
													{
														"constant": false,
														"id": 1460,
														"mutability": "mutable",
														"name": "pay",
														"nameLocation": "8099:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1531,
														"src": "8091:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8091:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1465,
												"initialValue": {
													"arguments": [
														{
															"id": 1462,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "8125:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1463,
															"name": "accrued",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "8134:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1461,
														"name": "_applyGlobalCapping",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "8105:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8105:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8091:51:7"
											},
											{
												"expression": {
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1466,
															"name": "communityDebt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "8232:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1468,
														"indexExpression": {
															"id": 1467,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "8246:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8232:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1469,
														"name": "accumulated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "8257:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8232:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "8232:36:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1472,
														"name": "pay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "8289:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8295:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8289:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1519,
												"nodeType": "IfStatement",
												"src": "8285:621:7",
												"trueBody": {
													"id": 1518,
													"nodeType": "Block",
													"src": "8298:608:7",
													"statements": [
														{
															"assignments": [
																1477
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1477,
																	"mutability": "mutable",
																	"name": "inc",
																	"nameLocation": "8336:3:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1518,
																	"src": "8317:22:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																		"typeString": "struct Storage.UserIncome"
																	},
																	"typeName": {
																		"id": 1476,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1475,
																			"name": "UserIncome",
																			"nameLocations": [
																				"8317:10:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2513,
																			"src": "8317:10:7"
																		},
																		"referencedDeclaration": 2513,
																		"src": "8317:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																			"typeString": "struct Storage.UserIncome"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1481,
															"initialValue": {
																"baseExpression": {
																	"id": 1478,
																	"name": "userIncomes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2549,
																	"src": "8342:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2513_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
																	}
																},
																"id": 1480,
																"indexExpression": {
																	"id": 1479,
																	"name": "_userId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1395,
																	"src": "8354:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8342:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserIncome_$2513_storage",
																	"typeString": "struct Storage.UserIncome storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8317:45:7"
														},
														{
															"expression": {
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1482,
																		"name": "inc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "8381:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																			"typeString": "struct Storage.UserIncome storage pointer"
																		}
																	},
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8385:11:7",
																	"memberName": "totalIncome",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2490,
																	"src": "8381:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1485,
																	"name": "pay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1460,
																	"src": "8400:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8381:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1487,
															"nodeType": "ExpressionStatement",
															"src": "8381:22:7"
														},
														{
															"expression": {
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1488,
																		"name": "inc",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "8422:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																			"typeString": "struct Storage.UserIncome storage pointer"
																		}
																	},
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8426:15:7",
																	"memberName": "communityIncome",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2502,
																	"src": "8422:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1491,
																	"name": "pay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1460,
																	"src": "8445:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8422:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1493,
															"nodeType": "ExpressionStatement",
															"src": "8422:26:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1499,
																				"name": "_userId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1395,
																				"src": "8571:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1500,
																				"name": "pay",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1460,
																				"src": "8609:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "31",
																				"id": 1501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8649:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			{
																				"expression": {
																					"id": 1502,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "8684:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8690:9:7",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "8684:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "39",
																				"id": 1504,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8734:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_9_by_1",
																					"typeString": "int_const 9"
																				},
																				"value": "9"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_9_by_1",
																					"typeString": "int_const 9"
																				}
																			],
																			"id": 1498,
																			"name": "Income",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2524,
																			"src": "8529:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Income_$2524_storage_ptr_$",
																				"typeString": "type(struct Storage.Income storage pointer)"
																			}
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"nameLocations": [
																			"8559:10:7",
																			"8601:6:7",
																			"8635:12:7",
																			"8673:9:7",
																			"8722:10:7"
																		],
																		"names": [
																			"fromUserId",
																			"amount",
																			"packageLevel",
																			"timestamp",
																			"incomeType"
																		],
																		"nodeType": "FunctionCall",
																		"src": "8529:245:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Income_$2524_memory_ptr",
																			"typeString": "struct Storage.Income memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Income_$2524_memory_ptr",
																			"typeString": "struct Storage.Income memory"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1494,
																			"name": "incomeHistory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2555,
																			"src": "8501:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$2524_storage_$dyn_storage_$",
																				"typeString": "mapping(uint256 => struct Storage.Income storage ref[] storage ref)"
																			}
																		},
																		"id": 1496,
																		"indexExpression": {
																			"id": 1495,
																			"name": "_userId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1395,
																			"src": "8515:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8501:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Income_$2524_storage_$dyn_storage",
																			"typeString": "struct Storage.Income storage ref[] storage ref"
																		}
																	},
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8524:4:7",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "8501:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Income_$2524_storage_$dyn_storage_ptr_$_t_struct$_Income_$2524_storage_$returns$__$attached_to$_t_array$_t_struct$_Income_$2524_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct Storage.Income storage ref[] storage pointer,struct Storage.Income storage ref)"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8501:274:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1507,
															"nodeType": "ExpressionStatement",
															"src": "8501:274:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1511,
																					"name": "u",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1400,
																					"src": "8850:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																						"typeString": "struct Storage.User storage pointer"
																					}
																				},
																				"id": 1512,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8852:7:7",
																				"memberName": "account",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2447,
																				"src": "8850:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1513,
																				"name": "pay",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1460,
																				"src": "8861:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1509,
																				"name": "usdt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2330,
																				"src": "8836:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8841:8:7",
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 199,
																			"src": "8836:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8836:29:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "55534454207472616e73666572206661696c6564",
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8867:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																			"typeString": "literal_string \"USDT transfer failed\""
																		},
																		"value": "USDT transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																			"typeString": "literal_string \"USDT transfer failed\""
																		}
																	],
																	"id": 1508,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8828:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8828:62:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1517,
															"nodeType": "ExpressionStatement",
															"src": "8828:62:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1520,
														"name": "accrued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "8985:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1521,
														"name": "pay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "8995:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8985:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1530,
												"nodeType": "IfStatement",
												"src": "8981:83:7",
												"trueBody": {
													"id": 1529,
													"nodeType": "Block",
													"src": "9000:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1524,
																			"name": "accrued",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "9034:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1525,
																			"name": "pay",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "9044:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9034:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1523,
																	"name": "_sendToCreator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3158,
																	"src": "9019:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9019:29:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1528,
															"nodeType": "ExpressionStatement",
															"src": "9019:29:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d54d6ddb",
									"id": 1532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimCommunity",
									"nameLocation": "7337:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "7357:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "7352:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7352:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7351:14:7"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7375:0:7"
									},
									"scope": 2316,
									"src": "7328:1747:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "9189:332:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1541,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2544,
																"src": "9204:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																}
															},
															"id": 1543,
															"indexExpression": {
																"id": 1542,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "9210:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9204:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage",
																"typeString": "struct Storage.User storage ref"
															}
														},
														"id": 1544,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9219:2:7",
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2455,
														"src": "9204:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9225:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9204:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1551,
												"nodeType": "IfStatement",
												"src": "9200:41:7",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "30",
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9236:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9239:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1549,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9235:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
															"typeString": "tuple(int_const 0,int_const 0)"
														}
													},
													"functionReturnParameters": 1540,
													"id": 1550,
													"nodeType": "Return",
													"src": "9228:13:7"
												}
											},
											{
												"assignments": [
													1553
												],
												"declarations": [
													{
														"constant": false,
														"id": 1553,
														"mutability": "mutable",
														"name": "acc",
														"nameLocation": "9260:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1590,
														"src": "9252:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9252:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1555,
												"initialValue": {
													"id": 1554,
													"name": "communityAccPerUser",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2383,
													"src": "9266:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9252:33:7"
											},
											{
												"assignments": [
													1557
												],
												"declarations": [
													{
														"constant": false,
														"id": 1557,
														"mutability": "mutable",
														"name": "debt",
														"nameLocation": "9304:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1590,
														"src": "9296:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1556,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9296:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1561,
												"initialValue": {
													"baseExpression": {
														"id": 1558,
														"name": "communityDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2387,
														"src": "9311:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1560,
													"indexExpression": {
														"id": 1559,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "9325:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9311:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9296:37:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1562,
														"name": "acc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "9348:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1563,
														"name": "debt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "9355:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9348:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1569,
												"nodeType": "IfStatement",
												"src": "9344:30:7",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "30",
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9369:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9372:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1567,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9368:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
															"typeString": "tuple(int_const 0,int_const 0)"
														}
													},
													"functionReturnParameters": 1540,
													"id": 1568,
													"nodeType": "Return",
													"src": "9361:13:7"
												}
											},
											{
												"assignments": [
													1571
												],
												"declarations": [
													{
														"constant": false,
														"id": 1571,
														"mutability": "mutable",
														"name": "gross",
														"nameLocation": "9390:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1590,
														"src": "9385:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1570,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9385:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1578,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1572,
																	"name": "acc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1553,
																	"src": "9399:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1573,
																	"name": "debt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1557,
																	"src": "9405:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9399:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1575,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9398:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1576,
														"name": "ACC_PRECISION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "9413:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9398:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9385:41:7"
											},
											{
												"assignments": [
													1580
												],
												"declarations": [
													{
														"constant": false,
														"id": 1580,
														"mutability": "mutable",
														"name": "net",
														"nameLocation": "9442:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1590,
														"src": "9437:8:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1579,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9437:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1585,
												"initialValue": {
													"arguments": [
														{
															"id": 1582,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "9468:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1583,
															"name": "gross",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "9477:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1581,
														"name": "_applyGlobalCapping",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "9448:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9448:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9437:46:7"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1586,
															"name": "gross",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "9502:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1587,
															"name": "net",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "9509:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1588,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9501:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1540,
												"id": 1589,
												"nodeType": "Return",
												"src": "9494:19:7"
											}
										]
									},
									"functionSelector": "24513088",
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingCommunity",
									"nameLocation": "9094:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "9116:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "9111:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9111:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9110:14:7"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "pendingGross",
												"nameLocation": "9153:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "9148:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9148:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "pendingAfterCap",
												"nameLocation": "9172:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "9167:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9167:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9147:41:7"
									},
									"scope": 2316,
									"src": "9085:436:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "9593:1437:7",
										"statements": [
											{
												"assignments": [
													1599
												],
												"declarations": [
													{
														"constant": false,
														"id": 1599,
														"mutability": "mutable",
														"name": "isFound",
														"nameLocation": "9609:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1759,
														"src": "9604:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1598,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9604:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1600,
												"nodeType": "VariableDeclarationStatement",
												"src": "9604:12:7"
											},
											{
												"assignments": [
													1602
												],
												"declarations": [
													{
														"constant": false,
														"id": 1602,
														"mutability": "mutable",
														"name": "uplineId",
														"nameLocation": "9632:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1759,
														"src": "9627:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1601,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9627:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1603,
												"nodeType": "VariableDeclarationStatement",
												"src": "9627:13:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1604,
															"name": "matrixDirect",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2566,
															"src": "9731:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1606,
														"indexExpression": {
															"id": 1605,
															"name": "_sponsorId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "9744:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9731:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "32",
														"id": 1607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9758:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "9731:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1717,
													"nodeType": "Block",
													"src": "9913:815:7",
													"statements": [
														{
															"body": {
																"id": 1715,
																"nodeType": "Block",
																"src": "10044:673:7",
																"statements": [
																	{
																		"condition": {
																			"id": 1637,
																			"name": "isFound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1599,
																			"src": "10111:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1639,
																		"nodeType": "IfStatement",
																		"src": "10108:17:7",
																		"trueBody": {
																			"id": 1638,
																			"nodeType": "Break",
																			"src": "10120:5:7"
																		}
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 1640,
																							"name": "teams",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2562,
																							"src": "10147:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																								"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																							}
																						},
																						"id": 1642,
																						"indexExpression": {
																							"id": 1641,
																							"name": "_sponsorId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1595,
																							"src": "10153:10:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10147:17:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																							"typeString": "mapping(uint256 => uint256[] storage ref)"
																						}
																					},
																					"id": 1646,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1645,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1643,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1628,
																							"src": "10165:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1644,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10167:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "10165:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10147:22:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 1647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10170:6:7",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "10147:29:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "32",
																					"id": 1648,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10179:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1651,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1649,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1628,
																								"src": "10185:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"hexValue": "32",
																								"id": 1650,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "10187:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"src": "10185:3:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1652,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "10184:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10179:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10147:42:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1714,
																		"nodeType": "IfStatement",
																		"src": "10144:558:7",
																		"trueBody": {
																			"id": 1713,
																			"nodeType": "Block",
																			"src": "10191:511:7",
																			"statements": [
																				{
																					"body": {
																						"id": 1711,
																						"nodeType": "Block",
																						"src": "10264:419:7",
																						"statements": [
																							{
																								"condition": {
																									"id": 1670,
																									"name": "isFound",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1599,
																									"src": "10292:7:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1672,
																								"nodeType": "IfStatement",
																								"src": "10289:17:7",
																								"trueBody": {
																									"id": 1671,
																									"nodeType": "Break",
																									"src": "10301:5:7"
																								}
																							},
																							{
																								"assignments": [
																									1674
																								],
																								"declarations": [
																									{
																										"constant": false,
																										"id": 1674,
																										"mutability": "mutable",
																										"name": "temp",
																										"nameLocation": "10338:4:7",
																										"nodeType": "VariableDeclaration",
																										"scope": 1711,
																										"src": "10333:9:7",
																										"stateVariable": false,
																										"storageLocation": "default",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"typeName": {
																											"id": 1673,
																											"name": "uint",
																											"nodeType": "ElementaryTypeName",
																											"src": "10333:4:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"visibility": "internal"
																									}
																								],
																								"id": 1682,
																								"initialValue": {
																									"baseExpression": {
																										"baseExpression": {
																											"baseExpression": {
																												"id": 1675,
																												"name": "teams",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2562,
																												"src": "10345:5:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																													"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																												}
																											},
																											"id": 1677,
																											"indexExpression": {
																												"id": 1676,
																												"name": "_sponsorId",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1595,
																												"src": "10351:10:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "10345:17:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																												"typeString": "mapping(uint256 => uint256[] storage ref)"
																											}
																										},
																										"id": 1679,
																										"indexExpression": {
																											"id": 1678,
																											"name": "i",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1628,
																											"src": "10363:1:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "10345:20:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																											"typeString": "uint256[] storage ref"
																										}
																									},
																									"id": 1681,
																									"indexExpression": {
																										"id": 1680,
																										"name": "j",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1656,
																										"src": "10366:1:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "10345:23:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "VariableDeclarationStatement",
																								"src": "10333:35:7"
																							},
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1687,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"baseExpression": {
																											"id": 1683,
																											"name": "matrixDirect",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2566,
																											"src": "10398:12:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 1685,
																										"indexExpression": {
																											"id": 1684,
																											"name": "temp",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1674,
																											"src": "10411:4:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "10398:18:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "<",
																									"rightExpression": {
																										"hexValue": "32",
																										"id": 1686,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "10419:1:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"src": "10398:22:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1710,
																								"nodeType": "IfStatement",
																								"src": "10395:264:7",
																								"trueBody": {
																									"id": 1709,
																									"nodeType": "Block",
																									"src": "10422:237:7",
																									"statements": [
																										{
																											"expression": {
																												"id": 1693,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftHandSide": {
																													"expression": {
																														"baseExpression": {
																															"id": 1688,
																															"name": "users",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 2544,
																															"src": "10453:5:7",
																															"typeDescriptions": {
																																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																																"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																															}
																														},
																														"id": 1690,
																														"indexExpression": {
																															"id": 1689,
																															"name": "_newUserId",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 1593,
																															"src": "10459:10:7",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"isConstant": false,
																														"isLValue": true,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "IndexAccess",
																														"src": "10453:17:7",
																														"typeDescriptions": {
																															"typeIdentifier": "t_struct$_User_$2488_storage",
																															"typeString": "struct Storage.User storage ref"
																														}
																													},
																													"id": 1691,
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": true,
																													"memberLocation": "10471:8:7",
																													"memberName": "uplineId",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 2459,
																													"src": "10453:26:7",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "Assignment",
																												"operator": "=",
																												"rightHandSide": {
																													"id": 1692,
																													"name": "temp",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1674,
																													"src": "10482:4:7",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "10453:33:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1694,
																											"nodeType": "ExpressionStatement",
																											"src": "10453:33:7"
																										},
																										{
																											"expression": {
																												"id": 1699,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftHandSide": {
																													"baseExpression": {
																														"id": 1695,
																														"name": "matrixDirect",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2566,
																														"src": "10517:12:7",
																														"typeDescriptions": {
																															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																															"typeString": "mapping(uint256 => uint256)"
																														}
																													},
																													"id": 1697,
																													"indexExpression": {
																														"id": 1696,
																														"name": "temp",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1674,
																														"src": "10530:4:7",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": true,
																													"nodeType": "IndexAccess",
																													"src": "10517:18:7",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "Assignment",
																												"operator": "+=",
																												"rightHandSide": {
																													"hexValue": "31",
																													"id": 1698,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "10539:1:7",
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_1_by_1",
																														"typeString": "int_const 1"
																													},
																													"value": "1"
																												},
																												"src": "10517:23:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1700,
																											"nodeType": "ExpressionStatement",
																											"src": "10517:23:7"
																										},
																										{
																											"expression": {
																												"id": 1703,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftHandSide": {
																													"id": 1701,
																													"name": "uplineId",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1602,
																													"src": "10571:8:7",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "Assignment",
																												"operator": "=",
																												"rightHandSide": {
																													"id": 1702,
																													"name": "temp",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1674,
																													"src": "10582:4:7",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "10571:15:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1704,
																											"nodeType": "ExpressionStatement",
																											"src": "10571:15:7"
																										},
																										{
																											"expression": {
																												"id": 1707,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftHandSide": {
																													"id": 1705,
																													"name": "isFound",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1599,
																													"src": "10617:7:7",
																													"typeDescriptions": {
																														"typeIdentifier": "t_bool",
																														"typeString": "bool"
																													}
																												},
																												"nodeType": "Assignment",
																												"operator": "=",
																												"rightHandSide": {
																													"hexValue": "74727565",
																													"id": 1706,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "bool",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "10627:4:7",
																													"typeDescriptions": {
																														"typeIdentifier": "t_bool",
																														"typeString": "bool"
																													},
																													"value": "true"
																												},
																												"src": "10617:14:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												}
																											},
																											"id": 1708,
																											"nodeType": "ExpressionStatement",
																											"src": "10617:14:7"
																										}
																									]
																								}
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1666,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1659,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1656,
																							"src": "10228:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"baseExpression": {
																										"id": 1660,
																										"name": "teams",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2562,
																										"src": "10230:5:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																											"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																										}
																									},
																									"id": 1662,
																									"indexExpression": {
																										"id": 1661,
																										"name": "_sponsorId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1595,
																										"src": "10236:10:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "10230:17:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																										"typeString": "mapping(uint256 => uint256[] storage ref)"
																									}
																								},
																								"id": 1664,
																								"indexExpression": {
																									"id": 1663,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1628,
																									"src": "10248:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "10230:20:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																									"typeString": "uint256[] storage ref"
																								}
																							},
																							"id": 1665,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10251:6:7",
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "10230:27:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "10228:29:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1712,
																					"initializationExpression": {
																						"assignments": [
																							1656
																						],
																						"declarations": [
																							{
																								"constant": false,
																								"id": 1656,
																								"mutability": "mutable",
																								"name": "j",
																								"nameLocation": "10223:1:7",
																								"nodeType": "VariableDeclaration",
																								"scope": 1712,
																								"src": "10218:6:7",
																								"stateVariable": false,
																								"storageLocation": "default",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"typeName": {
																									"id": 1655,
																									"name": "uint",
																									"nodeType": "ElementaryTypeName",
																									"src": "10218:4:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"visibility": "internal"
																							}
																						],
																						"id": 1658,
																						"initialValue": {
																							"hexValue": "30",
																							"id": 1657,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10225:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"nodeType": "VariableDeclarationStatement",
																						"src": "10218:8:7"
																					},
																					"isSimpleCounterLoop": true,
																					"loopExpression": {
																						"expression": {
																							"id": 1668,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "10259:3:7",
																							"subExpression": {
																								"id": 1667,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1656,
																								"src": "10259:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1669,
																						"nodeType": "ExpressionStatement",
																						"src": "10259:3:7"
																					},
																					"nodeType": "ForStatement",
																					"src": "10214:469:7"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1631,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1628,
																	"src": "10026:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1632,
																	"name": "maxLayers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2343,
																	"src": "10028:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10026:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1716,
															"initializationExpression": {
																"assignments": [
																	1628
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1628,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "10021:1:7",
																		"nodeType": "VariableDeclaration",
																		"scope": 1716,
																		"src": "10016:6:7",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1627,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "10016:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1630,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10023:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "10016:8:7"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "10039:3:7",
																	"subExpression": {
																		"id": 1634,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "10039:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1636,
																"nodeType": "ExpressionStatement",
																"src": "10039:3:7"
															},
															"nodeType": "ForStatement",
															"src": "10012:705:7"
														}
													]
												},
												"id": 1718,
												"nodeType": "IfStatement",
												"src": "9728:1000:7",
												"trueBody": {
													"id": 1626,
													"nodeType": "Block",
													"src": "9761:146:7",
													"statements": [
														{
															"expression": {
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1609,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2544,
																			"src": "9776:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																				"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																			}
																		},
																		"id": 1611,
																		"indexExpression": {
																			"id": 1610,
																			"name": "_newUserId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1593,
																			"src": "9782:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9776:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage",
																			"typeString": "struct Storage.User storage ref"
																		}
																	},
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9794:8:7",
																	"memberName": "uplineId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2459,
																	"src": "9776:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1613,
																	"name": "_sponsorId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "9805:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9776:39:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1615,
															"nodeType": "ExpressionStatement",
															"src": "9776:39:7"
														},
														{
															"expression": {
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1616,
																		"name": "matrixDirect",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2566,
																		"src": "9830:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1618,
																	"indexExpression": {
																		"id": 1617,
																		"name": "_sponsorId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "9843:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9830:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9858:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9830:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1621,
															"nodeType": "ExpressionStatement",
															"src": "9830:29:7"
														},
														{
															"expression": {
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1622,
																	"name": "uplineId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "9874:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1623,
																	"name": "_sponsorId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "9885:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9874:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1625,
															"nodeType": "ExpressionStatement",
															"src": "9874:21:7"
														}
													]
												}
											},
											{
												"body": {
													"id": 1757,
													"nodeType": "Block",
													"src": "10822:201:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1729,
																	"name": "uplineId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "10840:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10852:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10840:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1733,
															"nodeType": "IfStatement",
															"src": "10837:23:7",
															"trueBody": {
																"id": 1732,
																"nodeType": "Break",
																"src": "10855:5:7"
															}
														},
														{
															"expression": {
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1734,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2544,
																			"src": "10875:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																				"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																			}
																		},
																		"id": 1736,
																		"indexExpression": {
																			"id": 1735,
																			"name": "uplineId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1602,
																			"src": "10881:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10875:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage",
																			"typeString": "struct Storage.User storage ref"
																		}
																	},
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10891:15:7",
																	"memberName": "totalMatrixTeam",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2467,
																	"src": "10875:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10910:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10875:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1740,
															"nodeType": "ExpressionStatement",
															"src": "10875:36:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1747,
																		"name": "_newUserId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1593,
																		"src": "10950:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 1741,
																				"name": "teams",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2562,
																				"src": "10926:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																					"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																				}
																			},
																			"id": 1744,
																			"indexExpression": {
																				"id": 1742,
																				"name": "uplineId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1602,
																				"src": "10932:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10926:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																				"typeString": "mapping(uint256 => uint256[] storage ref)"
																			}
																		},
																		"id": 1745,
																		"indexExpression": {
																			"id": 1743,
																			"name": "k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1720,
																			"src": "10942:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10926:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10945:4:7",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "10926:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 1748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10926:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1749,
															"nodeType": "ExpressionStatement",
															"src": "10926:35:7"
														},
														{
															"expression": {
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1750,
																	"name": "uplineId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "10976:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1751,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2544,
																			"src": "10987:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																				"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																			}
																		},
																		"id": 1753,
																		"indexExpression": {
																			"id": 1752,
																			"name": "uplineId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1602,
																			"src": "10993:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10987:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage",
																			"typeString": "struct Storage.User storage ref"
																		}
																	},
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11003:8:7",
																	"memberName": "uplineId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2459,
																	"src": "10987:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10976:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1756,
															"nodeType": "ExpressionStatement",
															"src": "10976:35:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1723,
														"name": "k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "10804:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1724,
														"name": "maxLayers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2343,
														"src": "10806:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10804:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1758,
												"initializationExpression": {
													"assignments": [
														1720
													],
													"declarations": [
														{
															"constant": false,
															"id": 1720,
															"mutability": "mutable",
															"name": "k",
															"nameLocation": "10799:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1758,
															"src": "10794:6:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1719,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "10794:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1722,
													"initialValue": {
														"hexValue": "30",
														"id": 1721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10801:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10794:8:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10817:3:7",
														"subExpression": {
															"id": 1726,
															"name": "k",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "10817:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1728,
													"nodeType": "ExpressionStatement",
													"src": "10817:3:7"
												},
												"nodeType": "ForStatement",
												"src": "10790:233:7"
											}
										]
									},
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_placeInMatrix",
									"nameLocation": "9536:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "_newUserId",
												"nameLocation": "9556:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "9551:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9551:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "_sponsorId",
												"nameLocation": "9573:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "9568:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9568:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9550:34:7"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9593:0:7"
									},
									"scope": 2316,
									"src": "9527:1503:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1845,
										"nodeType": "Block",
										"src": "11149:1127:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1771,
															"name": "_sponsorId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "11164:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11178:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11164:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1774,
															"name": "_sponsorId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "11183:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1775,
															"name": "defaultRefId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "11197:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11183:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11164:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1784,
												"nodeType": "IfStatement",
												"src": "11160:122:7",
												"trueBody": {
													"id": 1783,
													"nodeType": "Block",
													"src": "11211:71:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1779,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1766,
																		"src": "11241:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1778,
																	"name": "_sendToCreator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3158,
																	"src": "11226:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11226:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1781,
															"nodeType": "ExpressionStatement",
															"src": "11226:23:7"
														},
														{
															"functionReturnParameters": 1770,
															"id": 1782,
															"nodeType": "Return",
															"src": "11264:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													1787
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "sponsor",
														"nameLocation": "11315:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1845,
														"src": "11302:20:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 1786,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1785,
																"name": "User",
																"nameLocations": [
																	"11302:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2488,
																"src": "11302:4:7"
															},
															"referencedDeclaration": 2488,
															"src": "11302:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1791,
												"initialValue": {
													"baseExpression": {
														"id": 1788,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2544,
														"src": "11325:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 1790,
													"indexExpression": {
														"id": 1789,
														"name": "_sponsorId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1762,
														"src": "11331:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11325:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2488_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11302:40:7"
											},
											{
												"assignments": [
													1794
												],
												"declarations": [
													{
														"constant": false,
														"id": 1794,
														"mutability": "mutable",
														"name": "sponsorIncome",
														"nameLocation": "11680:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1845,
														"src": "11661:32:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
															"typeString": "struct Storage.UserIncome"
														},
														"typeName": {
															"id": 1793,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1792,
																"name": "UserIncome",
																"nameLocations": [
																	"11661:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2513,
																"src": "11661:10:7"
															},
															"referencedDeclaration": 2513,
															"src": "11661:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																"typeString": "struct Storage.UserIncome"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1798,
												"initialValue": {
													"baseExpression": {
														"id": 1795,
														"name": "userIncomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2549,
														"src": "11696:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2513_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
														}
													},
													"id": 1797,
													"indexExpression": {
														"id": 1796,
														"name": "_sponsorId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1762,
														"src": "11708:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11696:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIncome_$2513_storage",
														"typeString": "struct Storage.UserIncome storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11661:58:7"
											},
											{
												"expression": {
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1799,
															"name": "sponsorIncome",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "11730:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 1801,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11744:11:7",
														"memberName": "totalIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2490,
														"src": "11730:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1802,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "11759:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11730:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1804,
												"nodeType": "ExpressionStatement",
												"src": "11730:36:7"
											},
											{
												"expression": {
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1805,
															"name": "sponsorIncome",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "11777:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11791:13:7",
														"memberName": "sponsorIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2492,
														"src": "11777:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1808,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "11808:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11777:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1810,
												"nodeType": "ExpressionStatement",
												"src": "11777:38:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1814,
																"name": "sponsor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1787,
																"src": "11840:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11848:7:7",
															"memberName": "account",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2447,
															"src": "11840:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1816,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "11857:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1811,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "11826:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11831:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 199,
														"src": "11826:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11826:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1818,
												"nodeType": "ExpressionStatement",
												"src": "11826:39:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1824,
																	"name": "_fromId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "11969:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1825,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "11999:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1826,
																	"name": "_packageLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "12035:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1827,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "12074:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12080:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "12074:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "31",
																	"id": 1829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12116:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"id": 1823,
																"name": "Income",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2524,
																"src": "11935:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Income_$2524_storage_ptr_$",
																	"typeString": "type(struct Storage.Income storage pointer)"
																}
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"11957:10:7",
																"11991:6:7",
																"12021:12:7",
																"12063:9:7",
																"12104:10:7"
															],
															"names": [
																"fromUserId",
																"amount",
																"packageLevel",
																"timestamp",
																"incomeType"
															],
															"nodeType": "FunctionCall",
															"src": "11935:212:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Income_$2524_memory_ptr",
																"typeString": "struct Storage.Income memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Income_$2524_memory_ptr",
																"typeString": "struct Storage.Income memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1819,
																"name": "incomeHistory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2555,
																"src": "11904:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$2524_storage_$dyn_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.Income storage ref[] storage ref)"
																}
															},
															"id": 1821,
															"indexExpression": {
																"id": 1820,
																"name": "_sponsorId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "11918:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11904:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Income_$2524_storage_$dyn_storage",
																"typeString": "struct Storage.Income storage ref[] storage ref"
															}
														},
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11930:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "11904:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Income_$2524_storage_$dyn_storage_ptr_$_t_struct$_Income_$2524_storage_$returns$__$attached_to$_t_array$_t_struct$_Income_$2524_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Storage.Income storage ref[] storage pointer,struct Storage.Income storage ref)"
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11904:244:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1832,
												"nodeType": "ExpressionStatement",
												"src": "11904:244:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1834,
																"name": "sponsor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1787,
																"src": "12192:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12200:7:7",
															"memberName": "account",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2447,
															"src": "12192:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1836,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2544,
																	"src": "12209:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 1838,
																"indexExpression": {
																	"id": 1837,
																	"name": "_fromId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "12215:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12209:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12224:7:7",
															"memberName": "account",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2447,
															"src": "12209:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1840,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "12233:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1841,
															"name": "_packageLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "12242:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12257:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1833,
														"name": "IncomeDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2627,
														"src": "12174:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12174:85:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1844,
												"nodeType": "EmitStatement",
												"src": "12169:90:7"
											}
										]
									},
									"id": 1846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributeSponsorIncome",
									"nameLocation": "11051:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "_sponsorId",
												"nameLocation": "11081:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "11076:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11076:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "_fromId",
												"nameLocation": "11098:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "11093:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11093:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "11112:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "11107:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11107:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "_packageLevel",
												"nameLocation": "11126:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "11121:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11121:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11075:65:7"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11149:0:7"
									},
									"scope": 2316,
									"src": "11042:1234:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2008,
										"nodeType": "Block",
										"src": "12393:1978:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1857,
															"name": "_uplineId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "12576:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1858,
															"name": "defaultRefId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "12589:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12576:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1860,
															"name": "_uplineId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "12605:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12618:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12605:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12576:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1870,
												"nodeType": "IfStatement",
												"src": "12573:128:7",
												"trueBody": {
													"id": 1869,
													"nodeType": "Block",
													"src": "12630:71:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1865,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1852,
																		"src": "12660:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1864,
																	"name": "_sendToCreator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3158,
																	"src": "12645:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12645:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1867,
															"nodeType": "ExpressionStatement",
															"src": "12645:23:7"
														},
														{
															"functionReturnParameters": 1856,
															"id": 1868,
															"nodeType": "Return",
															"src": "12683:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													1872
												],
												"declarations": [
													{
														"constant": false,
														"id": 1872,
														"mutability": "mutable",
														"name": "targetId",
														"nameLocation": "12723:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 2008,
														"src": "12718:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1871,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12718:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1874,
												"initialValue": {
													"id": 1873,
													"name": "_uplineId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1848,
													"src": "12734:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12718:25:7"
											},
											{
												"body": {
													"id": 1906,
													"nodeType": "Block",
													"src": "12795:252:7",
													"statements": [
														{
															"expression": {
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1885,
																	"name": "targetId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1872,
																	"src": "12810:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1886,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2544,
																			"src": "12821:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																				"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																			}
																		},
																		"id": 1888,
																		"indexExpression": {
																			"id": 1887,
																			"name": "targetId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1872,
																			"src": "12827:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12821:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage",
																			"typeString": "struct Storage.User storage ref"
																		}
																	},
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12837:8:7",
																	"memberName": "uplineId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2459,
																	"src": "12821:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12810:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1891,
															"nodeType": "ExpressionStatement",
															"src": "12810:35:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1892,
																		"name": "targetId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1872,
																		"src": "12864:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12876:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "12864:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1895,
																		"name": "targetId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1872,
																		"src": "12881:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1896,
																		"name": "defaultRefId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2338,
																		"src": "12893:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12881:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "12864:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1905,
															"nodeType": "IfStatement",
															"src": "12860:176:7",
															"trueBody": {
																"id": 1904,
																"nodeType": "Block",
																"src": "12907:129:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1900,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1852,
																					"src": "12987:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1899,
																				"name": "_sendToCreator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3158,
																				"src": "12972:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 1901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12972:23:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1902,
																		"nodeType": "ExpressionStatement",
																		"src": "12972:23:7"
																	},
																	{
																		"functionReturnParameters": 1856,
																		"id": 1903,
																		"nodeType": "Return",
																		"src": "13014:7:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1879,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1876,
														"src": "12771:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1880,
														"name": "_packageLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "12775:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12771:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1907,
												"initializationExpression": {
													"assignments": [
														1876
													],
													"declarations": [
														{
															"constant": false,
															"id": 1876,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12764:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1907,
															"src": "12759:6:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1875,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "12759:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1878,
													"initialValue": {
														"hexValue": "31",
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12768:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12759:10:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "12790:3:7",
														"subExpression": {
															"id": 1882,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "12792:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1884,
													"nodeType": "ExpressionStatement",
													"src": "12790:3:7"
												},
												"nodeType": "ForStatement",
												"src": "12754:293:7"
											},
											{
												"assignments": [
													1909
												],
												"declarations": [
													{
														"constant": false,
														"id": 1909,
														"mutability": "mutable",
														"name": "currentId",
														"nameLocation": "13062:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 2008,
														"src": "13057:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1908,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13057:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1911,
												"initialValue": {
													"id": 1910,
													"name": "targetId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1872,
													"src": "13074:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13057:25:7"
											},
											{
												"assignments": [
													1913
												],
												"declarations": [
													{
														"constant": false,
														"id": 1913,
														"mutability": "mutable",
														"name": "layer",
														"nameLocation": "13098:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 2008,
														"src": "13093:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1912,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13093:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1915,
												"initialValue": {
													"hexValue": "30",
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13106:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13093:14:7"
											},
											{
												"body": {
													"id": 2002,
													"nodeType": "Block",
													"src": "13191:1065:7",
													"statements": [
														{
															"assignments": [
																1929
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1929,
																	"mutability": "mutable",
																	"name": "up",
																	"nameLocation": "13219:2:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2002,
																	"src": "13206:15:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																		"typeString": "struct Storage.User"
																	},
																	"typeName": {
																		"id": 1928,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1927,
																			"name": "User",
																			"nameLocations": [
																				"13206:4:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2488,
																			"src": "13206:4:7"
																		},
																		"referencedDeclaration": 2488,
																		"src": "13206:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1933,
															"initialValue": {
																"baseExpression": {
																	"id": 1930,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2544,
																	"src": "13224:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 1932,
																"indexExpression": {
																	"id": 1931,
																	"name": "currentId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1909,
																	"src": "13230:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13224:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13206:34:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1934,
																		"name": "up",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1929,
																		"src": "13338:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1935,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13341:5:7",
																	"memberName": "level",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2461,
																	"src": "13338:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1936,
																	"name": "_packageLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1854,
																	"src": "13350:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13338:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1993,
															"nodeType": "IfStatement",
															"src": "13334:801:7",
															"trueBody": {
																"id": 1992,
																"nodeType": "Block",
																"src": "13404:731:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1941,
																						"name": "up",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1929,
																						"src": "13498:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																							"typeString": "struct Storage.User storage pointer"
																						}
																					},
																					"id": 1942,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "13501:7:7",
																					"memberName": "account",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2447,
																					"src": "13498:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1943,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1852,
																					"src": "13510:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1938,
																					"name": "usdt",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2330,
																					"src": "13484:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$232",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13489:8:7",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 199,
																				"src": "13484:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13484:34:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1945,
																		"nodeType": "ExpressionStatement",
																		"src": "13484:34:7"
																	},
																	{
																		"assignments": [
																			1948
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1948,
																				"mutability": "mutable",
																				"name": "inc",
																				"nameLocation": "13558:3:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1992,
																				"src": "13539:22:7",
																				"stateVariable": false,
																				"storageLocation": "storage",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																					"typeString": "struct Storage.UserIncome"
																				},
																				"typeName": {
																					"id": 1947,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1946,
																						"name": "UserIncome",
																						"nameLocations": [
																							"13539:10:7"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 2513,
																						"src": "13539:10:7"
																					},
																					"referencedDeclaration": 2513,
																					"src": "13539:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																						"typeString": "struct Storage.UserIncome"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1952,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1949,
																				"name": "userIncomes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2549,
																				"src": "13564:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2513_storage_$",
																					"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
																				}
																			},
																			"id": 1951,
																			"indexExpression": {
																				"id": 1950,
																				"name": "currentId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1909,
																				"src": "13576:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13564:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserIncome_$2513_storage",
																				"typeString": "struct Storage.UserIncome storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13539:47:7"
																	},
																	{
																		"expression": {
																			"id": 1957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1953,
																					"name": "inc",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1948,
																					"src": "13605:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																						"typeString": "struct Storage.UserIncome storage pointer"
																					}
																				},
																				"id": 1955,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "13609:11:7",
																				"memberName": "totalIncome",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2490,
																				"src": "13605:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1956,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1852,
																				"src": "13624:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13605:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1958,
																		"nodeType": "ExpressionStatement",
																		"src": "13605:26:7"
																	},
																	{
																		"expression": {
																			"id": 1963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1959,
																					"name": "inc",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1948,
																					"src": "13650:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																						"typeString": "struct Storage.UserIncome storage pointer"
																					}
																				},
																				"id": 1961,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "13654:12:7",
																				"memberName": "matrixIncome",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2494,
																				"src": "13650:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1962,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1852,
																				"src": "13670:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13650:27:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1964,
																		"nodeType": "ExpressionStatement",
																		"src": "13650:27:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1970,
																							"name": "_fromId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1850,
																							"src": "13770:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 1971,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1852,
																							"src": "13808:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 1972,
																							"name": "_packageLevel",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1854,
																							"src": "13852:13:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"expression": {
																								"id": 1973,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "13899:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1974,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "13905:9:7",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "13899:15:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"hexValue": "32",
																							"id": 1975,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13949:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							}
																						],
																						"id": 1969,
																						"name": "Income",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2524,
																						"src": "13728:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_struct$_Income_$2524_storage_ptr_$",
																							"typeString": "type(struct Storage.Income storage pointer)"
																						}
																					},
																					"id": 1976,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "structConstructorCall",
																					"lValueRequested": false,
																					"nameLocations": [
																						"13758:10:7",
																						"13800:6:7",
																						"13838:12:7",
																						"13888:9:7",
																						"13937:10:7"
																					],
																					"names": [
																						"fromUserId",
																						"amount",
																						"packageLevel",
																						"timestamp",
																						"incomeType"
																					],
																					"nodeType": "FunctionCall",
																					"src": "13728:259:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Income_$2524_memory_ptr",
																						"typeString": "struct Storage.Income memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Income_$2524_memory_ptr",
																						"typeString": "struct Storage.Income memory"
																					}
																				],
																				"expression": {
																					"baseExpression": {
																						"id": 1965,
																						"name": "incomeHistory",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2555,
																						"src": "13698:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$2524_storage_$dyn_storage_$",
																							"typeString": "mapping(uint256 => struct Storage.Income storage ref[] storage ref)"
																						}
																					},
																					"id": 1967,
																					"indexExpression": {
																						"id": 1966,
																						"name": "currentId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1909,
																						"src": "13712:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "13698:24:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Income_$2524_storage_$dyn_storage",
																						"typeString": "struct Storage.Income storage ref[] storage ref"
																					}
																				},
																				"id": 1968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13723:4:7",
																				"memberName": "push",
																				"nodeType": "MemberAccess",
																				"src": "13698:29:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Income_$2524_storage_$dyn_storage_ptr_$_t_struct$_Income_$2524_storage_$returns$__$attached_to$_t_array$_t_struct$_Income_$2524_storage_$dyn_storage_ptr_$",
																					"typeString": "function (struct Storage.Income storage ref[] storage pointer,struct Storage.Income storage ref)"
																				}
																			},
																			"id": 1977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13698:290:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1978,
																		"nodeType": "ExpressionStatement",
																		"src": "13698:290:7"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1980,
																						"name": "up",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1929,
																						"src": "14032:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																							"typeString": "struct Storage.User storage pointer"
																						}
																					},
																					"id": 1981,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "14035:7:7",
																					"memberName": "account",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2447,
																					"src": "14032:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1982,
																							"name": "users",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2544,
																							"src": "14044:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																								"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																							}
																						},
																						"id": 1984,
																						"indexExpression": {
																							"id": 1983,
																							"name": "_fromId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1850,
																							"src": "14050:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "14044:14:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$2488_storage",
																							"typeString": "struct Storage.User storage ref"
																						}
																					},
																					"id": 1985,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "14059:7:7",
																					"memberName": "account",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2447,
																					"src": "14044:22:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1986,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1852,
																					"src": "14068:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1987,
																					"name": "_packageLevel",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1854,
																					"src": "14077:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "32",
																					"id": 1988,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14092:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					}
																				],
																				"id": 1979,
																				"name": "IncomeDistributed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2627,
																				"src": "14014:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256,uint256,uint256)"
																				}
																			},
																			"id": 1989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14014:80:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1990,
																		"nodeType": "EmitStatement",
																		"src": "14009:85:7"
																	},
																	{
																		"functionReturnParameters": 1856,
																		"id": 1991,
																		"nodeType": "Return",
																		"src": "14113:7:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1994,
																	"name": "currentId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1909,
																	"src": "14199:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1995,
																		"name": "up",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1929,
																		"src": "14211:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 1996,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14214:8:7",
																	"memberName": "uplineId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2459,
																	"src": "14211:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14199:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1998,
															"nodeType": "ExpressionStatement",
															"src": "14199:23:7"
														},
														{
															"expression": {
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "14237:7:7",
																"subExpression": {
																	"id": 1999,
																	"name": "layer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1913,
																	"src": "14237:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2001,
															"nodeType": "ExpressionStatement",
															"src": "14237:7:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1916,
																"name": "currentId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1909,
																"src": "13125:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13138:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13125:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1919,
																"name": "currentId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1909,
																"src": "13143:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1920,
																"name": "defaultRefId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2338,
																"src": "13156:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13143:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "13125:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1923,
															"name": "layer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1913,
															"src": "13172:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1924,
															"name": "maxLayers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "13180:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13172:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13125:64:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2003,
												"nodeType": "WhileStatement",
												"src": "13118:1138:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2005,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1852,
															"src": "14355:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2004,
														"name": "_sendToCreator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3158,
														"src": "14340:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14340:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "14340:23:7"
											}
										]
									},
									"id": 2009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributeMatrixIncome",
									"nameLocation": "12299:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "_uplineId",
												"nameLocation": "12328:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "12323:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12323:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "_fromId",
												"nameLocation": "12343:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "12338:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12338:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12356:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "12351:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12351:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "_packageLevel",
												"nameLocation": "12370:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "12365:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12365:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12322:62:7"
									},
									"returnParameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12393:0:7"
									},
									"scope": 2316,
									"src": "12290:2081:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2188,
										"nodeType": "Block",
										"src": "16602:2332:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2022,
																"name": "_startId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2011,
																"src": "16617:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16629:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16617:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2025,
																"name": "_startId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2011,
																"src": "16634:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2026,
																"name": "defaultRefId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2338,
																"src": "16646:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16634:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "16617:41:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2029,
															"name": "_maxLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "16662:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16675:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16662:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16617:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2039,
												"nodeType": "IfStatement",
												"src": "16613:136:7",
												"trueBody": {
													"id": 2038,
													"nodeType": "Block",
													"src": "16678:71:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2034,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2015,
																		"src": "16708:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2033,
																	"name": "_sendToCreator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3158,
																	"src": "16693:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16693:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2036,
															"nodeType": "ExpressionStatement",
															"src": "16693:23:7"
														},
														{
															"functionReturnParameters": 2021,
															"id": 2037,
															"nodeType": "Return",
															"src": "16731:7:7"
														}
													]
												}
											},
											{
												"assignments": [
													2041
												],
												"declarations": [
													{
														"constant": false,
														"id": 2041,
														"mutability": "mutable",
														"name": "amountPerLevel",
														"nameLocation": "16815:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 2188,
														"src": "16810:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2040,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16810:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2045,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2042,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "16832:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2043,
														"name": "_maxLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "16842:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16832:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16810:41:7"
											},
											{
												"assignments": [
													2047
												],
												"declarations": [
													{
														"constant": false,
														"id": 2047,
														"mutability": "mutable",
														"name": "remainder",
														"nameLocation": "16867:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 2188,
														"src": "16862:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2046,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16862:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2054,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2048,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "16879:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2049,
																	"name": "amountPerLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2041,
																	"src": "16890:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2050,
																	"name": "_maxLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2019,
																	"src": "16907:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16890:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2052,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16889:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16879:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16862:55:7"
											},
											{
												"assignments": [
													2056
												],
												"declarations": [
													{
														"constant": false,
														"id": 2056,
														"mutability": "mutable",
														"name": "currentId",
														"nameLocation": "17005:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 2188,
														"src": "17000:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2055,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17000:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2058,
												"initialValue": {
													"id": 2057,
													"name": "_startId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2011,
													"src": "17017:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17000:25:7"
											},
											{
												"assignments": [
													2060
												],
												"declarations": [
													{
														"constant": false,
														"id": 2060,
														"mutability": "mutable",
														"name": "totalDistributed",
														"nameLocation": "17041:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 2188,
														"src": "17036:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2059,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17036:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2062,
												"initialValue": {
													"hexValue": "30",
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17060:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17036:25:7"
											},
											{
												"assignments": [
													2064
												],
												"declarations": [
													{
														"constant": false,
														"id": 2064,
														"mutability": "mutable",
														"name": "PaidCount",
														"nameLocation": "17077:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 2188,
														"src": "17072:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2063,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17072:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2066,
												"initialValue": {
													"hexValue": "30",
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17089:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17072:18:7"
											},
											{
												"assignments": [
													2068
												],
												"declarations": [
													{
														"constant": false,
														"id": 2068,
														"mutability": "mutable",
														"name": "accumulatedShares",
														"nameLocation": "17106:17:7",
														"nodeType": "VariableDeclaration",
														"scope": 2188,
														"src": "17101:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2067,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17101:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2070,
												"initialValue": {
													"hexValue": "31",
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17126:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17101:26:7"
											},
											{
												"body": {
													"id": 2162,
													"nodeType": "Block",
													"src": "17216:1323:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2081,
																		"name": "currentId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "17278:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17291:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "17278:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2084,
																		"name": "currentId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "17296:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2085,
																		"name": "defaultRefId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2338,
																		"src": "17309:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17296:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "17278:43:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2104,
															"nodeType": "IfStatement",
															"src": "17274:276:7",
															"trueBody": {
																"id": 2103,
																"nodeType": "Block",
																"src": "17323:227:7",
																"statements": [
																	{
																		"assignments": [
																			2089
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2089,
																				"mutability": "mutable",
																				"name": "remaining",
																				"nameLocation": "17408:9:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 2103,
																				"src": "17403:14:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2088,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "17403:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2093,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2090,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2015,
																				"src": "17420:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2091,
																				"name": "totalDistributed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2060,
																				"src": "17430:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17420:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "17403:43:7"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2094,
																				"name": "remaining",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2089,
																				"src": "17469:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2095,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17481:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "17469:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2101,
																		"nodeType": "IfStatement",
																		"src": "17465:44:7",
																		"trueBody": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 2098,
																						"name": "remaining",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2089,
																						"src": "17499:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2097,
																					"name": "_sendToCreator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3158,
																					"src": "17484:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																						"typeString": "function (uint256)"
																					}
																				},
																				"id": 2099,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17484:25:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 2100,
																			"nodeType": "ExpressionStatement",
																			"src": "17484:25:7"
																		}
																	},
																	{
																		"functionReturnParameters": 2021,
																		"id": 2102,
																		"nodeType": "Return",
																		"src": "17528:7:7"
																	}
																]
															}
														},
														{
															"assignments": [
																2107
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2107,
																	"mutability": "mutable",
																	"name": "up",
																	"nameLocation": "17579:2:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2162,
																	"src": "17566:15:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																		"typeString": "struct Storage.User"
																	},
																	"typeName": {
																		"id": 2106,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2105,
																			"name": "User",
																			"nameLocations": [
																				"17566:4:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2488,
																			"src": "17566:4:7"
																		},
																		"referencedDeclaration": 2488,
																		"src": "17566:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2111,
															"initialValue": {
																"baseExpression": {
																	"id": 2108,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2544,
																	"src": "17584:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 2110,
																"indexExpression": {
																	"id": 2109,
																	"name": "currentId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2056,
																	"src": "17590:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17584:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17566:34:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2112,
																		"name": "up",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2107,
																		"src": "17621:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17624:5:7",
																	"memberName": "level",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2461,
																	"src": "17621:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 2114,
																	"name": "_packageLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2017,
																	"src": "17633:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17621:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2150,
																"nodeType": "Block",
																"src": "18046:201:7",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2142,
																				"name": "accumulatedShares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "18124:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2143,
																				"name": "_maxLevel",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2019,
																				"src": "18142:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18124:27:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2149,
																		"nodeType": "IfStatement",
																		"src": "18121:94:7",
																		"trueBody": {
																			"id": 2148,
																			"nodeType": "Block",
																			"src": "18152:63:7",
																			"statements": [
																				{
																					"expression": {
																						"id": 2146,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "18176:19:7",
																						"subExpression": {
																							"id": 2145,
																							"name": "accumulatedShares",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2068,
																							"src": "18176:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2147,
																					"nodeType": "ExpressionStatement",
																					"src": "18176:19:7"
																				}
																			]
																		}
																	}
																]
															},
															"id": 2151,
															"nodeType": "IfStatement",
															"src": "17617:630:7",
															"trueBody": {
																"id": 2141,
																"nodeType": "Block",
																"src": "17648:392:7",
																"statements": [
																	{
																		"assignments": [
																			2117
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2117,
																				"mutability": "mutable",
																				"name": "payout",
																				"nameLocation": "17746:6:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 2141,
																				"src": "17741:11:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2116,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "17741:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2121,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2118,
																				"name": "amountPerLevel",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2041,
																				"src": "17755:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2119,
																				"name": "accumulatedShares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "17772:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17755:34:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "17741:48:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2123,
																					"name": "currentId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2056,
																					"src": "17827:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2124,
																					"name": "_fromId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2013,
																					"src": "17838:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2125,
																					"name": "payout",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2117,
																					"src": "17847:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2126,
																					"name": "_packageLevel",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2017,
																					"src": "17855:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2122,
																				"name": "_payLevelBooster",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2259,
																				"src": "17810:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256,uint256,uint256)"
																				}
																			},
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17810:59:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2128,
																		"nodeType": "ExpressionStatement",
																		"src": "17810:59:7"
																	},
																	{
																		"expression": {
																			"id": 2131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2129,
																				"name": "totalDistributed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2060,
																				"src": "17890:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2130,
																				"name": "payout",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2117,
																				"src": "17910:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17890:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2132,
																		"nodeType": "ExpressionStatement",
																		"src": "17890:26:7"
																	},
																	{
																		"expression": {
																			"id": 2135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2133,
																				"name": "PaidCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2064,
																				"src": "17935:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2134,
																				"name": "accumulatedShares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "17948:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17935:30:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2136,
																		"nodeType": "ExpressionStatement",
																		"src": "17935:30:7"
																	},
																	{
																		"expression": {
																			"id": 2139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2137,
																				"name": "accumulatedShares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "17984:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 2138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18004:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "17984:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2140,
																		"nodeType": "ExpressionStatement",
																		"src": "17984:21:7"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2152,
																	"name": "PaidCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2064,
																	"src": "18327:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 2153,
																	"name": "_maxLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2019,
																	"src": "18340:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18327:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2156,
															"nodeType": "IfStatement",
															"src": "18323:33:7",
															"trueBody": {
																"id": 2155,
																"nodeType": "Break",
																"src": "18351:5:7"
															}
														},
														{
															"expression": {
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2157,
																	"name": "currentId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2056,
																	"src": "18504:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2158,
																		"name": "up",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2107,
																		"src": "18516:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18519:8:7",
																	"memberName": "uplineId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2459,
																	"src": "18516:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18504:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2161,
															"nodeType": "ExpressionStatement",
															"src": "18504:23:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2075,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2072,
														"src": "17181:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3330",
														"id": 2076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17185:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_30_by_1",
															"typeString": "int_const 30"
														},
														"value": "30"
													},
													"src": "17181:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2163,
												"initializationExpression": {
													"assignments": [
														2072
													],
													"declarations": [
														{
															"constant": false,
															"id": 2072,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17174:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 2163,
															"src": "17169:6:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2071,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "17169:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2074,
													"initialValue": {
														"hexValue": "30",
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17178:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17169:10:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "17189:3:7",
														"subExpression": {
															"id": 2078,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2072,
															"src": "17189:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2080,
													"nodeType": "ExpressionStatement",
													"src": "17189:3:7"
												},
												"nodeType": "ForStatement",
												"src": "17164:1375:7"
											},
											{
												"assignments": [
													2165
												],
												"declarations": [
													{
														"constant": false,
														"id": 2165,
														"mutability": "mutable",
														"name": "remainingAfterLoop",
														"nameLocation": "18635:18:7",
														"nodeType": "VariableDeclaration",
														"scope": 2188,
														"src": "18630:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2164,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "18630:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2169,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2166,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "18656:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2167,
														"name": "totalDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2060,
														"src": "18666:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18656:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18630:52:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2170,
														"name": "remainingAfterLoop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2165,
														"src": "18697:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18718:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18697:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2178,
												"nodeType": "IfStatement",
												"src": "18693:89:7",
												"trueBody": {
													"id": 2177,
													"nodeType": "Block",
													"src": "18721:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2174,
																		"name": "remainingAfterLoop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2165,
																		"src": "18751:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2173,
																	"name": "_sendToCreator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3158,
																	"src": "18736:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18736:34:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2176,
															"nodeType": "ExpressionStatement",
															"src": "18736:34:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2179,
														"name": "remainder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2047,
														"src": "18851:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18863:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18851:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2187,
												"nodeType": "IfStatement",
												"src": "18847:71:7",
												"trueBody": {
													"id": 2186,
													"nodeType": "Block",
													"src": "18866:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2183,
																		"name": "remainder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2047,
																		"src": "18896:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2182,
																	"name": "_sendToCreator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3158,
																	"src": "18881:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18881:25:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2185,
															"nodeType": "ExpressionStatement",
															"src": "18881:25:7"
														}
													]
												}
											}
										]
									},
									"id": 2189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributeLevelBoosterIncome",
									"nameLocation": "16487:29:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "_startId",
												"nameLocation": "16522:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "16517:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16517:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "_fromId",
												"nameLocation": "16537:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "16532:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16532:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "16551:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "16546:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16546:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "_packageLevel",
												"nameLocation": "16564:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "16559:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16559:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "_maxLevel",
												"nameLocation": "16583:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "16578:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16578:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16516:77:7"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16602:0:7"
									},
									"scope": 2316,
									"src": "16478:2456:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2258,
										"nodeType": "Block",
										"src": "19092:580:7",
										"statements": [
											{
												"assignments": [
													2201
												],
												"declarations": [
													{
														"constant": false,
														"id": 2201,
														"mutability": "mutable",
														"name": "to",
														"nameLocation": "19111:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 2258,
														"src": "19103:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2200,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "19103:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2206,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 2202,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2544,
															"src": "19116:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																"typeString": "mapping(uint256 => struct Storage.User storage ref)"
															}
														},
														"id": 2204,
														"indexExpression": {
															"id": 2203,
															"name": "receiverId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "19122:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19116:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2488_storage",
															"typeString": "struct Storage.User storage ref"
														}
													},
													"id": 2205,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "19134:7:7",
													"memberName": "account",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2447,
													"src": "19116:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19103:38:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2210,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "19166:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2211,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "19170:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2207,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "19152:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 2209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19157:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 199,
														"src": "19152:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19152:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2213,
												"nodeType": "ExpressionStatement",
												"src": "19152:25:7"
											},
											{
												"assignments": [
													2216
												],
												"declarations": [
													{
														"constant": false,
														"id": 2216,
														"mutability": "mutable",
														"name": "inc",
														"nameLocation": "19209:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 2258,
														"src": "19190:22:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
															"typeString": "struct Storage.UserIncome"
														},
														"typeName": {
															"id": 2215,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2214,
																"name": "UserIncome",
																"nameLocations": [
																	"19190:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2513,
																"src": "19190:10:7"
															},
															"referencedDeclaration": 2513,
															"src": "19190:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																"typeString": "struct Storage.UserIncome"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2220,
												"initialValue": {
													"baseExpression": {
														"id": 2217,
														"name": "userIncomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2549,
														"src": "19215:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2513_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
														}
													},
													"id": 2219,
													"indexExpression": {
														"id": 2218,
														"name": "receiverId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2191,
														"src": "19227:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19215:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIncome_$2513_storage",
														"typeString": "struct Storage.UserIncome storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19190:48:7"
											},
											{
												"expression": {
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2221,
															"name": "inc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2216,
															"src": "19249:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 2223,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19253:11:7",
														"memberName": "totalIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2490,
														"src": "19249:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2224,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "19268:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19249:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2226,
												"nodeType": "ExpressionStatement",
												"src": "19249:25:7"
											},
											{
												"expression": {
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2227,
															"name": "inc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2216,
															"src": "19285:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 2229,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19289:18:7",
														"memberName": "levelBoosterIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2496,
														"src": "19285:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2230,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "19311:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19285:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2232,
												"nodeType": "ExpressionStatement",
												"src": "19285:32:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2238,
																	"name": "fromId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2193,
																	"src": "19395:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2239,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2195,
																	"src": "19424:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2240,
																	"name": "packageLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2197,
																	"src": "19459:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2241,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "19497:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "19503:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "19497:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "34",
																	"id": 2243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19539:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	}
																],
																"id": 2237,
																"name": "Income",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2524,
																"src": "19361:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Income_$2524_storage_ptr_$",
																	"typeString": "type(struct Storage.Income storage pointer)"
																}
															},
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"19383:10:7",
																"19416:6:7",
																"19445:12:7",
																"19486:9:7",
																"19527:10:7"
															],
															"names": [
																"fromUserId",
																"amount",
																"packageLevel",
																"timestamp",
																"incomeType"
															],
															"nodeType": "FunctionCall",
															"src": "19361:215:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Income_$2524_memory_ptr",
																"typeString": "struct Storage.Income memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Income_$2524_memory_ptr",
																"typeString": "struct Storage.Income memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2233,
																"name": "incomeHistory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2555,
																"src": "19330:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$2524_storage_$dyn_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.Income storage ref[] storage ref)"
																}
															},
															"id": 2235,
															"indexExpression": {
																"id": 2234,
																"name": "receiverId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2191,
																"src": "19344:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19330:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Income_$2524_storage_$dyn_storage",
																"typeString": "struct Storage.Income storage ref[] storage ref"
															}
														},
														"id": 2236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19356:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "19330:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Income_$2524_storage_$dyn_storage_ptr_$_t_struct$_Income_$2524_storage_$returns$__$attached_to$_t_array$_t_struct$_Income_$2524_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Storage.Income storage ref[] storage pointer,struct Storage.Income storage ref)"
														}
													},
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19330:247:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2246,
												"nodeType": "ExpressionStatement",
												"src": "19330:247:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2248,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "19613:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 2249,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2544,
																	"src": "19617:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 2251,
																"indexExpression": {
																	"id": 2250,
																	"name": "fromId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2193,
																	"src": "19623:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19617:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"id": 2252,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19631:7:7",
															"memberName": "account",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2447,
															"src": "19617:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2253,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "19640:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2254,
															"name": "packageLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "19648:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "34",
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19662:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															}
														],
														"id": 2247,
														"name": "IncomeDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2627,
														"src": "19595:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 2256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19595:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2257,
												"nodeType": "EmitStatement",
												"src": "19590:74:7"
											}
										]
									},
									"id": 2259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_payLevelBooster",
									"nameLocation": "19005:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "receiverId",
												"nameLocation": "19027:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "19022:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2190,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19022:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "fromId",
												"nameLocation": "19044:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "19039:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19039:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19057:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "19052:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19052:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "19070:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "19065:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19065:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19021:62:7"
									},
									"returnParameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19092:0:7"
									},
									"scope": 2316,
									"src": "18996:676:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "19771:412:7",
										"statements": [
											{
												"assignments": [
													2269
												],
												"declarations": [
													{
														"constant": false,
														"id": 2269,
														"mutability": "mutable",
														"name": "searchId",
														"nameLocation": "19787:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 2314,
														"src": "19782:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2268,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "19782:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2271,
												"initialValue": {
													"id": 2270,
													"name": "startId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2261,
													"src": "19798:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19782:23:7"
											},
											{
												"assignments": [
													2273
												],
												"declarations": [
													{
														"constant": false,
														"id": 2273,
														"mutability": "mutable",
														"name": "hops",
														"nameLocation": "19821:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2314,
														"src": "19816:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2272,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "19816:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2275,
												"initialValue": {
													"hexValue": "30",
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19828:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19816:13:7"
											},
											{
												"body": {
													"id": 2310,
													"nodeType": "Block",
													"src": "19910:247:7",
													"statements": [
														{
															"assignments": [
																2289
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2289,
																	"mutability": "mutable",
																	"name": "u",
																	"nameLocation": "19938:1:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2310,
																	"src": "19925:14:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																		"typeString": "struct Storage.User"
																	},
																	"typeName": {
																		"id": 2288,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2287,
																			"name": "User",
																			"nameLocations": [
																				"19925:4:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2488,
																			"src": "19925:4:7"
																		},
																		"referencedDeclaration": 2488,
																		"src": "19925:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2293,
															"initialValue": {
																"baseExpression": {
																	"id": 2290,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2544,
																	"src": "19942:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 2292,
																"indexExpression": {
																	"id": 2291,
																	"name": "searchId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2269,
																	"src": "19948:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19942:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19925:32:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2294,
																		"name": "u",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2289,
																		"src": "19977:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "19979:5:7",
																	"memberName": "level",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2461,
																	"src": "19977:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 2296,
																	"name": "packageLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "19988:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19977:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2301,
															"nodeType": "IfStatement",
															"src": "19972:117:7",
															"trueBody": {
																"id": 2300,
																"nodeType": "Block",
																"src": "20039:50:7",
																"statements": [
																	{
																		"expression": {
																			"id": 2298,
																			"name": "searchId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "20065:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 2267,
																		"id": 2299,
																		"nodeType": "Return",
																		"src": "20058:15:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2302,
																	"name": "searchId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2269,
																	"src": "20103:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2303,
																		"name": "u",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2289,
																		"src": "20114:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																			"typeString": "struct Storage.User storage pointer"
																		}
																	},
																	"id": 2304,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20116:8:7",
																	"memberName": "uplineId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2459,
																	"src": "20114:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20103:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2306,
															"nodeType": "ExpressionStatement",
															"src": "20103:21:7"
														},
														{
															"expression": {
																"id": 2308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "20139:6:7",
																"subExpression": {
																	"id": 2307,
																	"name": "hops",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2273,
																	"src": "20139:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2309,
															"nodeType": "ExpressionStatement",
															"src": "20139:6:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2276,
																"name": "searchId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "19847:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19859:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19847:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2279,
																"name": "searchId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "19864:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2280,
																"name": "defaultRefId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2338,
																"src": "19876:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19864:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "19847:41:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2283,
															"name": "hops",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2273,
															"src": "19892:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2284,
															"name": "maxLayers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "19899:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19892:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19847:61:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2311,
												"nodeType": "WhileStatement",
												"src": "19840:317:7"
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 2312,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20174:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 2267,
												"id": 2313,
												"nodeType": "Return",
												"src": "20167:8:7"
											}
										]
									},
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_findEligibleSponsor",
									"nameLocation": "19689:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "startId",
												"nameLocation": "19715:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "19710:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19710:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "19729:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "19724:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19724:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19709:33:7"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "19765:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19765:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19764:6:7"
									},
									"scope": 2316,
									"src": "19680:503:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2317,
							"src": "124:20066:7",
							"usedErrors": [
								244
							],
							"usedEvents": [
								2585,
								2593,
								2603,
								2615,
								2627,
								2637,
								2645,
								2660,
								2897,
								2907,
								2915,
								2996,
								3006,
								3014,
								3089,
								3099,
								3107
							]
						}
					],
					"src": "33:20157:7"
				},
				"id": 7
			},
			"contracts/modules/Storage.sol": {
				"ast": {
					"absolutePath": "contracts/modules/Storage.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"ReentrancyGuard": [
							154
						],
						"SafeERC20": [
							696
						],
						"Storage": [
							3749
						]
					},
					"id": 3750,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 2319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3750,
							"sourceUnit": 155,
							"src": "99:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3750,
							"sourceUnit": 233,
							"src": "165:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 2321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3750,
							"sourceUnit": 697,
							"src": "223:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2322,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"312:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 154,
										"src": "312:15:8"
									},
									"id": 2323,
									"nodeType": "InheritanceSpecifier",
									"src": "312:15:8"
								}
							],
							"canonicalName": "Storage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3749,
							"linearizedBaseContracts": [
								3749,
								154
							],
							"name": "Storage",
							"nameLocation": "301:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2327,
									"libraryName": {
										"id": 2324,
										"name": "SafeERC20",
										"nameLocations": [
											"341:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 696,
										"src": "341:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "335:27:8",
									"typeName": {
										"id": 2326,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2325,
											"name": "IERC20",
											"nameLocations": [
												"355:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 232,
											"src": "355:6:8"
										},
										"referencedDeclaration": 232,
										"src": "355:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$232",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 2330,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "382:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "368:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$232",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 2329,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2328,
											"name": "IERC20",
											"nameLocations": [
												"368:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 232,
											"src": "368:6:8"
										},
										"referencedDeclaration": 232,
										"src": "368:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$232",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cdc65f2",
									"id": 2332,
									"mutability": "mutable",
									"name": "creatorWallet",
									"nameLocation": "437:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "422:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2331,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "422:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e9e34a16",
									"id": 2334,
									"mutability": "mutable",
									"name": "systemMaintance",
									"nameLocation": "475:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "460:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2333,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "460:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f5d74d93",
									"id": 2336,
									"mutability": "mutable",
									"name": "teamDevelopment",
									"nameLocation": "512:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "497:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2335,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "497:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec597e6f",
									"id": 2338,
									"mutability": "mutable",
									"name": "defaultRefId",
									"nameLocation": "546:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "534:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2337,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "534:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bff1f9e1",
									"id": 2340,
									"mutability": "mutable",
									"name": "totalUsers",
									"nameLocation": "577:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "565:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2339,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "565:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 2343,
									"mutability": "constant",
									"name": "maxLayers",
									"nameLocation": "617:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "594:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2341,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "594:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 2342,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "629:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "01c234a8",
									"id": 2346,
									"mutability": "constant",
									"name": "PERCENTS_DIVIDER",
									"nameLocation": "664:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "640:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2344,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "640:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 2345,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "683:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32bc298c",
									"id": 2349,
									"mutability": "constant",
									"name": "TIME_STEP",
									"nameLocation": "719:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "695:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2347,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2348,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "731:6:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a5e52b99",
									"id": 2352,
									"mutability": "constant",
									"name": "MONTHLY_ROYALTY_TIME",
									"nameLocation": "768:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "744:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2350,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 2351,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "791:8:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8640000_by_1",
											"typeString": "int_const 8640000"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "705fee2d",
									"id": 2355,
									"mutability": "constant",
									"name": "TOP_ROYALTY_TIME",
									"nameLocation": "830:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "806:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2353,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343530",
										"id": 2354,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "849:8:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_38880000_by_1",
											"typeString": "int_const 38880000"
										},
										"value": "450"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "375b43b4",
									"id": 2358,
									"mutability": "constant",
									"name": "ROI_CAP_MULTIPLIER",
									"nameLocation": "888:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "864:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2356,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "864:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 2357,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "909:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "58c7d352",
									"id": 2361,
									"mutability": "constant",
									"name": "ROI_CAP_DIVIDER",
									"nameLocation": "950:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "926:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2359,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "926:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 2360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "968:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "23fd338e",
									"id": 2364,
									"mutability": "constant",
									"name": "MONTHLY_ROYALTY_LEVEL",
									"nameLocation": "1001:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "977:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2362,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "977:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 2363,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1025:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ae0ee0d",
									"id": 2367,
									"mutability": "constant",
									"name": "TOP_ROYALTY_LEVEL",
									"nameLocation": "1058:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "1034:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2365,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1034:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 2366,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1078:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d2f0490d",
									"id": 2370,
									"mutability": "constant",
									"name": "MONTHLY_ROYALTY_DIRECT",
									"nameLocation": "1111:22:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "1087:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2368,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1087:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 2369,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1136:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "31bb6a30",
									"id": 2373,
									"mutability": "constant",
									"name": "TOP_ROYALTY_DIRECT",
									"nameLocation": "1168:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "1144:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2371,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1144:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 2372,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1189:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39ab3603",
									"id": 2376,
									"mutability": "mutable",
									"name": "registeredUserIds",
									"nameLocation": "1220:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "1206:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2374,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1206:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2375,
										"nodeType": "ArrayTypeName",
										"src": "1206:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2378,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "1257:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "1244:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2377,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1244:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "32fcd966",
									"id": 2381,
									"mutability": "constant",
									"name": "ACC_PRECISION",
									"nameLocation": "1446:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "1422:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1422:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 2380,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1462:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78f6ad6d",
									"id": 2383,
									"mutability": "mutable",
									"name": "communityAccPerUser",
									"nameLocation": "1488:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "1473:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2382,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1473:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2387,
									"mutability": "mutable",
									"name": "communityDebt",
									"nameLocation": "1586:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "1552:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2386,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2384,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1560:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1552:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2385,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1568:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "c216212a",
									"id": 2436,
									"mutability": "mutable",
									"name": "packages",
									"nameLocation": "1644:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "1630:540:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2388,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1630:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2389,
										"nodeType": "ArrayTypeName",
										"src": "1630:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"commonType": {
													"typeIdentifier": "t_rational_15000000000000000000_by_1",
													"typeString": "int_const 15000000000000000000"
												},
												"id": 2392,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3135",
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1666:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_15_by_1",
														"typeString": "int_const 15"
													},
													"value": "15"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2391,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1671:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1666:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_15000000000000000000_by_1",
													"typeString": "int_const 15000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_25000000000000000000_by_1",
													"typeString": "int_const 25000000000000000000"
												},
												"id": 2395,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3235",
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1698:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_25_by_1",
														"typeString": "int_const 25"
													},
													"value": "25"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1703:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1698:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_25000000000000000000_by_1",
													"typeString": "int_const 25000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_50000000000000000000_by_1",
													"typeString": "int_const 50000000000000000000"
												},
												"id": 2398,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3530",
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1730:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_50_by_1",
														"typeString": "int_const 50"
													},
													"value": "50"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1735:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1730:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_50000000000000000000_by_1",
													"typeString": "int_const 50000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_100000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000"
												},
												"id": 2401,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "313030",
													"id": 2399,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1762:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"value": "100"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1768:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1762:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_200000000000000000000_by_1",
													"typeString": "int_const 200000000000000000000"
												},
												"id": 2404,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "323030",
													"id": 2402,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1795:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_200_by_1",
														"typeString": "int_const 200"
													},
													"value": "200"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1801:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1795:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_200000000000000000000_by_1",
													"typeString": "int_const 200000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_400000000000000000000_by_1",
													"typeString": "int_const 400000000000000000000"
												},
												"id": 2407,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "343030",
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1828:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_400_by_1",
														"typeString": "int_const 400"
													},
													"value": "400"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1834:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1828:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_400000000000000000000_by_1",
													"typeString": "int_const 400000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_800000000000000000000_by_1",
													"typeString": "int_const 800000000000000000000"
												},
												"id": 2410,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "383030",
													"id": 2408,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1861:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_800_by_1",
														"typeString": "int_const 800"
													},
													"value": "800"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1867:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1861:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_800000000000000000000_by_1",
													"typeString": "int_const 800000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_1600000000000000000000_by_1",
													"typeString": "int_const 1600000000000000000000"
												},
												"id": 2413,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "31363030",
													"id": 2411,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1894:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1600_by_1",
														"typeString": "int_const 1600"
													},
													"value": "1600"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2412,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1901:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1894:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1600000000000000000000_by_1",
													"typeString": "int_const 1600000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_3200000000000000000000_by_1",
													"typeString": "int_const 3200000000000000000000"
												},
												"id": 2416,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "33323030",
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1928:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3200_by_1",
														"typeString": "int_const 3200"
													},
													"value": "3200"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2415,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1935:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1928:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3200000000000000000000_by_1",
													"typeString": "int_const 3200000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_6400000000000000000000_by_1",
													"typeString": "int_const 6400000000000000000000"
												},
												"id": 2419,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "36343030",
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1962:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6400_by_1",
														"typeString": "int_const 6400"
													},
													"value": "6400"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2418,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1969:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1962:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6400000000000000000000_by_1",
													"typeString": "int_const 6400000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_12800000000000000000000_by_1",
													"typeString": "int_const 12800000000000000000000"
												},
												"id": 2422,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3132383030",
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1996:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_12800_by_1",
														"typeString": "int_const 12800"
													},
													"value": "12800"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2004:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "1996:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_12800000000000000000000_by_1",
													"typeString": "int_const 12800000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_25600000000000000000000_by_1",
													"typeString": "int_const 25600000000000000000000"
												},
												"id": 2425,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3235363030",
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2031:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_25600_by_1",
														"typeString": "int_const 25600"
													},
													"value": "25600"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2039:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2031:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_25600000000000000000000_by_1",
													"typeString": "int_const 25600000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_51200000000000000000000_by_1",
													"typeString": "int_const 51200000000000000000000"
												},
												"id": 2428,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3531323030",
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2066:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_51200_by_1",
														"typeString": "int_const 51200"
													},
													"value": "51200"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2074:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2066:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_51200000000000000000000_by_1",
													"typeString": "int_const 51200000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_102400000000000000000000_by_1",
													"typeString": "int_const 102400000000000000000000"
												},
												"id": 2431,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "313032343030",
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2101:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_102400_by_1",
														"typeString": "int_const 102400"
													},
													"value": "102400"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2110:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2101:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_102400000000000000000000_by_1",
													"typeString": "int_const 102400000000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_204800000000000000000000_by_1",
													"typeString": "int_const 204800000000000000000000"
												},
												"id": 2434,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "323034383030",
													"id": 2432,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2137:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_204800_by_1",
														"typeString": "int_const 204800"
													},
													"value": "204800"
												},
												"nodeType": "BinaryOperation",
												"operator": "*",
												"rightExpression": {
													"hexValue": "31653138",
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2146:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"src": "2137:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_204800000000000000000000_by_1",
													"typeString": "int_const 204800000000000000000000"
												}
											}
										],
										"id": 2435,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "1655:515:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$15_memory_ptr",
											"typeString": "uint80[15] memory"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.Deposit",
									"id": 2445,
									"members": [
										{
											"constant": false,
											"id": 2438,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2317:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2445,
											"src": "2309:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2437,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2309:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2440,
											"mutability": "mutable",
											"name": "withdrawn",
											"nameLocation": "2342:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2445,
											"src": "2334:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2439,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2334:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2442,
											"mutability": "mutable",
											"name": "start",
											"nameLocation": "2370:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 2445,
											"src": "2362:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2441,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2362:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2444,
											"mutability": "mutable",
											"name": "depositType",
											"nameLocation": "2393:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2445,
											"src": "2387:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2443,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2387:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deposit",
									"nameLocation": "2290:7:8",
									"nodeType": "StructDefinition",
									"scope": 3749,
									"src": "2283:131:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.User",
									"id": 2488,
									"members": [
										{
											"constant": false,
											"id": 2447,
											"mutability": "mutable",
											"name": "account",
											"nameLocation": "2453:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "2445:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2446,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2445:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2451,
											"mutability": "mutable",
											"name": "deposits",
											"nameLocation": "2481:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "2471:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Deposit_$2445_storage_$dyn_storage_ptr",
												"typeString": "struct Storage.Deposit[]"
											},
											"typeName": {
												"baseType": {
													"id": 2449,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2448,
														"name": "Deposit",
														"nameLocations": [
															"2471:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2445,
														"src": "2471:7:8"
													},
													"referencedDeclaration": 2445,
													"src": "2471:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deposit_$2445_storage_ptr",
														"typeString": "struct Storage.Deposit"
													}
												},
												"id": 2450,
												"nodeType": "ArrayTypeName",
												"src": "2471:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Deposit_$2445_storage_$dyn_storage_ptr",
													"typeString": "struct Storage.Deposit[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2453,
											"mutability": "mutable",
											"name": "checkpoint",
											"nameLocation": "2508:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "2500:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2452,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2500:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2455,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "2534:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "2529:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2454,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2529:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2457,
											"mutability": "mutable",
											"name": "sponsorId",
											"nameLocation": "2552:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "2547:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2456,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2547:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2459,
											"mutability": "mutable",
											"name": "uplineId",
											"nameLocation": "2590:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "2585:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2458,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2585:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2461,
											"mutability": "mutable",
											"name": "level",
											"nameLocation": "2639:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "2634:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2460,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2634:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2463,
											"mutability": "mutable",
											"name": "directTeam",
											"nameLocation": "2697:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "2692:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2462,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2692:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2465,
											"mutability": "mutable",
											"name": "directPoolQualified",
											"nameLocation": "2749:19:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "2744:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2464,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2744:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2467,
											"mutability": "mutable",
											"name": "totalMatrixTeam",
											"nameLocation": "2827:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "2822:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2466,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2822:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2469,
											"mutability": "mutable",
											"name": "totalDeposit",
											"nameLocation": "2883:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "2878:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2468,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2878:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2471,
											"mutability": "mutable",
											"name": "poollevel",
											"nameLocation": "2911:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "2906:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2470,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2906:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2473,
											"mutability": "mutable",
											"name": "poolDeposit",
											"nameLocation": "2936:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "2931:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2472,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2931:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2475,
											"mutability": "mutable",
											"name": "boosterlevel",
											"nameLocation": "2963:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "2958:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2474,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2958:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2477,
											"mutability": "mutable",
											"name": "boosterDeposit",
											"nameLocation": "2991:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "2986:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2476,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2986:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2479,
											"mutability": "mutable",
											"name": "registrationTime",
											"nameLocation": "3021:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "3016:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2478,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3016:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2481,
											"mutability": "mutable",
											"name": "level10Time",
											"nameLocation": "3053:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "3048:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2480,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3048:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2483,
											"mutability": "mutable",
											"name": "level15Time",
											"nameLocation": "3080:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "3075:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2482,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3075:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2485,
											"mutability": "mutable",
											"name": "monthlyUserDirectCount",
											"nameLocation": "3107:22:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "3102:27:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2484,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3102:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2487,
											"mutability": "mutable",
											"name": "topRoyaltyDirectCount",
											"nameLocation": "3175:21:8",
											"nodeType": "VariableDeclaration",
											"scope": 2488,
											"src": "3170:26:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2486,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3170:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "2429:4:8",
									"nodeType": "StructDefinition",
									"scope": 3749,
									"src": "2422:815:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserIncome",
									"id": 2513,
									"members": [
										{
											"constant": false,
											"id": 2490,
											"mutability": "mutable",
											"name": "totalIncome",
											"nameLocation": "3308:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2513,
											"src": "3303:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2489,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3303:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2492,
											"mutability": "mutable",
											"name": "sponsorIncome",
											"nameLocation": "3335:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2513,
											"src": "3330:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2491,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3330:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2494,
											"mutability": "mutable",
											"name": "matrixIncome",
											"nameLocation": "3364:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2513,
											"src": "3359:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2493,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3359:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2496,
											"mutability": "mutable",
											"name": "levelBoosterIncome",
											"nameLocation": "3392:18:8",
											"nodeType": "VariableDeclaration",
											"scope": 2513,
											"src": "3387:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2495,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3387:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2498,
											"mutability": "mutable",
											"name": "royaltyIncome",
											"nameLocation": "3455:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2513,
											"src": "3450:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2497,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3450:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2500,
											"mutability": "mutable",
											"name": "royaltyIncomeClaimed",
											"nameLocation": "3484:20:8",
											"nodeType": "VariableDeclaration",
											"scope": 2513,
											"src": "3479:25:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2499,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3479:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2502,
											"mutability": "mutable",
											"name": "communityIncome",
											"nameLocation": "3557:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 2513,
											"src": "3552:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2501,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3552:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2504,
											"mutability": "mutable",
											"name": "poolIncome",
											"nameLocation": "3637:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2513,
											"src": "3632:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2503,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3632:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2506,
											"mutability": "mutable",
											"name": "boosterIncome",
											"nameLocation": "3698:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2513,
											"src": "3693:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2505,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3693:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2508,
											"mutability": "mutable",
											"name": "weeklyContestIncome",
											"nameLocation": "3756:19:8",
											"nodeType": "VariableDeclaration",
											"scope": 2513,
											"src": "3751:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2507,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3751:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2510,
											"mutability": "mutable",
											"name": "monthlyRoyalty",
											"nameLocation": "3827:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 2513,
											"src": "3822:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2509,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3822:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2512,
											"mutability": "mutable",
											"name": "topRoyalty",
											"nameLocation": "3893:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2513,
											"src": "3888:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2511,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3888:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserIncome",
									"nameLocation": "3281:10:8",
									"nodeType": "StructDefinition",
									"scope": 3749,
									"src": "3274:673:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.Income",
									"id": 2524,
									"members": [
										{
											"constant": false,
											"id": 2515,
											"mutability": "mutable",
											"name": "fromUserId",
											"nameLocation": "3985:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2524,
											"src": "3980:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2514,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "3980:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2517,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4011:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2524,
											"src": "4006:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2516,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4006:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2519,
											"mutability": "mutable",
											"name": "packageLevel",
											"nameLocation": "4033:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2524,
											"src": "4028:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2518,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4028:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2521,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "4061:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2524,
											"src": "4056:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2520,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4056:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2523,
											"mutability": "mutable",
											"name": "incomeType",
											"nameLocation": "4086:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2524,
											"src": "4081:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2522,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4081:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Income",
									"nameLocation": "3962:6:8",
									"nodeType": "StructDefinition",
									"scope": 3749,
									"src": "3955:309:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.IncomeType",
									"id": 2535,
									"members": [
										{
											"id": 2525,
											"name": "Creator",
											"nameLocation": "4297:7:8",
											"nodeType": "EnumValue",
											"src": "4297:7:8"
										},
										{
											"id": 2526,
											"name": "Sponsor",
											"nameLocation": "4331:7:8",
											"nodeType": "EnumValue",
											"src": "4331:7:8"
										},
										{
											"id": 2527,
											"name": "Matrix",
											"nameLocation": "4365:6:8",
											"nodeType": "EnumValue",
											"src": "4365:6:8"
										},
										{
											"id": 2528,
											"name": "LevelBooster",
											"nameLocation": "4399:12:8",
											"nodeType": "EnumValue",
											"src": "4399:12:8"
										},
										{
											"id": 2529,
											"name": "Community",
											"nameLocation": "4441:9:8",
											"nodeType": "EnumValue",
											"src": "4441:9:8"
										},
										{
											"id": 2530,
											"name": "Pool",
											"nameLocation": "4475:4:8",
											"nodeType": "EnumValue",
											"src": "4475:4:8"
										},
										{
											"id": 2531,
											"name": "Booster",
											"nameLocation": "4509:7:8",
											"nodeType": "EnumValue",
											"src": "4509:7:8"
										},
										{
											"id": 2532,
											"name": "WeeklyContest",
											"nameLocation": "4543:13:8",
											"nodeType": "EnumValue",
											"src": "4543:13:8"
										},
										{
											"id": 2533,
											"name": "MonthlyRoyalty",
											"nameLocation": "4577:14:8",
											"nodeType": "EnumValue",
											"src": "4577:14:8"
										},
										{
											"id": 2534,
											"name": "TopRoyalty",
											"nameLocation": "4611:10:8",
											"nodeType": "EnumValue",
											"src": "4611:10:8"
										}
									],
									"name": "IncomeType",
									"nameLocation": "4275:10:8",
									"nodeType": "EnumDefinition",
									"src": "4270:365:8"
								},
								{
									"constant": false,
									"id": 2539,
									"mutability": "mutable",
									"name": "addressToId",
									"nameLocation": "4681:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "4647:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2538,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2536,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4655:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4647:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2537,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4666:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2544,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "4730:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "4699:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
										"typeString": "mapping(uint256 => struct Storage.User)"
									},
									"typeName": {
										"id": 2543,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2540,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4707:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4699:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
											"typeString": "mapping(uint256 => struct Storage.User)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2542,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2541,
												"name": "User",
												"nameLocations": [
													"4715:4:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2488,
												"src": "4715:4:8"
											},
											"referencedDeclaration": 2488,
											"src": "4715:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
												"typeString": "struct Storage.User"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2549,
									"mutability": "mutable",
									"name": "userIncomes",
									"nameLocation": "4779:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "4742:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2513_storage_$",
										"typeString": "mapping(uint256 => struct Storage.UserIncome)"
									},
									"typeName": {
										"id": 2548,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2545,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4750:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4742:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2513_storage_$",
											"typeString": "mapping(uint256 => struct Storage.UserIncome)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2547,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2546,
												"name": "UserIncome",
												"nameLocations": [
													"4758:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2513,
												"src": "4758:10:8"
											},
											"referencedDeclaration": 2513,
											"src": "4758:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
												"typeString": "struct Storage.UserIncome"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2555,
									"mutability": "mutable",
									"name": "incomeHistory",
									"nameLocation": "4863:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "4828:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$2524_storage_$dyn_storage_$",
										"typeString": "mapping(uint256 => struct Storage.Income[])"
									},
									"typeName": {
										"id": 2554,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2550,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4836:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4828:25:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Income_$2524_storage_$dyn_storage_$",
											"typeString": "mapping(uint256 => struct Storage.Income[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2552,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2551,
													"name": "Income",
													"nameLocations": [
														"4844:6:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2524,
													"src": "4844:6:8"
												},
												"referencedDeclaration": 2524,
												"src": "4844:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Income_$2524_storage_ptr",
													"typeString": "struct Storage.Income"
												}
											},
											"id": 2553,
											"nodeType": "ArrayTypeName",
											"src": "4844:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Income_$2524_storage_$dyn_storage_ptr",
												"typeString": "struct Storage.Income[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2562,
									"mutability": "mutable",
									"name": "teams",
									"nameLocation": "4933:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "4883:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2561,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2556,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4891:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4883:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2560,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2557,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4907:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "4899:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2558,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4915:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2559,
												"nodeType": "ArrayTypeName",
												"src": "4915:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2566,
									"mutability": "mutable",
									"name": "matrixDirect",
									"nameLocation": "5010:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "4979:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2565,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2563,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4987:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4979:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2564,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "4995:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2571,
									"mutability": "mutable",
									"name": "directReferrals",
									"nameLocation": "5098:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "5065:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2570,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2567,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "5073:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5065:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2568,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "5081:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2569,
											"nodeType": "ArrayTypeName",
											"src": "5081:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "0c28361b1bd0a8a8cd2daf76b402a306e7c3ed3e7bb56820ba81a5edab4636e0",
									"id": 2585,
									"name": "UserJoined",
									"nameLocation": "5128:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"indexed": true,
												"mutability": "mutable",
												"name": "matrixId",
												"nameLocation": "5153:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "5139:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2572,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5139:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2575,
												"indexed": true,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "5178:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "5163:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2574,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "5163:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2577,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5202:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "5186:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5186:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2579,
												"indexed": false,
												"mutability": "mutable",
												"name": "parentId",
												"nameLocation": "5215:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "5208:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2578,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2581,
												"indexed": false,
												"mutability": "mutable",
												"name": "parentAddr",
												"nameLocation": "5233:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "5225:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"indexed": false,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "5251:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "5245:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2582,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5138:122:8"
									},
									"src": "5122:139:8"
								},
								{
									"anonymous": false,
									"eventSelector": "792af4ddd1dc413b17bea369ca90e7ae463cc96b773c936c70b33d8b08bc096f",
									"id": 2593,
									"name": "RewardSent",
									"nameLocation": "5273:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2587,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5300:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "5284:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5284:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2589,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5312:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "5304:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5304:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2591,
												"indexed": false,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "5327:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "5320:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2590,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5320:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5283:50:8"
									},
									"src": "5267:67:8"
								},
								{
									"anonymous": false,
									"eventSelector": "309bb360e8b69c23937ccc5fb01f9aeeead1c95a99604e175113ff82f2b1723a",
									"id": 2603,
									"name": "Registration",
									"nameLocation": "5366:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2595,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5395:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "5379:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5379:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2597,
												"indexed": true,
												"mutability": "mutable",
												"name": "sponsor",
												"nameLocation": "5417:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "5401:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5401:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2599,
												"indexed": true,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "5439:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "5426:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2598,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5426:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2601,
												"indexed": false,
												"mutability": "mutable",
												"name": "uplineId",
												"nameLocation": "5452:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "5447:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2600,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5447:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5378:83:8"
									},
									"src": "5360:102:8"
								},
								{
									"anonymous": false,
									"eventSelector": "ae1560e7d725caf8d266d531bf32f170b87264eca8d1265202c334cfeb5bc382",
									"id": 2615,
									"name": "Upgrade",
									"nameLocation": "5474:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5498:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "5482:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5482:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2607,
												"indexed": true,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "5517:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "5504:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2606,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5504:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2609,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "5530:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "5525:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2608,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5525:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2611,
												"indexed": false,
												"mutability": "mutable",
												"name": "depositType",
												"nameLocation": "5551:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "5544:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5544:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"indexed": false,
												"mutability": "mutable",
												"name": "upgradeTime",
												"nameLocation": "5569:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "5564:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2612,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5564:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5481:100:8"
									},
									"src": "5468:114:8"
								},
								{
									"anonymous": false,
									"eventSelector": "e17b61d324ce17328f433d0ab62581c0f0aa997312bae80fbdfcd2aa9b91d6e3",
									"id": 2627,
									"name": "IncomeDistributed",
									"nameLocation": "5594:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2617,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5628:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "5612:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5612:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5648:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "5632:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5632:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2621,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5659:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "5654:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2620,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5654:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2623,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "5672:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "5667:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5667:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2625,
												"indexed": false,
												"mutability": "mutable",
												"name": "incomeType",
												"nameLocation": "5691:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "5686:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2624,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5686:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5611:91:8"
									},
									"src": "5588:115:8"
								},
								{
									"anonymous": false,
									"eventSelector": "5cbb4caf17c10875f33a7c303c1862bcd2fca5faed9a98d1f6e8f41bf720491f",
									"id": 2637,
									"name": "LotteryReward",
									"nameLocation": "5715:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2629,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "5745:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2637,
												"src": "5729:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5729:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2631,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromUserId",
												"nameLocation": "5766:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2637,
												"src": "5753:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2630,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5753:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2633,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5783:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2637,
												"src": "5778:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2632,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5778:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2635,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5796:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2637,
												"src": "5791:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2634,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5791:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5728:78:8"
									},
									"src": "5709:98:8"
								},
								{
									"anonymous": false,
									"eventSelector": "ed2ed4e697131e475ee1946b709d36d74793101a68ffaa7386f98886a32d8d9f",
									"id": 2645,
									"name": "CommunityBonusDistributed",
									"nameLocation": "5819:25:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5850:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "5845:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2638,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5845:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2641,
												"indexed": false,
												"mutability": "mutable",
												"name": "usersCount",
												"nameLocation": "5863:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "5858:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2640,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5858:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2643,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUser",
												"nameLocation": "5880:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "5875:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2642,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5875:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5844:44:8"
									},
									"src": "5813:76:8"
								},
								{
									"anonymous": false,
									"eventSelector": "0f67c60bc8519c61563ac616d368a6df646202c88d10744d736438bc4fbe2816",
									"id": 2660,
									"name": "IncomeDistribution",
									"nameLocation": "5901:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2647,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5936:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "5920:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5920:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2649,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5955:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "5939:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5939:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2651,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5968:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "5960:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2653,
												"indexed": false,
												"mutability": "mutable",
												"name": "packageLevel",
												"nameLocation": "5983:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "5975:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5975:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2656,
												"indexed": false,
												"mutability": "mutable",
												"name": "incomeType",
												"nameLocation": "6007:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "5996:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_IncomeType_$2535",
													"typeString": "enum Storage.IncomeType"
												},
												"typeName": {
													"id": 2655,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2654,
														"name": "IncomeType",
														"nameLocations": [
															"5996:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2535,
														"src": "5996:10:8"
													},
													"referencedDeclaration": 2535,
													"src": "5996:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_IncomeType_$2535",
														"typeString": "enum Storage.IncomeType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2658,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "6026:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "6018:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6018:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5919:117:8"
									},
									"src": "5895:142:8"
								},
								{
									"constant": false,
									"functionSelector": "ae4708dc",
									"id": 2671,
									"mutability": "mutable",
									"name": "poolPackages",
									"nameLocation": "6106:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "6092:93:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2661,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6092:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2662,
										"nodeType": "ArrayTypeName",
										"src": "6092:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "3735653138",
												"id": 2663,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6122:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_75000000000000000000_by_1",
													"typeString": "int_const 75000000000000000000"
												},
												"value": "75e18"
											},
											{
												"hexValue": "333030653138",
												"id": 2664,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6129:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_300000000000000000000_by_1",
													"typeString": "int_const 300000000000000000000"
												},
												"value": "300e18"
											},
											{
												"hexValue": "31323030653138",
												"id": 2665,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6137:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1200000000000000000000_by_1",
													"typeString": "int_const 1200000000000000000000"
												},
												"value": "1200e18"
											},
											{
												"hexValue": "34383030653138",
												"id": 2666,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6146:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_4800000000000000000000_by_1",
													"typeString": "int_const 4800000000000000000000"
												},
												"value": "4800e18"
											},
											{
												"hexValue": "3139323030653138",
												"id": 2667,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6155:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_19200000000000000000000_by_1",
													"typeString": "int_const 19200000000000000000000"
												},
												"value": "19200e18"
											},
											{
												"hexValue": "3736383030653138",
												"id": 2668,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6165:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_76800000000000000000000_by_1",
													"typeString": "int_const 76800000000000000000000"
												},
												"value": "76800e18"
											},
											{
												"hexValue": "333037323030653138",
												"id": 2669,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6175:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_307200000000000000000000_by_1",
													"typeString": "int_const 307200000000000000000000"
												},
												"value": "307200e18"
											}
										],
										"id": 2670,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "6121:64:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$7_memory_ptr",
											"typeString": "uint80[7] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2350268f",
									"id": 2683,
									"mutability": "mutable",
									"name": "glbBoosterPackages",
									"nameLocation": "6206:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "6192:105:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2672,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6192:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2673,
										"nodeType": "ArrayTypeName",
										"src": "6192:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "313030653138",
												"id": 2674,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6229:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000000_by_1",
													"typeString": "int_const 100000000000000000000"
												},
												"value": "100e18"
											},
											{
												"hexValue": "323030653138",
												"id": 2675,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6237:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_200000000000000000000_by_1",
													"typeString": "int_const 200000000000000000000"
												},
												"value": "200e18"
											},
											{
												"hexValue": "343030653138",
												"id": 2676,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6245:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_400000000000000000000_by_1",
													"typeString": "int_const 400000000000000000000"
												},
												"value": "400e18"
											},
											{
												"hexValue": "383030653138",
												"id": 2677,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6253:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_800000000000000000000_by_1",
													"typeString": "int_const 800000000000000000000"
												},
												"value": "800e18"
											},
											{
												"hexValue": "31363030653138",
												"id": 2678,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6261:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1600000000000000000000_by_1",
													"typeString": "int_const 1600000000000000000000"
												},
												"value": "1600e18"
											},
											{
												"hexValue": "33323030653138",
												"id": 2679,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6270:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3200000000000000000000_by_1",
													"typeString": "int_const 3200000000000000000000"
												},
												"value": "3200e18"
											},
											{
												"hexValue": "36343030653138",
												"id": 2680,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6279:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6400000000000000000000_by_1",
													"typeString": "int_const 6400000000000000000000"
												},
												"value": "6400e18"
											},
											{
												"hexValue": "3132383030653138",
												"id": 2681,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6288:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_12800000000000000000000_by_1",
													"typeString": "int_const 12800000000000000000000"
												},
												"value": "12800e18"
											}
										],
										"id": 2682,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "6227:70:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$8_memory_ptr",
											"typeString": "uint80[8] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2132d204",
									"id": 2695,
									"mutability": "mutable",
									"name": "minLevelForPool",
									"nameLocation": "6319:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "6304:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$7_storage",
										"typeString": "uint256[7]"
									},
									"typeName": {
										"baseType": {
											"id": 2684,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6304:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2686,
										"length": {
											"hexValue": "37",
											"id": 2685,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6309:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_7_by_1",
												"typeString": "int_const 7"
											},
											"value": "7"
										},
										"nodeType": "ArrayTypeName",
										"src": "6304:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$7_storage_ptr",
											"typeString": "uint256[7]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "33",
												"id": 2687,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6338:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_3_by_1",
													"typeString": "int_const 3"
												},
												"value": "3"
											},
											{
												"hexValue": "35",
												"id": 2688,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6341:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												},
												"value": "5"
											},
											{
												"hexValue": "37",
												"id": 2689,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6344:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_7_by_1",
													"typeString": "int_const 7"
												},
												"value": "7"
											},
											{
												"hexValue": "39",
												"id": 2690,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6347:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											{
												"hexValue": "3131",
												"id": 2691,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6350:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_11_by_1",
													"typeString": "int_const 11"
												},
												"value": "11"
											},
											{
												"hexValue": "3133",
												"id": 2692,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6354:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_13_by_1",
													"typeString": "int_const 13"
												},
												"value": "13"
											},
											{
												"hexValue": "3135",
												"id": 2693,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6358:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_15_by_1",
													"typeString": "int_const 15"
												},
												"value": "15"
											}
										],
										"id": 2694,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "6337:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$7_memory_ptr",
											"typeString": "uint8[7] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0a2fd79",
									"id": 2708,
									"mutability": "mutable",
									"name": "minLevelForGlbBooster",
									"nameLocation": "6383:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "6368:64:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$8_storage",
										"typeString": "uint256[8]"
									},
									"typeName": {
										"baseType": {
											"id": 2696,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6368:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2698,
										"length": {
											"hexValue": "38",
											"id": 2697,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6373:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_8_by_1",
												"typeString": "int_const 8"
											},
											"value": "8"
										},
										"nodeType": "ArrayTypeName",
										"src": "6368:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
											"typeString": "uint256[8]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "34",
												"id": 2699,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6408:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_4_by_1",
													"typeString": "int_const 4"
												},
												"value": "4"
											},
											{
												"hexValue": "35",
												"id": 2700,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6411:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5_by_1",
													"typeString": "int_const 5"
												},
												"value": "5"
											},
											{
												"hexValue": "36",
												"id": 2701,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6414:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6_by_1",
													"typeString": "int_const 6"
												},
												"value": "6"
											},
											{
												"hexValue": "37",
												"id": 2702,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6417:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_7_by_1",
													"typeString": "int_const 7"
												},
												"value": "7"
											},
											{
												"hexValue": "38",
												"id": 2703,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6420:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_8_by_1",
													"typeString": "int_const 8"
												},
												"value": "8"
											},
											{
												"hexValue": "39",
												"id": 2704,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6423:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											{
												"hexValue": "3130",
												"id": 2705,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6426:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											{
												"hexValue": "3131",
												"id": 2706,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6429:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_11_by_1",
													"typeString": "int_const 11"
												},
												"value": "11"
											}
										],
										"id": 2707,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "6407:25:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$8_memory_ptr",
											"typeString": "uint8[8] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "956a3228",
									"id": 2721,
									"mutability": "mutable",
									"name": "minPoolForGlbBooster",
									"nameLocation": "6454:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "6439:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$8_storage",
										"typeString": "uint256[8]"
									},
									"typeName": {
										"baseType": {
											"id": 2709,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "6439:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2711,
										"length": {
											"hexValue": "38",
											"id": 2710,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6444:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_8_by_1",
												"typeString": "int_const 8"
											},
											"value": "8"
										},
										"nodeType": "ArrayTypeName",
										"src": "6439:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
											"typeString": "uint256[8]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "30",
												"id": 2712,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6478:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											{
												"hexValue": "31",
												"id": 2713,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6481:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2714,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6484:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2715,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6487:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2716,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6490:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2717,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6493:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2718,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6496:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											},
											{
												"hexValue": "31",
												"id": 2719,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "6498:1:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											}
										],
										"id": 2720,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "6477:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$8_memory_ptr",
											"typeString": "uint8[8] memory"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserPool",
									"id": 2732,
									"members": [
										{
											"constant": false,
											"id": 2723,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "6543:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 2732,
											"src": "6538:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2722,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6538:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2725,
											"mutability": "mutable",
											"name": "mainid",
											"nameLocation": "6576:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2732,
											"src": "6571:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2724,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6571:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2727,
											"mutability": "mutable",
											"name": "poolId",
											"nameLocation": "6598:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2732,
											"src": "6593:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2726,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6593:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2729,
											"mutability": "mutable",
											"name": "parentId",
											"nameLocation": "6620:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2732,
											"src": "6615:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2728,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6615:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2731,
											"mutability": "mutable",
											"name": "bonusCount",
											"nameLocation": "6646:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2732,
											"src": "6641:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2730,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6641:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserPool",
									"nameLocation": "6518:8:8",
									"nodeType": "StructDefinition",
									"scope": 3749,
									"src": "6511:165:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserPoolTopup",
									"id": 2737,
									"members": [
										{
											"constant": false,
											"id": 2734,
											"mutability": "mutable",
											"name": "nextPoolAmt",
											"nameLocation": "6725:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2737,
											"src": "6720:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2733,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6720:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2736,
											"mutability": "mutable",
											"name": "reTopupAmt",
											"nameLocation": "6759:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2737,
											"src": "6754:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2735,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6754:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserPoolTopup",
									"nameLocation": "6695:13:8",
									"nodeType": "StructDefinition",
									"scope": 3749,
									"src": "6688:94:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.UserBooster",
									"id": 2748,
									"members": [
										{
											"constant": false,
											"id": 2739,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "6850:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 2748,
											"src": "6845:7:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2738,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6845:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2741,
											"mutability": "mutable",
											"name": "poolId",
											"nameLocation": "6869:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2748,
											"src": "6864:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2740,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6864:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2743,
											"mutability": "mutable",
											"name": "parentId",
											"nameLocation": "6891:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2748,
											"src": "6886:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2742,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6886:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2745,
											"mutability": "mutable",
											"name": "bonusCount",
											"nameLocation": "6917:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2748,
											"src": "6912:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2744,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6912:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2747,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "6944:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2748,
											"src": "6939:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2746,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "6939:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserBooster",
									"nameLocation": "6822:11:8",
									"nodeType": "StructDefinition",
									"scope": 3749,
									"src": "6815:157:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2755,
									"mutability": "mutable",
									"name": "userPooltopup",
									"nameLocation": "7074:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "7016:71:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2737_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))"
									},
									"typeName": {
										"id": 2754,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2749,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7024:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7016:48:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2737_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPoolTopup))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2753,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2750,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7041:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7033:30:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPoolTopup_$2737_storage_$",
												"typeString": "mapping(uint256 => struct Storage.UserPoolTopup)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2752,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2751,
													"name": "UserPoolTopup",
													"nameLocations": [
														"7049:13:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2737,
													"src": "7049:13:8"
												},
												"referencedDeclaration": 2737,
												"src": "7049:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserPoolTopup_$2737_storage_ptr",
													"typeString": "struct Storage.UserPoolTopup"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2762,
									"mutability": "mutable",
									"name": "userPooldtl",
									"nameLocation": "7149:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "7096:64:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPool_$2732_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))"
									},
									"typeName": {
										"id": 2761,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2756,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7104:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7096:43:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserPool_$2732_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserPool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2760,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2757,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7121:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7113:25:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPool_$2732_storage_$",
												"typeString": "mapping(uint256 => struct Storage.UserPool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2759,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2758,
													"name": "UserPool",
													"nameLocations": [
														"7129:8:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2732,
													"src": "7129:8:8"
												},
												"referencedDeclaration": 2732,
												"src": "7129:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserPool_$2732_storage_ptr",
													"typeString": "struct Storage.UserPool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2769,
									"mutability": "mutable",
									"name": "userChildren",
									"nameLocation": "7217:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "7167:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2768,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2763,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7175:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7167:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2767,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2764,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7191:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7183:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7199:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2766,
												"nodeType": "ArrayTypeName",
												"src": "7199:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2776,
									"mutability": "mutable",
									"name": "userIdPerPool",
									"nameLocation": "7309:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "7259:63:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2775,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2770,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7267:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7259:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2774,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2771,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7283:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7275:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2772,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7291:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2773,
												"nodeType": "ArrayTypeName",
												"src": "7291:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2781,
									"mutability": "mutable",
									"name": "poolUsers",
									"nameLocation": "7394:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "7361:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2780,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2777,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7369:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7361:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2778,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7377:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2779,
											"nodeType": "ArrayTypeName",
											"src": "7377:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2787,
									"mutability": "mutable",
									"name": "userHasPool",
									"nameLocation": "7488:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "7440:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 2786,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2782,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7448:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7440:38:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2785,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2783,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7464:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7456:21:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2784,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "7472:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2794,
									"mutability": "mutable",
									"name": "userBoosterdtl",
									"nameLocation": "7603:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "7547:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$2748_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))"
									},
									"typeName": {
										"id": 2793,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2788,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7555:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7547:46:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$2748_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2792,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2789,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7572:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7564:28:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBooster_$2748_storage_$",
												"typeString": "mapping(uint256 => struct Storage.UserBooster)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2791,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2790,
													"name": "UserBooster",
													"nameLocations": [
														"7580:11:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2748,
													"src": "7580:11:8"
												},
												"referencedDeclaration": 2748,
												"src": "7580:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserBooster_$2748_storage_ptr",
													"typeString": "struct Storage.UserBooster"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2801,
									"mutability": "mutable",
									"name": "userBoosterChildren",
									"nameLocation": "7675:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "7624:70:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2800,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2795,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7632:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7624:41:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2799,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2796,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7649:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7641:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2797,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7657:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2798,
												"nodeType": "ArrayTypeName",
												"src": "7657:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2806,
									"mutability": "mutable",
									"name": "boosterUsers",
									"nameLocation": "7734:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "7701:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2805,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2802,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7709:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7701:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2803,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7717:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2804,
											"nodeType": "ArrayTypeName",
											"src": "7717:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2812,
									"mutability": "mutable",
									"name": "userHasbooster",
									"nameLocation": "7834:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "7786:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 2811,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2807,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7794:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "7786:38:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2810,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2808,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "7810:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "7802:21:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2809,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "7818:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "76f5f700",
									"id": 2815,
									"mutability": "constant",
									"name": "WEEK_DURATION",
									"nameLocation": "7909:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "7888:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2813,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7888:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 2814,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7925:6:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ebe0ff15",
									"id": 2818,
									"mutability": "constant",
									"name": "WeeklyCapping",
									"nameLocation": "7962:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "7941:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2816,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7941:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030653138",
										"id": 2817,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7978:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										},
										"value": "1000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ca8e9121",
									"id": 2821,
									"mutability": "mutable",
									"name": "currentWeeklyRound",
									"nameLocation": "8009:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "7997:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2819,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7997:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2820,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8030:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fddc806f",
									"id": 2824,
									"mutability": "mutable",
									"name": "currentWeeklyStartTime",
									"nameLocation": "8050:22:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "8038:38:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2822,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "8038:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2823,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8075:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3080b5bc",
									"id": 2827,
									"mutability": "mutable",
									"name": "WeeklyTotalReward",
									"nameLocation": "8097:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "8085:33:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2825,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "8085:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2826,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8117:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.WeeklyContest",
									"id": 2846,
									"members": [
										{
											"constant": false,
											"id": 2829,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "8171:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2846,
											"src": "8166:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2828,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8166:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2831,
											"mutability": "mutable",
											"name": "totalReward",
											"nameLocation": "8198:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2846,
											"src": "8193:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2830,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8193:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2833,
											"mutability": "mutable",
											"name": "totalUsers",
											"nameLocation": "8225:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2846,
											"src": "8220:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2832,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8220:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2835,
											"mutability": "mutable",
											"name": "perUserReward",
											"nameLocation": "8251:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2846,
											"src": "8246:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2834,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8246:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2837,
											"mutability": "mutable",
											"name": "claimedCount",
											"nameLocation": "8280:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2846,
											"src": "8275:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2836,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8275:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2839,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "8308:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2846,
											"src": "8303:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2838,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8303:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2841,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "8333:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2846,
											"src": "8328:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2840,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8328:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2843,
											"mutability": "mutable",
											"name": "carryForward",
											"nameLocation": "8356:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2846,
											"src": "8351:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2842,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8351:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2845,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "8384:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2846,
											"src": "8379:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2844,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8379:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WeeklyContest",
									"nameLocation": "8141:13:8",
									"nodeType": "StructDefinition",
									"scope": 3749,
									"src": "8134:264:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.weeklyUser",
									"id": 2857,
									"members": [
										{
											"constant": false,
											"id": 2848,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "8450:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2857,
											"src": "8445:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2847,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8445:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2850,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "8474:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2857,
											"src": "8469:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2849,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8469:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2852,
											"mutability": "mutable",
											"name": "claimTime",
											"nameLocation": "8498:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2857,
											"src": "8493:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2851,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8493:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2854,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "8523:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2857,
											"src": "8518:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2853,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8518:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2856,
											"mutability": "mutable",
											"name": "isQualified",
											"nameLocation": "8549:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2857,
											"src": "8544:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2855,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "8544:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "weeklyUser",
									"nameLocation": "8416:10:8",
									"nodeType": "StructDefinition",
									"scope": 3749,
									"src": "8409:159:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2862,
									"mutability": "mutable",
									"name": "weeklyContestdtl",
									"nameLocation": "8615:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "8574:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$2846_storage_$",
										"typeString": "mapping(uint256 => struct Storage.WeeklyContest)"
									},
									"typeName": {
										"id": 2861,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2858,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8583:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8574:31:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$2846_storage_$",
											"typeString": "mapping(uint256 => struct Storage.WeeklyContest)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2860,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2859,
												"name": "WeeklyContest",
												"nameLocations": [
													"8591:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2846,
												"src": "8591:13:8"
											},
											"referencedDeclaration": 2846,
											"src": "8591:13:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_WeeklyContest_$2846_storage_ptr",
												"typeString": "struct Storage.WeeklyContest"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2867,
									"mutability": "mutable",
									"name": "weeklyQualifiedUsers",
									"nameLocation": "8689:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "8666:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2866,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2863,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8674:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8666:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2864,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8681:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2865,
											"nodeType": "ArrayTypeName",
											"src": "8681:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2874,
									"mutability": "mutable",
									"name": "weeklyUserdtl",
									"nameLocation": "8793:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "8739:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2857_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))"
									},
									"typeName": {
										"id": 2873,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2868,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8747:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8739:44:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2857_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2872,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2869,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8763:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "8755:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2857_storage_$",
												"typeString": "mapping(uint256 => struct Storage.weeklyUser)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2871,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2870,
													"name": "weeklyUser",
													"nameLocations": [
														"8771:10:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2857,
													"src": "8771:10:8"
												},
												"referencedDeclaration": 2857,
												"src": "8771:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_weeklyUser_$2857_storage_ptr",
													"typeString": "struct Storage.weeklyUser"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2881,
									"mutability": "mutable",
									"name": "weeklyUserDirects",
									"nameLocation": "8890:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "8840:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
									},
									"typeName": {
										"id": 2880,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2875,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "8848:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "8840:40:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2879,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2876,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "8864:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "8856:23:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
												"typeString": "mapping(uint256 => uint256[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 2877,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8872:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2878,
												"nodeType": "ArrayTypeName",
												"src": "8872:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "ca8a78d1841a8dafbb8ff53c869b3fa9a69abd051022178024f84b680ffd2e3c",
									"id": 2897,
									"name": "WeeklyClosed",
									"nameLocation": "8966:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2883,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "8984:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "8979:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2882,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8979:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2885,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalUsers",
												"nameLocation": "8998:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "8993:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2884,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8993:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2887,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "9015:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "9010:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2886,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9010:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2889,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReward",
												"nameLocation": "9035:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "9030:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2888,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9030:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2891,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDistributed",
												"nameLocation": "9053:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "9048:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2890,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9048:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2893,
												"indexed": false,
												"mutability": "mutable",
												"name": "leftoverReward",
												"nameLocation": "9076:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "9071:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2892,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9071:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2895,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "9097:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "9092:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2894,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9092:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8978:127:8"
									},
									"src": "8960:146:8"
								},
								{
									"anonymous": false,
									"eventSelector": "96ee4f374d0394c5383b347dc3b7ec04a1eceddcd2e25521157bce21c42b24d5",
									"id": 2907,
									"name": "WeeklyRewardClaim",
									"nameLocation": "9118:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2899,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "9141:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "9136:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2898,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9136:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2901,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "9155:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "9150:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2900,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9150:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2903,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "9168:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "9163:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2902,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9163:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2905,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTime",
												"nameLocation": "9189:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "9184:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2904,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9184:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9135:64:8"
									},
									"src": "9112:88:8"
								},
								{
									"anonymous": false,
									"eventSelector": "360cb96d3e85b4fc299ddfa9a572850fc70961c86f0f1703f033143b0e5a82cf",
									"id": 2915,
									"name": "WeeklyContestQualified",
									"nameLocation": "9212:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2909,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "9240:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "9235:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2908,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9235:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2911,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "9254:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "9249:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2910,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9249:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2913,
												"indexed": false,
												"mutability": "mutable",
												"name": "joinTime",
												"nameLocation": "9267:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "9262:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2912,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9262:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9234:42:8"
									},
									"src": "9206:71:8"
								},
								{
									"constant": true,
									"functionSelector": "2a891534",
									"id": 2918,
									"mutability": "constant",
									"name": "MONTH_DURATION",
									"nameLocation": "9355:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "9334:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2916,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "9334:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 2917,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9372:7:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c8df2908",
									"id": 2921,
									"mutability": "constant",
									"name": "monthlyCapping",
									"nameLocation": "9407:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "9386:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2919,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "9386:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030653138",
										"id": 2920,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9424:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000"
										},
										"value": "10000e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c9ed0708",
									"id": 2924,
									"mutability": "mutable",
									"name": "currentMonthlyRound",
									"nameLocation": "9457:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "9445:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2922,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "9445:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2923,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9479:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e898fc38",
									"id": 2927,
									"mutability": "mutable",
									"name": "currentMonthlyStartTime",
									"nameLocation": "9499:23:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "9487:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2925,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "9487:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2926,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9525:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a59d17d1",
									"id": 2930,
									"mutability": "mutable",
									"name": "monthlyTotalReward",
									"nameLocation": "9545:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "9533:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2928,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "9533:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2929,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9566:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.monthlyRoyalty",
									"id": 2949,
									"members": [
										{
											"constant": false,
											"id": 2932,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "9614:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2949,
											"src": "9609:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2931,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9609:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2934,
											"mutability": "mutable",
											"name": "totalReward",
											"nameLocation": "9641:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2949,
											"src": "9636:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2933,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9636:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2936,
											"mutability": "mutable",
											"name": "totalUsers",
											"nameLocation": "9668:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 2949,
											"src": "9663:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2935,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9663:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2938,
											"mutability": "mutable",
											"name": "perUserReward",
											"nameLocation": "9694:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 2949,
											"src": "9689:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2937,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9689:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2940,
											"mutability": "mutable",
											"name": "claimedCount",
											"nameLocation": "9723:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2949,
											"src": "9718:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2939,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9718:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2942,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "9751:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2949,
											"src": "9746:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2941,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9746:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2944,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "9776:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 2949,
											"src": "9771:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2943,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9771:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2946,
											"mutability": "mutable",
											"name": "carryForward",
											"nameLocation": "9799:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 2949,
											"src": "9794:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2945,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9794:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2948,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "9827:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 2949,
											"src": "9822:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2947,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "9822:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "monthlyRoyalty",
									"nameLocation": "9583:14:8",
									"nodeType": "StructDefinition",
									"scope": 3749,
									"src": "9576:265:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.monthlyRoyaltyUser",
									"id": 2962,
									"members": [
										{
											"constant": false,
											"id": 2951,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "9898:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 2962,
											"src": "9893:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2950,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9893:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2953,
											"mutability": "mutable",
											"name": "qualifiedRoundId",
											"nameLocation": "9922:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 2962,
											"src": "9917:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2952,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9917:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2955,
											"mutability": "mutable",
											"name": "claimTime",
											"nameLocation": "9955:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2962,
											"src": "9950:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2954,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "9950:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2959,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "9997:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 2962,
											"src": "9975:31:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 2958,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 2956,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9983:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "9975:21:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2957,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9991:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2961,
											"mutability": "mutable",
											"name": "isQualified",
											"nameLocation": "10023:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 2962,
											"src": "10018:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2960,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10018:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "monthlyRoyaltyUser",
									"nameLocation": "9856:18:8",
									"nodeType": "StructDefinition",
									"scope": 3749,
									"src": "9849:193:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2967,
									"mutability": "mutable",
									"name": "monthlyRoyaltydtl",
									"nameLocation": "10090:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "10048:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$2949_storage_$",
										"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty)"
									},
									"typeName": {
										"id": 2966,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2963,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "10057:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "10048:32:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$2949_storage_$",
											"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2965,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2964,
												"name": "monthlyRoyalty",
												"nameLocations": [
													"10065:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2949,
												"src": "10065:14:8"
											},
											"referencedDeclaration": 2949,
											"src": "10065:14:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_monthlyRoyalty_$2949_storage_ptr",
												"typeString": "struct Storage.monthlyRoyalty"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2970,
									"mutability": "mutable",
									"name": "monthlyQualifiedUsers",
									"nameLocation": "10150:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "10143:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2968,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "10143:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2969,
										"nodeType": "ArrayTypeName",
										"src": "10143:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2975,
									"mutability": "mutable",
									"name": "monthlyRoyaltyUserdtl",
									"nameLocation": "10257:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "10212:66:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2962_storage_$",
										"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)"
									},
									"typeName": {
										"id": 2974,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2971,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "10220:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "10212:35:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2962_storage_$",
											"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2973,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2972,
												"name": "monthlyRoyaltyUser",
												"nameLocations": [
													"10228:18:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2962,
												"src": "10228:18:8"
											},
											"referencedDeclaration": 2962,
											"src": "10228:18:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2962_storage_ptr",
												"typeString": "struct Storage.monthlyRoyaltyUser"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2980,
									"mutability": "mutable",
									"name": "monthlyUserDirects",
									"nameLocation": "10318:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "10285:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 2979,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2976,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "10293:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "10285:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2977,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10301:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2978,
											"nodeType": "ArrayTypeName",
											"src": "10301:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "1b674071adfa65db18518e4868ae7d5f54dd365c69e0babe9b704cbade8fe4bb",
									"id": 2996,
									"name": "MonthlyClosed",
									"nameLocation": "10406:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2982,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "10425:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "10420:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2981,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10420:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2984,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalUsers",
												"nameLocation": "10439:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "10434:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2983,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10434:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2986,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "10456:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "10451:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2985,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10451:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2988,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReward",
												"nameLocation": "10476:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "10471:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2987,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10471:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2990,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDistributed",
												"nameLocation": "10494:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "10489:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2989,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10489:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2992,
												"indexed": false,
												"mutability": "mutable",
												"name": "leftoverReward",
												"nameLocation": "10517:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "10512:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2991,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10512:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2994,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "10538:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "10533:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2993,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10533:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10419:127:8"
									},
									"src": "10400:147:8"
								},
								{
									"anonymous": false,
									"eventSelector": "8211032682f8fd8be8ff252e0a106cdb6ad4b10427152b4d93c2bc9a1f11c3c2",
									"id": 3006,
									"name": "MonthlyRewardClaim",
									"nameLocation": "10559:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2998,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "10583:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3006,
												"src": "10578:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2997,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10578:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3000,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "10597:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 3006,
												"src": "10592:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2999,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10592:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3002,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "10610:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 3006,
												"src": "10605:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3001,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10605:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3004,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTime",
												"nameLocation": "10631:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 3006,
												"src": "10626:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3003,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10626:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10577:64:8"
									},
									"src": "10553:89:8"
								},
								{
									"anonymous": false,
									"eventSelector": "42ee5ef523a95c6fb3ffdd2e9b34955b83ea8c2b11ff268c87ae6ea25556eaac",
									"id": 3014,
									"name": "MonthlyRoyaltyQualified",
									"nameLocation": "10654:23:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3008,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "10683:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "10678:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3007,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10678:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3010,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "10697:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "10692:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3009,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10692:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3012,
												"indexed": false,
												"mutability": "mutable",
												"name": "joinTime",
												"nameLocation": "10710:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3014,
												"src": "10705:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3011,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10705:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10677:42:8"
									},
									"src": "10648:72:8"
								},
								{
									"constant": false,
									"functionSelector": "4b8cbf9b",
									"id": 3017,
									"mutability": "mutable",
									"name": "topRoyaltyRound",
									"nameLocation": "10767:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "10755:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3015,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "10755:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 3016,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10785:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b40ab97",
									"id": 3020,
									"mutability": "mutable",
									"name": "topRoyaltyStartTime",
									"nameLocation": "10805:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "10793:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3018,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "10793:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 3019,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10827:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5b62d1d5",
									"id": 3023,
									"mutability": "mutable",
									"name": "topRoyaltyReward",
									"nameLocation": "10847:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "10835:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3021,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "10835:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 3022,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10866:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.topRoyalty",
									"id": 3042,
									"members": [
										{
											"constant": false,
											"id": 3025,
											"mutability": "mutable",
											"name": "roundId",
											"nameLocation": "10910:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 3042,
											"src": "10905:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3024,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10905:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3027,
											"mutability": "mutable",
											"name": "totalReward",
											"nameLocation": "10937:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 3042,
											"src": "10932:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3026,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10932:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3029,
											"mutability": "mutable",
											"name": "totalUsers",
											"nameLocation": "10964:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 3042,
											"src": "10959:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3028,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10959:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3031,
											"mutability": "mutable",
											"name": "perUserReward",
											"nameLocation": "10990:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 3042,
											"src": "10985:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3030,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "10985:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3033,
											"mutability": "mutable",
											"name": "claimedCount",
											"nameLocation": "11019:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 3042,
											"src": "11014:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3032,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11014:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3035,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "11047:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 3042,
											"src": "11042:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3034,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11042:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3037,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "11072:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 3042,
											"src": "11067:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3036,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11067:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3039,
											"mutability": "mutable",
											"name": "carryForward",
											"nameLocation": "11095:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 3042,
											"src": "11090:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3038,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11090:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3041,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "11123:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 3042,
											"src": "11118:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3040,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "11118:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "topRoyalty",
									"nameLocation": "10883:10:8",
									"nodeType": "StructDefinition",
									"scope": 3749,
									"src": "10876:261:8",
									"visibility": "public"
								},
								{
									"canonicalName": "Storage.topRoyaltyUser",
									"id": 3055,
									"members": [
										{
											"constant": false,
											"id": 3044,
											"mutability": "mutable",
											"name": "joinTime",
											"nameLocation": "11190:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 3055,
											"src": "11185:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3043,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11185:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3046,
											"mutability": "mutable",
											"name": "qualifiedRoundId",
											"nameLocation": "11214:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 3055,
											"src": "11209:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3045,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11209:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3048,
											"mutability": "mutable",
											"name": "claimTime",
											"nameLocation": "11247:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 3055,
											"src": "11242:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3047,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11242:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3052,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "11289:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 3055,
											"src": "11267:31:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"typeName": {
												"id": 3051,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 3049,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11275:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "11267:21:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
													"typeString": "mapping(uint256 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 3050,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11283:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3054,
											"mutability": "mutable",
											"name": "isQualified",
											"nameLocation": "11315:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 3055,
											"src": "11310:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3053,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "11310:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "topRoyaltyUser",
									"nameLocation": "11152:14:8",
									"nodeType": "StructDefinition",
									"scope": 3749,
									"src": "11145:189:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3060,
									"mutability": "mutable",
									"name": "topRoyaltydtl",
									"nameLocation": "11378:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "11340:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyalty_$3042_storage_$",
										"typeString": "mapping(uint256 => struct Storage.topRoyalty)"
									},
									"typeName": {
										"id": 3059,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3056,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "11349:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "11340:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyalty_$3042_storage_$",
											"typeString": "mapping(uint256 => struct Storage.topRoyalty)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3058,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3057,
												"name": "topRoyalty",
												"nameLocations": [
													"11357:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3042,
												"src": "11357:10:8"
											},
											"referencedDeclaration": 3042,
											"src": "11357:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_topRoyalty_$3042_storage_ptr",
												"typeString": "struct Storage.topRoyalty"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3063,
									"mutability": "mutable",
									"name": "topRoyaltyQualifiedUsers",
									"nameLocation": "11438:24:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "11431:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 3061,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "11431:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 3062,
										"nodeType": "ArrayTypeName",
										"src": "11431:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3068,
									"mutability": "mutable",
									"name": "topRoyaltyUserdtl",
									"nameLocation": "11540:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "11499:58:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyaltyUser_$3055_storage_$",
										"typeString": "mapping(uint256 => struct Storage.topRoyaltyUser)"
									},
									"typeName": {
										"id": 3067,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3064,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "11507:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "11499:31:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyaltyUser_$3055_storage_$",
											"typeString": "mapping(uint256 => struct Storage.topRoyaltyUser)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3066,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3065,
												"name": "topRoyaltyUser",
												"nameLocations": [
													"11515:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3055,
												"src": "11515:14:8"
											},
											"referencedDeclaration": 3055,
											"src": "11515:14:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_topRoyaltyUser_$3055_storage_ptr",
												"typeString": "struct Storage.topRoyaltyUser"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3073,
									"mutability": "mutable",
									"name": "topRoyaltyUserDirects",
									"nameLocation": "11597:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 3749,
									"src": "11564:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(uint256 => uint256[])"
									},
									"typeName": {
										"id": 3072,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3069,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "11572:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "11564:23:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(uint256 => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 3070,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "11580:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 3071,
											"nodeType": "ArrayTypeName",
											"src": "11580:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "3e2269a22c7571b51c53565ece51da09613519b306c6dde588beea1f5fd3cfd3",
									"id": 3089,
									"name": "TopRoyaltyClosed",
									"nameLocation": "11684:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3075,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "11706:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "11701:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3074,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11701:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3077,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalUsers",
												"nameLocation": "11720:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "11715:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3076,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11715:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3079,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "11737:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "11732:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3078,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11732:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3081,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReward",
												"nameLocation": "11757:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "11752:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3080,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11752:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3083,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDistributed",
												"nameLocation": "11775:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "11770:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3082,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11770:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3085,
												"indexed": false,
												"mutability": "mutable",
												"name": "leftoverReward",
												"nameLocation": "11798:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "11793:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3084,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11793:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3087,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "11819:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "11814:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3086,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11814:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11700:127:8"
									},
									"src": "11678:150:8"
								},
								{
									"anonymous": false,
									"eventSelector": "6ac5dc27fbf1276a5db7faad992ea92a268d34b18f81922f747d9d3beb5f9c55",
									"id": 3099,
									"name": "TopRoyaltyRewardClaim",
									"nameLocation": "11840:21:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3091,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "11867:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "11862:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3090,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3093,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "11881:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "11876:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3092,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11876:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3095,
												"indexed": false,
												"mutability": "mutable",
												"name": "perUserReward",
												"nameLocation": "11894:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "11889:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3094,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11889:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3097,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTime",
												"nameLocation": "11915:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 3099,
												"src": "11910:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3096,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11910:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11861:64:8"
									},
									"src": "11834:92:8"
								},
								{
									"anonymous": false,
									"eventSelector": "e0adb9e294d1c73aeabf8e4f0d778fcf5f718aac0cd3c7527f920e520ec9aff2",
									"id": 3107,
									"name": "TopRoyaltyQualified",
									"nameLocation": "11938:19:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3101,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "11963:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3107,
												"src": "11958:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3100,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11958:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3103,
												"indexed": false,
												"mutability": "mutable",
												"name": "userId",
												"nameLocation": "11977:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 3107,
												"src": "11972:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11972:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3105,
												"indexed": false,
												"mutability": "mutable",
												"name": "joinTime",
												"nameLocation": "11990:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3107,
												"src": "11985:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11985:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11957:42:8"
									},
									"src": "11932:68:8"
								},
								{
									"body": {
										"id": 3110,
										"nodeType": "Block",
										"src": "12031:17:8",
										"statements": []
									},
									"id": 3111,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12028:2:8"
									},
									"returnParameters": {
										"id": 3109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12031:0:8"
									},
									"scope": 3749,
									"src": "12017:31:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3157,
										"nodeType": "Block",
										"src": "12117:695:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3117,
																"name": "creatorWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "12132:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12157:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12149:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3118,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12149:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 3121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12149:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12132:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "666565206164647273206e6f7420736574",
															"id": 3123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12160:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24633079efecc28c5aede41112c3990abdd9e7b0bb26db3b9a203d1a67268b03",
																"typeString": "literal_string \"fee addrs not set\""
															},
															"value": "fee addrs not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24633079efecc28c5aede41112c3990abdd9e7b0bb26db3b9a203d1a67268b03",
																"typeString": "literal_string \"fee addrs not set\""
															}
														],
														"id": 3116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12124:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12124:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3125,
												"nodeType": "ExpressionStatement",
												"src": "12124:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3129,
															"name": "creatorWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2332,
															"src": "12296:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3130,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3113,
															"src": "12311:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3126,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "12278:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 3128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12283:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "12278:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 3131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12278:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3132,
												"nodeType": "ExpressionStatement",
												"src": "12278:41:8"
											},
											{
												"assignments": [
													3135
												],
												"declarations": [
													{
														"constant": false,
														"id": 3135,
														"mutability": "mutable",
														"name": "creatorIncome",
														"nameLocation": "12398:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 3157,
														"src": "12379:32:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
															"typeString": "struct Storage.UserIncome"
														},
														"typeName": {
															"id": 3134,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3133,
																"name": "UserIncome",
																"nameLocations": [
																	"12379:10:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2513,
																"src": "12379:10:8"
															},
															"referencedDeclaration": 2513,
															"src": "12379:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																"typeString": "struct Storage.UserIncome"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3139,
												"initialValue": {
													"baseExpression": {
														"id": 3136,
														"name": "userIncomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2549,
														"src": "12414:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2513_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
														}
													},
													"id": 3138,
													"indexExpression": {
														"id": 3137,
														"name": "defaultRefId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2338,
														"src": "12426:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12414:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIncome_$2513_storage",
														"typeString": "struct Storage.UserIncome storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12379:60:8"
											},
											{
												"expression": {
													"id": 3144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3140,
															"name": "creatorIncome",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3135,
															"src": "12446:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 3142,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12460:11:8",
														"memberName": "totalIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2490,
														"src": "12446:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 3143,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3113,
														"src": "12475:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12446:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3145,
												"nodeType": "ExpressionStatement",
												"src": "12446:36:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3147,
															"name": "creatorWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2332,
															"src": "12729:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3148,
															"name": "creatorWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2332,
															"src": "12744:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3149,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3113,
															"src": "12759:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 3150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12768:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 3151,
																"name": "IncomeType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "12771:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_IncomeType_$2535_$",
																	"typeString": "type(enum Storage.IncomeType)"
																}
															},
															"id": 3152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "12782:7:8",
															"memberName": "Creator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2525,
															"src": "12771:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$2535",
																"typeString": "enum Storage.IncomeType"
															}
														},
														{
															"expression": {
																"id": 3153,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12791:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12797:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "12791:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_enum$_IncomeType_$2535",
																"typeString": "enum Storage.IncomeType"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3146,
														"name": "IncomeDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2660,
														"src": "12710:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_enum$_IncomeType_$2535_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,enum Storage.IncomeType,uint256)"
														}
													},
													"id": 3155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12710:98:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3156,
												"nodeType": "EmitStatement",
												"src": "12705:103:8"
											}
										]
									},
									"id": 3158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sendToCreator",
									"nameLocation": "12079:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12099:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3158,
												"src": "12094:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3112,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12094:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12093:14:8"
									},
									"returnParameters": {
										"id": 3115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12117:0:8"
									},
									"scope": 3749,
									"src": "12070:742:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3337,
										"nodeType": "Block",
										"src": "12946:2072:8",
										"statements": [
											{
												"assignments": [
													3174
												],
												"declarations": [
													{
														"constant": false,
														"id": 3174,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "12970:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 3337,
														"src": "12957:17:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 3173,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3172,
																"name": "User",
																"nameLocations": [
																	"12957:4:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2488,
																"src": "12957:4:8"
															},
															"referencedDeclaration": 2488,
															"src": "12957:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3178,
												"initialValue": {
													"baseExpression": {
														"id": 3175,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2544,
														"src": "12977:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 3177,
													"indexExpression": {
														"id": 3176,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3160,
														"src": "12983:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12977:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2488_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12957:34:8"
											},
											{
												"assignments": [
													3180
												],
												"declarations": [
													{
														"constant": false,
														"id": 3180,
														"mutability": "mutable",
														"name": "userAddress",
														"nameLocation": "13010:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 3337,
														"src": "13002:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13002:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3183,
												"initialValue": {
													"expression": {
														"id": 3181,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3174,
														"src": "13024:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
															"typeString": "struct Storage.User storage pointer"
														}
													},
													"id": 3182,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13029:7:8",
													"memberName": "account",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2447,
													"src": "13024:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13002:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3185,
																"name": "userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3180,
																"src": "13055:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13078:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13070:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3186,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13070:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 3189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13070:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13055:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642075736572",
															"id": 3191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13082:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34e7942b50fb081b1a15c529d5017673bd90fd52cb4962fa3d50206a7121a1b",
																"typeString": "literal_string \"Invalid user\""
															},
															"value": "Invalid user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34e7942b50fb081b1a15c529d5017673bd90fd52cb4962fa3d50206a7121a1b",
																"typeString": "literal_string \"Invalid user\""
															}
														],
														"id": 3184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13047:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13047:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3193,
												"nodeType": "ExpressionStatement",
												"src": "13047:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3195,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3164,
																"src": "13116:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13126:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13116:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616d6f756e74",
															"id": 3198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13129:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															},
															"value": "Zero amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															}
														],
														"id": 3194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13108:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13108:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3200,
												"nodeType": "ExpressionStatement",
												"src": "13108:35:8"
											},
											{
												"assignments": [
													3203
												],
												"declarations": [
													{
														"constant": false,
														"id": 3203,
														"mutability": "mutable",
														"name": "income",
														"nameLocation": "13291:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 3337,
														"src": "13272:25:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
															"typeString": "struct Storage.UserIncome"
														},
														"typeName": {
															"id": 3202,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3201,
																"name": "UserIncome",
																"nameLocations": [
																	"13272:10:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2513,
																"src": "13272:10:8"
															},
															"referencedDeclaration": 2513,
															"src": "13272:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																"typeString": "struct Storage.UserIncome"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3207,
												"initialValue": {
													"baseExpression": {
														"id": 3204,
														"name": "userIncomes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2549,
														"src": "13300:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserIncome_$2513_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserIncome storage ref)"
														}
													},
													"id": 3206,
													"indexExpression": {
														"id": 3205,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3160,
														"src": "13312:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13300:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserIncome_$2513_storage",
														"typeString": "struct Storage.UserIncome storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13272:48:8"
											},
											{
												"expression": {
													"id": 3212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3208,
															"name": "income",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3203,
															"src": "13331:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																"typeString": "struct Storage.UserIncome storage pointer"
															}
														},
														"id": 3210,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13338:11:8",
														"memberName": "totalIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2490,
														"src": "13331:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 3211,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3164,
														"src": "13353:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13331:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3213,
												"nodeType": "ExpressionStatement",
												"src": "13331:29:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_IncomeType_$2535",
														"typeString": "enum Storage.IncomeType"
													},
													"id": 3217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3214,
														"name": "_incomeType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3169,
														"src": "13447:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_IncomeType_$2535",
															"typeString": "enum Storage.IncomeType"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3215,
															"name": "IncomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2535,
															"src": "13462:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_IncomeType_$2535_$",
																"typeString": "type(enum Storage.IncomeType)"
															}
														},
														"id": 3216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13473:7:8",
														"memberName": "Sponsor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2526,
														"src": "13462:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_IncomeType_$2535",
															"typeString": "enum Storage.IncomeType"
														}
													},
													"src": "13447:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_IncomeType_$2535",
															"typeString": "enum Storage.IncomeType"
														},
														"id": 3227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3224,
															"name": "_incomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3169,
															"src": "13533:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$2535",
																"typeString": "enum Storage.IncomeType"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 3225,
																"name": "IncomeType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "13548:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_IncomeType_$2535_$",
																	"typeString": "type(enum Storage.IncomeType)"
																}
															},
															"id": 3226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "13559:6:8",
															"memberName": "Matrix",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2527,
															"src": "13548:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$2535",
																"typeString": "enum Storage.IncomeType"
															}
														},
														"src": "13533:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_IncomeType_$2535",
																"typeString": "enum Storage.IncomeType"
															},
															"id": 3237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3234,
																"name": "_incomeType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3169,
																"src": "13617:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_IncomeType_$2535",
																	"typeString": "enum Storage.IncomeType"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3235,
																	"name": "IncomeType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2535,
																	"src": "13632:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_IncomeType_$2535_$",
																		"typeString": "type(enum Storage.IncomeType)"
																	}
																},
																"id": 3236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "13643:12:8",
																"memberName": "LevelBooster",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2528,
																"src": "13632:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_IncomeType_$2535",
																	"typeString": "enum Storage.IncomeType"
																}
															},
															"src": "13617:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_IncomeType_$2535",
																	"typeString": "enum Storage.IncomeType"
																},
																"id": 3247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3244,
																	"name": "_incomeType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3169,
																	"src": "13715:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_IncomeType_$2535",
																		"typeString": "enum Storage.IncomeType"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3245,
																		"name": "IncomeType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2535,
																		"src": "13730:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_IncomeType_$2535_$",
																			"typeString": "type(enum Storage.IncomeType)"
																		}
																	},
																	"id": 3246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "13741:9:8",
																	"memberName": "Community",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2529,
																	"src": "13730:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_IncomeType_$2535",
																		"typeString": "enum Storage.IncomeType"
																	}
																},
																"src": "13715:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_IncomeType_$2535",
																		"typeString": "enum Storage.IncomeType"
																	},
																	"id": 3257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3254,
																		"name": "_incomeType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3169,
																		"src": "13808:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_IncomeType_$2535",
																			"typeString": "enum Storage.IncomeType"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 3255,
																			"name": "IncomeType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "13823:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_IncomeType_$2535_$",
																				"typeString": "type(enum Storage.IncomeType)"
																			}
																		},
																		"id": 3256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "13834:4:8",
																		"memberName": "Pool",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2530,
																		"src": "13823:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_IncomeType_$2535",
																			"typeString": "enum Storage.IncomeType"
																		}
																	},
																	"src": "13808:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_IncomeType_$2535",
																			"typeString": "enum Storage.IncomeType"
																		},
																		"id": 3267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3264,
																			"name": "_incomeType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3169,
																			"src": "13888:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_IncomeType_$2535",
																				"typeString": "enum Storage.IncomeType"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 3265,
																				"name": "IncomeType",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2535,
																				"src": "13903:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_IncomeType_$2535_$",
																					"typeString": "type(enum Storage.IncomeType)"
																				}
																			},
																			"id": 3266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "13914:7:8",
																			"memberName": "Booster",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2531,
																			"src": "13903:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_IncomeType_$2535",
																				"typeString": "enum Storage.IncomeType"
																			}
																		},
																		"src": "13888:33:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_enum$_IncomeType_$2535",
																				"typeString": "enum Storage.IncomeType"
																			},
																			"id": 3277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3274,
																				"name": "_incomeType",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3169,
																				"src": "13974:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_IncomeType_$2535",
																					"typeString": "enum Storage.IncomeType"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"expression": {
																					"id": 3275,
																					"name": "IncomeType",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2535,
																					"src": "13989:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_IncomeType_$2535_$",
																						"typeString": "type(enum Storage.IncomeType)"
																					}
																				},
																				"id": 3276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "14000:13:8",
																				"memberName": "WeeklyContest",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2532,
																				"src": "13989:24:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_IncomeType_$2535",
																					"typeString": "enum Storage.IncomeType"
																				}
																			},
																			"src": "13974:39:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_IncomeType_$2535",
																					"typeString": "enum Storage.IncomeType"
																				},
																				"id": 3287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3284,
																					"name": "_incomeType",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3169,
																					"src": "14072:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_IncomeType_$2535",
																						"typeString": "enum Storage.IncomeType"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 3285,
																						"name": "IncomeType",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2535,
																						"src": "14087:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_IncomeType_$2535_$",
																							"typeString": "type(enum Storage.IncomeType)"
																						}
																					},
																					"id": 3286,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "14098:14:8",
																					"memberName": "MonthlyRoyalty",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2533,
																					"src": "14087:25:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_IncomeType_$2535",
																						"typeString": "enum Storage.IncomeType"
																					}
																				},
																				"src": "14072:40:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_enum$_IncomeType_$2535",
																						"typeString": "enum Storage.IncomeType"
																					},
																					"id": 3297,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3294,
																						"name": "_incomeType",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3169,
																						"src": "14166:11:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_IncomeType_$2535",
																							"typeString": "enum Storage.IncomeType"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"id": 3295,
																							"name": "IncomeType",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2535,
																							"src": "14181:10:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_enum$_IncomeType_$2535_$",
																								"typeString": "type(enum Storage.IncomeType)"
																							}
																						},
																						"id": 3296,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14192:10:8",
																						"memberName": "TopRoyalty",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2534,
																						"src": "14181:21:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_IncomeType_$2535",
																							"typeString": "enum Storage.IncomeType"
																						}
																					},
																					"src": "14166:36:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"expression": {
																						"arguments": [
																							{
																								"hexValue": "556e6b6e6f776e20696e636f6d652074797065",
																								"id": 3305,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "14269:21:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_362cd1cd93870aa625050dba699b71f0dd1830454709724c3f6a93954bf62033",
																									"typeString": "literal_string \"Unknown income type\""
																								},
																								"value": "Unknown income type"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_362cd1cd93870aa625050dba699b71f0dd1830454709724c3f6a93954bf62033",
																									"typeString": "literal_string \"Unknown income type\""
																								}
																							],
																							"id": 3304,
																							"name": "revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967277,
																								4294967277
																							],
																							"referencedDeclaration": 4294967277,
																							"src": "14262:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (string memory) pure"
																							}
																						},
																						"id": 3306,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14262:29:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 3307,
																					"nodeType": "ExpressionStatement",
																					"src": "14262:29:8"
																				},
																				"id": 3308,
																				"nodeType": "IfStatement",
																				"src": "14162:129:8",
																				"trueBody": {
																					"expression": {
																						"id": 3302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 3298,
																								"name": "income",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3203,
																								"src": "14204:6:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																									"typeString": "struct Storage.UserIncome storage pointer"
																								}
																							},
																							"id": 3300,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberLocation": "14211:10:8",
																							"memberName": "topRoyalty",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2512,
																							"src": "14204:17:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 3301,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3164,
																							"src": "14225:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "14204:28:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3303,
																					"nodeType": "ExpressionStatement",
																					"src": "14204:28:8"
																				}
																			},
																			"id": 3309,
																			"nodeType": "IfStatement",
																			"src": "14068:223:8",
																			"trueBody": {
																				"expression": {
																					"id": 3292,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 3288,
																							"name": "income",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3203,
																							"src": "14114:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																								"typeString": "struct Storage.UserIncome storage pointer"
																							}
																						},
																						"id": 3290,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "14121:14:8",
																						"memberName": "monthlyRoyalty",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2510,
																						"src": "14114:21:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"id": 3291,
																						"name": "_amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3164,
																						"src": "14139:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14114:32:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3293,
																				"nodeType": "ExpressionStatement",
																				"src": "14114:32:8"
																			}
																		},
																		"id": 3310,
																		"nodeType": "IfStatement",
																		"src": "13970:321:8",
																		"trueBody": {
																			"expression": {
																				"id": 3282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"id": 3278,
																						"name": "income",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3203,
																						"src": "14015:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																							"typeString": "struct Storage.UserIncome storage pointer"
																						}
																					},
																					"id": 3280,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberLocation": "14022:19:8",
																					"memberName": "weeklyContestIncome",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2508,
																					"src": "14015:26:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"id": 3281,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3164,
																					"src": "14045:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14015:37:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 3283,
																			"nodeType": "ExpressionStatement",
																			"src": "14015:37:8"
																		}
																	},
																	"id": 3311,
																	"nodeType": "IfStatement",
																	"src": "13884:407:8",
																	"trueBody": {
																		"expression": {
																			"id": 3272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 3268,
																					"name": "income",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3203,
																					"src": "13923:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																						"typeString": "struct Storage.UserIncome storage pointer"
																					}
																				},
																				"id": 3270,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "13930:13:8",
																				"memberName": "boosterIncome",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2506,
																				"src": "13923:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 3271,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3164,
																				"src": "13947:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13923:31:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3273,
																		"nodeType": "ExpressionStatement",
																		"src": "13923:31:8"
																	}
																},
																"id": 3312,
																"nodeType": "IfStatement",
																"src": "13804:487:8",
																"trueBody": {
																	"expression": {
																		"id": 3262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 3258,
																				"name": "income",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3203,
																				"src": "13840:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																					"typeString": "struct Storage.UserIncome storage pointer"
																				}
																			},
																			"id": 3260,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "13847:10:8",
																			"memberName": "poolIncome",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2504,
																			"src": "13840:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 3261,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3164,
																			"src": "13861:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13840:28:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3263,
																	"nodeType": "ExpressionStatement",
																	"src": "13840:28:8"
																}
															},
															"id": 3313,
															"nodeType": "IfStatement",
															"src": "13711:580:8",
															"trueBody": {
																"expression": {
																	"id": 3252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 3248,
																			"name": "income",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3203,
																			"src": "13752:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																				"typeString": "struct Storage.UserIncome storage pointer"
																			}
																		},
																		"id": 3250,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "13759:15:8",
																		"memberName": "communityIncome",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2502,
																		"src": "13752:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 3251,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3164,
																		"src": "13778:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13752:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3253,
																"nodeType": "ExpressionStatement",
																"src": "13752:33:8"
															}
														},
														"id": 3314,
														"nodeType": "IfStatement",
														"src": "13613:678:8",
														"trueBody": {
															"expression": {
																"id": 3242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3238,
																		"name": "income",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3203,
																		"src": "13657:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																			"typeString": "struct Storage.UserIncome storage pointer"
																		}
																	},
																	"id": 3240,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "13664:18:8",
																	"memberName": "levelBoosterIncome",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2496,
																	"src": "13657:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 3241,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3164,
																	"src": "13686:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13657:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3243,
															"nodeType": "ExpressionStatement",
															"src": "13657:36:8"
														}
													},
													"id": 3315,
													"nodeType": "IfStatement",
													"src": "13529:762:8",
													"trueBody": {
														"expression": {
															"id": 3232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 3228,
																	"name": "income",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3203,
																	"src": "13567:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																		"typeString": "struct Storage.UserIncome storage pointer"
																	}
																},
																"id": 3230,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "13574:12:8",
																"memberName": "matrixIncome",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2494,
																"src": "13567:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3231,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3164,
																"src": "13590:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13567:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3233,
														"nodeType": "ExpressionStatement",
														"src": "13567:30:8"
													}
												},
												"id": 3316,
												"nodeType": "IfStatement",
												"src": "13438:853:8",
												"trueBody": {
													"expression": {
														"id": 3222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"id": 3218,
																"name": "income",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3203,
																"src": "13482:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserIncome_$2513_storage_ptr",
																	"typeString": "struct Storage.UserIncome storage pointer"
																}
															},
															"id": 3220,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberLocation": "13489:13:8",
															"memberName": "sponsorIncome",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2492,
															"src": "13482:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"id": 3221,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3164,
															"src": "13506:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13482:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3223,
													"nodeType": "ExpressionStatement",
													"src": "13482:31:8"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3320,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3180,
															"src": "14747:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3321,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3164,
															"src": "14760:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3317,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "14729:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 3319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14734:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "14729:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 3322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14729:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3323,
												"nodeType": "ExpressionStatement",
												"src": "14729:39:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3325,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3180,
															"src": "14803:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 3326,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2544,
																	"src": "14816:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																		"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																	}
																},
																"id": 3328,
																"indexExpression": {
																	"id": 3327,
																	"name": "_fromUserId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3162,
																	"src": "14822:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14816:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage",
																	"typeString": "struct Storage.User storage ref"
																}
															},
															"id": 3329,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14835:7:8",
															"memberName": "account",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2447,
															"src": "14816:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3330,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3164,
															"src": "14844:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3331,
															"name": "_packageLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3166,
															"src": "14852:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3332,
															"name": "_incomeType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3169,
															"src": "14867:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_IncomeType_$2535",
																"typeString": "enum Storage.IncomeType"
															}
														},
														{
															"expression": {
																"id": 3333,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "14880:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14886:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "14880:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_IncomeType_$2535",
																"typeString": "enum Storage.IncomeType"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3324,
														"name": "IncomeDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2660,
														"src": "14784:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_enum$_IncomeType_$2535_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,enum Storage.IncomeType,uint256)"
														}
													},
													"id": 3335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14784:113:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3336,
												"nodeType": "EmitStatement",
												"src": "14779:118:8"
											}
										]
									},
									"id": 3338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributeIncome",
									"nameLocation": "12831:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3160,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "12854:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3338,
												"src": "12849:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3159,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12849:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3162,
												"mutability": "mutable",
												"name": "_fromUserId",
												"nameLocation": "12867:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 3338,
												"src": "12862:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3161,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3164,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12884:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3338,
												"src": "12879:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3163,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12879:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3166,
												"mutability": "mutable",
												"name": "_packageLevel",
												"nameLocation": "12898:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 3338,
												"src": "12893:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3165,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12893:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3169,
												"mutability": "mutable",
												"name": "_incomeType",
												"nameLocation": "12924:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 3338,
												"src": "12913:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_IncomeType_$2535",
													"typeString": "enum Storage.IncomeType"
												},
												"typeName": {
													"id": 3168,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3167,
														"name": "IncomeType",
														"nameLocations": [
															"12913:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2535,
														"src": "12913:10:8"
													},
													"referencedDeclaration": 2535,
													"src": "12913:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_IncomeType_$2535",
														"typeString": "enum Storage.IncomeType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12848:88:8"
									},
									"returnParameters": {
										"id": 3171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12946:0:8"
									},
									"scope": 3749,
									"src": "12822:2196:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3359,
										"nodeType": "Block",
										"src": "15097:154:8",
										"statements": [
											{
												"condition": {
													"id": 3351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "15116:45:8",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 3345,
																	"name": "weeklyUserdtl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2874,
																	"src": "15117:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2857_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser storage ref))"
																	}
																},
																"id": 3347,
																"indexExpression": {
																	"id": 3346,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3342,
																	"src": "15131:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15117:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2857_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.weeklyUser storage ref)"
																}
															},
															"id": 3349,
															"indexExpression": {
																"id": 3348,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3340,
																"src": "15141:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15117:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2857_storage",
																"typeString": "struct Storage.weeklyUser storage ref"
															}
														},
														"id": 3350,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15150:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2856,
														"src": "15117:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3358,
												"nodeType": "IfStatement",
												"src": "15112:132:8",
												"trueBody": {
													"id": 3357,
													"nodeType": "Block",
													"src": "15163:81:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3353,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3340,
																		"src": "15210:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3354,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3342,
																		"src": "15219:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3352,
																	"name": "_weeklyContestQualifier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3478,
																	"src": "15186:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 3355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15186:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3356,
															"nodeType": "ExpressionStatement",
															"src": "15186:42:8"
														}
													]
												}
											}
										]
									},
									"id": 3360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryWeeklyContestQualify",
									"nameLocation": "15035:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3340,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "15065:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3360,
												"src": "15060:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3339,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15060:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3342,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "15079:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3360,
												"src": "15074:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3341,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15074:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15059:29:8"
									},
									"returnParameters": {
										"id": 3344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15097:0:8"
									},
									"scope": 3749,
									"src": "15026:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3477,
										"nodeType": "Block",
										"src": "15329:1408:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3368,
																"name": "_roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3364,
																"src": "15416:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3369,
																"name": "currentWeeklyRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2821,
																"src": "15428:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15416:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726f756e64",
															"id": 3371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15448:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															},
															"value": "Invalid round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															}
														],
														"id": 3367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15408:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15408:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3373,
												"nodeType": "ExpressionStatement",
												"src": "15408:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "15483:34:8",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3375,
																		"name": "weeklyContestdtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2862,
																		"src": "15484:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_WeeklyContest_$2846_storage_$",
																			"typeString": "mapping(uint256 => struct Storage.WeeklyContest storage ref)"
																		}
																	},
																	"id": 3377,
																	"indexExpression": {
																		"id": 3376,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3364,
																		"src": "15501:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15484:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WeeklyContest_$2846_storage",
																		"typeString": "struct Storage.WeeklyContest storage ref"
																	}
																},
																"id": 3378,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15511:6:8",
																"memberName": "closed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2845,
																"src": "15484:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e6420636c6f736564",
															"id": 3380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15519:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															},
															"value": "Round closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															}
														],
														"id": 3374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15475:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15475:59:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3382,
												"nodeType": "ExpressionStatement",
												"src": "15475:59:8"
											},
											{
												"assignments": [
													3385
												],
												"declarations": [
													{
														"constant": false,
														"id": 3385,
														"mutability": "mutable",
														"name": "userBoosterJoinDtl",
														"nameLocation": "15564:18:8",
														"nodeType": "VariableDeclaration",
														"scope": 3477,
														"src": "15545:37:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserBooster_$2748_memory_ptr",
															"typeString": "struct Storage.UserBooster"
														},
														"typeName": {
															"id": 3384,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3383,
																"name": "UserBooster",
																"nameLocations": [
																	"15545:11:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2748,
																"src": "15545:11:8"
															},
															"referencedDeclaration": 2748,
															"src": "15545:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserBooster_$2748_storage_ptr",
																"typeString": "struct Storage.UserBooster"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3391,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 3386,
															"name": "userBoosterdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2794,
															"src": "15585:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_UserBooster_$2748_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.UserBooster storage ref))"
															}
														},
														"id": 3388,
														"indexExpression": {
															"hexValue": "31",
															"id": 3387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15600:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15585:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserBooster_$2748_storage_$",
															"typeString": "mapping(uint256 => struct Storage.UserBooster storage ref)"
														}
													},
													"id": 3390,
													"indexExpression": {
														"id": 3389,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3362,
														"src": "15603:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15585:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserBooster_$2748_storage",
														"typeString": "struct Storage.UserBooster storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15545:66:8"
											},
											{
												"assignments": [
													3393
												],
												"declarations": [
													{
														"constant": false,
														"id": 3393,
														"mutability": "mutable",
														"name": "hasEnoughDirects",
														"nameLocation": "15629:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 3477,
														"src": "15624:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3392,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15624:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3402,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 3394,
																	"name": "weeklyUserDirects",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2881,
																	"src": "15648:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
																		"typeString": "mapping(uint256 => mapping(uint256 => uint256[] storage ref))"
																	}
																},
																"id": 3396,
																"indexExpression": {
																	"id": 3395,
																	"name": "_roundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3364,
																	"src": "15666:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15648:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(uint256 => uint256[] storage ref)"
																}
															},
															"id": 3398,
															"indexExpression": {
																"id": 3397,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3362,
																"src": "15676:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15648:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15685:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15648:43:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "35",
														"id": 3400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15695:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "15648:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15624:72:8"
											},
											{
												"assignments": [
													3404
												],
												"declarations": [
													{
														"constant": false,
														"id": 3404,
														"mutability": "mutable",
														"name": "boosterEarlyJoin",
														"nameLocation": "15712:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 3477,
														"src": "15707:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3403,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15707:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3420,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3405,
																		"name": "userBoosterJoinDtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3385,
																		"src": "15746:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserBooster_$2748_memory_ptr",
																			"typeString": "struct Storage.UserBooster memory"
																		}
																	},
																	"id": 3406,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15765:2:8",
																	"memberName": "id",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2739,
																	"src": "15746:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3407,
																	"name": "_userId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3362,
																	"src": "15771:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15746:32:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3409,
																		"name": "userBoosterJoinDtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3385,
																		"src": "15796:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserBooster_$2748_memory_ptr",
																			"typeString": "struct Storage.UserBooster memory"
																		}
																	},
																	"id": 3410,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15815:8:8",
																	"memberName": "joinTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2747,
																	"src": "15796:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3411,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2544,
																				"src": "15827:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
																					"typeString": "mapping(uint256 => struct Storage.User storage ref)"
																				}
																			},
																			"id": 3413,
																			"indexExpression": {
																				"id": 3412,
																				"name": "_userId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3362,
																				"src": "15833:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15827:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$2488_storage",
																				"typeString": "struct Storage.User storage ref"
																			}
																		},
																		"id": 3414,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15842:16:8",
																		"memberName": "registrationTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2479,
																		"src": "15827:31:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 3415,
																		"name": "TIME_STEP",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2349,
																		"src": "15861:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15827:43:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15796:74:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15746:124:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 3419,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "15731:150:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15707:174:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3422,
																"name": "hasEnoughDirects",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3393,
																"src": "15900:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 3423,
																"name": "boosterEarlyJoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3404,
																"src": "15920:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15900:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656c696769626c6520666f72207765656b6c7920636f6e74657374",
															"id": 3425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15938:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_118c80ebb328a86f89c9abb7dbb00582133be73c782846c45c96fae9ea1c5087",
																"typeString": "literal_string \"Not eligible for weekly contest\""
															},
															"value": "Not eligible for weekly contest"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_118c80ebb328a86f89c9abb7dbb00582133be73c782846c45c96fae9ea1c5087",
																"typeString": "literal_string \"Not eligible for weekly contest\""
															}
														],
														"id": 3421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15892:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15892:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3427,
												"nodeType": "ExpressionStatement",
												"src": "15892:80:8"
											},
											{
												"assignments": [
													3430
												],
												"declarations": [
													{
														"constant": false,
														"id": 3430,
														"mutability": "mutable",
														"name": "weeklyuserdtl",
														"nameLocation": "16321:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 3477,
														"src": "16302:32:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_weeklyUser_$2857_storage_ptr",
															"typeString": "struct Storage.weeklyUser"
														},
														"typeName": {
															"id": 3429,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3428,
																"name": "weeklyUser",
																"nameLocations": [
																	"16302:10:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2857,
																"src": "16302:10:8"
															},
															"referencedDeclaration": 2857,
															"src": "16302:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2857_storage_ptr",
																"typeString": "struct Storage.weeklyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3436,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 3431,
															"name": "weeklyUserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2874,
															"src": "16337:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2857_storage_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => struct Storage.weeklyUser storage ref))"
															}
														},
														"id": 3433,
														"indexExpression": {
															"id": 3432,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3364,
															"src": "16351:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16337:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_weeklyUser_$2857_storage_$",
															"typeString": "mapping(uint256 => struct Storage.weeklyUser storage ref)"
														}
													},
													"id": 3435,
													"indexExpression": {
														"id": 3434,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3362,
														"src": "16361:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16337:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_weeklyUser_$2857_storage",
														"typeString": "struct Storage.weeklyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16302:67:8"
											},
											{
												"condition": {
													"expression": {
														"id": 3437,
														"name": "weeklyuserdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3430,
														"src": "16384:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_weeklyUser_$2857_storage_ptr",
															"typeString": "struct Storage.weeklyUser storage pointer"
														}
													},
													"id": 3438,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16398:11:8",
													"memberName": "isQualified",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2856,
													"src": "16384:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3440,
												"nodeType": "IfStatement",
												"src": "16380:38:8",
												"trueBody": {
													"functionReturnParameters": 3366,
													"id": 3439,
													"nodeType": "Return",
													"src": "16411:7:8"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "16436:26:8",
															"subExpression": {
																"expression": {
																	"id": 3442,
																	"name": "weeklyuserdtl",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3430,
																	"src": "16437:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_weeklyUser_$2857_storage_ptr",
																		"typeString": "struct Storage.weeklyUser storage pointer"
																	}
																},
																"id": 3443,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16451:11:8",
																"memberName": "isQualified",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2856,
																"src": "16437:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c7265616479205175616c6966696564",
															"id": 3445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16464:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															},
															"value": "already Qualified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															}
														],
														"id": 3441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16428:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16428:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3447,
												"nodeType": "ExpressionStatement",
												"src": "16428:56:8"
											},
											{
												"assignments": [
													3449
												],
												"declarations": [
													{
														"constant": false,
														"id": 3449,
														"mutability": "mutable",
														"name": "nowTime",
														"nameLocation": "16502:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 3477,
														"src": "16497:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3448,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16497:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3452,
												"initialValue": {
													"expression": {
														"id": 3450,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "16512:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 3451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16518:9:8",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "16512:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16497:30:8"
											},
											{
												"expression": {
													"id": 3457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3453,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3430,
															"src": "16540:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2857_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 3455,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16554:8:8",
														"memberName": "joinTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2848,
														"src": "16540:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3456,
														"name": "nowTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3449,
														"src": "16565:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16540:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3458,
												"nodeType": "ExpressionStatement",
												"src": "16540:32:8"
											},
											{
												"expression": {
													"id": 3463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3459,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3430,
															"src": "16583:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2857_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 3461,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16597:7:8",
														"memberName": "roundId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2850,
														"src": "16583:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3462,
														"name": "_roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3364,
														"src": "16607:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16583:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3464,
												"nodeType": "ExpressionStatement",
												"src": "16583:32:8"
											},
											{
												"expression": {
													"id": 3469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3465,
															"name": "weeklyuserdtl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3430,
															"src": "16626:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_weeklyUser_$2857_storage_ptr",
																"typeString": "struct Storage.weeklyUser storage pointer"
															}
														},
														"id": 3467,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16640:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2856,
														"src": "16626:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16654:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "16626:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3470,
												"nodeType": "ExpressionStatement",
												"src": "16626:32:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3472,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3364,
															"src": "16702:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3473,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3362,
															"src": "16712:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3474,
															"name": "nowTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3449,
															"src": "16721:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3471,
														"name": "WeeklyContestQualified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2915,
														"src": "16679:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 3475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16679:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3476,
												"nodeType": "EmitStatement",
												"src": "16674:55:8"
											}
										]
									},
									"id": 3478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_weeklyContestQualifier",
									"nameLocation": "15268:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3362,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "15297:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3478,
												"src": "15292:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3361,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15292:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3364,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "15311:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3478,
												"src": "15306:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3363,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15306:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15291:29:8"
									},
									"returnParameters": {
										"id": 3366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15329:0:8"
									},
									"scope": 3749,
									"src": "15259:1478:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3497,
										"nodeType": "Block",
										"src": "16817:153:8",
										"statements": [
											{
												"condition": {
													"id": 3489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16836:43:8",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 3485,
																"name": "monthlyRoyaltyUserdtl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2975,
																"src": "16837:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2962_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser storage ref)"
																}
															},
															"id": 3487,
															"indexExpression": {
																"id": 3486,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3480,
																"src": "16859:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16837:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2962_storage",
																"typeString": "struct Storage.monthlyRoyaltyUser storage ref"
															}
														},
														"id": 3488,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16868:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2961,
														"src": "16837:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3496,
												"nodeType": "IfStatement",
												"src": "16832:131:8",
												"trueBody": {
													"id": 3495,
													"nodeType": "Block",
													"src": "16881:82:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3491,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3480,
																		"src": "16929:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3492,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3482,
																		"src": "16938:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3490,
																	"name": "_monthlyRoyaltyQualifier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3613,
																	"src": "16904:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 3493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16904:43:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3494,
															"nodeType": "ExpressionStatement",
															"src": "16904:43:8"
														}
													]
												}
											}
										]
									},
									"id": 3498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryMonthlyRoyaltyQualify",
									"nameLocation": "16754:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3480,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "16785:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3498,
												"src": "16780:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3479,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16780:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3482,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "16799:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3498,
												"src": "16794:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3481,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16794:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16779:29:8"
									},
									"returnParameters": {
										"id": 3484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16817:0:8"
									},
									"scope": 3749,
									"src": "16745:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3612,
										"nodeType": "Block",
										"src": "17049:1127:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3506,
																"name": "_roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3502,
																"src": "17083:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3507,
																"name": "currentMonthlyRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2924,
																"src": "17095:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17083:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726f756e64",
															"id": 3509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17116:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															},
															"value": "Invalid round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															}
														],
														"id": 3505,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17075:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17075:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3511,
												"nodeType": "ExpressionStatement",
												"src": "17075:57:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "17151:35:8",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3513,
																		"name": "monthlyRoyaltydtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2967,
																		"src": "17152:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyalty_$2949_storage_$",
																			"typeString": "mapping(uint256 => struct Storage.monthlyRoyalty storage ref)"
																		}
																	},
																	"id": 3515,
																	"indexExpression": {
																		"id": 3514,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3502,
																		"src": "17170:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17152:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyalty_$2949_storage",
																		"typeString": "struct Storage.monthlyRoyalty storage ref"
																	}
																},
																"id": 3516,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17180:6:8",
																"memberName": "closed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2948,
																"src": "17152:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e6420636c6f736564",
															"id": 3518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17188:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															},
															"value": "Round closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															}
														],
														"id": 3512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17143:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17143:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3520,
												"nodeType": "ExpressionStatement",
												"src": "17143:60:8"
											},
											{
												"assignments": [
													3523
												],
												"declarations": [
													{
														"constant": false,
														"id": 3523,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "17236:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 3612,
														"src": "17223:17:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 3522,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3521,
																"name": "User",
																"nameLocations": [
																	"17223:4:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2488,
																"src": "17223:4:8"
															},
															"referencedDeclaration": 2488,
															"src": "17223:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3527,
												"initialValue": {
													"baseExpression": {
														"id": 3524,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2544,
														"src": "17243:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 3526,
													"indexExpression": {
														"id": 3525,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3500,
														"src": "17249:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17243:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2488_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17223:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3529,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3523,
																	"src": "17286:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 3530,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17291:11:8",
																"memberName": "level10Time",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2481,
																"src": "17286:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17305:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17286:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206e6f74206c6576656c203130",
															"id": 3533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17308:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef95fffa9aa32a0d69f6c9a3b04b835c4c32f66e357dd62871407cd72c03d7be",
																"typeString": "literal_string \"User not level 10\""
															},
															"value": "User not level 10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef95fffa9aa32a0d69f6c9a3b04b835c4c32f66e357dd62871407cd72c03d7be",
																"typeString": "literal_string \"User not level 10\""
															}
														],
														"id": 3528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17278:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17278:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3535,
												"nodeType": "ExpressionStatement",
												"src": "17278:50:8"
											},
											{
												"assignments": [
													3537
												],
												"declarations": [
													{
														"constant": false,
														"id": 3537,
														"mutability": "mutable",
														"name": "withinTime",
														"nameLocation": "17344:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 3612,
														"src": "17339:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3536,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17339:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3545,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3538,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3523,
															"src": "17357:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 3539,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17362:11:8",
														"memberName": "level10Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2481,
														"src": "17357:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3540,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3523,
																"src": "17377:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 3541,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17382:16:8",
															"memberName": "registrationTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2479,
															"src": "17377:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 3542,
															"name": "MONTHLY_ROYALTY_TIME",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "17401:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "17377:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17357:64:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17339:82:8"
											},
											{
												"assignments": [
													3547
												],
												"declarations": [
													{
														"constant": false,
														"id": 3547,
														"mutability": "mutable",
														"name": "qualifiedByLevel",
														"nameLocation": "17437:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 3612,
														"src": "17432:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3546,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17432:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3552,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3548,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3523,
															"src": "17456:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 3549,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17461:5:8",
														"memberName": "level",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2461,
														"src": "17456:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 3550,
														"name": "MONTHLY_ROYALTY_LEVEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2364,
														"src": "17470:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17456:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17432:59:8"
											},
											{
												"assignments": [
													3554
												],
												"declarations": [
													{
														"constant": false,
														"id": 3554,
														"mutability": "mutable",
														"name": "qualifiedByDirects",
														"nameLocation": "17507:18:8",
														"nodeType": "VariableDeclaration",
														"scope": 3612,
														"src": "17502:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3553,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17502:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3559,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3555,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3523,
															"src": "17528:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 3556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17533:22:8",
														"memberName": "monthlyUserDirectCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2485,
														"src": "17528:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 3557,
														"name": "MONTHLY_ROYALTY_DIRECT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2370,
														"src": "17559:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17528:53:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17502:79:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3561,
																	"name": "withinTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3537,
																	"src": "17600:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 3562,
																	"name": "qualifiedByLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3547,
																	"src": "17614:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "17600:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 3564,
																"name": "qualifiedByDirects",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3554,
																"src": "17634:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17600:52:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656c696769626c65",
															"id": 3566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17654:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61a1e089173dfc78ca2944058dfe526d4bbfefdc58d29e3f537021afcab20284",
																"typeString": "literal_string \"Not eligible\""
															},
															"value": "Not eligible"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61a1e089173dfc78ca2944058dfe526d4bbfefdc58d29e3f537021afcab20284",
																"typeString": "literal_string \"Not eligible\""
															}
														],
														"id": 3560,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17592:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17592:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3568,
												"nodeType": "ExpressionStatement",
												"src": "17592:77:8"
											},
											{
												"assignments": [
													3571
												],
												"declarations": [
													{
														"constant": false,
														"id": 3571,
														"mutability": "mutable",
														"name": "userRoyalty",
														"nameLocation": "17717:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 3612,
														"src": "17690:38:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2962_storage_ptr",
															"typeString": "struct Storage.monthlyRoyaltyUser"
														},
														"typeName": {
															"id": 3570,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3569,
																"name": "monthlyRoyaltyUser",
																"nameLocations": [
																	"17690:18:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2962,
																"src": "17690:18:8"
															},
															"referencedDeclaration": 2962,
															"src": "17690:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2962_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3575,
												"initialValue": {
													"baseExpression": {
														"id": 3572,
														"name": "monthlyRoyaltyUserdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2975,
														"src": "17732:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_monthlyRoyaltyUser_$2962_storage_$",
															"typeString": "mapping(uint256 => struct Storage.monthlyRoyaltyUser storage ref)"
														}
													},
													"id": 3574,
													"indexExpression": {
														"id": 3573,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3500,
														"src": "17754:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17732:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2962_storage",
														"typeString": "struct Storage.monthlyRoyaltyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17690:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "17838:24:8",
															"subExpression": {
																"expression": {
																	"id": 3577,
																	"name": "userRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3571,
																	"src": "17839:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2962_storage_ptr",
																		"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
																	}
																},
																"id": 3578,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17851:11:8",
																"memberName": "isQualified",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2961,
																"src": "17839:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c7265616479205175616c6966696564",
															"id": 3580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17864:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															},
															"value": "already Qualified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															}
														],
														"id": 3576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17830:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17830:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3582,
												"nodeType": "ExpressionStatement",
												"src": "17830:54:8"
											},
											{
												"assignments": [
													3584
												],
												"declarations": [
													{
														"constant": false,
														"id": 3584,
														"mutability": "mutable",
														"name": "nowTime",
														"nameLocation": "17902:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 3612,
														"src": "17897:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3583,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17897:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3587,
												"initialValue": {
													"expression": {
														"id": 3585,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "17912:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 3586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "17918:9:8",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "17912:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17897:30:8"
											},
											{
												"expression": {
													"id": 3592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3588,
															"name": "userRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3571,
															"src": "17975:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2962_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
															}
														},
														"id": 3590,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17987:8:8",
														"memberName": "joinTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2951,
														"src": "17975:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3591,
														"name": "nowTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3584,
														"src": "17998:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17975:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3593,
												"nodeType": "ExpressionStatement",
												"src": "17975:30:8"
											},
											{
												"expression": {
													"id": 3598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3594,
															"name": "userRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3571,
															"src": "18016:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2962_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
															}
														},
														"id": 3596,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "18028:16:8",
														"memberName": "qualifiedRoundId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2953,
														"src": "18016:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3597,
														"name": "_roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3502,
														"src": "18047:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18016:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3599,
												"nodeType": "ExpressionStatement",
												"src": "18016:39:8"
											},
											{
												"expression": {
													"id": 3604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3600,
															"name": "userRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3571,
															"src": "18066:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_monthlyRoyaltyUser_$2962_storage_ptr",
																"typeString": "struct Storage.monthlyRoyaltyUser storage pointer"
															}
														},
														"id": 3602,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "18078:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2961,
														"src": "18066:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18092:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "18066:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3605,
												"nodeType": "ExpressionStatement",
												"src": "18066:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3607,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3502,
															"src": "18141:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3608,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3500,
															"src": "18151:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3609,
															"name": "nowTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3584,
															"src": "18160:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3606,
														"name": "MonthlyRoyaltyQualified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3014,
														"src": "18117:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 3610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18117:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3611,
												"nodeType": "EmitStatement",
												"src": "18112:56:8"
											}
										]
									},
									"id": 3613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_monthlyRoyaltyQualifier",
									"nameLocation": "16987:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3500,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "17017:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3613,
												"src": "17012:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17012:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3502,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "17031:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3613,
												"src": "17026:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3501,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17026:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17011:29:8"
									},
									"returnParameters": {
										"id": 3504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17049:0:8"
									},
									"scope": 3749,
									"src": "16978:1198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3632,
										"nodeType": "Block",
										"src": "18260:145:8",
										"statements": [
											{
												"condition": {
													"id": 3624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18279:39:8",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 3620,
																"name": "topRoyaltyUserdtl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3068,
																"src": "18280:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyaltyUser_$3055_storage_$",
																	"typeString": "mapping(uint256 => struct Storage.topRoyaltyUser storage ref)"
																}
															},
															"id": 3622,
															"indexExpression": {
																"id": 3621,
																"name": "_userId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3615,
																"src": "18298:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18280:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyaltyUser_$3055_storage",
																"typeString": "struct Storage.topRoyaltyUser storage ref"
															}
														},
														"id": 3623,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18307:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3054,
														"src": "18280:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3631,
												"nodeType": "IfStatement",
												"src": "18275:123:8",
												"trueBody": {
													"id": 3630,
													"nodeType": "Block",
													"src": "18320:78:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3626,
																		"name": "_userId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3615,
																		"src": "18364:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3627,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3617,
																		"src": "18373:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3625,
																	"name": "_topRoyaltyQualifier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3748,
																	"src": "18343:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 3628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18343:39:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3629,
															"nodeType": "ExpressionStatement",
															"src": "18343:39:8"
														}
													]
												}
											}
										]
									},
									"id": 3633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryTopRoyaltyQualify",
									"nameLocation": "18201:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3615,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "18228:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3633,
												"src": "18223:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3614,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18223:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3617,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "18242:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3633,
												"src": "18237:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3616,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18237:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18222:29:8"
									},
									"returnParameters": {
										"id": 3619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18260:0:8"
									},
									"scope": 3749,
									"src": "18192:213:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3747,
										"nodeType": "Block",
										"src": "18480:1098:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3641,
																"name": "_roundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3637,
																"src": "18514:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3642,
																"name": "topRoyaltyRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3017,
																"src": "18526:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18514:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726f756e64",
															"id": 3644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18543:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															},
															"value": "Invalid round"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44c340b938e2069377635f73a0f638cb6cf336fba68596e44d590f0f2dbd81ab",
																"typeString": "literal_string \"Invalid round\""
															}
														],
														"id": 3640,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18506:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18506:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3646,
												"nodeType": "ExpressionStatement",
												"src": "18506:53:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "18578:31:8",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3648,
																		"name": "topRoyaltydtl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3060,
																		"src": "18579:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyalty_$3042_storage_$",
																			"typeString": "mapping(uint256 => struct Storage.topRoyalty storage ref)"
																		}
																	},
																	"id": 3650,
																	"indexExpression": {
																		"id": 3649,
																		"name": "_roundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3637,
																		"src": "18593:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18579:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_topRoyalty_$3042_storage",
																		"typeString": "struct Storage.topRoyalty storage ref"
																	}
																},
																"id": 3651,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18603:6:8",
																"memberName": "closed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3041,
																"src": "18579:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e6420636c6f736564",
															"id": 3653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18611:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															},
															"value": "Round closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cb136aac2cef2ec9b6251ba0be0eaf9eb87f73f326b238f4495e8c0d58e6f97",
																"typeString": "literal_string \"Round closed\""
															}
														],
														"id": 3647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18570:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18570:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3655,
												"nodeType": "ExpressionStatement",
												"src": "18570:56:8"
											},
											{
												"assignments": [
													3658
												],
												"declarations": [
													{
														"constant": false,
														"id": 3658,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "18659:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 3747,
														"src": "18646:17:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
															"typeString": "struct Storage.User"
														},
														"typeName": {
															"id": 3657,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3656,
																"name": "User",
																"nameLocations": [
																	"18646:4:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2488,
																"src": "18646:4:8"
															},
															"referencedDeclaration": 2488,
															"src": "18646:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3662,
												"initialValue": {
													"baseExpression": {
														"id": 3659,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2544,
														"src": "18666:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$2488_storage_$",
															"typeString": "mapping(uint256 => struct Storage.User storage ref)"
														}
													},
													"id": 3661,
													"indexExpression": {
														"id": 3660,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3635,
														"src": "18672:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18666:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$2488_storage",
														"typeString": "struct Storage.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18646:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3664,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3658,
																	"src": "18709:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																		"typeString": "struct Storage.User storage pointer"
																	}
																},
																"id": 3665,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18714:11:8",
																"memberName": "level15Time",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2483,
																"src": "18709:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18728:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18709:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206e6f74206c6576656c203135",
															"id": 3668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18731:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a64254b203ace91c0680044017e16ce6de6a80470428d645afdde3ac237a5986",
																"typeString": "literal_string \"User not level 15\""
															},
															"value": "User not level 15"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a64254b203ace91c0680044017e16ce6de6a80470428d645afdde3ac237a5986",
																"typeString": "literal_string \"User not level 15\""
															}
														],
														"id": 3663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18701:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18701:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3670,
												"nodeType": "ExpressionStatement",
												"src": "18701:50:8"
											},
											{
												"assignments": [
													3672
												],
												"declarations": [
													{
														"constant": false,
														"id": 3672,
														"mutability": "mutable",
														"name": "withinTime",
														"nameLocation": "18767:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 3747,
														"src": "18762:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3671,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18762:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3680,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3673,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3658,
															"src": "18780:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 3674,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18785:11:8",
														"memberName": "level15Time",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2483,
														"src": "18780:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3675,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3658,
																"src": "18800:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																	"typeString": "struct Storage.User storage pointer"
																}
															},
															"id": 3676,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18805:16:8",
															"memberName": "registrationTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2479,
															"src": "18800:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 3677,
															"name": "TOP_ROYALTY_TIME",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "18824:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "18800:40:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18780:60:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18762:78:8"
											},
											{
												"assignments": [
													3682
												],
												"declarations": [
													{
														"constant": false,
														"id": 3682,
														"mutability": "mutable",
														"name": "qualifiedByLevel",
														"nameLocation": "18856:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 3747,
														"src": "18851:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3681,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18851:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3687,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3683,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3658,
															"src": "18875:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 3684,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18880:5:8",
														"memberName": "level",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2461,
														"src": "18875:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 3685,
														"name": "TOP_ROYALTY_LEVEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2367,
														"src": "18889:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18875:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18851:55:8"
											},
											{
												"assignments": [
													3689
												],
												"declarations": [
													{
														"constant": false,
														"id": 3689,
														"mutability": "mutable",
														"name": "qualifiedByDirects",
														"nameLocation": "18922:18:8",
														"nodeType": "VariableDeclaration",
														"scope": 3747,
														"src": "18917:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3688,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18917:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3694,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3690,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3658,
															"src": "18943:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$2488_storage_ptr",
																"typeString": "struct Storage.User storage pointer"
															}
														},
														"id": 3691,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18948:21:8",
														"memberName": "topRoyaltyDirectCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2487,
														"src": "18943:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 3692,
														"name": "TOP_ROYALTY_DIRECT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2373,
														"src": "18973:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18943:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18917:74:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3696,
																	"name": "withinTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3672,
																	"src": "19010:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 3697,
																	"name": "qualifiedByLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3682,
																	"src": "19024:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "19010:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 3699,
																"name": "qualifiedByDirects",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3689,
																"src": "19044:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "19010:52:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656c696769626c65",
															"id": 3701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19064:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61a1e089173dfc78ca2944058dfe526d4bbfefdc58d29e3f537021afcab20284",
																"typeString": "literal_string \"Not eligible\""
															},
															"value": "Not eligible"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61a1e089173dfc78ca2944058dfe526d4bbfefdc58d29e3f537021afcab20284",
																"typeString": "literal_string \"Not eligible\""
															}
														],
														"id": 3695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19002:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19002:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3703,
												"nodeType": "ExpressionStatement",
												"src": "19002:77:8"
											},
											{
												"assignments": [
													3706
												],
												"declarations": [
													{
														"constant": false,
														"id": 3706,
														"mutability": "mutable",
														"name": "userRoyalty",
														"nameLocation": "19123:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 3747,
														"src": "19100:34:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_topRoyaltyUser_$3055_storage_ptr",
															"typeString": "struct Storage.topRoyaltyUser"
														},
														"typeName": {
															"id": 3705,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3704,
																"name": "topRoyaltyUser",
																"nameLocations": [
																	"19100:14:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3055,
																"src": "19100:14:8"
															},
															"referencedDeclaration": 3055,
															"src": "19100:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyaltyUser_$3055_storage_ptr",
																"typeString": "struct Storage.topRoyaltyUser"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3710,
												"initialValue": {
													"baseExpression": {
														"id": 3707,
														"name": "topRoyaltyUserdtl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3068,
														"src": "19138:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_topRoyaltyUser_$3055_storage_$",
															"typeString": "mapping(uint256 => struct Storage.topRoyaltyUser storage ref)"
														}
													},
													"id": 3709,
													"indexExpression": {
														"id": 3708,
														"name": "_userId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3635,
														"src": "19156:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19138:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_topRoyaltyUser_$3055_storage",
														"typeString": "struct Storage.topRoyaltyUser storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19100:64:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "19240:24:8",
															"subExpression": {
																"expression": {
																	"id": 3712,
																	"name": "userRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3706,
																	"src": "19241:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_topRoyaltyUser_$3055_storage_ptr",
																		"typeString": "struct Storage.topRoyaltyUser storage pointer"
																	}
																},
																"id": 3713,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19253:11:8",
																"memberName": "isQualified",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3054,
																"src": "19241:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c7265616479205175616c6966696564",
															"id": 3715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19266:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															},
															"value": "already Qualified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399ca2f997c2fc8a2f7ce1d19c94796738fd981bf8b1d0dce11a52d57ce1b131",
																"typeString": "literal_string \"already Qualified\""
															}
														],
														"id": 3711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19232:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19232:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3717,
												"nodeType": "ExpressionStatement",
												"src": "19232:54:8"
											},
											{
												"assignments": [
													3719
												],
												"declarations": [
													{
														"constant": false,
														"id": 3719,
														"mutability": "mutable",
														"name": "nowTime",
														"nameLocation": "19304:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 3747,
														"src": "19299:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3718,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "19299:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3722,
												"initialValue": {
													"expression": {
														"id": 3720,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "19314:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 3721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "19320:9:8",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "19314:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19299:30:8"
											},
											{
												"expression": {
													"id": 3727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3723,
															"name": "userRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3706,
															"src": "19377:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyaltyUser_$3055_storage_ptr",
																"typeString": "struct Storage.topRoyaltyUser storage pointer"
															}
														},
														"id": 3725,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19389:8:8",
														"memberName": "joinTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3044,
														"src": "19377:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3726,
														"name": "nowTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3719,
														"src": "19400:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19377:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3728,
												"nodeType": "ExpressionStatement",
												"src": "19377:30:8"
											},
											{
												"expression": {
													"id": 3733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3729,
															"name": "userRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3706,
															"src": "19418:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyaltyUser_$3055_storage_ptr",
																"typeString": "struct Storage.topRoyaltyUser storage pointer"
															}
														},
														"id": 3731,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19430:16:8",
														"memberName": "qualifiedRoundId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3046,
														"src": "19418:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3732,
														"name": "_roundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3637,
														"src": "19449:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19418:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3734,
												"nodeType": "ExpressionStatement",
												"src": "19418:39:8"
											},
											{
												"expression": {
													"id": 3739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3735,
															"name": "userRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3706,
															"src": "19468:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_topRoyaltyUser_$3055_storage_ptr",
																"typeString": "struct Storage.topRoyaltyUser storage pointer"
															}
														},
														"id": 3737,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19480:11:8",
														"memberName": "isQualified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3054,
														"src": "19468:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19494:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "19468:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3740,
												"nodeType": "ExpressionStatement",
												"src": "19468:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3742,
															"name": "_roundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3637,
															"src": "19543:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3743,
															"name": "_userId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3635,
															"src": "19553:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3744,
															"name": "nowTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3719,
															"src": "19562:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3741,
														"name": "MonthlyRoyaltyQualified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3014,
														"src": "19519:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 3745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19519:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3746,
												"nodeType": "EmitStatement",
												"src": "19514:56:8"
											}
										]
									},
									"id": 3748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_topRoyaltyQualifier",
									"nameLocation": "18422:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3635,
												"mutability": "mutable",
												"name": "_userId",
												"nameLocation": "18448:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 3748,
												"src": "18443:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3634,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18443:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3637,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "18462:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3748,
												"src": "18457:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3636,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18457:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18442:29:8"
									},
									"returnParameters": {
										"id": 3639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18480:0:8"
									},
									"scope": 3749,
									"src": "18413:1165:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3750,
							"src": "292:19291:8",
							"usedErrors": [],
							"usedEvents": [
								2585,
								2593,
								2603,
								2615,
								2627,
								2637,
								2645,
								2660,
								2897,
								2907,
								2915,
								2996,
								3006,
								3014,
								3089,
								3099,
								3107
							]
						}
					],
					"src": "33:19550:8"
				},
				"id": 8
			}
		}
	}
}